// Copyright 1986-1999, 2001-2013 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2013.4 (win64) Build 353583 Mon Dec  9 17:49:19 MST 2013
// Date        : Mon Mar 03 09:35:22 2014
// Host        : XHDVENKATE32 running 64-bit Service Pack 1  (build 7601)
// Command     : write_verilog -force -mode funcsim
//               c:/training/UltraScale/labs/Design_Migration/KCU105/QSGMII/QSGMII.srcs/sources_1/ip/quadsgmii/quadsgmii_funcsim.v
// Design      : quadsgmii
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7k325tffg900-2
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* EXAMPLE_SIMULATION = "0" *) 
(* NotValidForBitStream *)
module quadsgmii
   (reset,
    gtrefclk,
    txp,
    txn,
    rxp,
    rxn,
    txoutclk,
    rxoutclk,
    resetdone,
    userclk,
    userclk2,
    rxuserclk,
    rxuserclk2,
    independent_clock_bufg,
    pma_reset,
    mmcm_locked,
    sgmii_clk_en_ch0,
    gmii_txd_ch0,
    gmii_tx_en_ch0,
    gmii_tx_er_ch0,
    gmii_rxd_ch0,
    gmii_rx_dv_ch0,
    gmii_rx_er_ch0,
    mdc_ch0,
    mdio_i_ch0,
    mdio_o_ch0,
    mdio_t_ch0,
    an_interrupt_ch0,
    speed_is_10_100_ch0,
    speed_is_100_ch0,
    status_vector_ch0,
    sgmii_clk_en_ch1,
    gmii_txd_ch1,
    gmii_tx_en_ch1,
    gmii_tx_er_ch1,
    gmii_rxd_ch1,
    gmii_rx_dv_ch1,
    gmii_rx_er_ch1,
    mdc_ch1,
    mdio_i_ch1,
    mdio_o_ch1,
    mdio_t_ch1,
    an_interrupt_ch1,
    speed_is_10_100_ch1,
    speed_is_100_ch1,
    status_vector_ch1,
    sgmii_clk_en_ch2,
    gmii_txd_ch2,
    gmii_tx_en_ch2,
    gmii_tx_er_ch2,
    gmii_rxd_ch2,
    gmii_rx_dv_ch2,
    gmii_rx_er_ch2,
    mdc_ch2,
    mdio_i_ch2,
    mdio_o_ch2,
    mdio_t_ch2,
    an_interrupt_ch2,
    speed_is_10_100_ch2,
    speed_is_100_ch2,
    status_vector_ch2,
    sgmii_clk_en_ch3,
    gmii_txd_ch3,
    gmii_tx_en_ch3,
    gmii_tx_er_ch3,
    gmii_rxd_ch3,
    gmii_rx_dv_ch3,
    gmii_rx_er_ch3,
    mdc_ch3,
    mdio_i_ch3,
    mdio_o_ch3,
    mdio_t_ch3,
    an_interrupt_ch3,
    speed_is_10_100_ch3,
    speed_is_100_ch3,
    status_vector_ch3,
    gt0_gttxreset_in,
    gt0_txpmareset_in,
    gt0_txpcsreset_in,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    gt0_txpolarity_in,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    gt0_rxpolarity_in,
    gt0_rxdfelpmreset_in,
    gt0_rxdfeagcovrden_in,
    gt0_rxlpmen_in,
    gt0_txprbssel_in,
    gt0_txprbsforceerr_in,
    gt0_rxprbscntreset_in,
    gt0_rxprbserr_out,
    gt0_rxprbssel_in,
    gt0_loopback_in,
    gt0_txresetdone_out,
    gt0_rxresetdone_out,
    gt0_gtrxreset_in,
    gt0_rxpmareset_in,
    gt0_rxpcsreset_in,
    gt0_txbufstatus_out,
    gt0_rxbufstatus_out,
    gt0_rxbufreset_in,
    gt0_cplllock_out,
    gt0_rxpmaresetdone_out,
    gt0_drpaddr_in,
    gt0_drpclk_in,
    gt0_drpdi_in,
    gt0_drpdo_out,
    gt0_drpen_in,
    gt0_drprdy_out,
    gt0_drpwe_in,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    gt0_eyescanreset_in,
    gt0_eyescandataerror_out,
    gt0_eyescantrigger_in,
    gt0_rxrate_in,
    gt0_rxcdrhold_in,
    gt0_rxratedone_out,
    gt0_dmonitorout_out,
    gt0_rxmonitorout_out,
    gt0_rxmonitorsel_in,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    signal_detect);
  input reset;
  input gtrefclk;
  output txp;
  output txn;
  input rxp;
  input rxn;
  output txoutclk;
  output rxoutclk;
  output resetdone;
  input userclk;
  input userclk2;
  input rxuserclk;
  input rxuserclk2;
  input independent_clock_bufg;
  input pma_reset;
  input mmcm_locked;
  output sgmii_clk_en_ch0;
  input [7:0]gmii_txd_ch0;
  input gmii_tx_en_ch0;
  input gmii_tx_er_ch0;
  output [7:0]gmii_rxd_ch0;
  output gmii_rx_dv_ch0;
  output gmii_rx_er_ch0;
  input mdc_ch0;
  input mdio_i_ch0;
  output mdio_o_ch0;
  output mdio_t_ch0;
  output an_interrupt_ch0;
  input speed_is_10_100_ch0;
  input speed_is_100_ch0;
  output [15:0]status_vector_ch0;
  output sgmii_clk_en_ch1;
  input [7:0]gmii_txd_ch1;
  input gmii_tx_en_ch1;
  input gmii_tx_er_ch1;
  output [7:0]gmii_rxd_ch1;
  output gmii_rx_dv_ch1;
  output gmii_rx_er_ch1;
  input mdc_ch1;
  input mdio_i_ch1;
  output mdio_o_ch1;
  output mdio_t_ch1;
  output an_interrupt_ch1;
  input speed_is_10_100_ch1;
  input speed_is_100_ch1;
  output [15:0]status_vector_ch1;
  output sgmii_clk_en_ch2;
  input [7:0]gmii_txd_ch2;
  input gmii_tx_en_ch2;
  input gmii_tx_er_ch2;
  output [7:0]gmii_rxd_ch2;
  output gmii_rx_dv_ch2;
  output gmii_rx_er_ch2;
  input mdc_ch2;
  input mdio_i_ch2;
  output mdio_o_ch2;
  output mdio_t_ch2;
  output an_interrupt_ch2;
  input speed_is_10_100_ch2;
  input speed_is_100_ch2;
  output [15:0]status_vector_ch2;
  output sgmii_clk_en_ch3;
  input [7:0]gmii_txd_ch3;
  input gmii_tx_en_ch3;
  input gmii_tx_er_ch3;
  output [7:0]gmii_rxd_ch3;
  output gmii_rx_dv_ch3;
  output gmii_rx_er_ch3;
  input mdc_ch3;
  input mdio_i_ch3;
  output mdio_o_ch3;
  output mdio_t_ch3;
  output an_interrupt_ch3;
  input speed_is_10_100_ch3;
  input speed_is_100_ch3;
  output [15:0]status_vector_ch3;
  input gt0_gttxreset_in;
  input gt0_txpmareset_in;
  input gt0_txpcsreset_in;
  output [3:0]gt0_rxchariscomma_out;
  output [3:0]gt0_rxcharisk_out;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  input gt0_txpolarity_in;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input gt0_rxpolarity_in;
  input gt0_rxdfelpmreset_in;
  input gt0_rxdfeagcovrden_in;
  input gt0_rxlpmen_in;
  input [2:0]gt0_txprbssel_in;
  input gt0_txprbsforceerr_in;
  input gt0_rxprbscntreset_in;
  output gt0_rxprbserr_out;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_loopback_in;
  output gt0_txresetdone_out;
  output gt0_rxresetdone_out;
  input gt0_gtrxreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxpcsreset_in;
  output [1:0]gt0_txbufstatus_out;
  output [2:0]gt0_rxbufstatus_out;
  input gt0_rxbufreset_in;
  output gt0_cplllock_out;
  output gt0_rxpmaresetdone_out;
  input [8:0]gt0_drpaddr_in;
  input gt0_drpclk_in;
  input [15:0]gt0_drpdi_in;
  output [15:0]gt0_drpdo_out;
  input gt0_drpen_in;
  output gt0_drprdy_out;
  input gt0_drpwe_in;
  output [3:0]gt0_rxdisperr_out;
  output [3:0]gt0_rxnotintable_out;
  input gt0_eyescanreset_in;
  output gt0_eyescandataerror_out;
  input gt0_eyescantrigger_in;
  input [2:0]gt0_rxrate_in;
  input gt0_rxcdrhold_in;
  output gt0_rxratedone_out;
  output [16:0]gt0_dmonitorout_out;
  output [6:0]gt0_rxmonitorout_out;
  input [1:0]gt0_rxmonitorsel_in;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input signal_detect;

  wire \<const0> ;
  wire \<const1> ;
  wire an_interrupt_ch0;
  wire an_interrupt_ch1;
  wire an_interrupt_ch2;
  wire an_interrupt_ch3;
  wire gmii_rx_dv_ch0;
  wire gmii_rx_dv_ch1;
  wire gmii_rx_dv_ch2;
  wire gmii_rx_dv_ch3;
  wire gmii_rx_er_ch0;
  wire gmii_rx_er_ch1;
  wire gmii_rx_er_ch2;
  wire gmii_rx_er_ch3;
  wire [7:0]gmii_rxd_ch0;
  wire [7:0]gmii_rxd_ch1;
  wire [7:0]gmii_rxd_ch2;
  wire [7:0]gmii_rxd_ch3;
  wire gmii_tx_en_ch0;
  wire gmii_tx_en_ch1;
  wire gmii_tx_en_ch2;
  wire gmii_tx_en_ch3;
  wire gmii_tx_er_ch0;
  wire gmii_tx_er_ch1;
  wire gmii_tx_er_ch2;
  wire gmii_tx_er_ch3;
  wire [7:0]gmii_txd_ch0;
  wire [7:0]gmii_txd_ch1;
  wire [7:0]gmii_txd_ch2;
  wire [7:0]gmii_txd_ch3;
  wire gt0_cplllock_out;
  wire [16:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gtrxreset_in;
  wire gt0_gttxreset_in;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire gt0_rxcommadet_out;
  wire gt0_rxdfeagcovrden_in;
  wire gt0_rxdfelpmreset_in;
  wire [3:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [3:0]gt0_rxnotintable_out;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpmaresetdone_out;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire gt0_rxresetdone_out;
  wire [1:0]gt0_txbufstatus_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txpcsreset_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txresetdone_out;
  wire gtrefclk;
  wire independent_clock_bufg;
  wire mdc_ch0;
  wire mdc_ch1;
  wire mdc_ch2;
  wire mdc_ch3;
  wire mdio_i_ch0;
  wire mdio_i_ch1;
  wire mdio_i_ch2;
  wire mdio_i_ch3;
  wire mdio_o_ch0;
  wire mdio_o_ch1;
  wire mdio_o_ch2;
  wire mdio_o_ch3;
  wire mdio_t_ch0;
  wire mdio_t_ch1;
  wire mdio_t_ch2;
  wire mdio_t_ch3;
  wire mmcm_locked;
  wire pma_reset;
  wire reset;
  wire resetdone;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk;
  wire rxuserclk2;
  wire sgmii_clk_en_ch0;
  wire sgmii_clk_en_ch1;
  wire sgmii_clk_en_ch2;
  wire sgmii_clk_en_ch3;
  wire signal_detect;
  wire speed_is_100_ch0;
  wire speed_is_100_ch1;
  wire speed_is_100_ch2;
  wire speed_is_100_ch3;
  wire speed_is_10_100_ch0;
  wire speed_is_10_100_ch1;
  wire speed_is_10_100_ch2;
  wire speed_is_10_100_ch3;
  wire [15:0]status_vector_ch0;
  wire [15:0]status_vector_ch1;
  wire [15:0]status_vector_ch2;
  wire [15:0]status_vector_ch3;
  wire txn;
  wire txoutclk;
  wire txp;
  wire userclk;
  wire userclk2;

GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
(* CORE_GENERATION_INFO = "quadsgmii,quadsgmii_v3_1,{x_ipVendor=xilinx.com,x_ipLibrary=ip,x_ipName=quadsgmii,x_ipVersion=1.4,x_ipLanguage=VERILOG,c_family=kintex7,c_component_name=quadsgmii,c_has_an=true,c_has_mdio=true,c_qsgmii_phy_mode=false,c_gmii_or_mii_mode=true,C_PHYADDR_0=1,C_PHYADDR_1=2,C_PHYADDR_2=3,C_PHYADDR_3=4}" *) 
   (* X_CORE_INFO = "quadsgmii_block,Vivado 2013.3.0" *) 
   quadsgmiiquadsgmii_block inst
       (.an_interrupt_ch0(an_interrupt_ch0),
        .an_interrupt_ch1(an_interrupt_ch1),
        .an_interrupt_ch2(an_interrupt_ch2),
        .an_interrupt_ch3(an_interrupt_ch3),
        .gmii_rx_dv_ch0(gmii_rx_dv_ch0),
        .gmii_rx_dv_ch1(gmii_rx_dv_ch1),
        .gmii_rx_dv_ch2(gmii_rx_dv_ch2),
        .gmii_rx_dv_ch3(gmii_rx_dv_ch3),
        .gmii_rx_er_ch0(gmii_rx_er_ch0),
        .gmii_rx_er_ch1(gmii_rx_er_ch1),
        .gmii_rx_er_ch2(gmii_rx_er_ch2),
        .gmii_rx_er_ch3(gmii_rx_er_ch3),
        .gmii_rxd_ch0(gmii_rxd_ch0),
        .gmii_rxd_ch1(gmii_rxd_ch1),
        .gmii_rxd_ch2(gmii_rxd_ch2),
        .gmii_rxd_ch3(gmii_rxd_ch3),
        .gmii_tx_en_ch0(gmii_tx_en_ch0),
        .gmii_tx_en_ch1(gmii_tx_en_ch1),
        .gmii_tx_en_ch2(gmii_tx_en_ch2),
        .gmii_tx_en_ch3(gmii_tx_en_ch3),
        .gmii_tx_er_ch0(gmii_tx_er_ch0),
        .gmii_tx_er_ch1(gmii_tx_er_ch1),
        .gmii_tx_er_ch2(gmii_tx_er_ch2),
        .gmii_tx_er_ch3(gmii_tx_er_ch3),
        .gmii_txd_ch0(gmii_txd_ch0),
        .gmii_txd_ch1(gmii_txd_ch1),
        .gmii_txd_ch2(gmii_txd_ch2),
        .gmii_txd_ch3(gmii_txd_ch3),
        .gt0_cplllock_out(gt0_cplllock_out),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drpaddr_in(gt0_drpaddr_in),
        .gt0_drpclk_in(gt0_drpclk_in),
        .gt0_drpdi_in(gt0_drpdi_in),
        .gt0_drpdo_out(gt0_drpdo_out),
        .gt0_drpen_in(gt0_drpen_in),
        .gt0_drprdy_out(gt0_drprdy_out),
        .gt0_drpwe_in(gt0_drpwe_in),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_gtrxreset_in(gt0_gtrxreset_in),
        .gt0_gttxreset_in(gt0_gttxreset_in),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt0_rxbufreset_in(gt0_rxbufreset_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxbyteisaligned_out(gt0_rxbyteisaligned_out),
        .gt0_rxbyterealign_out(gt0_rxbyterealign_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdfeagcovrden_in(gt0_rxdfeagcovrden_in),
        .gt0_rxdfelpmreset_in(gt0_rxdfelpmreset_in),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmen_in(gt0_rxlpmen_in),
        .gt0_rxmonitorout_out(gt0_rxmonitorout_out),
        .gt0_rxmonitorsel_in(gt0_rxmonitorsel_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpmaresetdone_out(gt0_rxpmaresetdone_out),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxratedone_out(gt0_rxratedone_out),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .gt0_txbufstatus_out(gt0_txbufstatus_out),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gt0_txresetdone_out(gt0_txresetdone_out),
        .gtrefclk(gtrefclk),
        .independent_clock_bufg(independent_clock_bufg),
        .link_timer_value_ch0({\<const0> ,\<const0> ,\<const0> ,\<const1> ,\<const1> ,\<const0> ,\<const0> ,\<const1> ,\<const0> }),
        .link_timer_value_ch1({\<const0> ,\<const0> ,\<const0> ,\<const1> ,\<const1> ,\<const0> ,\<const0> ,\<const1> ,\<const0> }),
        .link_timer_value_ch2({\<const0> ,\<const0> ,\<const0> ,\<const1> ,\<const1> ,\<const0> ,\<const0> ,\<const1> ,\<const0> }),
        .link_timer_value_ch3({\<const0> ,\<const0> ,\<const0> ,\<const1> ,\<const1> ,\<const0> ,\<const0> ,\<const1> ,\<const0> }),
        .mdc_ch0(mdc_ch0),
        .mdc_ch1(mdc_ch1),
        .mdc_ch2(mdc_ch2),
        .mdc_ch3(mdc_ch3),
        .mdio_i_ch0(mdio_i_ch0),
        .mdio_i_ch1(mdio_i_ch1),
        .mdio_i_ch2(mdio_i_ch2),
        .mdio_i_ch3(mdio_i_ch3),
        .mdio_o_ch0(mdio_o_ch0),
        .mdio_o_ch1(mdio_o_ch1),
        .mdio_o_ch2(mdio_o_ch2),
        .mdio_o_ch3(mdio_o_ch3),
        .mdio_t_ch0(mdio_t_ch0),
        .mdio_t_ch1(mdio_t_ch1),
        .mdio_t_ch2(mdio_t_ch2),
        .mdio_t_ch3(mdio_t_ch3),
        .mmcm_locked(mmcm_locked),
        .phyad_ch0({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .phyad_ch1({\<const0> ,\<const0> ,\<const0> ,\<const1> ,\<const0> }),
        .phyad_ch2({\<const0> ,\<const0> ,\<const0> ,\<const1> ,\<const1> }),
        .phyad_ch3({\<const0> ,\<const0> ,\<const1> ,\<const0> ,\<const0> }),
        .pma_reset(pma_reset),
        .reset(reset),
        .resetdone(resetdone),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk(rxuserclk),
        .rxuserclk2(rxuserclk2),
        .sgmii_clk_en_ch0(sgmii_clk_en_ch0),
        .sgmii_clk_en_ch1(sgmii_clk_en_ch1),
        .sgmii_clk_en_ch2(sgmii_clk_en_ch2),
        .sgmii_clk_en_ch3(sgmii_clk_en_ch3),
        .signal_detect(signal_detect),
        .speed_is_100_ch0(speed_is_100_ch0),
        .speed_is_100_ch1(speed_is_100_ch1),
        .speed_is_100_ch2(speed_is_100_ch2),
        .speed_is_100_ch3(speed_is_100_ch3),
        .speed_is_10_100_ch0(speed_is_10_100_ch0),
        .speed_is_10_100_ch1(speed_is_10_100_ch1),
        .speed_is_10_100_ch2(speed_is_10_100_ch2),
        .speed_is_10_100_ch3(speed_is_10_100_ch3),
        .status_vector_ch0(status_vector_ch0),
        .status_vector_ch1(status_vector_ch1),
        .status_vector_ch2(status_vector_ch2),
        .status_vector_ch3(status_vector_ch3),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .userclk(userclk),
        .userclk2(userclk2));
endmodule

module quadsgmiiAGGREGATOR
   (TXPD,
    ENABLEALIGN,
    TXCHARISK,
    txdata,
    I1,
    POWERDOWN0,
    userclk2,
    ENABLEALIGN0,
    I2,
    D,
    I3,
    I4,
    I5,
    I6,
    O5,
    I7,
    I8,
    I9,
    I10,
    I11,
    O4,
    I12,
    I13,
    I14,
    I15,
    I16,
    O3,
    I17,
    I18,
    I19,
    I20,
    O8,
    I21,
    I22);
  output [1:0]TXPD;
  output ENABLEALIGN;
  output [3:0]TXCHARISK;
  output [31:0]txdata;
  input I1;
  input POWERDOWN0;
  input userclk2;
  input ENABLEALIGN0;
  input I2;
  input [3:0]D;
  input [0:0]I3;
  input I4;
  input I5;
  input I6;
  input [2:0]O5;
  input I7;
  input I8;
  input I9;
  input I10;
  input I11;
  input [2:0]O4;
  input I12;
  input I13;
  input I14;
  input I15;
  input I16;
  input [2:0]O3;
  input I17;
  input I18;
  input I19;
  input I20;
  input [2:0]O8;
  input I21;
  input I22;

  wire \<const0> ;
  wire \<const1> ;
  wire [3:0]D;
  wire ENABLEALIGN;
  wire ENABLEALIGN0;
  wire I1;
  wire I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I18;
  wire I19;
  wire I2;
  wire I20;
  wire I21;
  wire I22;
  wire [0:0]I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire I9;
  wire [2:0]O3;
  wire [2:0]O4;
  wire [2:0]O5;
  wire [2:0]O8;
  wire POWERDOWN0;
  wire [3:0]TXCHARISK;
  wire [1:0]TXPD;
  wire [31:0]txdata;
  wire userclk2;

FDSE ENABLEALIGN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ENABLEALIGN0),
        .Q(ENABLEALIGN),
        .S(I1));
GND GND
       (.G(\<const0> ));
FDRE POWERDOWN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(POWERDOWN0),
        .Q(TXPD[1]),
        .R(I1));
FDRE POWERDOWN_reg_rep
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(TXPD[0]),
        .R(I1));
FDRE \TXCHARISK_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(D[0]),
        .Q(TXCHARISK[0]),
        .R(I1));
FDRE \TXCHARISK_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(D[1]),
        .Q(TXCHARISK[1]),
        .R(I1));
FDRE \TXCHARISK_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(D[2]),
        .Q(TXCHARISK[2]),
        .R(I1));
FDRE \TXCHARISK_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(D[3]),
        .Q(TXCHARISK[3]),
        .R(I1));
FDRE \TXDATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O8[0]),
        .Q(txdata[0]),
        .R(I1));
FDRE \TXDATA_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I18),
        .Q(txdata[10]),
        .R(I1));
FDRE \TXDATA_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I17),
        .Q(txdata[11]),
        .R(I1));
FDRE \TXDATA_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O3[2]),
        .Q(txdata[12]),
        .R(I1));
FDRE \TXDATA_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I16),
        .Q(txdata[13]),
        .R(I1));
FDRE \TXDATA_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I15),
        .Q(txdata[14]),
        .R(I1));
FDRE \TXDATA_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I14),
        .Q(txdata[15]),
        .R(I1));
FDRE \TXDATA_reg[16] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O4[0]),
        .Q(txdata[16]),
        .R(I1));
FDRE \TXDATA_reg[17] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O4[1]),
        .Q(txdata[17]),
        .R(I1));
FDRE \TXDATA_reg[18] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I13),
        .Q(txdata[18]),
        .R(I1));
FDRE \TXDATA_reg[19] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I12),
        .Q(txdata[19]),
        .R(I1));
FDRE \TXDATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O8[1]),
        .Q(txdata[1]),
        .R(I1));
FDRE \TXDATA_reg[20] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O4[2]),
        .Q(txdata[20]),
        .R(I1));
FDRE \TXDATA_reg[21] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I11),
        .Q(txdata[21]),
        .R(I1));
FDRE \TXDATA_reg[22] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I10),
        .Q(txdata[22]),
        .R(I1));
FDRE \TXDATA_reg[23] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I9),
        .Q(txdata[23]),
        .R(I1));
FDRE \TXDATA_reg[24] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O5[0]),
        .Q(txdata[24]),
        .R(I1));
FDRE \TXDATA_reg[25] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O5[1]),
        .Q(txdata[25]),
        .R(I1));
FDRE \TXDATA_reg[26] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I8),
        .Q(txdata[26]),
        .R(I1));
FDRE \TXDATA_reg[27] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I7),
        .Q(txdata[27]),
        .R(I1));
FDRE \TXDATA_reg[28] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O5[2]),
        .Q(txdata[28]),
        .R(I1));
FDRE \TXDATA_reg[29] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I6),
        .Q(txdata[29]),
        .R(I1));
FDRE \TXDATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I22),
        .Q(txdata[2]),
        .R(I1));
FDRE \TXDATA_reg[30] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I5),
        .Q(txdata[30]),
        .R(I1));
FDRE \TXDATA_reg[31] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I4),
        .Q(txdata[31]),
        .R(I1));
FDRE \TXDATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I21),
        .Q(txdata[3]),
        .R(I1));
FDRE \TXDATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O8[2]),
        .Q(txdata[4]),
        .R(I1));
FDRE \TXDATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I20),
        .Q(txdata[5]),
        .R(I1));
FDRE \TXDATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I19),
        .Q(txdata[6]),
        .R(I1));
FDRE \TXDATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I3),
        .Q(txdata[7]),
        .R(\<const0> ));
FDRE \TXDATA_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O3[0]),
        .Q(txdata[8]),
        .R(I1));
FDRE \TXDATA_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(O3[1]),
        .Q(txdata[9]),
        .R(I1));
VCC VCC
       (.P(\<const1> ));
endmodule

module quadsgmiiALIGNER
   (RXCHARISCOMMA_CH3,
    RXCHARISCOMMA_CH2,
    RXCHARISCOMMA_CH1,
    RXCHARISCOMMA_CH0,
    RXDISPERR_CH3,
    RXDISPERR_CH2,
    RXDISPERR_CH1,
    RXDISPERR_CH0,
    RXNOTINTABLE_CH3,
    RXNOTINTABLE_CH2,
    RXNOTINTABLE_CH1,
    RXNOTINTABLE_CH0,
    RXCHARISK_CH3,
    RXCHARISK_CH2,
    RXCHARISK_CH1,
    RXCHARISK_CH0,
    RXDATA_CH3,
    RXDATA_CH2,
    RXDATA_CH1,
    RXDATA_CH0,
    gt0_rxcharisk_out,
    gt0_rxnotintable_out,
    gt0_rxdisperr_out,
    gt0_rxchariscomma_out,
    RESET,
    rxuserclk2,
    rxdata);
  output RXCHARISCOMMA_CH3;
  output RXCHARISCOMMA_CH2;
  output RXCHARISCOMMA_CH1;
  output RXCHARISCOMMA_CH0;
  output RXDISPERR_CH3;
  output RXDISPERR_CH2;
  output RXDISPERR_CH1;
  output RXDISPERR_CH0;
  output RXNOTINTABLE_CH3;
  output RXNOTINTABLE_CH2;
  output RXNOTINTABLE_CH1;
  output RXNOTINTABLE_CH0;
  output RXCHARISK_CH3;
  output RXCHARISK_CH2;
  output RXCHARISK_CH1;
  output RXCHARISK_CH0;
  output [7:0]RXDATA_CH3;
  output [7:0]RXDATA_CH2;
  output [7:0]RXDATA_CH1;
  output [7:0]RXDATA_CH0;
  input [3:0]gt0_rxcharisk_out;
  input [3:0]gt0_rxnotintable_out;
  input [3:0]gt0_rxdisperr_out;
  input [3:0]gt0_rxchariscomma_out;
  input RESET;
  input rxuserclk2;
  input [31:0]rxdata;

  wire \<const1> ;
  wire ALIGN_SEL1;
  wire ALIGN_SEL12_out;
  wire ALIGN_SEL15_out;
  wire ALIGN_SEL17_out;
  wire [1:0]ALIGN_SEL_REG;
  wire RESET;
  wire RXCHARISCOMMA_CH0;
  wire RXCHARISCOMMA_CH1;
  wire RXCHARISCOMMA_CH2;
  wire RXCHARISCOMMA_CH3;
  wire [3:0]RXCHARISCOMMA_REG;
  wire RXCHARISK_CH0;
  wire RXCHARISK_CH1;
  wire RXCHARISK_CH2;
  wire RXCHARISK_CH3;
  wire [7:0]RXDATA_CH0;
  wire [7:0]RXDATA_CH1;
  wire [7:0]RXDATA_CH2;
  wire [7:0]RXDATA_CH3;
  wire RXDISPERR_CH0;
  wire RXDISPERR_CH1;
  wire RXDISPERR_CH2;
  wire RXDISPERR_CH3;
  wire [3:0]RXDISPERR_REG;
  wire RXNOTINTABLE_CH0;
  wire RXNOTINTABLE_CH1;
  wire RXNOTINTABLE_CH2;
  wire RXNOTINTABLE_CH3;
  wire [3:0]RXNOTINTABLE_REG;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire [3:0]gt0_rxdisperr_out;
  wire [3:0]gt0_rxnotintable_out;
  wire \n_0_ALIGN_SEL_REG[0]_i_1 ;
  wire \n_0_ALIGN_SEL_REG[0]_i_2 ;
  wire \n_0_ALIGN_SEL_REG[1]_i_1 ;
  wire \n_0_ALIGN_SEL_REG[1]_i_2 ;
  wire \n_0_ALIGN_SEL_REG[1]_i_5 ;
  wire \n_0_ALIGN_SEL_REG[1]_i_6 ;
  wire \n_0_ALIGN_SEL_REG[1]_i_7 ;
  wire \n_0_ALIGN_SEL_REG[1]_i_8 ;
  wire \n_0_ALIGN_SEL_REG[1]_i_9 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[0]_i_1 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[0]_i_2 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[0]_i_3 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[0]_i_4 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[0]_i_5 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[1]_i_1 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[1]_i_2 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[1]_i_3 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[1]_i_4 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[1]_i_5 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[2]_i_1 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[2]_i_2 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[2]_i_3 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[2]_i_4 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[2]_i_5 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[3]_i_1 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[3]_i_2 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[3]_i_3 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[3]_i_4 ;
  wire \n_0_RXCHARISCOMMA_ALIGNED[3]_i_5 ;
  wire \n_0_RXCHARISK_ALIGNED[0]_i_1 ;
  wire \n_0_RXCHARISK_ALIGNED[0]_i_2 ;
  wire \n_0_RXCHARISK_ALIGNED[0]_i_3 ;
  wire \n_0_RXCHARISK_ALIGNED[0]_i_4 ;
  wire \n_0_RXCHARISK_ALIGNED[0]_i_5 ;
  wire \n_0_RXCHARISK_ALIGNED[1]_i_1 ;
  wire \n_0_RXCHARISK_ALIGNED[1]_i_2 ;
  wire \n_0_RXCHARISK_ALIGNED[1]_i_3 ;
  wire \n_0_RXCHARISK_ALIGNED[1]_i_4 ;
  wire \n_0_RXCHARISK_ALIGNED[1]_i_5 ;
  wire \n_0_RXCHARISK_ALIGNED[2]_i_1 ;
  wire \n_0_RXCHARISK_ALIGNED[2]_i_2 ;
  wire \n_0_RXCHARISK_ALIGNED[2]_i_3 ;
  wire \n_0_RXCHARISK_ALIGNED[2]_i_4 ;
  wire \n_0_RXCHARISK_ALIGNED[2]_i_5 ;
  wire \n_0_RXCHARISK_ALIGNED[3]_i_1 ;
  wire \n_0_RXCHARISK_ALIGNED[3]_i_2 ;
  wire \n_0_RXCHARISK_ALIGNED[3]_i_3 ;
  wire \n_0_RXCHARISK_ALIGNED[3]_i_4 ;
  wire \n_0_RXCHARISK_ALIGNED[3]_i_5 ;
  wire \n_0_RXCHARISK_REG_reg[0] ;
  wire \n_0_RXDATA_ALIGNED[0]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[0]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[10]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[10]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[11]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[11]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[12]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[12]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[13]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[13]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[14]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[14]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[15]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[15]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[16]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[16]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[17]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[17]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[18]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[18]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[19]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[19]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[1]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[1]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[20]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[20]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[21]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[21]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[22]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[22]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[23]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[23]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[24]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[24]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[25]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[25]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[26]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[26]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[27]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[27]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[28]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[28]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[29]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[29]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[2]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[2]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[30]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[30]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[31]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[31]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[31]_i_3 ;
  wire \n_0_RXDATA_ALIGNED[31]_i_4 ;
  wire \n_0_RXDATA_ALIGNED[3]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[3]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[4]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[4]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[5]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[5]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[6]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[6]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[7]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[7]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[7]_i_3 ;
  wire \n_0_RXDATA_ALIGNED[8]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[8]_i_2 ;
  wire \n_0_RXDATA_ALIGNED[9]_i_1 ;
  wire \n_0_RXDATA_ALIGNED[9]_i_2 ;
  wire \n_0_RXDATA_REG_reg[0] ;
  wire \n_0_RXDATA_REG_reg[16] ;
  wire \n_0_RXDATA_REG_reg[17] ;
  wire \n_0_RXDATA_REG_reg[18] ;
  wire \n_0_RXDATA_REG_reg[19] ;
  wire \n_0_RXDATA_REG_reg[1] ;
  wire \n_0_RXDATA_REG_reg[20] ;
  wire \n_0_RXDATA_REG_reg[21] ;
  wire \n_0_RXDATA_REG_reg[22] ;
  wire \n_0_RXDATA_REG_reg[23] ;
  wire \n_0_RXDATA_REG_reg[24] ;
  wire \n_0_RXDATA_REG_reg[25] ;
  wire \n_0_RXDATA_REG_reg[26] ;
  wire \n_0_RXDATA_REG_reg[27] ;
  wire \n_0_RXDATA_REG_reg[28] ;
  wire \n_0_RXDATA_REG_reg[29] ;
  wire \n_0_RXDATA_REG_reg[2] ;
  wire \n_0_RXDATA_REG_reg[30] ;
  wire \n_0_RXDATA_REG_reg[31] ;
  wire \n_0_RXDATA_REG_reg[3] ;
  wire \n_0_RXDATA_REG_reg[4] ;
  wire \n_0_RXDATA_REG_reg[5] ;
  wire \n_0_RXDATA_REG_reg[6] ;
  wire \n_0_RXDATA_REG_reg[7] ;
  wire \n_0_RXDISPERR_ALIGNED[0]_i_1 ;
  wire \n_0_RXDISPERR_ALIGNED[0]_i_2 ;
  wire \n_0_RXDISPERR_ALIGNED[0]_i_3 ;
  wire \n_0_RXDISPERR_ALIGNED[0]_i_4 ;
  wire \n_0_RXDISPERR_ALIGNED[0]_i_5 ;
  wire \n_0_RXDISPERR_ALIGNED[1]_i_1 ;
  wire \n_0_RXDISPERR_ALIGNED[1]_i_2 ;
  wire \n_0_RXDISPERR_ALIGNED[1]_i_3 ;
  wire \n_0_RXDISPERR_ALIGNED[1]_i_4 ;
  wire \n_0_RXDISPERR_ALIGNED[1]_i_5 ;
  wire \n_0_RXDISPERR_ALIGNED[2]_i_1 ;
  wire \n_0_RXDISPERR_ALIGNED[2]_i_2 ;
  wire \n_0_RXDISPERR_ALIGNED[2]_i_3 ;
  wire \n_0_RXDISPERR_ALIGNED[2]_i_4 ;
  wire \n_0_RXDISPERR_ALIGNED[2]_i_5 ;
  wire \n_0_RXDISPERR_ALIGNED[3]_i_1 ;
  wire \n_0_RXDISPERR_ALIGNED[3]_i_2 ;
  wire \n_0_RXDISPERR_ALIGNED[3]_i_3 ;
  wire \n_0_RXDISPERR_ALIGNED[3]_i_4 ;
  wire \n_0_RXDISPERR_ALIGNED[3]_i_5 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[0]_i_1 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[0]_i_2 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[0]_i_3 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[0]_i_4 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[0]_i_5 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[1]_i_1 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[1]_i_2 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[1]_i_3 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[1]_i_4 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[1]_i_5 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[2]_i_1 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[2]_i_2 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[2]_i_3 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[2]_i_4 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[2]_i_5 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[3]_i_1 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[3]_i_2 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[3]_i_3 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[3]_i_4 ;
  wire \n_0_RXNOTINTABLE_ALIGNED[3]_i_5 ;
  wire [7:0]p_0_in;
  wire p_1_in;
  wire p_1_in1_in;
  wire p_1_in4_in;
  wire [31:0]rxdata;
  wire rxuserclk2;

LUT2 #(
    .INIT(4'h2)) 
     \ALIGN_SEL_REG[0]_i_1 
       (.I0(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I1(ALIGN_SEL17_out),
        .O(\n_0_ALIGN_SEL_REG[0]_i_1 ));
LUT4 #(
    .INIT(16'hAFAE)) 
     \ALIGN_SEL_REG[0]_i_2 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[0]),
        .I2(ALIGN_SEL12_out),
        .I3(ALIGN_SEL1),
        .O(\n_0_ALIGN_SEL_REG[0]_i_2 ));
LUT4 #(
    .INIT(16'h1000)) 
     \ALIGN_SEL_REG[0]_i_3 
       (.I0(\n_0_RXDATA_REG_reg[16] ),
        .I1(\n_0_RXDATA_REG_reg[22] ),
        .I2(p_1_in1_in),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_5 ),
        .O(ALIGN_SEL12_out));
(* SOFT_HLUTNM = "soft_lutpair669" *) 
   LUT4 #(
    .INIT(16'h1000)) 
     \ALIGN_SEL_REG[0]_i_4 
       (.I0(\n_0_RXDATA_REG_reg[24] ),
        .I1(\n_0_RXDATA_REG_reg[30] ),
        .I2(p_1_in),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_6 ),
        .O(ALIGN_SEL1));
(* SOFT_HLUTNM = "soft_lutpair646" *) 
   LUT4 #(
    .INIT(16'h000E)) 
     \ALIGN_SEL_REG[1]_i_1 
       (.I0(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I1(ALIGN_SEL_REG[1]),
        .I2(ALIGN_SEL15_out),
        .I3(ALIGN_SEL17_out),
        .O(\n_0_ALIGN_SEL_REG[1]_i_1 ));
LUT6 #(
    .INIT(64'hFFFF000800080008)) 
     \ALIGN_SEL_REG[1]_i_2 
       (.I0(\n_0_ALIGN_SEL_REG[1]_i_5 ),
        .I1(p_1_in1_in),
        .I2(\n_0_RXDATA_REG_reg[22] ),
        .I3(\n_0_RXDATA_REG_reg[16] ),
        .I4(\n_0_ALIGN_SEL_REG[1]_i_6 ),
        .I5(\n_0_ALIGN_SEL_REG[1]_i_7 ),
        .O(\n_0_ALIGN_SEL_REG[1]_i_2 ));
LUT4 #(
    .INIT(16'h1000)) 
     \ALIGN_SEL_REG[1]_i_3 
       (.I0(p_0_in[0]),
        .I1(p_0_in[6]),
        .I2(p_1_in4_in),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_8 ),
        .O(ALIGN_SEL15_out));
LUT4 #(
    .INIT(16'h1000)) 
     \ALIGN_SEL_REG[1]_i_4 
       (.I0(\n_0_RXDATA_REG_reg[0] ),
        .I1(\n_0_RXDATA_REG_reg[6] ),
        .I2(\n_0_RXCHARISK_REG_reg[0] ),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_9 ),
        .O(ALIGN_SEL17_out));
LUT6 #(
    .INIT(64'h0000000000800000)) 
     \ALIGN_SEL_REG[1]_i_5 
       (.I0(\n_0_RXDATA_REG_reg[20] ),
        .I1(\n_0_RXDATA_REG_reg[18] ),
        .I2(\n_0_RXDATA_REG_reg[19] ),
        .I3(\n_0_RXDATA_REG_reg[17] ),
        .I4(\n_0_RXDATA_REG_reg[21] ),
        .I5(\n_0_RXDATA_REG_reg[23] ),
        .O(\n_0_ALIGN_SEL_REG[1]_i_5 ));
LUT6 #(
    .INIT(64'h0000000000800000)) 
     \ALIGN_SEL_REG[1]_i_6 
       (.I0(\n_0_RXDATA_REG_reg[28] ),
        .I1(\n_0_RXDATA_REG_reg[26] ),
        .I2(\n_0_RXDATA_REG_reg[27] ),
        .I3(\n_0_RXDATA_REG_reg[25] ),
        .I4(\n_0_RXDATA_REG_reg[29] ),
        .I5(\n_0_RXDATA_REG_reg[31] ),
        .O(\n_0_ALIGN_SEL_REG[1]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair669" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \ALIGN_SEL_REG[1]_i_7 
       (.I0(p_1_in),
        .I1(\n_0_RXDATA_REG_reg[30] ),
        .I2(\n_0_RXDATA_REG_reg[24] ),
        .O(\n_0_ALIGN_SEL_REG[1]_i_7 ));
LUT6 #(
    .INIT(64'h0000000000800000)) 
     \ALIGN_SEL_REG[1]_i_8 
       (.I0(p_0_in[4]),
        .I1(p_0_in[2]),
        .I2(p_0_in[3]),
        .I3(p_0_in[1]),
        .I4(p_0_in[5]),
        .I5(p_0_in[7]),
        .O(\n_0_ALIGN_SEL_REG[1]_i_8 ));
LUT6 #(
    .INIT(64'h0000000000800000)) 
     \ALIGN_SEL_REG[1]_i_9 
       (.I0(\n_0_RXDATA_REG_reg[4] ),
        .I1(\n_0_RXDATA_REG_reg[2] ),
        .I2(\n_0_RXDATA_REG_reg[3] ),
        .I3(\n_0_RXDATA_REG_reg[1] ),
        .I4(\n_0_RXDATA_REG_reg[5] ),
        .I5(\n_0_RXDATA_REG_reg[7] ),
        .O(\n_0_ALIGN_SEL_REG[1]_i_9 ));
FDRE \ALIGN_SEL_REG_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_ALIGN_SEL_REG[0]_i_1 ),
        .Q(ALIGN_SEL_REG[0]),
        .R(RESET));
FDRE \ALIGN_SEL_REG_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_ALIGN_SEL_REG[1]_i_1 ),
        .Q(ALIGN_SEL_REG[1]),
        .R(RESET));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXCHARISCOMMA_ALIGNED[0]_i_1 
       (.I0(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_2 ),
        .I1(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_4 ),
        .I5(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_5 ),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair647" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISCOMMA_ALIGNED[0]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(RXCHARISCOMMA_REG[2]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair648" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISCOMMA_ALIGNED[0]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(RXCHARISCOMMA_REG[3]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair646" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXCHARISCOMMA_ALIGNED[0]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXCHARISCOMMA_REG[0]),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair645" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXCHARISCOMMA_ALIGNED[0]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(RXCHARISCOMMA_REG[1]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXCHARISCOMMA_ALIGNED[1]_i_1 
       (.I0(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_2 ),
        .I1(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_4 ),
        .I5(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_5 ),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair651" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISCOMMA_ALIGNED[1]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(RXCHARISCOMMA_REG[3]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair650" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISCOMMA_ALIGNED[1]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxchariscomma_out[0]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair645" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXCHARISCOMMA_ALIGNED[1]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXCHARISCOMMA_REG[1]),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair647" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXCHARISCOMMA_ALIGNED[1]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(RXCHARISCOMMA_REG[2]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXCHARISCOMMA_ALIGNED[2]_i_1 
       (.I0(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_2 ),
        .I1(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_4 ),
        .I5(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_5 ),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_1 ));
LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISCOMMA_ALIGNED[2]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxchariscomma_out[0]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair665" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISCOMMA_ALIGNED[2]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxchariscomma_out[1]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair649" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXCHARISCOMMA_ALIGNED[2]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXCHARISCOMMA_REG[2]),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair648" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXCHARISCOMMA_ALIGNED[2]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(RXCHARISCOMMA_REG[3]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXCHARISCOMMA_ALIGNED[3]_i_1 
       (.I0(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_2 ),
        .I1(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_4 ),
        .I5(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_5 ),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair665" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISCOMMA_ALIGNED[3]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxchariscomma_out[1]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_2 ));
LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISCOMMA_ALIGNED[3]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxchariscomma_out[2]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair651" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXCHARISCOMMA_ALIGNED[3]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXCHARISCOMMA_REG[3]),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair650" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXCHARISCOMMA_ALIGNED[3]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(gt0_rxchariscomma_out[0]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_5 ));
FDRE \RXCHARISCOMMA_ALIGNED_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCHARISCOMMA_ALIGNED[0]_i_1 ),
        .Q(RXCHARISCOMMA_CH0),
        .R(RESET));
FDRE \RXCHARISCOMMA_ALIGNED_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCHARISCOMMA_ALIGNED[1]_i_1 ),
        .Q(RXCHARISCOMMA_CH1),
        .R(RESET));
FDRE \RXCHARISCOMMA_ALIGNED_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCHARISCOMMA_ALIGNED[2]_i_1 ),
        .Q(RXCHARISCOMMA_CH2),
        .R(RESET));
FDRE \RXCHARISCOMMA_ALIGNED_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCHARISCOMMA_ALIGNED[3]_i_1 ),
        .Q(RXCHARISCOMMA_CH3),
        .R(RESET));
FDRE \RXCHARISCOMMA_REG_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxchariscomma_out[0]),
        .Q(RXCHARISCOMMA_REG[0]),
        .R(RESET));
FDRE \RXCHARISCOMMA_REG_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxchariscomma_out[1]),
        .Q(RXCHARISCOMMA_REG[1]),
        .R(RESET));
FDRE \RXCHARISCOMMA_REG_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxchariscomma_out[2]),
        .Q(RXCHARISCOMMA_REG[2]),
        .R(RESET));
FDRE \RXCHARISCOMMA_REG_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxchariscomma_out[3]),
        .Q(RXCHARISCOMMA_REG[3]),
        .R(RESET));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXCHARISK_ALIGNED[0]_i_1 
       (.I0(\n_0_RXCHARISK_ALIGNED[0]_i_2 ),
        .I1(\n_0_RXCHARISK_ALIGNED[0]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXCHARISK_ALIGNED[0]_i_4 ),
        .I5(\n_0_RXCHARISK_ALIGNED[0]_i_5 ),
        .O(\n_0_RXCHARISK_ALIGNED[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair662" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISK_ALIGNED[0]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(p_1_in1_in),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISK_ALIGNED[0]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair660" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISK_ALIGNED[0]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(p_1_in),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISK_ALIGNED[0]_i_3 ));
LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXCHARISK_ALIGNED[0]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(\n_0_RXCHARISK_REG_reg[0] ),
        .O(\n_0_RXCHARISK_ALIGNED[0]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair664" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXCHARISK_ALIGNED[0]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(p_1_in4_in),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXCHARISK_ALIGNED[0]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXCHARISK_ALIGNED[1]_i_1 
       (.I0(\n_0_RXCHARISK_ALIGNED[1]_i_2 ),
        .I1(\n_0_RXCHARISK_ALIGNED[1]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXCHARISK_ALIGNED[1]_i_4 ),
        .I5(\n_0_RXCHARISK_ALIGNED[1]_i_5 ),
        .O(\n_0_RXCHARISK_ALIGNED[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair663" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISK_ALIGNED[1]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(p_1_in),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISK_ALIGNED[1]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair661" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISK_ALIGNED[1]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxcharisk_out[0]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISK_ALIGNED[1]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair664" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXCHARISK_ALIGNED[1]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(p_1_in4_in),
        .O(\n_0_RXCHARISK_ALIGNED[1]_i_4 ));
LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXCHARISK_ALIGNED[1]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(p_1_in1_in),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXCHARISK_ALIGNED[1]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXCHARISK_ALIGNED[2]_i_1 
       (.I0(\n_0_RXCHARISK_ALIGNED[2]_i_2 ),
        .I1(\n_0_RXCHARISK_ALIGNED[2]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXCHARISK_ALIGNED[2]_i_4 ),
        .I5(\n_0_RXCHARISK_ALIGNED[2]_i_5 ),
        .O(\n_0_RXCHARISK_ALIGNED[2]_i_1 ));
LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISK_ALIGNED[2]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxcharisk_out[0]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISK_ALIGNED[2]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair668" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISK_ALIGNED[2]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxcharisk_out[1]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISK_ALIGNED[2]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair662" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXCHARISK_ALIGNED[2]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(p_1_in1_in),
        .O(\n_0_RXCHARISK_ALIGNED[2]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair663" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXCHARISK_ALIGNED[2]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(p_1_in),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXCHARISK_ALIGNED[2]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXCHARISK_ALIGNED[3]_i_1 
       (.I0(\n_0_RXCHARISK_ALIGNED[3]_i_2 ),
        .I1(\n_0_RXCHARISK_ALIGNED[3]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXCHARISK_ALIGNED[3]_i_4 ),
        .I5(\n_0_RXCHARISK_ALIGNED[3]_i_5 ),
        .O(\n_0_RXCHARISK_ALIGNED[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair668" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISK_ALIGNED[3]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxcharisk_out[1]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISK_ALIGNED[3]_i_2 ));
LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXCHARISK_ALIGNED[3]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxcharisk_out[2]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXCHARISK_ALIGNED[3]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair660" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXCHARISK_ALIGNED[3]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(p_1_in),
        .O(\n_0_RXCHARISK_ALIGNED[3]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair661" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXCHARISK_ALIGNED[3]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(gt0_rxcharisk_out[0]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXCHARISK_ALIGNED[3]_i_5 ));
FDRE \RXCHARISK_ALIGNED_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCHARISK_ALIGNED[0]_i_1 ),
        .Q(RXCHARISK_CH0),
        .R(RESET));
FDRE \RXCHARISK_ALIGNED_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCHARISK_ALIGNED[1]_i_1 ),
        .Q(RXCHARISK_CH1),
        .R(RESET));
FDRE \RXCHARISK_ALIGNED_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCHARISK_ALIGNED[2]_i_1 ),
        .Q(RXCHARISK_CH2),
        .R(RESET));
FDRE \RXCHARISK_ALIGNED_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCHARISK_ALIGNED[3]_i_1 ),
        .Q(RXCHARISK_CH3),
        .R(RESET));
FDRE \RXCHARISK_REG_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxcharisk_out[0]),
        .Q(\n_0_RXCHARISK_REG_reg[0] ),
        .R(RESET));
FDRE \RXCHARISK_REG_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxcharisk_out[1]),
        .Q(p_1_in4_in),
        .R(RESET));
FDRE \RXCHARISK_REG_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxcharisk_out[2]),
        .Q(p_1_in1_in),
        .R(RESET));
FDRE \RXCHARISK_REG_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxcharisk_out[3]),
        .Q(p_1_in),
        .R(RESET));
LUT6 #(
    .INIT(64'h0B0B0B0F01010100)) 
     \RXDATA_ALIGNED[0]_i_1 
       (.I0(ALIGN_SEL17_out),
        .I1(\n_0_RXDATA_ALIGNED[0]_i_2 ),
        .I2(\n_0_RXDATA_ALIGNED[7]_i_2 ),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL_REG[1]),
        .I5(\n_0_RXDATA_REG_reg[0] ),
        .O(\n_0_RXDATA_ALIGNED[0]_i_1 ));
LUT5 #(
    .INIT(32'h0F553355)) 
     \RXDATA_ALIGNED[0]_i_2 
       (.I0(p_0_in[0]),
        .I1(\n_0_RXDATA_REG_reg[16] ),
        .I2(\n_0_RXDATA_REG_reg[24] ),
        .I3(ALIGN_SEL_REG[1]),
        .I4(ALIGN_SEL_REG[0]),
        .O(\n_0_RXDATA_ALIGNED[0]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[10]_i_1 
       (.I0(p_0_in[2]),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[10]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[18] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[10]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[10]_i_2 
       (.I0(\n_0_RXDATA_REG_reg[26] ),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[2]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[10]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[11]_i_1 
       (.I0(p_0_in[3]),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[11]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[19] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[11]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[11]_i_2 
       (.I0(\n_0_RXDATA_REG_reg[27] ),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[3]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[11]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[12]_i_1 
       (.I0(p_0_in[4]),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[12]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[20] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[12]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[12]_i_2 
       (.I0(\n_0_RXDATA_REG_reg[28] ),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[4]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[12]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[13]_i_1 
       (.I0(p_0_in[5]),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[13]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[21] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[13]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[13]_i_2 
       (.I0(\n_0_RXDATA_REG_reg[29] ),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[5]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[13]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[14]_i_1 
       (.I0(p_0_in[6]),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[14]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[22] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[14]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[14]_i_2 
       (.I0(\n_0_RXDATA_REG_reg[30] ),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[6]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[14]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[15]_i_1 
       (.I0(p_0_in[7]),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[15]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[23] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[15]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[15]_i_2 
       (.I0(\n_0_RXDATA_REG_reg[31] ),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[7]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[15]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[16]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[16] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[16]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[24] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[16]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[16]_i_2 
       (.I0(rxdata[0]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[8]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[16]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[17]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[17] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[17]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[25] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[17]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[17]_i_2 
       (.I0(rxdata[1]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[9]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[17]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[18]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[18] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[18]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[26] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[18]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[18]_i_2 
       (.I0(rxdata[2]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[10]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[18]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[19]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[19] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[19]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[27] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[19]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[19]_i_2 
       (.I0(rxdata[3]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[11]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[19]_i_2 ));
LUT6 #(
    .INIT(64'h0B0B0B0F01010100)) 
     \RXDATA_ALIGNED[1]_i_1 
       (.I0(ALIGN_SEL17_out),
        .I1(\n_0_RXDATA_ALIGNED[1]_i_2 ),
        .I2(\n_0_RXDATA_ALIGNED[7]_i_2 ),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL_REG[1]),
        .I5(\n_0_RXDATA_REG_reg[1] ),
        .O(\n_0_RXDATA_ALIGNED[1]_i_1 ));
LUT5 #(
    .INIT(32'h0F553355)) 
     \RXDATA_ALIGNED[1]_i_2 
       (.I0(p_0_in[1]),
        .I1(\n_0_RXDATA_REG_reg[17] ),
        .I2(\n_0_RXDATA_REG_reg[25] ),
        .I3(ALIGN_SEL_REG[1]),
        .I4(ALIGN_SEL_REG[0]),
        .O(\n_0_RXDATA_ALIGNED[1]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[20]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[20] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[20]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[28] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[20]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[20]_i_2 
       (.I0(rxdata[4]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[12]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[20]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[21]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[21] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[21]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[29] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[21]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[21]_i_2 
       (.I0(rxdata[5]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[13]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[21]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[22]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[22] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[22]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[30] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[22]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[22]_i_2 
       (.I0(rxdata[6]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[14]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[22]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[23]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[23] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[23]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[31] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[23]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[23]_i_2 
       (.I0(rxdata[7]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[15]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[23]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[24]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[24] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[24]_i_2 ),
        .I4(rxdata[0]),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[24]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[24]_i_2 
       (.I0(rxdata[8]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[16]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[24]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[25]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[25] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[25]_i_2 ),
        .I4(rxdata[1]),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[25]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[25]_i_2 
       (.I0(rxdata[9]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[17]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[25]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[26]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[26] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[26]_i_2 ),
        .I4(rxdata[2]),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[26]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[26]_i_2 
       (.I0(rxdata[10]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[18]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[26]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[27]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[27] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[27]_i_2 ),
        .I4(rxdata[3]),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[27]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[27]_i_2 
       (.I0(rxdata[11]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[19]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[27]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[28]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[28] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[28]_i_2 ),
        .I4(rxdata[4]),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[28]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[28]_i_2 
       (.I0(rxdata[12]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[20]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[28]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[29]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[29] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[29]_i_2 ),
        .I4(rxdata[5]),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[29]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[29]_i_2 
       (.I0(rxdata[13]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[21]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[29]_i_2 ));
LUT6 #(
    .INIT(64'hEEEEEEEEAFAFAFEE)) 
     \RXDATA_ALIGNED[2]_i_1 
       (.I0(\n_0_RXDATA_ALIGNED[7]_i_2 ),
        .I1(\n_0_RXDATA_REG_reg[2] ),
        .I2(\n_0_RXDATA_ALIGNED[2]_i_2 ),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL_REG[1]),
        .I5(ALIGN_SEL17_out),
        .O(\n_0_RXDATA_ALIGNED[2]_i_1 ));
LUT5 #(
    .INIT(32'h0F553355)) 
     \RXDATA_ALIGNED[2]_i_2 
       (.I0(p_0_in[2]),
        .I1(\n_0_RXDATA_REG_reg[18] ),
        .I2(\n_0_RXDATA_REG_reg[26] ),
        .I3(ALIGN_SEL_REG[1]),
        .I4(ALIGN_SEL_REG[0]),
        .O(\n_0_RXDATA_ALIGNED[2]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[30]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[30] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[30]_i_2 ),
        .I4(rxdata[6]),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[30]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[30]_i_2 
       (.I0(rxdata[14]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[22]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[30]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[31]_i_1 
       (.I0(\n_0_RXDATA_REG_reg[31] ),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[31]_i_3 ),
        .I4(rxdata[7]),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[31]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair654" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \RXDATA_ALIGNED[31]_i_2 
       (.I0(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I1(ALIGN_SEL_REG[1]),
        .O(\n_0_RXDATA_ALIGNED[31]_i_2 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[31]_i_3 
       (.I0(rxdata[15]),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[23]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[31]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
     \RXDATA_ALIGNED[31]_i_4 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(ALIGN_SEL_REG[0]),
        .I2(ALIGN_SEL12_out),
        .I3(ALIGN_SEL1),
        .I4(ALIGN_SEL15_out),
        .I5(ALIGN_SEL17_out),
        .O(\n_0_RXDATA_ALIGNED[31]_i_4 ));
LUT6 #(
    .INIT(64'hEEEEEEEEAFAFAFEE)) 
     \RXDATA_ALIGNED[3]_i_1 
       (.I0(\n_0_RXDATA_ALIGNED[7]_i_2 ),
        .I1(\n_0_RXDATA_REG_reg[3] ),
        .I2(\n_0_RXDATA_ALIGNED[3]_i_2 ),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL_REG[1]),
        .I5(ALIGN_SEL17_out),
        .O(\n_0_RXDATA_ALIGNED[3]_i_1 ));
LUT5 #(
    .INIT(32'h0F553355)) 
     \RXDATA_ALIGNED[3]_i_2 
       (.I0(p_0_in[3]),
        .I1(\n_0_RXDATA_REG_reg[19] ),
        .I2(\n_0_RXDATA_REG_reg[27] ),
        .I3(ALIGN_SEL_REG[1]),
        .I4(ALIGN_SEL_REG[0]),
        .O(\n_0_RXDATA_ALIGNED[3]_i_2 ));
LUT6 #(
    .INIT(64'hEEEEEEEEAFAFAFEE)) 
     \RXDATA_ALIGNED[4]_i_1 
       (.I0(\n_0_RXDATA_ALIGNED[7]_i_2 ),
        .I1(\n_0_RXDATA_REG_reg[4] ),
        .I2(\n_0_RXDATA_ALIGNED[4]_i_2 ),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL_REG[1]),
        .I5(ALIGN_SEL17_out),
        .O(\n_0_RXDATA_ALIGNED[4]_i_1 ));
LUT5 #(
    .INIT(32'h0F553355)) 
     \RXDATA_ALIGNED[4]_i_2 
       (.I0(p_0_in[4]),
        .I1(\n_0_RXDATA_REG_reg[20] ),
        .I2(\n_0_RXDATA_REG_reg[28] ),
        .I3(ALIGN_SEL_REG[1]),
        .I4(ALIGN_SEL_REG[0]),
        .O(\n_0_RXDATA_ALIGNED[4]_i_2 ));
LUT6 #(
    .INIT(64'hEEEEEEEEAFAFAFEE)) 
     \RXDATA_ALIGNED[5]_i_1 
       (.I0(\n_0_RXDATA_ALIGNED[7]_i_2 ),
        .I1(\n_0_RXDATA_REG_reg[5] ),
        .I2(\n_0_RXDATA_ALIGNED[5]_i_2 ),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL_REG[1]),
        .I5(ALIGN_SEL17_out),
        .O(\n_0_RXDATA_ALIGNED[5]_i_1 ));
LUT5 #(
    .INIT(32'h0F553355)) 
     \RXDATA_ALIGNED[5]_i_2 
       (.I0(p_0_in[5]),
        .I1(\n_0_RXDATA_REG_reg[21] ),
        .I2(\n_0_RXDATA_REG_reg[29] ),
        .I3(ALIGN_SEL_REG[1]),
        .I4(ALIGN_SEL_REG[0]),
        .O(\n_0_RXDATA_ALIGNED[5]_i_2 ));
LUT6 #(
    .INIT(64'h0B0B0B0F01010100)) 
     \RXDATA_ALIGNED[6]_i_1 
       (.I0(ALIGN_SEL17_out),
        .I1(\n_0_RXDATA_ALIGNED[6]_i_2 ),
        .I2(\n_0_RXDATA_ALIGNED[7]_i_2 ),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL_REG[1]),
        .I5(\n_0_RXDATA_REG_reg[6] ),
        .O(\n_0_RXDATA_ALIGNED[6]_i_1 ));
LUT5 #(
    .INIT(32'h0F553355)) 
     \RXDATA_ALIGNED[6]_i_2 
       (.I0(p_0_in[6]),
        .I1(\n_0_RXDATA_REG_reg[22] ),
        .I2(\n_0_RXDATA_REG_reg[30] ),
        .I3(ALIGN_SEL_REG[1]),
        .I4(ALIGN_SEL_REG[0]),
        .O(\n_0_RXDATA_ALIGNED[6]_i_2 ));
LUT6 #(
    .INIT(64'hEEEEEEEEAFAFAFEE)) 
     \RXDATA_ALIGNED[7]_i_1 
       (.I0(\n_0_RXDATA_ALIGNED[7]_i_2 ),
        .I1(\n_0_RXDATA_REG_reg[7] ),
        .I2(\n_0_RXDATA_ALIGNED[7]_i_3 ),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL_REG[1]),
        .I5(ALIGN_SEL17_out),
        .O(\n_0_RXDATA_ALIGNED[7]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair649" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \RXDATA_ALIGNED[7]_i_2 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL17_out),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .O(\n_0_RXDATA_ALIGNED[7]_i_2 ));
LUT5 #(
    .INIT(32'h0F553355)) 
     \RXDATA_ALIGNED[7]_i_3 
       (.I0(p_0_in[7]),
        .I1(\n_0_RXDATA_REG_reg[23] ),
        .I2(\n_0_RXDATA_REG_reg[31] ),
        .I3(ALIGN_SEL_REG[1]),
        .I4(ALIGN_SEL_REG[0]),
        .O(\n_0_RXDATA_ALIGNED[7]_i_3 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[8]_i_1 
       (.I0(p_0_in[0]),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[8]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[16] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[8]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[8]_i_2 
       (.I0(\n_0_RXDATA_REG_reg[24] ),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[0]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[8]_i_2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAFFF30C00)) 
     \RXDATA_ALIGNED[9]_i_1 
       (.I0(p_0_in[1]),
        .I1(\n_0_RXDATA_ALIGNED[31]_i_2 ),
        .I2(ALIGN_SEL15_out),
        .I3(\n_0_RXDATA_ALIGNED[9]_i_2 ),
        .I4(\n_0_RXDATA_REG_reg[17] ),
        .I5(\n_0_RXDATA_ALIGNED[31]_i_4 ),
        .O(\n_0_RXDATA_ALIGNED[9]_i_1 ));
LUT5 #(
    .INIT(32'hB8B8B8AA)) 
     \RXDATA_ALIGNED[9]_i_2 
       (.I0(\n_0_RXDATA_REG_reg[25] ),
        .I1(ALIGN_SEL12_out),
        .I2(rxdata[1]),
        .I3(ALIGN_SEL_REG[0]),
        .I4(ALIGN_SEL1),
        .O(\n_0_RXDATA_ALIGNED[9]_i_2 ));
FDRE \RXDATA_ALIGNED_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[0]_i_1 ),
        .Q(RXDATA_CH0[0]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[10]_i_1 ),
        .Q(RXDATA_CH1[2]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[11]_i_1 ),
        .Q(RXDATA_CH1[3]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[12]_i_1 ),
        .Q(RXDATA_CH1[4]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[13] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[13]_i_1 ),
        .Q(RXDATA_CH1[5]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[14] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[14]_i_1 ),
        .Q(RXDATA_CH1[6]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[15] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[15]_i_1 ),
        .Q(RXDATA_CH1[7]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[16] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[16]_i_1 ),
        .Q(RXDATA_CH2[0]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[17] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[17]_i_1 ),
        .Q(RXDATA_CH2[1]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[18] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[18]_i_1 ),
        .Q(RXDATA_CH2[2]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[19] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[19]_i_1 ),
        .Q(RXDATA_CH2[3]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[1]_i_1 ),
        .Q(RXDATA_CH0[1]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[20] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[20]_i_1 ),
        .Q(RXDATA_CH2[4]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[21] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[21]_i_1 ),
        .Q(RXDATA_CH2[5]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[22] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[22]_i_1 ),
        .Q(RXDATA_CH2[6]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[23] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[23]_i_1 ),
        .Q(RXDATA_CH2[7]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[24] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[24]_i_1 ),
        .Q(RXDATA_CH3[0]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[25] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[25]_i_1 ),
        .Q(RXDATA_CH3[1]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[26] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[26]_i_1 ),
        .Q(RXDATA_CH3[2]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[27] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[27]_i_1 ),
        .Q(RXDATA_CH3[3]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[28] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[28]_i_1 ),
        .Q(RXDATA_CH3[4]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[29] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[29]_i_1 ),
        .Q(RXDATA_CH3[5]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[2]_i_1 ),
        .Q(RXDATA_CH0[2]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[30] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[30]_i_1 ),
        .Q(RXDATA_CH3[6]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[31] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[31]_i_1 ),
        .Q(RXDATA_CH3[7]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[3]_i_1 ),
        .Q(RXDATA_CH0[3]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[4]_i_1 ),
        .Q(RXDATA_CH0[4]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[5]_i_1 ),
        .Q(RXDATA_CH0[5]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[6]_i_1 ),
        .Q(RXDATA_CH0[6]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[7]_i_1 ),
        .Q(RXDATA_CH0[7]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[8] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[8]_i_1 ),
        .Q(RXDATA_CH1[0]),
        .R(RESET));
FDRE \RXDATA_ALIGNED_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_ALIGNED[9]_i_1 ),
        .Q(RXDATA_CH1[1]),
        .R(RESET));
FDRE \RXDATA_REG_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[0]),
        .Q(\n_0_RXDATA_REG_reg[0] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[10]),
        .Q(p_0_in[2]),
        .R(RESET));
FDRE \RXDATA_REG_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[11]),
        .Q(p_0_in[3]),
        .R(RESET));
FDRE \RXDATA_REG_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[12]),
        .Q(p_0_in[4]),
        .R(RESET));
FDRE \RXDATA_REG_reg[13] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[13]),
        .Q(p_0_in[5]),
        .R(RESET));
FDRE \RXDATA_REG_reg[14] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[14]),
        .Q(p_0_in[6]),
        .R(RESET));
FDRE \RXDATA_REG_reg[15] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[15]),
        .Q(p_0_in[7]),
        .R(RESET));
FDRE \RXDATA_REG_reg[16] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[16]),
        .Q(\n_0_RXDATA_REG_reg[16] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[17] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[17]),
        .Q(\n_0_RXDATA_REG_reg[17] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[18] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[18]),
        .Q(\n_0_RXDATA_REG_reg[18] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[19] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[19]),
        .Q(\n_0_RXDATA_REG_reg[19] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[1]),
        .Q(\n_0_RXDATA_REG_reg[1] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[20] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[20]),
        .Q(\n_0_RXDATA_REG_reg[20] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[21] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[21]),
        .Q(\n_0_RXDATA_REG_reg[21] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[22] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[22]),
        .Q(\n_0_RXDATA_REG_reg[22] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[23] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[23]),
        .Q(\n_0_RXDATA_REG_reg[23] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[24] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[24]),
        .Q(\n_0_RXDATA_REG_reg[24] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[25] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[25]),
        .Q(\n_0_RXDATA_REG_reg[25] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[26] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[26]),
        .Q(\n_0_RXDATA_REG_reg[26] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[27] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[27]),
        .Q(\n_0_RXDATA_REG_reg[27] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[28] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[28]),
        .Q(\n_0_RXDATA_REG_reg[28] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[29] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[29]),
        .Q(\n_0_RXDATA_REG_reg[29] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[2]),
        .Q(\n_0_RXDATA_REG_reg[2] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[30] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[30]),
        .Q(\n_0_RXDATA_REG_reg[30] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[31] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[31]),
        .Q(\n_0_RXDATA_REG_reg[31] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[3]),
        .Q(\n_0_RXDATA_REG_reg[3] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[4]),
        .Q(\n_0_RXDATA_REG_reg[4] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[5]),
        .Q(\n_0_RXDATA_REG_reg[5] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[6]),
        .Q(\n_0_RXDATA_REG_reg[6] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[7]),
        .Q(\n_0_RXDATA_REG_reg[7] ),
        .R(RESET));
FDRE \RXDATA_REG_reg[8] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[8]),
        .Q(p_0_in[0]),
        .R(RESET));
FDRE \RXDATA_REG_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(rxdata[9]),
        .Q(p_0_in[1]),
        .R(RESET));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXDISPERR_ALIGNED[0]_i_1 
       (.I0(\n_0_RXDISPERR_ALIGNED[0]_i_2 ),
        .I1(\n_0_RXDISPERR_ALIGNED[0]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXDISPERR_ALIGNED[0]_i_4 ),
        .I5(\n_0_RXDISPERR_ALIGNED[0]_i_5 ),
        .O(\n_0_RXDISPERR_ALIGNED[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair642" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXDISPERR_ALIGNED[0]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(RXDISPERR_REG[2]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXDISPERR_ALIGNED[0]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair644" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXDISPERR_ALIGNED[0]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(RXDISPERR_REG[3]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXDISPERR_ALIGNED[0]_i_3 ));
LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXDISPERR_ALIGNED[0]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXDISPERR_REG[0]),
        .O(\n_0_RXDISPERR_ALIGNED[0]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair653" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXDISPERR_ALIGNED[0]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(RXDISPERR_REG[1]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXDISPERR_ALIGNED[0]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXDISPERR_ALIGNED[1]_i_1 
       (.I0(\n_0_RXDISPERR_ALIGNED[1]_i_2 ),
        .I1(\n_0_RXDISPERR_ALIGNED[1]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXDISPERR_ALIGNED[1]_i_4 ),
        .I5(\n_0_RXDISPERR_ALIGNED[1]_i_5 ),
        .O(\n_0_RXDISPERR_ALIGNED[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair652" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXDISPERR_ALIGNED[1]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(RXDISPERR_REG[3]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXDISPERR_ALIGNED[1]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair643" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXDISPERR_ALIGNED[1]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxdisperr_out[0]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXDISPERR_ALIGNED[1]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair653" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXDISPERR_ALIGNED[1]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXDISPERR_REG[1]),
        .O(\n_0_RXDISPERR_ALIGNED[1]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair654" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXDISPERR_ALIGNED[1]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(RXDISPERR_REG[2]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXDISPERR_ALIGNED[1]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXDISPERR_ALIGNED[2]_i_1 
       (.I0(\n_0_RXDISPERR_ALIGNED[2]_i_2 ),
        .I1(\n_0_RXDISPERR_ALIGNED[2]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXDISPERR_ALIGNED[2]_i_4 ),
        .I5(\n_0_RXDISPERR_ALIGNED[2]_i_5 ),
        .O(\n_0_RXDISPERR_ALIGNED[2]_i_1 ));
LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXDISPERR_ALIGNED[2]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxdisperr_out[0]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXDISPERR_ALIGNED[2]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair666" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXDISPERR_ALIGNED[2]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxdisperr_out[1]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXDISPERR_ALIGNED[2]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair642" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXDISPERR_ALIGNED[2]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXDISPERR_REG[2]),
        .O(\n_0_RXDISPERR_ALIGNED[2]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair652" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXDISPERR_ALIGNED[2]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(RXDISPERR_REG[3]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXDISPERR_ALIGNED[2]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXDISPERR_ALIGNED[3]_i_1 
       (.I0(\n_0_RXDISPERR_ALIGNED[3]_i_2 ),
        .I1(\n_0_RXDISPERR_ALIGNED[3]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXDISPERR_ALIGNED[3]_i_4 ),
        .I5(\n_0_RXDISPERR_ALIGNED[3]_i_5 ),
        .O(\n_0_RXDISPERR_ALIGNED[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair666" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXDISPERR_ALIGNED[3]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxdisperr_out[1]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXDISPERR_ALIGNED[3]_i_2 ));
LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXDISPERR_ALIGNED[3]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxdisperr_out[2]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXDISPERR_ALIGNED[3]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair644" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXDISPERR_ALIGNED[3]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXDISPERR_REG[3]),
        .O(\n_0_RXDISPERR_ALIGNED[3]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair643" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXDISPERR_ALIGNED[3]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(gt0_rxdisperr_out[0]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXDISPERR_ALIGNED[3]_i_5 ));
FDRE \RXDISPERR_ALIGNED_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDISPERR_ALIGNED[0]_i_1 ),
        .Q(RXDISPERR_CH0),
        .R(RESET));
FDRE \RXDISPERR_ALIGNED_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDISPERR_ALIGNED[1]_i_1 ),
        .Q(RXDISPERR_CH1),
        .R(RESET));
FDRE \RXDISPERR_ALIGNED_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDISPERR_ALIGNED[2]_i_1 ),
        .Q(RXDISPERR_CH2),
        .R(RESET));
FDRE \RXDISPERR_ALIGNED_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDISPERR_ALIGNED[3]_i_1 ),
        .Q(RXDISPERR_CH3),
        .R(RESET));
FDRE \RXDISPERR_REG_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxdisperr_out[0]),
        .Q(RXDISPERR_REG[0]),
        .R(RESET));
FDRE \RXDISPERR_REG_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxdisperr_out[1]),
        .Q(RXDISPERR_REG[1]),
        .R(RESET));
FDRE \RXDISPERR_REG_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxdisperr_out[2]),
        .Q(RXDISPERR_REG[2]),
        .R(RESET));
FDRE \RXDISPERR_REG_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxdisperr_out[3]),
        .Q(RXDISPERR_REG[3]),
        .R(RESET));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXNOTINTABLE_ALIGNED[0]_i_1 
       (.I0(\n_0_RXNOTINTABLE_ALIGNED[0]_i_2 ),
        .I1(\n_0_RXNOTINTABLE_ALIGNED[0]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXNOTINTABLE_ALIGNED[0]_i_4 ),
        .I5(\n_0_RXNOTINTABLE_ALIGNED[0]_i_5 ),
        .O(\n_0_RXNOTINTABLE_ALIGNED[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair657" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXNOTINTABLE_ALIGNED[0]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(RXNOTINTABLE_REG[2]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[0]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair655" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXNOTINTABLE_ALIGNED[0]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(RXNOTINTABLE_REG[3]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[0]_i_3 ));
LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXNOTINTABLE_ALIGNED[0]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXNOTINTABLE_REG[0]),
        .O(\n_0_RXNOTINTABLE_ALIGNED[0]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair659" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXNOTINTABLE_ALIGNED[0]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(RXNOTINTABLE_REG[1]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[0]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXNOTINTABLE_ALIGNED[1]_i_1 
       (.I0(\n_0_RXNOTINTABLE_ALIGNED[1]_i_2 ),
        .I1(\n_0_RXNOTINTABLE_ALIGNED[1]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXNOTINTABLE_ALIGNED[1]_i_4 ),
        .I5(\n_0_RXNOTINTABLE_ALIGNED[1]_i_5 ),
        .O(\n_0_RXNOTINTABLE_ALIGNED[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair658" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXNOTINTABLE_ALIGNED[1]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(RXNOTINTABLE_REG[3]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[1]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair656" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXNOTINTABLE_ALIGNED[1]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxnotintable_out[0]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[1]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair659" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXNOTINTABLE_ALIGNED[1]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXNOTINTABLE_REG[1]),
        .O(\n_0_RXNOTINTABLE_ALIGNED[1]_i_4 ));
LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXNOTINTABLE_ALIGNED[1]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(RXNOTINTABLE_REG[2]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[1]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXNOTINTABLE_ALIGNED[2]_i_1 
       (.I0(\n_0_RXNOTINTABLE_ALIGNED[2]_i_2 ),
        .I1(\n_0_RXNOTINTABLE_ALIGNED[2]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXNOTINTABLE_ALIGNED[2]_i_4 ),
        .I5(\n_0_RXNOTINTABLE_ALIGNED[2]_i_5 ),
        .O(\n_0_RXNOTINTABLE_ALIGNED[2]_i_1 ));
LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXNOTINTABLE_ALIGNED[2]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxnotintable_out[0]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[2]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair667" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXNOTINTABLE_ALIGNED[2]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxnotintable_out[1]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[2]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair657" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXNOTINTABLE_ALIGNED[2]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXNOTINTABLE_REG[2]),
        .O(\n_0_RXNOTINTABLE_ALIGNED[2]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair658" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXNOTINTABLE_ALIGNED[2]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(RXNOTINTABLE_REG[3]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[2]_i_5 ));
LUT6 #(
    .INIT(64'h7535FF3FF5F5FFFF)) 
     \RXNOTINTABLE_ALIGNED[3]_i_1 
       (.I0(\n_0_RXNOTINTABLE_ALIGNED[3]_i_2 ),
        .I1(\n_0_RXNOTINTABLE_ALIGNED[3]_i_3 ),
        .I2(\n_0_ALIGN_SEL_REG[0]_i_2 ),
        .I3(ALIGN_SEL17_out),
        .I4(\n_0_RXNOTINTABLE_ALIGNED[3]_i_4 ),
        .I5(\n_0_RXNOTINTABLE_ALIGNED[3]_i_5 ),
        .O(\n_0_RXNOTINTABLE_ALIGNED[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair667" *) 
   LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXNOTINTABLE_ALIGNED[3]_i_2 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxnotintable_out[1]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[3]_i_2 ));
LUT5 #(
    .INIT(32'hFFFFFF1F)) 
     \RXNOTINTABLE_ALIGNED[3]_i_3 
       (.I0(ALIGN_SEL_REG[1]),
        .I1(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I2(gt0_rxnotintable_out[2]),
        .I3(ALIGN_SEL17_out),
        .I4(ALIGN_SEL15_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[3]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair655" *) 
   LUT5 #(
    .INIT(32'h1110FFFF)) 
     \RXNOTINTABLE_ALIGNED[3]_i_4 
       (.I0(ALIGN_SEL17_out),
        .I1(ALIGN_SEL15_out),
        .I2(ALIGN_SEL_REG[1]),
        .I3(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I4(RXNOTINTABLE_REG[3]),
        .O(\n_0_RXNOTINTABLE_ALIGNED[3]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair656" *) 
   LUT5 #(
    .INIT(32'hFFFF54FF)) 
     \RXNOTINTABLE_ALIGNED[3]_i_5 
       (.I0(ALIGN_SEL15_out),
        .I1(ALIGN_SEL_REG[1]),
        .I2(\n_0_ALIGN_SEL_REG[1]_i_2 ),
        .I3(gt0_rxnotintable_out[0]),
        .I4(ALIGN_SEL17_out),
        .O(\n_0_RXNOTINTABLE_ALIGNED[3]_i_5 ));
FDRE \RXNOTINTABLE_ALIGNED_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXNOTINTABLE_ALIGNED[0]_i_1 ),
        .Q(RXNOTINTABLE_CH0),
        .R(RESET));
FDRE \RXNOTINTABLE_ALIGNED_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXNOTINTABLE_ALIGNED[1]_i_1 ),
        .Q(RXNOTINTABLE_CH1),
        .R(RESET));
FDRE \RXNOTINTABLE_ALIGNED_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXNOTINTABLE_ALIGNED[2]_i_1 ),
        .Q(RXNOTINTABLE_CH2),
        .R(RESET));
FDRE \RXNOTINTABLE_ALIGNED_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_RXNOTINTABLE_ALIGNED[3]_i_1 ),
        .Q(RXNOTINTABLE_CH3),
        .R(RESET));
FDRE \RXNOTINTABLE_REG_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxnotintable_out[0]),
        .Q(RXNOTINTABLE_REG[0]),
        .R(RESET));
FDRE \RXNOTINTABLE_REG_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxnotintable_out[1]),
        .Q(RXNOTINTABLE_REG[1]),
        .R(RESET));
FDRE \RXNOTINTABLE_REG_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxnotintable_out[2]),
        .Q(RXNOTINTABLE_REG[2]),
        .R(RESET));
FDRE \RXNOTINTABLE_REG_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(gt0_rxnotintable_out[3]),
        .Q(RXNOTINTABLE_REG[3]),
        .R(RESET));
VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "AUTO_NEG" *) 
module quadsgmiiAUTO_NEG__parameterized0
   (status_vector_ch3,
    XMIT_DATA_INT,
    O1,
    O2,
    XMIT_CONFIG_INT,
    Q,
    S,
    O4,
    I4,
    I5,
    MR_LP_ADV_ABILITY,
    O5,
    O6,
    O7,
    O8,
    MR_AN_COMPLETE,
    O9,
    O10,
    MR_LINK_STATUS,
    SRESET,
    userclk2,
    RESTART_AN_REG,
    AN_ENABLE_INT,
    CLEAR_STATUS_REG,
    RX_IDLE,
    I1,
    I2,
    I3,
    RX_RUDI_INVALID,
    O3,
    RX_CONFIG_REG,
    link_timer_value_ch3,
    I6,
    I7,
    I8,
    data_out,
    RXSYNC_STATUS,
    RX_CONFIG_VALID,
    CO,
    TX_CONFIG_REG_INT1,
    I9,
    I10,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16,
    I17,
    I18,
    I19,
    I20,
    I21,
    MASK_RUDI_BUFERR_TIMER0,
    SR);
  output [5:0]status_vector_ch3;
  output XMIT_DATA_INT;
  output O1;
  output O2;
  output XMIT_CONFIG_INT;
  output [8:0]Q;
  output [0:0]S;
  output [0:0]O4;
  output [0:0]I4;
  output [0:0]I5;
  output [1:0]MR_LP_ADV_ABILITY;
  output [15:0]O5;
  output O6;
  output O7;
  output O8;
  output MR_AN_COMPLETE;
  output [15:0]O9;
  output [8:0]O10;
  output MR_LINK_STATUS;
  input SRESET;
  input userclk2;
  input RESTART_AN_REG;
  input AN_ENABLE_INT;
  input CLEAR_STATUS_REG;
  input RX_IDLE;
  input I1;
  input I2;
  input I3;
  input RX_RUDI_INVALID;
  input [0:0]O3;
  input [15:0]RX_CONFIG_REG;
  input [8:0]link_timer_value_ch3;
  input [2:0]I6;
  input I7;
  input I8;
  input data_out;
  input RXSYNC_STATUS;
  input RX_CONFIG_VALID;
  input [0:0]CO;
  input TX_CONFIG_REG_INT1;
  input I9;
  input I10;
  input I11;
  input I12;
  input I13;
  input I14;
  input I15;
  input I16;
  input I17;
  input I18;
  input I19;
  input I20;
  input I21;
  input MASK_RUDI_BUFERR_TIMER0;
  input [0:0]SR;

  wire \<const0> ;
  wire \<const1> ;
  wire ABILITY_MATCH;
  wire ABILITY_MATCH_2;
  wire ACKNOWLEDGE_MATCH_2;
  wire ACKNOWLEDGE_MATCH_3;
  wire AN_ENABLE_INT;
  wire AN_SYNC_STATUS;
  wire CLEAR_STATUS_REG;
  wire CLEAR_STATUS_REG1;
  wire CLEAR_STATUS_REG2;
  wire [0:0]CO;
  wire CONFIG_REG_MATCH_COMB;
  wire CONSISTENCY_MATCH;
  wire CONSISTENCY_MATCH_COMB;
  wire GENERATE_REMOTE_FAULT;
  wire GENERATE_REMOTE_FAULT0;
  wire I1;
  wire I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I18;
  wire I19;
  wire I2;
  wire I20;
  wire I21;
  wire I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire [2:0]I6;
  wire I7;
  wire I8;
  wire I9;
  wire IDLE_INSERTED;
  wire IDLE_INSERTED0;
  wire IDLE_INSERTED_REG1;
  wire IDLE_INSERTED_REG2;
  wire IDLE_INSERTED_REG3;
  wire IDLE_INSERTED_REG30;
  wire IDLE_INSERTED_REG4;
  wire IDLE_MATCH;
  wire IDLE_MATCH_2;
  wire IDLE_REMOVED;
  wire IDLE_REMOVED0;
  wire IDLE_REMOVED_REG1;
  wire IDLE_REMOVED_REG2;
  wire LINK_TIMER_DONE;
  wire LINK_TIMER_SATURATED;
  wire LINK_TIMER_SATURATED_COMB;
  wire [8:0]LINK_TIMER_reg__0;
  wire [8:0]MASK_RUDI_BUFERR_TIMER;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MR_AN_COMPLETE;
  wire MR_AN_ENABLE_CHANGE;
  wire MR_AN_ENABLE_CHANGE0;
  wire MR_AN_ENABLE_REG1;
  wire MR_AN_ENABLE_REG2;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire MR_RESTART_AN_SET_REG1;
  wire MR_RESTART_AN_SET_REG2;
  wire O1;
  wire [8:0]O10;
  wire O2;
  wire [0:0]O3;
  wire [0:0]O4;
  wire [15:0]O5;
  wire O6;
  wire O7;
  wire O8;
  wire [15:0]O9;
  wire [3:0]PREVIOUS_STATE;
  wire PULSE4096;
  wire PULSE40960;
  wire [8:0]Q;
  wire RESTART_AN_REG;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_SNAPSHOT;
  wire RX_CONFIG_VALID;
  wire RX_IDLE;
  wire RX_IDLE_REG1;
  wire RX_IDLE_REG2;
  wire RX_RUDI_INVALID;
  wire [1:0]RX_RUDI_INVALID_DELAY;
  wire RX_RUDI_INVALID_DELAY0;
  wire RX_RUDI_INVALID_REG;
  wire [0:0]S;
  wire SGMII_PHY_STATUS1_out;
  wire [0:0]SR;
  wire SRESET;
  wire START_LINK_TIMER;
  wire START_LINK_TIMER_REG;
  wire START_LINK_TIMER_REG2;
  wire SYNC_STATUS_HELD;
  wire TIMER4096_MSB_REG;
  wire TOGGLE_RX;
  wire TOGGLE_TX;
  wire TX_CONFIG_REG_INT1;
  wire XMIT_CONFIG_INT;
  wire XMIT_DATA_INT;
  wire XMIT_DATA_INT0;
  wire data_out;
  wire [8:0]link_timer_value_ch3;
  wire n_0_ABILITY_MATCH_2_i_1__2;
  wire n_0_ABILITY_MATCH_i_1__2;
  wire n_0_ACKNOWLEDGE_MATCH_2_i_1__2;
  wire n_0_ACKNOWLEDGE_MATCH_3_i_1__2;
  wire n_0_ACKNOWLEDGE_MATCH_3_reg;
  wire n_0_AN_SYNC_STATUS_i_1__2;
  wire \n_0_BASEX_REMOTE_FAULT[1]_i_1__2 ;
  wire n_0_GENERATE_REMOTE_FAULT_i_2__2;
  wire n_0_IDLE_MATCH_2_i_1__2;
  wire n_0_IDLE_MATCH_i_1__2;
  wire \n_0_LINK_TIMER[8]_i_1__2 ;
  wire \n_0_LINK_TIMER[8]_i_3__2 ;
  wire n_0_LINK_TIMER_DONE_i_1__2;
  wire n_0_LINK_TIMER_DONE_i_2__2;
  wire n_0_LINK_TIMER_DONE_i_3__2;
  wire n_0_LINK_TIMER_SATURATED_i_2__2;
  wire n_0_LINK_TIMER_SATURATED_i_3__2;
  wire n_0_LINK_TIMER_SATURATED_i_4__2;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1__2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__2 ;
  wire n_0_MASK_RUDI_BUFERR_i_1__2;
  wire n_0_MASK_RUDI_BUFERR_reg;
  wire n_0_MASK_RUDI_CLKCOR_i_1__2;
  wire n_0_MASK_RUDI_CLKCOR_i_2__2;
  wire n_0_MASK_RUDI_CLKCOR_reg;
  wire n_0_MR_AN_COMPLETE_i_1__2;
  wire n_0_MR_LINK_STATUS_i_1__2;
  wire \n_0_MR_LP_ADV_ABILITY_INT[11]_i_1__2 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[12]_i_1__2 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[13]_i_1__2 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[15]_i_1__2 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[16]_i_1__2 ;
  wire n_0_MR_REMOTE_FAULT_i_1__2;
  wire n_0_MR_RESTART_AN_INT_i_1__2;
  wire n_0_MR_RESTART_AN_INT_i_2__2;
  wire n_0_MR_RESTART_AN_INT_reg;
  wire \n_0_RX_CONFIG_REG_REG_reg[12] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[13] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[6] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[7] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[8] ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_3__2 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_4__2 ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[12] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[13] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[15] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[6] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[7] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[8] ;
  wire n_0_SGMII_PHY_STATUS_i_1__2;
  wire \n_0_SGMII_SPEED[0]_i_1__2 ;
  wire \n_0_SGMII_SPEED[1]_i_1__2 ;
  wire n_0_START_LINK_TIMER_REG_i_2__2;
  wire n_0_START_LINK_TIMER_REG_i_3__2;
  wire n_0_START_LINK_TIMER_REG_i_4__2;
  wire n_0_START_LINK_TIMER_REG_i_5__2;
  wire \n_0_STATE[0]_i_1__2 ;
  wire \n_0_STATE[0]_i_2__2 ;
  wire \n_0_STATE[0]_i_3__2 ;
  wire \n_0_STATE[0]_i_4__2 ;
  wire \n_0_STATE[0]_i_5__2 ;
  wire \n_0_STATE[1]_i_1__2 ;
  wire \n_0_STATE[1]_i_2__2 ;
  wire \n_0_STATE[1]_i_3__2 ;
  wire \n_0_STATE[1]_i_4__2 ;
  wire \n_0_STATE[2]_i_1__2 ;
  wire \n_0_STATE[2]_i_2__2 ;
  wire \n_0_STATE[2]_i_3__2 ;
  wire \n_0_STATE[2]_i_4__2 ;
  wire \n_0_STATE[3]_i_1__2 ;
  wire \n_0_STATE[3]_i_2__2 ;
  wire \n_0_STATE[3]_i_3__2 ;
  wire \n_0_STATE[3]_i_4__2 ;
  wire \n_0_STATE_reg[0] ;
  wire \n_0_STATE_reg[1] ;
  wire \n_0_STATE_reg[2] ;
  wire \n_0_STATE_reg[3] ;
  wire n_0_SYNC_STATUS_HELD_i_1__2;
  wire \n_0_TIMER4096[0]_i_2__2 ;
  wire \n_0_TIMER4096[0]_i_3__2 ;
  wire \n_0_TIMER4096[0]_i_4__2 ;
  wire \n_0_TIMER4096[0]_i_5__2 ;
  wire \n_0_TIMER4096[4]_i_2__2 ;
  wire \n_0_TIMER4096[4]_i_3__2 ;
  wire \n_0_TIMER4096[4]_i_4__2 ;
  wire \n_0_TIMER4096[4]_i_5__2 ;
  wire \n_0_TIMER4096[8]_i_2__2 ;
  wire \n_0_TIMER4096[8]_i_3__2 ;
  wire \n_0_TIMER4096[8]_i_4__2 ;
  wire \n_0_TIMER4096[8]_i_5__2 ;
  wire \n_0_TIMER4096_reg[0] ;
  wire \n_0_TIMER4096_reg[0]_i_1__2 ;
  wire \n_0_TIMER4096_reg[10] ;
  wire \n_0_TIMER4096_reg[11] ;
  wire \n_0_TIMER4096_reg[1] ;
  wire \n_0_TIMER4096_reg[2] ;
  wire \n_0_TIMER4096_reg[3] ;
  wire \n_0_TIMER4096_reg[4] ;
  wire \n_0_TIMER4096_reg[4]_i_1__2 ;
  wire \n_0_TIMER4096_reg[5] ;
  wire \n_0_TIMER4096_reg[6] ;
  wire \n_0_TIMER4096_reg[7] ;
  wire \n_0_TIMER4096_reg[8] ;
  wire \n_0_TIMER4096_reg[9] ;
  wire n_0_TOGGLE_RX_i_1__2;
  wire n_0_TOGGLE_TX_i_1__2;
  wire \n_0_TX_CONFIG_REG_INT[0]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[10]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[11]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[12]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[13]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[14]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[15]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[15]_i_2__2 ;
  wire \n_0_TX_CONFIG_REG_INT[1]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[2]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[3]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[4]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[5]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[6]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[7]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[8]_i_1__2 ;
  wire \n_0_TX_CONFIG_REG_INT[9]_i_1__2 ;
  wire n_0_XMIT_CONFIG_INT_i_1__2;
  wire n_0_XMIT_CONFIG_INT_i_2__6;
  wire \n_1_TIMER4096_reg[0]_i_1__2 ;
  wire \n_1_TIMER4096_reg[4]_i_1__2 ;
  wire \n_1_TIMER4096_reg[8]_i_1__2 ;
  wire n_2_LINK_TIMER_SATURATED_reg_i_1__2;
  wire \n_2_TIMER4096_reg[0]_i_1__2 ;
  wire \n_2_TIMER4096_reg[4]_i_1__2 ;
  wire \n_2_TIMER4096_reg[8]_i_1__2 ;
  wire n_3_LINK_TIMER_SATURATED_reg_i_1__2;
  wire \n_3_TIMER4096_reg[0]_i_1__2 ;
  wire \n_3_TIMER4096_reg[4]_i_1__2 ;
  wire \n_3_TIMER4096_reg[8]_i_1__2 ;
  wire \n_4_TIMER4096_reg[0]_i_1__2 ;
  wire \n_4_TIMER4096_reg[4]_i_1__2 ;
  wire \n_4_TIMER4096_reg[8]_i_1__2 ;
  wire \n_5_TIMER4096_reg[0]_i_1__2 ;
  wire \n_5_TIMER4096_reg[4]_i_1__2 ;
  wire \n_5_TIMER4096_reg[8]_i_1__2 ;
  wire \n_6_TIMER4096_reg[0]_i_1__2 ;
  wire \n_6_TIMER4096_reg[4]_i_1__2 ;
  wire \n_6_TIMER4096_reg[8]_i_1__2 ;
  wire \n_7_TIMER4096_reg[0]_i_1__2 ;
  wire \n_7_TIMER4096_reg[4]_i_1__2 ;
  wire \n_7_TIMER4096_reg[8]_i_1__2 ;
  wire p_0_in0_in;
  wire p_0_in44_in;
  wire [8:0]plusOp;
  wire [5:0]status_vector_ch3;
  wire userclk2;
  wire [3:3]NLW_LINK_TIMER_SATURATED_reg_i_1__2_CO_UNCONNECTED;
  wire [3:0]NLW_LINK_TIMER_SATURATED_reg_i_1__2_O_UNCONNECTED;
  wire [3:3]\NLW_TIMER4096_reg[8]_i_1__2_CO_UNCONNECTED ;

LUT6 #(
    .INIT(64'h00000000000000E2)) 
     ABILITY_MATCH_2_i_1__2
       (.I0(ABILITY_MATCH_2),
        .I1(RX_CONFIG_VALID),
        .I2(CONFIG_REG_MATCH_COMB),
        .I3(RX_IDLE),
        .I4(n_0_MASK_RUDI_BUFERR_reg),
        .I5(SRESET),
        .O(n_0_ABILITY_MATCH_2_i_1__2));
LUT4 #(
    .INIT(16'h2002)) 
     ABILITY_MATCH_2_i_2__2
       (.I0(CO),
        .I1(O2),
        .I2(RX_CONFIG_REG[15]),
        .I3(p_0_in0_in),
        .O(CONFIG_REG_MATCH_COMB));
FDRE ABILITY_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ABILITY_MATCH_2_i_1__2),
        .Q(ABILITY_MATCH_2),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h00008F80)) 
     ABILITY_MATCH_i_1__2
       (.I0(CONFIG_REG_MATCH_COMB),
        .I1(ABILITY_MATCH_2),
        .I2(RX_CONFIG_VALID),
        .I3(ABILITY_MATCH),
        .I4(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ABILITY_MATCH_i_1__2));
(* SOFT_HLUTNM = "soft_lutpair518" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     ABILITY_MATCH_i_2__2
       (.I0(SRESET),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(RX_IDLE),
        .O(ACKNOWLEDGE_MATCH_3));
FDRE ABILITY_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ABILITY_MATCH_i_1__2),
        .Q(ABILITY_MATCH),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h0000E222)) 
     ACKNOWLEDGE_MATCH_2_i_1__2
       (.I0(ACKNOWLEDGE_MATCH_2),
        .I1(RX_CONFIG_VALID),
        .I2(p_0_in44_in),
        .I3(RX_CONFIG_REG[14]),
        .I4(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ACKNOWLEDGE_MATCH_2_i_1__2));
FDRE ACKNOWLEDGE_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ACKNOWLEDGE_MATCH_2_i_1__2),
        .Q(ACKNOWLEDGE_MATCH_2),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000E2222222)) 
     ACKNOWLEDGE_MATCH_3_i_1__2
       (.I0(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I1(RX_CONFIG_VALID),
        .I2(RX_CONFIG_REG[14]),
        .I3(p_0_in44_in),
        .I4(ACKNOWLEDGE_MATCH_2),
        .I5(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ACKNOWLEDGE_MATCH_3_i_1__2));
FDRE ACKNOWLEDGE_MATCH_3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ACKNOWLEDGE_MATCH_3_i_1__2),
        .Q(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hFFBFFF80)) 
     AN_SYNC_STATUS_i_1__2
       (.I0(SYNC_STATUS_HELD),
        .I1(PULSE4096),
        .I2(LINK_TIMER_SATURATED),
        .I3(RXSYNC_STATUS),
        .I4(AN_SYNC_STATUS),
        .O(n_0_AN_SYNC_STATUS_i_1__2));
FDRE AN_SYNC_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_AN_SYNC_STATUS_i_1__2),
        .Q(AN_SYNC_STATUS),
        .R(SRESET));
LUT4 #(
    .INIT(16'h030A)) 
     \BASEX_REMOTE_FAULT[1]_i_1__2 
       (.I0(status_vector_ch3[2]),
        .I1(RX_CONFIG_REG[15]),
        .I2(SRESET),
        .I3(SGMII_PHY_STATUS1_out),
        .O(\n_0_BASEX_REMOTE_FAULT[1]_i_1__2 ));
FDRE \BASEX_REMOTE_FAULT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_BASEX_REMOTE_FAULT[1]_i_1__2 ),
        .Q(status_vector_ch3[2]),
        .R(\<const0> ));
FDRE CLEAR_STATUS_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CLEAR_STATUS_REG),
        .Q(CLEAR_STATUS_REG1),
        .R(SRESET));
FDRE CLEAR_STATUS_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CLEAR_STATUS_REG1),
        .Q(CLEAR_STATUS_REG2),
        .R(SRESET));
LUT3 #(
    .INIT(8'h82)) 
     CONSISTENCY_MATCH_i_1__2
       (.I0(O3),
        .I1(\n_0_RX_CONFIG_SNAPSHOT_reg[15] ),
        .I2(RX_CONFIG_REG[15]),
        .O(CONSISTENCY_MATCH_COMB));
LUT4 #(
    .INIT(16'h9009)) 
     CONSISTENCY_MATCH_i_4__2
       (.I0(\n_0_RX_CONFIG_SNAPSHOT_reg[13] ),
        .I1(RX_CONFIG_REG[13]),
        .I2(\n_0_RX_CONFIG_SNAPSHOT_reg[12] ),
        .I3(RX_CONFIG_REG[12]),
        .O(I5));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_6__2
       (.I0(\n_0_RX_CONFIG_SNAPSHOT_reg[6] ),
        .I1(RX_CONFIG_REG[6]),
        .I2(RX_CONFIG_REG[7]),
        .I3(\n_0_RX_CONFIG_SNAPSHOT_reg[7] ),
        .I4(RX_CONFIG_REG[8]),
        .I5(\n_0_RX_CONFIG_SNAPSHOT_reg[8] ),
        .O(I4));
FDRE CONSISTENCY_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CONSISTENCY_MATCH_COMB),
        .Q(CONSISTENCY_MATCH),
        .R(SRESET));
LUT6 #(
    .INIT(64'h0000000004000000)) 
     GENERATE_REMOTE_FAULT_i_1__2
       (.I0(\n_0_STATE[3]_i_2__2 ),
        .I1(\n_0_STATE[3]_i_3__2 ),
        .I2(\n_0_STATE[2]_i_2__2 ),
        .I3(n_0_START_LINK_TIMER_REG_i_3__2),
        .I4(n_0_GENERATE_REMOTE_FAULT_i_2__2),
        .I5(\n_0_STATE[1]_i_2__2 ),
        .O(GENERATE_REMOTE_FAULT0));
(* SOFT_HLUTNM = "soft_lutpair521" *) 
   LUT2 #(
    .INIT(4'h2)) 
     GENERATE_REMOTE_FAULT_i_2__2
       (.I0(\n_0_STATE_reg[0] ),
        .I1(\n_0_STATE_reg[3] ),
        .O(n_0_GENERATE_REMOTE_FAULT_i_2__2));
FDRE GENERATE_REMOTE_FAULT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(GENERATE_REMOTE_FAULT0),
        .Q(GENERATE_REMOTE_FAULT),
        .R(SRESET));
GND GND
       (.G(\<const0> ));
FDRE IDLE_INSERTED_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED),
        .Q(IDLE_INSERTED_REG1),
        .R(SRESET));
FDRE IDLE_INSERTED_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG1),
        .Q(IDLE_INSERTED_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair509" *) 
   LUT2 #(
    .INIT(4'h2)) 
     IDLE_INSERTED_REG3_i_1__2
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE_REG2),
        .O(IDLE_INSERTED_REG30));
FDRE IDLE_INSERTED_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG30),
        .Q(IDLE_INSERTED_REG3),
        .R(SRESET));
FDRE IDLE_INSERTED_REG4_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG3),
        .Q(IDLE_INSERTED_REG4),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair512" *) 
   LUT4 #(
    .INIT(16'h4000)) 
     IDLE_INSERTED_i_1__2
       (.I0(XMIT_CONFIG_INT),
        .I1(I6[0]),
        .I2(I6[2]),
        .I3(I6[1]),
        .O(IDLE_INSERTED0));
FDRE IDLE_INSERTED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED0),
        .Q(IDLE_INSERTED),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair509" *) 
   LUT5 #(
    .INIT(32'h04FF0400)) 
     IDLE_MATCH_2_i_1__2
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE),
        .I2(IDLE_INSERTED_REG4),
        .I3(RX_IDLE_REG2),
        .I4(IDLE_MATCH_2),
        .O(n_0_IDLE_MATCH_2_i_1__2));
FDRE IDLE_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_IDLE_MATCH_2_i_1__2),
        .Q(IDLE_MATCH_2),
        .R(SRESET));
LUT6 #(
    .INIT(64'h4440FFFF44400000)) 
     IDLE_MATCH_i_1__2
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE),
        .I2(IDLE_REMOVED_REG2),
        .I3(IDLE_MATCH_2),
        .I4(RX_IDLE_REG2),
        .I5(IDLE_MATCH),
        .O(n_0_IDLE_MATCH_i_1__2));
FDRE IDLE_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_IDLE_MATCH_i_1__2),
        .Q(IDLE_MATCH),
        .R(SRESET));
FDRE IDLE_REMOVED_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED),
        .Q(IDLE_REMOVED_REG1),
        .R(SRESET));
FDRE IDLE_REMOVED_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED_REG1),
        .Q(IDLE_REMOVED_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair512" *) 
   LUT4 #(
    .INIT(16'h0100)) 
     IDLE_REMOVED_i_1__2
       (.I0(I6[2]),
        .I1(I6[1]),
        .I2(XMIT_CONFIG_INT),
        .I3(I6[0]),
        .O(IDLE_REMOVED0));
FDRE IDLE_REMOVED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED0),
        .Q(IDLE_REMOVED),
        .R(SRESET));
LUT1 #(
    .INIT(2'h1)) 
     \LINK_TIMER[0]_i_1__2 
       (.I0(LINK_TIMER_reg__0[0]),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair519" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \LINK_TIMER[1]_i_1__2 
       (.I0(LINK_TIMER_reg__0[0]),
        .I1(LINK_TIMER_reg__0[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair519" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \LINK_TIMER[2]_i_1__2 
       (.I0(LINK_TIMER_reg__0[2]),
        .I1(LINK_TIMER_reg__0[1]),
        .I2(LINK_TIMER_reg__0[0]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair506" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \LINK_TIMER[3]_i_1__2 
       (.I0(LINK_TIMER_reg__0[3]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(LINK_TIMER_reg__0[1]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair506" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \LINK_TIMER[4]_i_1__2 
       (.I0(LINK_TIMER_reg__0[4]),
        .I1(LINK_TIMER_reg__0[3]),
        .I2(LINK_TIMER_reg__0[1]),
        .I3(LINK_TIMER_reg__0[0]),
        .I4(LINK_TIMER_reg__0[2]),
        .O(plusOp[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \LINK_TIMER[5]_i_1__2 
       (.I0(LINK_TIMER_reg__0[5]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(LINK_TIMER_reg__0[1]),
        .I4(LINK_TIMER_reg__0[3]),
        .I5(LINK_TIMER_reg__0[4]),
        .O(plusOp[5]));
LUT2 #(
    .INIT(4'h6)) 
     \LINK_TIMER[6]_i_1__2 
       (.I0(LINK_TIMER_reg__0[6]),
        .I1(\n_0_LINK_TIMER[8]_i_3__2 ),
        .O(plusOp[6]));
(* SOFT_HLUTNM = "soft_lutpair514" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \LINK_TIMER[7]_i_1__2 
       (.I0(LINK_TIMER_reg__0[7]),
        .I1(\n_0_LINK_TIMER[8]_i_3__2 ),
        .I2(LINK_TIMER_reg__0[6]),
        .O(plusOp[7]));
LUT4 #(
    .INIT(16'hFFEA)) 
     \LINK_TIMER[8]_i_1__2 
       (.I0(START_LINK_TIMER_REG),
        .I1(LINK_TIMER_SATURATED),
        .I2(PULSE4096),
        .I3(SRESET),
        .O(\n_0_LINK_TIMER[8]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair514" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \LINK_TIMER[8]_i_2__2 
       (.I0(LINK_TIMER_reg__0[8]),
        .I1(LINK_TIMER_reg__0[6]),
        .I2(\n_0_LINK_TIMER[8]_i_3__2 ),
        .I3(LINK_TIMER_reg__0[7]),
        .O(plusOp[8]));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     \LINK_TIMER[8]_i_3__2 
       (.I0(LINK_TIMER_reg__0[5]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(LINK_TIMER_reg__0[1]),
        .I4(LINK_TIMER_reg__0[3]),
        .I5(LINK_TIMER_reg__0[4]),
        .O(\n_0_LINK_TIMER[8]_i_3__2 ));
LUT6 #(
    .INIT(64'h0302000200000000)) 
     LINK_TIMER_DONE_i_1__2
       (.I0(LINK_TIMER_SATURATED),
        .I1(n_0_LINK_TIMER_DONE_i_2__2),
        .I2(n_0_START_LINK_TIMER_REG_i_2__2),
        .I3(LINK_TIMER_DONE),
        .I4(n_0_LINK_TIMER_DONE_i_3__2),
        .I5(\n_0_STATE[3]_i_3__2 ),
        .O(n_0_LINK_TIMER_DONE_i_1__2));
(* SOFT_HLUTNM = "soft_lutpair518" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     LINK_TIMER_DONE_i_2__2
       (.I0(START_LINK_TIMER_REG),
        .I1(START_LINK_TIMER_REG2),
        .I2(SRESET),
        .O(n_0_LINK_TIMER_DONE_i_2__2));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF8F)) 
     LINK_TIMER_DONE_i_3__2
       (.I0(ABILITY_MATCH),
        .I1(O1),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[3] ),
        .I5(\n_0_STATE_reg[0] ),
        .O(n_0_LINK_TIMER_DONE_i_3__2));
FDRE LINK_TIMER_DONE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_LINK_TIMER_DONE_i_1__2),
        .Q(LINK_TIMER_DONE),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_2__2
       (.I0(LINK_TIMER_reg__0[6]),
        .I1(link_timer_value_ch3[6]),
        .I2(LINK_TIMER_reg__0[7]),
        .I3(link_timer_value_ch3[7]),
        .I4(link_timer_value_ch3[8]),
        .I5(LINK_TIMER_reg__0[8]),
        .O(n_0_LINK_TIMER_SATURATED_i_2__2));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_3__2
       (.I0(link_timer_value_ch3[3]),
        .I1(LINK_TIMER_reg__0[3]),
        .I2(LINK_TIMER_reg__0[4]),
        .I3(link_timer_value_ch3[4]),
        .I4(LINK_TIMER_reg__0[5]),
        .I5(link_timer_value_ch3[5]),
        .O(n_0_LINK_TIMER_SATURATED_i_3__2));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_4__2
       (.I0(link_timer_value_ch3[2]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(link_timer_value_ch3[0]),
        .I4(LINK_TIMER_reg__0[1]),
        .I5(link_timer_value_ch3[1]),
        .O(n_0_LINK_TIMER_SATURATED_i_4__2));
FDRE LINK_TIMER_SATURATED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(LINK_TIMER_SATURATED_COMB),
        .Q(LINK_TIMER_SATURATED),
        .R(SRESET));
CARRY4 LINK_TIMER_SATURATED_reg_i_1__2
       (.CI(\<const0> ),
        .CO({NLW_LINK_TIMER_SATURATED_reg_i_1__2_CO_UNCONNECTED[3],LINK_TIMER_SATURATED_COMB,n_2_LINK_TIMER_SATURATED_reg_i_1__2,n_3_LINK_TIMER_SATURATED_reg_i_1__2}),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_LINK_TIMER_SATURATED_reg_i_1__2_O_UNCONNECTED[3:0]),
        .S({\<const0> ,n_0_LINK_TIMER_SATURATED_i_2__2,n_0_LINK_TIMER_SATURATED_i_3__2,n_0_LINK_TIMER_SATURATED_i_4__2}));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[0] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[0]),
        .Q(LINK_TIMER_reg__0[0]),
        .R(\n_0_LINK_TIMER[8]_i_1__2 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[1] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[1]),
        .Q(LINK_TIMER_reg__0[1]),
        .R(\n_0_LINK_TIMER[8]_i_1__2 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[2] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[2]),
        .Q(LINK_TIMER_reg__0[2]),
        .R(\n_0_LINK_TIMER[8]_i_1__2 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[3] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[3]),
        .Q(LINK_TIMER_reg__0[3]),
        .R(\n_0_LINK_TIMER[8]_i_1__2 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[4] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[4]),
        .Q(LINK_TIMER_reg__0[4]),
        .R(\n_0_LINK_TIMER[8]_i_1__2 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[5] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[5]),
        .Q(LINK_TIMER_reg__0[5]),
        .R(\n_0_LINK_TIMER[8]_i_1__2 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[6] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[6]),
        .Q(LINK_TIMER_reg__0[6]),
        .R(\n_0_LINK_TIMER[8]_i_1__2 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[7] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[7]),
        .Q(LINK_TIMER_reg__0[7]),
        .R(\n_0_LINK_TIMER[8]_i_1__2 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[8] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[8]),
        .Q(LINK_TIMER_reg__0[8]),
        .R(\n_0_LINK_TIMER[8]_i_1__2 ));
LUT5 #(
    .INIT(32'hDF0000DF)) 
     \MASK_RUDI_BUFERR_TIMER[0]_i_1__2 
       (.I0(data_out),
        .I1(I8),
        .I2(I7),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__2 ),
        .I4(MASK_RUDI_BUFERR_TIMER[0]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1__2 ));
LUT6 #(
    .INIT(64'hF3FF51550000A2AA)) 
     \MASK_RUDI_BUFERR_TIMER[1]_i_1__2 
       (.I0(MASK_RUDI_BUFERR_TIMER[0]),
        .I1(data_out),
        .I2(I8),
        .I3(I7),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__2 ),
        .I5(MASK_RUDI_BUFERR_TIMER[1]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1__2 ));
LUT5 #(
    .INIT(32'h0F070008)) 
     \MASK_RUDI_BUFERR_TIMER[2]_i_1__2 
       (.I0(MASK_RUDI_BUFERR_TIMER[1]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER0),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__2 ),
        .I4(MASK_RUDI_BUFERR_TIMER[2]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1__2 ));
LUT6 #(
    .INIT(64'h00FF007F00000080)) 
     \MASK_RUDI_BUFERR_TIMER[3]_i_1__2 
       (.I0(MASK_RUDI_BUFERR_TIMER[2]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER[1]),
        .I3(MASK_RUDI_BUFERR_TIMER0),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__2 ),
        .I5(MASK_RUDI_BUFERR_TIMER[3]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1__2 ));
LUT6 #(
    .INIT(64'hF3FFA2AA00005155)) 
     \MASK_RUDI_BUFERR_TIMER[4]_i_1__2 
       (.I0(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__2 ),
        .I1(data_out),
        .I2(I8),
        .I3(I7),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__2 ),
        .I5(MASK_RUDI_BUFERR_TIMER[4]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1__2 ));
LUT5 #(
    .INIT(32'h0F0D0002)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_1__2 
       (.I0(MASK_RUDI_BUFERR_TIMER[4]),
        .I1(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__2 ),
        .I2(MASK_RUDI_BUFERR_TIMER0),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__2 ),
        .I4(MASK_RUDI_BUFERR_TIMER[5]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1__2 ));
LUT4 #(
    .INIT(16'h7FFF)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_2__2 
       (.I0(MASK_RUDI_BUFERR_TIMER[2]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER[1]),
        .I3(MASK_RUDI_BUFERR_TIMER[3]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__2 ));
(* SOFT_HLUTNM = "soft_lutpair510" *) 
   LUT4 #(
    .INIT(16'h0800)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_3__2 
       (.I0(MASK_RUDI_BUFERR_TIMER[8]),
        .I1(MASK_RUDI_BUFERR_TIMER[7]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__2 ),
        .I3(MASK_RUDI_BUFERR_TIMER[6]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair510" *) 
   LUT5 #(
    .INIT(32'h45414141)) 
     \MASK_RUDI_BUFERR_TIMER[6]_i_1__2 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__2 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair508" *) 
   LUT5 #(
    .INIT(32'h55045104)) 
     \MASK_RUDI_BUFERR_TIMER[7]_i_1__2 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__2 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair508" *) 
   LUT5 #(
    .INIT(32'h55550400)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_1__2 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__2 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1__2 ));
LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_3__2 
       (.I0(MASK_RUDI_BUFERR_TIMER[4]),
        .I1(MASK_RUDI_BUFERR_TIMER[2]),
        .I2(MASK_RUDI_BUFERR_TIMER[0]),
        .I3(MASK_RUDI_BUFERR_TIMER[1]),
        .I4(MASK_RUDI_BUFERR_TIMER[3]),
        .I5(MASK_RUDI_BUFERR_TIMER[5]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__2 ));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1__2 ),
        .Q(MASK_RUDI_BUFERR_TIMER[0]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1__2 ),
        .Q(MASK_RUDI_BUFERR_TIMER[1]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1__2 ),
        .Q(MASK_RUDI_BUFERR_TIMER[2]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1__2 ),
        .Q(MASK_RUDI_BUFERR_TIMER[3]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1__2 ),
        .Q(MASK_RUDI_BUFERR_TIMER[4]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1__2 ),
        .Q(MASK_RUDI_BUFERR_TIMER[5]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1__2 ),
        .Q(MASK_RUDI_BUFERR_TIMER[6]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1__2 ),
        .Q(MASK_RUDI_BUFERR_TIMER[7]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1__2 ),
        .Q(MASK_RUDI_BUFERR_TIMER[8]),
        .S(SRESET));
LUT6 #(
    .INIT(64'h00005D5500000C00)) 
     MASK_RUDI_BUFERR_i_1__2
       (.I0(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__2 ),
        .I1(I7),
        .I2(I8),
        .I3(data_out),
        .I4(SRESET),
        .I5(n_0_MASK_RUDI_BUFERR_reg),
        .O(n_0_MASK_RUDI_BUFERR_i_1__2));
FDRE MASK_RUDI_BUFERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MASK_RUDI_BUFERR_i_1__2),
        .Q(n_0_MASK_RUDI_BUFERR_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0000BF0000000F00)) 
     MASK_RUDI_CLKCOR_i_1__2
       (.I0(RX_RUDI_INVALID),
        .I1(RX_RUDI_INVALID_REG),
        .I2(n_0_MASK_RUDI_CLKCOR_i_2__2),
        .I3(RXSYNC_STATUS),
        .I4(SRESET),
        .I5(n_0_MASK_RUDI_CLKCOR_reg),
        .O(n_0_MASK_RUDI_CLKCOR_i_1__2));
LUT3 #(
    .INIT(8'h01)) 
     MASK_RUDI_CLKCOR_i_2__2
       (.I0(I6[2]),
        .I1(I6[1]),
        .I2(I6[0]),
        .O(n_0_MASK_RUDI_CLKCOR_i_2__2));
FDRE MASK_RUDI_CLKCOR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MASK_RUDI_CLKCOR_i_1__2),
        .Q(n_0_MASK_RUDI_CLKCOR_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2222322222202220)) 
     MR_AN_COMPLETE_i_1__2
       (.I0(MR_AN_COMPLETE),
        .I1(SRESET),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[3] ),
        .I5(\n_0_STATE_reg[0] ),
        .O(n_0_MR_AN_COMPLETE_i_1__2));
FDRE MR_AN_COMPLETE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_AN_COMPLETE_i_1__2),
        .Q(MR_AN_COMPLETE),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h6)) 
     MR_AN_ENABLE_CHANGE_i_1__2
       (.I0(MR_AN_ENABLE_REG1),
        .I1(MR_AN_ENABLE_REG2),
        .O(MR_AN_ENABLE_CHANGE0));
FDRE MR_AN_ENABLE_CHANGE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_AN_ENABLE_CHANGE0),
        .Q(MR_AN_ENABLE_CHANGE),
        .R(SRESET));
FDRE MR_AN_ENABLE_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(AN_ENABLE_INT),
        .Q(MR_AN_ENABLE_REG1),
        .R(SRESET));
FDRE MR_AN_ENABLE_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_AN_ENABLE_REG1),
        .Q(MR_AN_ENABLE_REG2),
        .R(SRESET));
LUT5 #(
    .INIT(32'h0000BA00)) 
     MR_LINK_STATUS_i_1__2
       (.I0(MR_LINK_STATUS),
        .I1(CLEAR_STATUS_REG2),
        .I2(CLEAR_STATUS_REG1),
        .I3(XMIT_DATA_INT),
        .I4(SRESET),
        .O(n_0_MR_LINK_STATUS_i_1__2));
FDRE MR_LINK_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_LINK_STATUS_i_1__2),
        .Q(MR_LINK_STATUS),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[11]_i_1__2 
       (.I0(RX_CONFIG_REG[10]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O8),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[11]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair513" *) 
   LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[12]_i_1__2 
       (.I0(RX_CONFIG_REG[11]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O7),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[12]_i_1__2 ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[13]_i_1__2 
       (.I0(RX_CONFIG_REG[12]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(MR_LP_ADV_ABILITY[0]),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[13]_i_1__2 ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[15]_i_1__2 
       (.I0(RX_CONFIG_REG[14]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O6),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[15]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair515" *) 
   LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[16]_i_1__2 
       (.I0(RX_CONFIG_REG[15]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(MR_LP_ADV_ABILITY[1]),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[16]_i_1__2 ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[11]_i_1__2 ),
        .Q(O8),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[12]_i_1__2 ),
        .Q(O7),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[13]_i_1__2 ),
        .Q(MR_LP_ADV_ABILITY[0]),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[15]_i_1__2 ),
        .Q(O6),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[16] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[16]_i_1__2 ),
        .Q(MR_LP_ADV_ABILITY[1]),
        .R(\<const0> ));
FDRE \MR_NP_RX_INT_reg[10] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[9]),
        .Q(O9[9]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[10]),
        .Q(O9[10]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[11]),
        .Q(O9[11]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[12]),
        .Q(O9[12]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[14] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[13]),
        .Q(O9[13]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[14]),
        .Q(O9[14]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[16] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[15]),
        .Q(O9[15]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[0]),
        .Q(O9[0]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[1]),
        .Q(O9[1]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[2]),
        .Q(O9[2]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[3]),
        .Q(O9[3]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[4]),
        .Q(O9[4]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[5]),
        .Q(O9[5]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[6]),
        .Q(O9[6]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[8] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[7]),
        .Q(O9[7]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[9] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[8]),
        .Q(O9[8]),
        .R(SRESET));
LUT6 #(
    .INIT(64'h0000BBFB000000F0)) 
     MR_REMOTE_FAULT_i_1__2
       (.I0(CLEAR_STATUS_REG2),
        .I1(CLEAR_STATUS_REG1),
        .I2(GENERATE_REMOTE_FAULT),
        .I3(MR_LP_ADV_ABILITY[1]),
        .I4(SRESET),
        .I5(status_vector_ch3[5]),
        .O(n_0_MR_REMOTE_FAULT_i_1__2));
FDRE MR_REMOTE_FAULT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_REMOTE_FAULT_i_1__2),
        .Q(status_vector_ch3[5]),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h1010331000003300)) 
     MR_RESTART_AN_INT_i_1__2
       (.I0(n_0_MR_RESTART_AN_INT_i_2__2),
        .I1(SRESET),
        .I2(AN_ENABLE_INT),
        .I3(MR_RESTART_AN_SET_REG1),
        .I4(MR_RESTART_AN_SET_REG2),
        .I5(n_0_MR_RESTART_AN_INT_reg),
        .O(n_0_MR_RESTART_AN_INT_i_1__2));
(* SOFT_HLUTNM = "soft_lutpair507" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     MR_RESTART_AN_INT_i_2__2
       (.I0(\n_0_STATE_reg[0] ),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .O(n_0_MR_RESTART_AN_INT_i_2__2));
FDRE MR_RESTART_AN_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_RESTART_AN_INT_i_1__2),
        .Q(n_0_MR_RESTART_AN_INT_reg),
        .R(\<const0> ));
FDRE MR_RESTART_AN_SET_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESTART_AN_REG),
        .Q(MR_RESTART_AN_SET_REG1),
        .R(SRESET));
FDRE MR_RESTART_AN_SET_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_RESTART_AN_SET_REG1),
        .Q(MR_RESTART_AN_SET_REG2),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[0] ),
        .Q(PREVIOUS_STATE[0]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[1] ),
        .Q(PREVIOUS_STATE[1]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[2] ),
        .Q(PREVIOUS_STATE[2]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[3] ),
        .Q(PREVIOUS_STATE[3]),
        .R(SRESET));
LUT2 #(
    .INIT(4'h2)) 
     PULSE4096_i_1__2
       (.I0(TIMER4096_MSB_REG),
        .I1(\n_0_TIMER4096_reg[11] ),
        .O(PULSE40960));
FDRE PULSE4096_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(PULSE40960),
        .Q(PULSE4096),
        .R(SRESET));
FDRE RECEIVED_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I3),
        .Q(O2),
        .R(\<const0> ));
FDRE RUDI_INVALID_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY[1]),
        .Q(status_vector_ch3[0]),
        .R(SRESET));
FDRE RX_CONFIG_REG_NULL_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(O1),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_REG_reg[0] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[0]),
        .Q(Q[0]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[10] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[10]),
        .Q(Q[7]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[11] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[11]),
        .Q(Q[8]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[12] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[12]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[12] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[13] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[13]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[13] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[14] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[14]),
        .Q(p_0_in44_in),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[15] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[15]),
        .Q(p_0_in0_in),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[1] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[1]),
        .Q(Q[1]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[2] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[2]),
        .Q(Q[2]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[3] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[3]),
        .Q(Q[3]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[4] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[4]),
        .Q(Q[4]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[5] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[5]),
        .Q(Q[5]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[6] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[6]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[6] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[7] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[7]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[7] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[8] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[8]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[8] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[9] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[9]),
        .Q(Q[6]),
        .R(SR));
LUT6 #(
    .INIT(64'h0008000000000008)) 
     \RX_CONFIG_SNAPSHOT[15]_i_1__2 
       (.I0(CO),
        .I1(\n_0_RX_CONFIG_SNAPSHOT[15]_i_3__2 ),
        .I2(\n_0_RX_CONFIG_SNAPSHOT[15]_i_4__2 ),
        .I3(O2),
        .I4(RX_CONFIG_REG[15]),
        .I5(p_0_in0_in),
        .O(RX_CONFIG_SNAPSHOT));
LUT5 #(
    .INIT(32'h00000020)) 
     \RX_CONFIG_SNAPSHOT[15]_i_3__2 
       (.I0(RX_CONFIG_VALID),
        .I1(ABILITY_MATCH),
        .I2(ABILITY_MATCH_2),
        .I3(n_0_MASK_RUDI_BUFERR_reg),
        .I4(RX_IDLE),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair516" *) 
   LUT4 #(
    .INIT(16'h0040)) 
     \RX_CONFIG_SNAPSHOT[15]_i_4__2 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[0] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_4__2 ));
LUT4 #(
    .INIT(16'h9009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_6__2 
       (.I0(\n_0_RX_CONFIG_REG_REG_reg[13] ),
        .I1(RX_CONFIG_REG[13]),
        .I2(\n_0_RX_CONFIG_REG_REG_reg[12] ),
        .I3(RX_CONFIG_REG[12]),
        .O(O4));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_8__2 
       (.I0(\n_0_RX_CONFIG_REG_REG_reg[6] ),
        .I1(RX_CONFIG_REG[6]),
        .I2(RX_CONFIG_REG[7]),
        .I3(\n_0_RX_CONFIG_REG_REG_reg[7] ),
        .I4(RX_CONFIG_REG[8]),
        .I5(\n_0_RX_CONFIG_REG_REG_reg[8] ),
        .O(S));
FDRE \RX_CONFIG_SNAPSHOT_reg[0] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[0]),
        .Q(O10[0]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[10] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[10]),
        .Q(O10[7]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[11] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[11]),
        .Q(O10[8]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[12] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[12]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[12] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[13] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[13]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[13] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[15] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[15]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[15] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[1] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[1]),
        .Q(O10[1]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[2] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[2]),
        .Q(O10[2]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[3] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[3]),
        .Q(O10[3]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[4] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[4]),
        .Q(O10[4]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[5] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[5]),
        .Q(O10[5]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[6] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[6]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[6] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[7] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[7]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[7] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[8] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[8]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[8] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[9] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[9]),
        .Q(O10[6]),
        .R(SRESET));
FDRE RX_IDLE_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE),
        .Q(RX_IDLE_REG1),
        .R(SRESET));
FDRE RX_IDLE_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE_REG1),
        .Q(RX_IDLE_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair520" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \RX_RUDI_INVALID_DELAY[0]_i_1__2 
       (.I0(RX_RUDI_INVALID),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(n_0_MASK_RUDI_CLKCOR_reg),
        .O(RX_RUDI_INVALID_DELAY0));
FDRE \RX_RUDI_INVALID_DELAY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY0),
        .Q(RX_RUDI_INVALID_DELAY[0]),
        .R(SRESET));
FDRE \RX_RUDI_INVALID_DELAY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY[0]),
        .Q(RX_RUDI_INVALID_DELAY[1]),
        .R(SRESET));
FDRE RX_RUDI_INVALID_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(RX_RUDI_INVALID_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair515" *) 
   LUT4 #(
    .INIT(16'h00E2)) 
     SGMII_PHY_STATUS_i_1__2
       (.I0(status_vector_ch3[1]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(RX_CONFIG_REG[15]),
        .I3(SRESET),
        .O(n_0_SGMII_PHY_STATUS_i_1__2));
FDRE SGMII_PHY_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SGMII_PHY_STATUS_i_1__2),
        .Q(status_vector_ch3[1]),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'hB8)) 
     \SGMII_SPEED[0]_i_1__2 
       (.I0(RX_CONFIG_REG[10]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(status_vector_ch3[3]),
        .O(\n_0_SGMII_SPEED[0]_i_1__2 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SGMII_SPEED[1]_i_1__2 
       (.I0(RX_CONFIG_REG[11]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(status_vector_ch3[4]),
        .O(\n_0_SGMII_SPEED[1]_i_1__2 ));
LUT6 #(
    .INIT(64'h0008000000000000)) 
     \SGMII_SPEED[1]_i_2__2 
       (.I0(n_0_START_LINK_TIMER_REG_i_3__2),
        .I1(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I2(PREVIOUS_STATE[3]),
        .I3(PREVIOUS_STATE[2]),
        .I4(PREVIOUS_STATE[0]),
        .I5(PREVIOUS_STATE[1]),
        .O(SGMII_PHY_STATUS1_out));
FDRE \SGMII_SPEED_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_SGMII_SPEED[0]_i_1__2 ),
        .Q(status_vector_ch3[3]),
        .R(SRESET));
FDSE \SGMII_SPEED_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_SGMII_SPEED[1]_i_1__2 ),
        .Q(status_vector_ch3[4]),
        .S(SRESET));
FDRE START_LINK_TIMER_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(START_LINK_TIMER_REG),
        .Q(START_LINK_TIMER_REG2),
        .R(SRESET));
LUT6 #(
    .INIT(64'hAAAAEAAAFFFFFFFF)) 
     START_LINK_TIMER_REG_i_1__2
       (.I0(n_0_START_LINK_TIMER_REG_i_2__2),
        .I1(LINK_TIMER_DONE),
        .I2(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I3(n_0_START_LINK_TIMER_REG_i_3__2),
        .I4(n_0_START_LINK_TIMER_REG_i_4__2),
        .I5(\n_0_STATE[3]_i_3__2 ),
        .O(START_LINK_TIMER));
LUT6 #(
    .INIT(64'h0000300200000002)) 
     START_LINK_TIMER_REG_i_2__2
       (.I0(AN_ENABLE_INT),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[2] ),
        .I5(n_0_START_LINK_TIMER_REG_i_5__2),
        .O(n_0_START_LINK_TIMER_REG_i_2__2));
(* SOFT_HLUTNM = "soft_lutpair505" *) 
   LUT2 #(
    .INIT(4'h2)) 
     START_LINK_TIMER_REG_i_3__2
       (.I0(\n_0_STATE_reg[2] ),
        .I1(\n_0_STATE_reg[1] ),
        .O(n_0_START_LINK_TIMER_REG_i_3__2));
(* SOFT_HLUTNM = "soft_lutpair517" *) 
   LUT2 #(
    .INIT(4'h8)) 
     START_LINK_TIMER_REG_i_4__2
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .O(n_0_START_LINK_TIMER_REG_i_4__2));
(* SOFT_HLUTNM = "soft_lutpair517" *) 
   LUT4 #(
    .INIT(16'h0080)) 
     START_LINK_TIMER_REG_i_5__2
       (.I0(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I1(ABILITY_MATCH),
        .I2(CONSISTENCY_MATCH),
        .I3(O1),
        .O(n_0_START_LINK_TIMER_REG_i_5__2));
FDRE START_LINK_TIMER_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(START_LINK_TIMER),
        .Q(START_LINK_TIMER_REG),
        .R(SRESET));
LUT5 #(
    .INIT(32'h0000AAA2)) 
     \STATE[0]_i_1__2 
       (.I0(\n_0_STATE[3]_i_3__2 ),
        .I1(\n_0_STATE[0]_i_2__2 ),
        .I2(\n_0_STATE[0]_i_3__2 ),
        .I3(\n_0_STATE[0]_i_4__2 ),
        .I4(\n_0_STATE_reg[3] ),
        .O(\n_0_STATE[0]_i_1__2 ));
LUT6 #(
    .INIT(64'hFBF8F8FCFBFBF8FF)) 
     \STATE[0]_i_2__2 
       (.I0(n_0_START_LINK_TIMER_REG_i_4__2),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[0] ),
        .I4(LINK_TIMER_DONE),
        .I5(AN_ENABLE_INT),
        .O(\n_0_STATE[0]_i_2__2 ));
LUT6 #(
    .INIT(64'h0000000044444664)) 
     \STATE[0]_i_3__2 
       (.I0(ABILITY_MATCH),
        .I1(\n_0_STATE_reg[0] ),
        .I2(TOGGLE_RX),
        .I3(Q[8]),
        .I4(O1),
        .I5(\n_0_STATE[0]_i_5__2 ),
        .O(\n_0_STATE[0]_i_3__2 ));
LUT6 #(
    .INIT(64'h0202002002220020)) 
     \STATE[0]_i_4__2 
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(ABILITY_MATCH),
        .I3(O1),
        .I4(\n_0_STATE_reg[0] ),
        .I5(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .O(\n_0_STATE[0]_i_4__2 ));
LUT2 #(
    .INIT(4'h7)) 
     \STATE[0]_i_5__2 
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .O(\n_0_STATE[0]_i_5__2 ));
(* SOFT_HLUTNM = "soft_lutpair511" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \STATE[1]_i_1__2 
       (.I0(\n_0_STATE[3]_i_3__2 ),
        .I1(\n_0_STATE[1]_i_2__2 ),
        .O(\n_0_STATE[1]_i_1__2 ));
LUT5 #(
    .INIT(32'hAAAAAAEF)) 
     \STATE[1]_i_2__2 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE[1]_i_3__2 ),
        .I3(\n_0_STATE[1]_i_4__2 ),
        .I4(\n_0_STATE[2]_i_4__2 ),
        .O(\n_0_STATE[1]_i_2__2 ));
LUT6 #(
    .INIT(64'h57FFFF005700FF00)) 
     \STATE[1]_i_3__2 
       (.I0(ABILITY_MATCH),
        .I1(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I2(O1),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(LINK_TIMER_DONE),
        .O(\n_0_STATE[1]_i_3__2 ));
LUT6 #(
    .INIT(64'h7000000000000000)) 
     \STATE[1]_i_4__2 
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .I2(n_0_START_LINK_TIMER_REG_i_3__2),
        .I3(IDLE_MATCH),
        .I4(LINK_TIMER_DONE),
        .I5(\n_0_STATE_reg[0] ),
        .O(\n_0_STATE[1]_i_4__2 ));
LUT2 #(
    .INIT(4'h2)) 
     \STATE[2]_i_1__2 
       (.I0(\n_0_STATE[3]_i_3__2 ),
        .I1(\n_0_STATE[2]_i_2__2 ),
        .O(\n_0_STATE[2]_i_1__2 ));
LUT6 #(
    .INIT(64'hABBBBBABABABABAB)) 
     \STATE[2]_i_2__2 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE[2]_i_3__2 ),
        .I2(\n_0_STATE[2]_i_4__2 ),
        .I3(Q[8]),
        .I4(TOGGLE_RX),
        .I5(ABILITY_MATCH),
        .O(\n_0_STATE[2]_i_2__2 ));
LUT6 #(
    .INIT(64'h0F70007000700070)) 
     \STATE[2]_i_3__2 
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(n_0_START_LINK_TIMER_REG_i_5__2),
        .O(\n_0_STATE[2]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair505" *) 
   LUT5 #(
    .INIT(32'h00880888)) 
     \STATE[2]_i_4__2 
       (.I0(\n_0_STATE_reg[2] ),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(ABILITY_MATCH),
        .I4(O1),
        .O(\n_0_STATE[2]_i_4__2 ));
(* SOFT_HLUTNM = "soft_lutpair511" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \STATE[3]_i_1__2 
       (.I0(\n_0_STATE[3]_i_2__2 ),
        .I1(\n_0_STATE[3]_i_3__2 ),
        .I2(AN_SYNC_STATUS),
        .I3(AN_ENABLE_INT),
        .O(\n_0_STATE[3]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair507" *) 
   LUT5 #(
    .INIT(32'h00000203)) 
     \STATE[3]_i_2__2 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(AN_ENABLE_INT),
        .I4(\n_0_STATE_reg[2] ),
        .O(\n_0_STATE[3]_i_2__2 ));
LUT5 #(
    .INIT(32'h00000D00)) 
     \STATE[3]_i_3__2 
       (.I0(XMIT_CONFIG_INT),
        .I1(\n_0_STATE[3]_i_4__2 ),
        .I2(n_0_MR_RESTART_AN_INT_reg),
        .I3(AN_SYNC_STATUS),
        .I4(MR_AN_ENABLE_CHANGE),
        .O(\n_0_STATE[3]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair520" *) 
   LUT3 #(
    .INIT(8'hEF)) 
     \STATE[3]_i_4__2 
       (.I0(n_0_MASK_RUDI_CLKCOR_reg),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(RX_RUDI_INVALID),
        .O(\n_0_STATE[3]_i_4__2 ));
FDRE \STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[0]_i_1__2 ),
        .Q(\n_0_STATE_reg[0] ),
        .R(SRESET));
FDRE \STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[1]_i_1__2 ),
        .Q(\n_0_STATE_reg[1] ),
        .R(SRESET));
FDRE \STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[2]_i_1__2 ),
        .Q(\n_0_STATE_reg[2] ),
        .R(SRESET));
FDRE \STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[3]_i_1__2 ),
        .Q(\n_0_STATE_reg[3] ),
        .R(SRESET));
LUT5 #(
    .INIT(32'h00BF00AA)) 
     SYNC_STATUS_HELD_i_1__2
       (.I0(RXSYNC_STATUS),
        .I1(LINK_TIMER_SATURATED),
        .I2(PULSE4096),
        .I3(SRESET),
        .I4(SYNC_STATUS_HELD),
        .O(n_0_SYNC_STATUS_HELD_i_1__2));
FDRE SYNC_STATUS_HELD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_STATUS_HELD_i_1__2),
        .Q(SYNC_STATUS_HELD),
        .R(\<const0> ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_2__2 
       (.I0(\n_0_TIMER4096_reg[3] ),
        .O(\n_0_TIMER4096[0]_i_2__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_3__2 
       (.I0(\n_0_TIMER4096_reg[2] ),
        .O(\n_0_TIMER4096[0]_i_3__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_4__2 
       (.I0(\n_0_TIMER4096_reg[1] ),
        .O(\n_0_TIMER4096[0]_i_4__2 ));
LUT1 #(
    .INIT(2'h1)) 
     \TIMER4096[0]_i_5__2 
       (.I0(\n_0_TIMER4096_reg[0] ),
        .O(\n_0_TIMER4096[0]_i_5__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_2__2 
       (.I0(\n_0_TIMER4096_reg[7] ),
        .O(\n_0_TIMER4096[4]_i_2__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_3__2 
       (.I0(\n_0_TIMER4096_reg[6] ),
        .O(\n_0_TIMER4096[4]_i_3__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_4__2 
       (.I0(\n_0_TIMER4096_reg[5] ),
        .O(\n_0_TIMER4096[4]_i_4__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_5__2 
       (.I0(\n_0_TIMER4096_reg[4] ),
        .O(\n_0_TIMER4096[4]_i_5__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_2__2 
       (.I0(\n_0_TIMER4096_reg[11] ),
        .O(\n_0_TIMER4096[8]_i_2__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_3__2 
       (.I0(\n_0_TIMER4096_reg[10] ),
        .O(\n_0_TIMER4096[8]_i_3__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_4__2 
       (.I0(\n_0_TIMER4096_reg[9] ),
        .O(\n_0_TIMER4096[8]_i_4__2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_5__2 
       (.I0(\n_0_TIMER4096_reg[8] ),
        .O(\n_0_TIMER4096[8]_i_5__2 ));
FDRE TIMER4096_MSB_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TIMER4096_reg[11] ),
        .Q(TIMER4096_MSB_REG),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[0]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[0] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[0]_i_1__2 
       (.CI(\<const0> ),
        .CO({\n_0_TIMER4096_reg[0]_i_1__2 ,\n_1_TIMER4096_reg[0]_i_1__2 ,\n_2_TIMER4096_reg[0]_i_1__2 ,\n_3_TIMER4096_reg[0]_i_1__2 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .O({\n_4_TIMER4096_reg[0]_i_1__2 ,\n_5_TIMER4096_reg[0]_i_1__2 ,\n_6_TIMER4096_reg[0]_i_1__2 ,\n_7_TIMER4096_reg[0]_i_1__2 }),
        .S({\n_0_TIMER4096[0]_i_2__2 ,\n_0_TIMER4096[0]_i_3__2 ,\n_0_TIMER4096[0]_i_4__2 ,\n_0_TIMER4096[0]_i_5__2 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[8]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[10] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[8]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[11] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[0]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[1] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[0]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[2] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[0]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[3] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[4]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[4] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[4]_i_1__2 
       (.CI(\n_0_TIMER4096_reg[0]_i_1__2 ),
        .CO({\n_0_TIMER4096_reg[4]_i_1__2 ,\n_1_TIMER4096_reg[4]_i_1__2 ,\n_2_TIMER4096_reg[4]_i_1__2 ,\n_3_TIMER4096_reg[4]_i_1__2 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_TIMER4096_reg[4]_i_1__2 ,\n_5_TIMER4096_reg[4]_i_1__2 ,\n_6_TIMER4096_reg[4]_i_1__2 ,\n_7_TIMER4096_reg[4]_i_1__2 }),
        .S({\n_0_TIMER4096[4]_i_2__2 ,\n_0_TIMER4096[4]_i_3__2 ,\n_0_TIMER4096[4]_i_4__2 ,\n_0_TIMER4096[4]_i_5__2 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[4]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[5] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[4]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[6] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[4]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[7] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[8]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[8] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[8]_i_1__2 
       (.CI(\n_0_TIMER4096_reg[4]_i_1__2 ),
        .CO({\NLW_TIMER4096_reg[8]_i_1__2_CO_UNCONNECTED [3],\n_1_TIMER4096_reg[8]_i_1__2 ,\n_2_TIMER4096_reg[8]_i_1__2 ,\n_3_TIMER4096_reg[8]_i_1__2 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_TIMER4096_reg[8]_i_1__2 ,\n_5_TIMER4096_reg[8]_i_1__2 ,\n_6_TIMER4096_reg[8]_i_1__2 ,\n_7_TIMER4096_reg[8]_i_1__2 }),
        .S({\n_0_TIMER4096[8]_i_2__2 ,\n_0_TIMER4096[8]_i_3__2 ,\n_0_TIMER4096[8]_i_4__2 ,\n_0_TIMER4096[8]_i_5__2 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[8]_i_1__2 ),
        .Q(\n_0_TIMER4096_reg[9] ),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair513" *) 
   LUT4 #(
    .INIT(16'h00E2)) 
     TOGGLE_RX_i_1__2
       (.I0(TOGGLE_RX),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(RX_CONFIG_REG[11]),
        .I3(SRESET),
        .O(n_0_TOGGLE_RX_i_1__2));
FDRE TOGGLE_RX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TOGGLE_RX_i_1__2),
        .Q(TOGGLE_RX),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h000000000505AA2A)) 
     TOGGLE_TX_i_1__2
       (.I0(TOGGLE_TX),
        .I1(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(SGMII_PHY_STATUS1_out),
        .I5(SRESET),
        .O(n_0_TOGGLE_TX_i_1__2));
FDRE TOGGLE_TX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TOGGLE_TX_i_1__2),
        .Q(TOGGLE_TX),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000F8AA38AA)) 
     \TX_CONFIG_REG_INT[0]_i_1__2 
       (.I0(O5[0]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I21),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[0]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[10]_i_1__2 
       (.I0(O5[10]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I11),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[10]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[11]_i_1__2 
       (.I0(O5[11]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(TOGGLE_TX),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[11]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[12]_i_1__2 
       (.I0(O5[12]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I10),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[12]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[13]_i_1__2 
       (.I0(O5[13]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I9),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[13]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000AABA8A88)) 
     \TX_CONFIG_REG_INT[14]_i_1__2 
       (.I0(O5[14]),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[14]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[15]_i_1__2 
       (.I0(O5[15]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(TX_CONFIG_REG_INT1),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[15]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair521" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \TX_CONFIG_REG_INT[15]_i_2__2 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[0] ),
        .O(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[1]_i_1__2 
       (.I0(O5[1]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I20),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[1]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[2]_i_1__2 
       (.I0(O5[2]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I19),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[2]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[3]_i_1__2 
       (.I0(O5[3]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I18),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[3]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[4]_i_1__2 
       (.I0(O5[4]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I17),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[4]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[5]_i_1__2 
       (.I0(O5[5]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I16),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[5]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[6]_i_1__2 
       (.I0(O5[6]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I15),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[6]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[7]_i_1__2 
       (.I0(O5[7]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I14),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[7]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[8]_i_1__2 
       (.I0(O5[8]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I13),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[8]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[9]_i_1__2 
       (.I0(O5[9]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(I12),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[9]_i_1__2 ));
FDRE \TX_CONFIG_REG_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[0]_i_1__2 ),
        .Q(O5[0]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[10]_i_1__2 ),
        .Q(O5[10]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[11]_i_1__2 ),
        .Q(O5[11]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[12]_i_1__2 ),
        .Q(O5[12]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[13]_i_1__2 ),
        .Q(O5[13]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[14]_i_1__2 ),
        .Q(O5[14]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[15]_i_1__2 ),
        .Q(O5[15]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[1]_i_1__2 ),
        .Q(O5[1]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[2]_i_1__2 ),
        .Q(O5[2]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[3]_i_1__2 ),
        .Q(O5[3]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[4]_i_1__2 ),
        .Q(O5[4]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[5]_i_1__2 ),
        .Q(O5[5]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[6]_i_1__2 ),
        .Q(O5[6]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[7]_i_1__2 ),
        .Q(O5[7]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[8]_i_1__2 ),
        .Q(O5[8]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[9]_i_1__2 ),
        .Q(O5[9]),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'hFFFFFFFFABAAAAAA)) 
     XMIT_CONFIG_INT_i_1__2
       (.I0(n_0_XMIT_CONFIG_INT_i_2__6),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__2 ),
        .I4(AN_ENABLE_INT),
        .I5(SRESET),
        .O(n_0_XMIT_CONFIG_INT_i_1__2));
LUT6 #(
    .INIT(64'hAAAAA28AAAAAA288)) 
     XMIT_CONFIG_INT_i_2__6
       (.I0(XMIT_CONFIG_INT),
        .I1(\n_0_STATE_reg[0] ),
        .I2(\n_0_STATE_reg[3] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[1] ),
        .I5(AN_ENABLE_INT),
        .O(n_0_XMIT_CONFIG_INT_i_2__6));
FDRE XMIT_CONFIG_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_CONFIG_INT_i_1__2),
        .Q(XMIT_CONFIG_INT),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair516" *) 
   LUT4 #(
    .INIT(16'h0180)) 
     XMIT_DATA_INT_i_1__5
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(\n_0_STATE_reg[3] ),
        .O(XMIT_DATA_INT0));
FDRE XMIT_DATA_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(XMIT_DATA_INT0),
        .Q(XMIT_DATA_INT),
        .R(SRESET));
endmodule

(* ORIG_REF_NAME = "AUTO_NEG" *) 
module quadsgmiiAUTO_NEG__parameterized0_28
   (status_vector_ch2,
    XMIT_DATA_INT,
    O1,
    O2,
    XMIT_CONFIG_INT,
    Q,
    S,
    O4,
    I4,
    I5,
    MR_LP_ADV_ABILITY,
    O5,
    O6,
    O7,
    O8,
    MR_AN_COMPLETE,
    O9,
    O10,
    MR_LINK_STATUS,
    SRESET,
    userclk2,
    RESTART_AN_REG,
    AN_ENABLE_INT,
    CLEAR_STATUS_REG,
    RX_IDLE,
    I1,
    I2,
    I3,
    RX_RUDI_INVALID,
    O3,
    RX_CONFIG_REG,
    link_timer_value_ch2,
    I6,
    I7,
    I8,
    data_out,
    RXSYNC_STATUS,
    RX_CONFIG_VALID,
    CO,
    TX_CONFIG_REG_INT1,
    I9,
    I10,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16,
    I17,
    I18,
    I19,
    I20,
    I21,
    MASK_RUDI_BUFERR_TIMER0,
    SR);
  output [5:0]status_vector_ch2;
  output XMIT_DATA_INT;
  output O1;
  output O2;
  output XMIT_CONFIG_INT;
  output [8:0]Q;
  output [0:0]S;
  output [0:0]O4;
  output [0:0]I4;
  output [0:0]I5;
  output [1:0]MR_LP_ADV_ABILITY;
  output [15:0]O5;
  output O6;
  output O7;
  output O8;
  output MR_AN_COMPLETE;
  output [15:0]O9;
  output [8:0]O10;
  output MR_LINK_STATUS;
  input SRESET;
  input userclk2;
  input RESTART_AN_REG;
  input AN_ENABLE_INT;
  input CLEAR_STATUS_REG;
  input RX_IDLE;
  input I1;
  input I2;
  input I3;
  input RX_RUDI_INVALID;
  input [0:0]O3;
  input [15:0]RX_CONFIG_REG;
  input [8:0]link_timer_value_ch2;
  input [2:0]I6;
  input I7;
  input I8;
  input data_out;
  input RXSYNC_STATUS;
  input RX_CONFIG_VALID;
  input [0:0]CO;
  input TX_CONFIG_REG_INT1;
  input I9;
  input I10;
  input I11;
  input I12;
  input I13;
  input I14;
  input I15;
  input I16;
  input I17;
  input I18;
  input I19;
  input I20;
  input I21;
  input MASK_RUDI_BUFERR_TIMER0;
  input [0:0]SR;

  wire \<const0> ;
  wire \<const1> ;
  wire ABILITY_MATCH;
  wire ABILITY_MATCH_2;
  wire ACKNOWLEDGE_MATCH_2;
  wire ACKNOWLEDGE_MATCH_3;
  wire AN_ENABLE_INT;
  wire AN_SYNC_STATUS;
  wire CLEAR_STATUS_REG;
  wire CLEAR_STATUS_REG1;
  wire CLEAR_STATUS_REG2;
  wire [0:0]CO;
  wire CONFIG_REG_MATCH_COMB;
  wire CONSISTENCY_MATCH;
  wire CONSISTENCY_MATCH_COMB;
  wire GENERATE_REMOTE_FAULT;
  wire GENERATE_REMOTE_FAULT0;
  wire I1;
  wire I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I18;
  wire I19;
  wire I2;
  wire I20;
  wire I21;
  wire I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire [2:0]I6;
  wire I7;
  wire I8;
  wire I9;
  wire IDLE_INSERTED;
  wire IDLE_INSERTED0;
  wire IDLE_INSERTED_REG1;
  wire IDLE_INSERTED_REG2;
  wire IDLE_INSERTED_REG3;
  wire IDLE_INSERTED_REG30;
  wire IDLE_INSERTED_REG4;
  wire IDLE_MATCH;
  wire IDLE_MATCH_2;
  wire IDLE_REMOVED;
  wire IDLE_REMOVED0;
  wire IDLE_REMOVED_REG1;
  wire IDLE_REMOVED_REG2;
  wire LINK_TIMER_DONE;
  wire LINK_TIMER_SATURATED;
  wire LINK_TIMER_SATURATED_COMB;
  wire [8:0]LINK_TIMER_reg__0;
  wire [8:0]MASK_RUDI_BUFERR_TIMER;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MR_AN_COMPLETE;
  wire MR_AN_ENABLE_CHANGE;
  wire MR_AN_ENABLE_CHANGE0;
  wire MR_AN_ENABLE_REG1;
  wire MR_AN_ENABLE_REG2;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire MR_RESTART_AN_SET_REG1;
  wire MR_RESTART_AN_SET_REG2;
  wire O1;
  wire [8:0]O10;
  wire O2;
  wire [0:0]O3;
  wire [0:0]O4;
  wire [15:0]O5;
  wire O6;
  wire O7;
  wire O8;
  wire [15:0]O9;
  wire [3:0]PREVIOUS_STATE;
  wire PULSE4096;
  wire PULSE40960;
  wire [8:0]Q;
  wire RESTART_AN_REG;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_SNAPSHOT;
  wire RX_CONFIG_VALID;
  wire RX_IDLE;
  wire RX_IDLE_REG1;
  wire RX_IDLE_REG2;
  wire RX_RUDI_INVALID;
  wire [1:0]RX_RUDI_INVALID_DELAY;
  wire RX_RUDI_INVALID_DELAY0;
  wire RX_RUDI_INVALID_REG;
  wire [0:0]S;
  wire SGMII_PHY_STATUS1_out;
  wire [0:0]SR;
  wire SRESET;
  wire START_LINK_TIMER;
  wire START_LINK_TIMER_REG;
  wire START_LINK_TIMER_REG2;
  wire SYNC_STATUS_HELD;
  wire TIMER4096_MSB_REG;
  wire TOGGLE_RX;
  wire TOGGLE_TX;
  wire TX_CONFIG_REG_INT1;
  wire XMIT_CONFIG_INT;
  wire XMIT_DATA_INT;
  wire XMIT_DATA_INT0;
  wire data_out;
  wire [8:0]link_timer_value_ch2;
  wire n_0_ABILITY_MATCH_2_i_1__1;
  wire n_0_ABILITY_MATCH_i_1__1;
  wire n_0_ACKNOWLEDGE_MATCH_2_i_1__1;
  wire n_0_ACKNOWLEDGE_MATCH_3_i_1__1;
  wire n_0_ACKNOWLEDGE_MATCH_3_reg;
  wire n_0_AN_SYNC_STATUS_i_1__1;
  wire \n_0_BASEX_REMOTE_FAULT[1]_i_1__1 ;
  wire n_0_GENERATE_REMOTE_FAULT_i_2__1;
  wire n_0_IDLE_MATCH_2_i_1__1;
  wire n_0_IDLE_MATCH_i_1__1;
  wire \n_0_LINK_TIMER[8]_i_1__1 ;
  wire \n_0_LINK_TIMER[8]_i_3__1 ;
  wire n_0_LINK_TIMER_DONE_i_1__1;
  wire n_0_LINK_TIMER_DONE_i_2__1;
  wire n_0_LINK_TIMER_DONE_i_3__1;
  wire n_0_LINK_TIMER_SATURATED_i_2__1;
  wire n_0_LINK_TIMER_SATURATED_i_3__1;
  wire n_0_LINK_TIMER_SATURATED_i_4__1;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1__1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__1 ;
  wire n_0_MASK_RUDI_BUFERR_i_1__1;
  wire n_0_MASK_RUDI_BUFERR_reg;
  wire n_0_MASK_RUDI_CLKCOR_i_1__1;
  wire n_0_MASK_RUDI_CLKCOR_i_2__1;
  wire n_0_MASK_RUDI_CLKCOR_reg;
  wire n_0_MR_AN_COMPLETE_i_1__1;
  wire n_0_MR_LINK_STATUS_i_1__1;
  wire \n_0_MR_LP_ADV_ABILITY_INT[11]_i_1__1 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[12]_i_1__1 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[13]_i_1__1 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[15]_i_1__1 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[16]_i_1__1 ;
  wire n_0_MR_REMOTE_FAULT_i_1__1;
  wire n_0_MR_RESTART_AN_INT_i_1__1;
  wire n_0_MR_RESTART_AN_INT_i_2__1;
  wire n_0_MR_RESTART_AN_INT_reg;
  wire \n_0_RX_CONFIG_REG_REG_reg[12] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[13] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[6] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[7] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[8] ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_3__1 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_4__1 ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[12] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[13] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[15] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[6] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[7] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[8] ;
  wire n_0_SGMII_PHY_STATUS_i_1__1;
  wire \n_0_SGMII_SPEED[0]_i_1__1 ;
  wire \n_0_SGMII_SPEED[1]_i_1__1 ;
  wire n_0_START_LINK_TIMER_REG_i_2__1;
  wire n_0_START_LINK_TIMER_REG_i_3__1;
  wire n_0_START_LINK_TIMER_REG_i_4__1;
  wire n_0_START_LINK_TIMER_REG_i_5__1;
  wire \n_0_STATE[0]_i_1__1 ;
  wire \n_0_STATE[0]_i_2__1 ;
  wire \n_0_STATE[0]_i_3__1 ;
  wire \n_0_STATE[0]_i_4__1 ;
  wire \n_0_STATE[0]_i_5__1 ;
  wire \n_0_STATE[1]_i_1__1 ;
  wire \n_0_STATE[1]_i_2__1 ;
  wire \n_0_STATE[1]_i_3__1 ;
  wire \n_0_STATE[1]_i_4__1 ;
  wire \n_0_STATE[2]_i_1__1 ;
  wire \n_0_STATE[2]_i_2__1 ;
  wire \n_0_STATE[2]_i_3__1 ;
  wire \n_0_STATE[2]_i_4__1 ;
  wire \n_0_STATE[3]_i_1__1 ;
  wire \n_0_STATE[3]_i_2__1 ;
  wire \n_0_STATE[3]_i_3__1 ;
  wire \n_0_STATE[3]_i_4__1 ;
  wire \n_0_STATE_reg[0] ;
  wire \n_0_STATE_reg[1] ;
  wire \n_0_STATE_reg[2] ;
  wire \n_0_STATE_reg[3] ;
  wire n_0_SYNC_STATUS_HELD_i_1__1;
  wire \n_0_TIMER4096[0]_i_2__1 ;
  wire \n_0_TIMER4096[0]_i_3__1 ;
  wire \n_0_TIMER4096[0]_i_4__1 ;
  wire \n_0_TIMER4096[0]_i_5__1 ;
  wire \n_0_TIMER4096[4]_i_2__1 ;
  wire \n_0_TIMER4096[4]_i_3__1 ;
  wire \n_0_TIMER4096[4]_i_4__1 ;
  wire \n_0_TIMER4096[4]_i_5__1 ;
  wire \n_0_TIMER4096[8]_i_2__1 ;
  wire \n_0_TIMER4096[8]_i_3__1 ;
  wire \n_0_TIMER4096[8]_i_4__1 ;
  wire \n_0_TIMER4096[8]_i_5__1 ;
  wire \n_0_TIMER4096_reg[0] ;
  wire \n_0_TIMER4096_reg[0]_i_1__1 ;
  wire \n_0_TIMER4096_reg[10] ;
  wire \n_0_TIMER4096_reg[11] ;
  wire \n_0_TIMER4096_reg[1] ;
  wire \n_0_TIMER4096_reg[2] ;
  wire \n_0_TIMER4096_reg[3] ;
  wire \n_0_TIMER4096_reg[4] ;
  wire \n_0_TIMER4096_reg[4]_i_1__1 ;
  wire \n_0_TIMER4096_reg[5] ;
  wire \n_0_TIMER4096_reg[6] ;
  wire \n_0_TIMER4096_reg[7] ;
  wire \n_0_TIMER4096_reg[8] ;
  wire \n_0_TIMER4096_reg[9] ;
  wire n_0_TOGGLE_RX_i_1__1;
  wire n_0_TOGGLE_TX_i_1__1;
  wire \n_0_TX_CONFIG_REG_INT[0]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[10]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[11]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[12]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[13]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[14]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[15]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[15]_i_2__1 ;
  wire \n_0_TX_CONFIG_REG_INT[1]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[2]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[3]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[4]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[5]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[6]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[7]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[8]_i_1__1 ;
  wire \n_0_TX_CONFIG_REG_INT[9]_i_1__1 ;
  wire n_0_XMIT_CONFIG_INT_i_1__1;
  wire n_0_XMIT_CONFIG_INT_i_2__5;
  wire \n_1_TIMER4096_reg[0]_i_1__1 ;
  wire \n_1_TIMER4096_reg[4]_i_1__1 ;
  wire \n_1_TIMER4096_reg[8]_i_1__1 ;
  wire n_2_LINK_TIMER_SATURATED_reg_i_1__1;
  wire \n_2_TIMER4096_reg[0]_i_1__1 ;
  wire \n_2_TIMER4096_reg[4]_i_1__1 ;
  wire \n_2_TIMER4096_reg[8]_i_1__1 ;
  wire n_3_LINK_TIMER_SATURATED_reg_i_1__1;
  wire \n_3_TIMER4096_reg[0]_i_1__1 ;
  wire \n_3_TIMER4096_reg[4]_i_1__1 ;
  wire \n_3_TIMER4096_reg[8]_i_1__1 ;
  wire \n_4_TIMER4096_reg[0]_i_1__1 ;
  wire \n_4_TIMER4096_reg[4]_i_1__1 ;
  wire \n_4_TIMER4096_reg[8]_i_1__1 ;
  wire \n_5_TIMER4096_reg[0]_i_1__1 ;
  wire \n_5_TIMER4096_reg[4]_i_1__1 ;
  wire \n_5_TIMER4096_reg[8]_i_1__1 ;
  wire \n_6_TIMER4096_reg[0]_i_1__1 ;
  wire \n_6_TIMER4096_reg[4]_i_1__1 ;
  wire \n_6_TIMER4096_reg[8]_i_1__1 ;
  wire \n_7_TIMER4096_reg[0]_i_1__1 ;
  wire \n_7_TIMER4096_reg[4]_i_1__1 ;
  wire \n_7_TIMER4096_reg[8]_i_1__1 ;
  wire p_0_in0_in;
  wire p_0_in44_in;
  wire [8:0]plusOp;
  wire [5:0]status_vector_ch2;
  wire userclk2;
  wire [3:3]NLW_LINK_TIMER_SATURATED_reg_i_1__1_CO_UNCONNECTED;
  wire [3:0]NLW_LINK_TIMER_SATURATED_reg_i_1__1_O_UNCONNECTED;
  wire [3:3]\NLW_TIMER4096_reg[8]_i_1__1_CO_UNCONNECTED ;

LUT6 #(
    .INIT(64'h00000000000000E2)) 
     ABILITY_MATCH_2_i_1__1
       (.I0(ABILITY_MATCH_2),
        .I1(RX_CONFIG_VALID),
        .I2(CONFIG_REG_MATCH_COMB),
        .I3(RX_IDLE),
        .I4(n_0_MASK_RUDI_BUFERR_reg),
        .I5(SRESET),
        .O(n_0_ABILITY_MATCH_2_i_1__1));
LUT4 #(
    .INIT(16'h2002)) 
     ABILITY_MATCH_2_i_2__1
       (.I0(CO),
        .I1(O2),
        .I2(RX_CONFIG_REG[15]),
        .I3(p_0_in0_in),
        .O(CONFIG_REG_MATCH_COMB));
FDRE ABILITY_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ABILITY_MATCH_2_i_1__1),
        .Q(ABILITY_MATCH_2),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h00008F80)) 
     ABILITY_MATCH_i_1__1
       (.I0(CONFIG_REG_MATCH_COMB),
        .I1(ABILITY_MATCH_2),
        .I2(RX_CONFIG_VALID),
        .I3(ABILITY_MATCH),
        .I4(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ABILITY_MATCH_i_1__1));
(* SOFT_HLUTNM = "soft_lutpair388" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     ABILITY_MATCH_i_2__1
       (.I0(SRESET),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(RX_IDLE),
        .O(ACKNOWLEDGE_MATCH_3));
FDRE ABILITY_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ABILITY_MATCH_i_1__1),
        .Q(ABILITY_MATCH),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h0000E222)) 
     ACKNOWLEDGE_MATCH_2_i_1__1
       (.I0(ACKNOWLEDGE_MATCH_2),
        .I1(RX_CONFIG_VALID),
        .I2(p_0_in44_in),
        .I3(RX_CONFIG_REG[14]),
        .I4(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ACKNOWLEDGE_MATCH_2_i_1__1));
FDRE ACKNOWLEDGE_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ACKNOWLEDGE_MATCH_2_i_1__1),
        .Q(ACKNOWLEDGE_MATCH_2),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000E2222222)) 
     ACKNOWLEDGE_MATCH_3_i_1__1
       (.I0(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I1(RX_CONFIG_VALID),
        .I2(RX_CONFIG_REG[14]),
        .I3(p_0_in44_in),
        .I4(ACKNOWLEDGE_MATCH_2),
        .I5(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ACKNOWLEDGE_MATCH_3_i_1__1));
FDRE ACKNOWLEDGE_MATCH_3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ACKNOWLEDGE_MATCH_3_i_1__1),
        .Q(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hFFBFFF80)) 
     AN_SYNC_STATUS_i_1__1
       (.I0(SYNC_STATUS_HELD),
        .I1(PULSE4096),
        .I2(LINK_TIMER_SATURATED),
        .I3(RXSYNC_STATUS),
        .I4(AN_SYNC_STATUS),
        .O(n_0_AN_SYNC_STATUS_i_1__1));
FDRE AN_SYNC_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_AN_SYNC_STATUS_i_1__1),
        .Q(AN_SYNC_STATUS),
        .R(SRESET));
LUT4 #(
    .INIT(16'h030A)) 
     \BASEX_REMOTE_FAULT[1]_i_1__1 
       (.I0(status_vector_ch2[2]),
        .I1(RX_CONFIG_REG[15]),
        .I2(SRESET),
        .I3(SGMII_PHY_STATUS1_out),
        .O(\n_0_BASEX_REMOTE_FAULT[1]_i_1__1 ));
FDRE \BASEX_REMOTE_FAULT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_BASEX_REMOTE_FAULT[1]_i_1__1 ),
        .Q(status_vector_ch2[2]),
        .R(\<const0> ));
FDRE CLEAR_STATUS_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CLEAR_STATUS_REG),
        .Q(CLEAR_STATUS_REG1),
        .R(SRESET));
FDRE CLEAR_STATUS_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CLEAR_STATUS_REG1),
        .Q(CLEAR_STATUS_REG2),
        .R(SRESET));
LUT3 #(
    .INIT(8'h82)) 
     CONSISTENCY_MATCH_i_1__1
       (.I0(O3),
        .I1(\n_0_RX_CONFIG_SNAPSHOT_reg[15] ),
        .I2(RX_CONFIG_REG[15]),
        .O(CONSISTENCY_MATCH_COMB));
LUT4 #(
    .INIT(16'h9009)) 
     CONSISTENCY_MATCH_i_4__1
       (.I0(\n_0_RX_CONFIG_SNAPSHOT_reg[13] ),
        .I1(RX_CONFIG_REG[13]),
        .I2(\n_0_RX_CONFIG_SNAPSHOT_reg[12] ),
        .I3(RX_CONFIG_REG[12]),
        .O(I5));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_6__1
       (.I0(\n_0_RX_CONFIG_SNAPSHOT_reg[6] ),
        .I1(RX_CONFIG_REG[6]),
        .I2(RX_CONFIG_REG[7]),
        .I3(\n_0_RX_CONFIG_SNAPSHOT_reg[7] ),
        .I4(RX_CONFIG_REG[8]),
        .I5(\n_0_RX_CONFIG_SNAPSHOT_reg[8] ),
        .O(I4));
FDRE CONSISTENCY_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CONSISTENCY_MATCH_COMB),
        .Q(CONSISTENCY_MATCH),
        .R(SRESET));
LUT6 #(
    .INIT(64'h0000000004000000)) 
     GENERATE_REMOTE_FAULT_i_1__1
       (.I0(\n_0_STATE[3]_i_2__1 ),
        .I1(\n_0_STATE[3]_i_3__1 ),
        .I2(\n_0_STATE[2]_i_2__1 ),
        .I3(n_0_START_LINK_TIMER_REG_i_3__1),
        .I4(n_0_GENERATE_REMOTE_FAULT_i_2__1),
        .I5(\n_0_STATE[1]_i_2__1 ),
        .O(GENERATE_REMOTE_FAULT0));
(* SOFT_HLUTNM = "soft_lutpair391" *) 
   LUT2 #(
    .INIT(4'h2)) 
     GENERATE_REMOTE_FAULT_i_2__1
       (.I0(\n_0_STATE_reg[0] ),
        .I1(\n_0_STATE_reg[3] ),
        .O(n_0_GENERATE_REMOTE_FAULT_i_2__1));
FDRE GENERATE_REMOTE_FAULT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(GENERATE_REMOTE_FAULT0),
        .Q(GENERATE_REMOTE_FAULT),
        .R(SRESET));
GND GND
       (.G(\<const0> ));
FDRE IDLE_INSERTED_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED),
        .Q(IDLE_INSERTED_REG1),
        .R(SRESET));
FDRE IDLE_INSERTED_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG1),
        .Q(IDLE_INSERTED_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair379" *) 
   LUT2 #(
    .INIT(4'h2)) 
     IDLE_INSERTED_REG3_i_1__1
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE_REG2),
        .O(IDLE_INSERTED_REG30));
FDRE IDLE_INSERTED_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG30),
        .Q(IDLE_INSERTED_REG3),
        .R(SRESET));
FDRE IDLE_INSERTED_REG4_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG3),
        .Q(IDLE_INSERTED_REG4),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair382" *) 
   LUT4 #(
    .INIT(16'h4000)) 
     IDLE_INSERTED_i_1__1
       (.I0(XMIT_CONFIG_INT),
        .I1(I6[0]),
        .I2(I6[2]),
        .I3(I6[1]),
        .O(IDLE_INSERTED0));
FDRE IDLE_INSERTED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED0),
        .Q(IDLE_INSERTED),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair379" *) 
   LUT5 #(
    .INIT(32'h04FF0400)) 
     IDLE_MATCH_2_i_1__1
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE),
        .I2(IDLE_INSERTED_REG4),
        .I3(RX_IDLE_REG2),
        .I4(IDLE_MATCH_2),
        .O(n_0_IDLE_MATCH_2_i_1__1));
FDRE IDLE_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_IDLE_MATCH_2_i_1__1),
        .Q(IDLE_MATCH_2),
        .R(SRESET));
LUT6 #(
    .INIT(64'h4440FFFF44400000)) 
     IDLE_MATCH_i_1__1
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE),
        .I2(IDLE_REMOVED_REG2),
        .I3(IDLE_MATCH_2),
        .I4(RX_IDLE_REG2),
        .I5(IDLE_MATCH),
        .O(n_0_IDLE_MATCH_i_1__1));
FDRE IDLE_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_IDLE_MATCH_i_1__1),
        .Q(IDLE_MATCH),
        .R(SRESET));
FDRE IDLE_REMOVED_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED),
        .Q(IDLE_REMOVED_REG1),
        .R(SRESET));
FDRE IDLE_REMOVED_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED_REG1),
        .Q(IDLE_REMOVED_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair382" *) 
   LUT4 #(
    .INIT(16'h0100)) 
     IDLE_REMOVED_i_1__1
       (.I0(I6[2]),
        .I1(I6[1]),
        .I2(XMIT_CONFIG_INT),
        .I3(I6[0]),
        .O(IDLE_REMOVED0));
FDRE IDLE_REMOVED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED0),
        .Q(IDLE_REMOVED),
        .R(SRESET));
LUT1 #(
    .INIT(2'h1)) 
     \LINK_TIMER[0]_i_1__1 
       (.I0(LINK_TIMER_reg__0[0]),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair389" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \LINK_TIMER[1]_i_1__1 
       (.I0(LINK_TIMER_reg__0[0]),
        .I1(LINK_TIMER_reg__0[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair389" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \LINK_TIMER[2]_i_1__1 
       (.I0(LINK_TIMER_reg__0[2]),
        .I1(LINK_TIMER_reg__0[1]),
        .I2(LINK_TIMER_reg__0[0]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair376" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \LINK_TIMER[3]_i_1__1 
       (.I0(LINK_TIMER_reg__0[3]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(LINK_TIMER_reg__0[1]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair376" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \LINK_TIMER[4]_i_1__1 
       (.I0(LINK_TIMER_reg__0[4]),
        .I1(LINK_TIMER_reg__0[3]),
        .I2(LINK_TIMER_reg__0[1]),
        .I3(LINK_TIMER_reg__0[0]),
        .I4(LINK_TIMER_reg__0[2]),
        .O(plusOp[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \LINK_TIMER[5]_i_1__1 
       (.I0(LINK_TIMER_reg__0[5]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(LINK_TIMER_reg__0[1]),
        .I4(LINK_TIMER_reg__0[3]),
        .I5(LINK_TIMER_reg__0[4]),
        .O(plusOp[5]));
LUT2 #(
    .INIT(4'h6)) 
     \LINK_TIMER[6]_i_1__1 
       (.I0(LINK_TIMER_reg__0[6]),
        .I1(\n_0_LINK_TIMER[8]_i_3__1 ),
        .O(plusOp[6]));
(* SOFT_HLUTNM = "soft_lutpair384" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \LINK_TIMER[7]_i_1__1 
       (.I0(LINK_TIMER_reg__0[7]),
        .I1(\n_0_LINK_TIMER[8]_i_3__1 ),
        .I2(LINK_TIMER_reg__0[6]),
        .O(plusOp[7]));
LUT4 #(
    .INIT(16'hFFEA)) 
     \LINK_TIMER[8]_i_1__1 
       (.I0(START_LINK_TIMER_REG),
        .I1(LINK_TIMER_SATURATED),
        .I2(PULSE4096),
        .I3(SRESET),
        .O(\n_0_LINK_TIMER[8]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair384" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \LINK_TIMER[8]_i_2__1 
       (.I0(LINK_TIMER_reg__0[8]),
        .I1(LINK_TIMER_reg__0[6]),
        .I2(\n_0_LINK_TIMER[8]_i_3__1 ),
        .I3(LINK_TIMER_reg__0[7]),
        .O(plusOp[8]));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     \LINK_TIMER[8]_i_3__1 
       (.I0(LINK_TIMER_reg__0[5]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(LINK_TIMER_reg__0[1]),
        .I4(LINK_TIMER_reg__0[3]),
        .I5(LINK_TIMER_reg__0[4]),
        .O(\n_0_LINK_TIMER[8]_i_3__1 ));
LUT6 #(
    .INIT(64'h0302000200000000)) 
     LINK_TIMER_DONE_i_1__1
       (.I0(LINK_TIMER_SATURATED),
        .I1(n_0_LINK_TIMER_DONE_i_2__1),
        .I2(n_0_START_LINK_TIMER_REG_i_2__1),
        .I3(LINK_TIMER_DONE),
        .I4(n_0_LINK_TIMER_DONE_i_3__1),
        .I5(\n_0_STATE[3]_i_3__1 ),
        .O(n_0_LINK_TIMER_DONE_i_1__1));
(* SOFT_HLUTNM = "soft_lutpair388" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     LINK_TIMER_DONE_i_2__1
       (.I0(START_LINK_TIMER_REG),
        .I1(START_LINK_TIMER_REG2),
        .I2(SRESET),
        .O(n_0_LINK_TIMER_DONE_i_2__1));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF8F)) 
     LINK_TIMER_DONE_i_3__1
       (.I0(ABILITY_MATCH),
        .I1(O1),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[3] ),
        .I5(\n_0_STATE_reg[0] ),
        .O(n_0_LINK_TIMER_DONE_i_3__1));
FDRE LINK_TIMER_DONE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_LINK_TIMER_DONE_i_1__1),
        .Q(LINK_TIMER_DONE),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_2__1
       (.I0(LINK_TIMER_reg__0[6]),
        .I1(link_timer_value_ch2[6]),
        .I2(LINK_TIMER_reg__0[7]),
        .I3(link_timer_value_ch2[7]),
        .I4(link_timer_value_ch2[8]),
        .I5(LINK_TIMER_reg__0[8]),
        .O(n_0_LINK_TIMER_SATURATED_i_2__1));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_3__1
       (.I0(link_timer_value_ch2[3]),
        .I1(LINK_TIMER_reg__0[3]),
        .I2(LINK_TIMER_reg__0[4]),
        .I3(link_timer_value_ch2[4]),
        .I4(LINK_TIMER_reg__0[5]),
        .I5(link_timer_value_ch2[5]),
        .O(n_0_LINK_TIMER_SATURATED_i_3__1));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_4__1
       (.I0(link_timer_value_ch2[2]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(link_timer_value_ch2[0]),
        .I4(LINK_TIMER_reg__0[1]),
        .I5(link_timer_value_ch2[1]),
        .O(n_0_LINK_TIMER_SATURATED_i_4__1));
FDRE LINK_TIMER_SATURATED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(LINK_TIMER_SATURATED_COMB),
        .Q(LINK_TIMER_SATURATED),
        .R(SRESET));
CARRY4 LINK_TIMER_SATURATED_reg_i_1__1
       (.CI(\<const0> ),
        .CO({NLW_LINK_TIMER_SATURATED_reg_i_1__1_CO_UNCONNECTED[3],LINK_TIMER_SATURATED_COMB,n_2_LINK_TIMER_SATURATED_reg_i_1__1,n_3_LINK_TIMER_SATURATED_reg_i_1__1}),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_LINK_TIMER_SATURATED_reg_i_1__1_O_UNCONNECTED[3:0]),
        .S({\<const0> ,n_0_LINK_TIMER_SATURATED_i_2__1,n_0_LINK_TIMER_SATURATED_i_3__1,n_0_LINK_TIMER_SATURATED_i_4__1}));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[0] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[0]),
        .Q(LINK_TIMER_reg__0[0]),
        .R(\n_0_LINK_TIMER[8]_i_1__1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[1] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[1]),
        .Q(LINK_TIMER_reg__0[1]),
        .R(\n_0_LINK_TIMER[8]_i_1__1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[2] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[2]),
        .Q(LINK_TIMER_reg__0[2]),
        .R(\n_0_LINK_TIMER[8]_i_1__1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[3] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[3]),
        .Q(LINK_TIMER_reg__0[3]),
        .R(\n_0_LINK_TIMER[8]_i_1__1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[4] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[4]),
        .Q(LINK_TIMER_reg__0[4]),
        .R(\n_0_LINK_TIMER[8]_i_1__1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[5] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[5]),
        .Q(LINK_TIMER_reg__0[5]),
        .R(\n_0_LINK_TIMER[8]_i_1__1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[6] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[6]),
        .Q(LINK_TIMER_reg__0[6]),
        .R(\n_0_LINK_TIMER[8]_i_1__1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[7] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[7]),
        .Q(LINK_TIMER_reg__0[7]),
        .R(\n_0_LINK_TIMER[8]_i_1__1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[8] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[8]),
        .Q(LINK_TIMER_reg__0[8]),
        .R(\n_0_LINK_TIMER[8]_i_1__1 ));
LUT5 #(
    .INIT(32'hDF0000DF)) 
     \MASK_RUDI_BUFERR_TIMER[0]_i_1__1 
       (.I0(data_out),
        .I1(I8),
        .I2(I7),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__1 ),
        .I4(MASK_RUDI_BUFERR_TIMER[0]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1__1 ));
LUT6 #(
    .INIT(64'hF3FF51550000A2AA)) 
     \MASK_RUDI_BUFERR_TIMER[1]_i_1__1 
       (.I0(MASK_RUDI_BUFERR_TIMER[0]),
        .I1(data_out),
        .I2(I8),
        .I3(I7),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__1 ),
        .I5(MASK_RUDI_BUFERR_TIMER[1]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1__1 ));
LUT5 #(
    .INIT(32'h0F070008)) 
     \MASK_RUDI_BUFERR_TIMER[2]_i_1__1 
       (.I0(MASK_RUDI_BUFERR_TIMER[1]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER0),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__1 ),
        .I4(MASK_RUDI_BUFERR_TIMER[2]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1__1 ));
LUT6 #(
    .INIT(64'h00FF007F00000080)) 
     \MASK_RUDI_BUFERR_TIMER[3]_i_1__1 
       (.I0(MASK_RUDI_BUFERR_TIMER[2]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER[1]),
        .I3(MASK_RUDI_BUFERR_TIMER0),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__1 ),
        .I5(MASK_RUDI_BUFERR_TIMER[3]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1__1 ));
LUT6 #(
    .INIT(64'hF3FFA2AA00005155)) 
     \MASK_RUDI_BUFERR_TIMER[4]_i_1__1 
       (.I0(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__1 ),
        .I1(data_out),
        .I2(I8),
        .I3(I7),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__1 ),
        .I5(MASK_RUDI_BUFERR_TIMER[4]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1__1 ));
LUT5 #(
    .INIT(32'h0F0D0002)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_1__1 
       (.I0(MASK_RUDI_BUFERR_TIMER[4]),
        .I1(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__1 ),
        .I2(MASK_RUDI_BUFERR_TIMER0),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__1 ),
        .I4(MASK_RUDI_BUFERR_TIMER[5]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1__1 ));
LUT4 #(
    .INIT(16'h7FFF)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_2__1 
       (.I0(MASK_RUDI_BUFERR_TIMER[2]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER[1]),
        .I3(MASK_RUDI_BUFERR_TIMER[3]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__1 ));
(* SOFT_HLUTNM = "soft_lutpair380" *) 
   LUT4 #(
    .INIT(16'h0800)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_3__1 
       (.I0(MASK_RUDI_BUFERR_TIMER[8]),
        .I1(MASK_RUDI_BUFERR_TIMER[7]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__1 ),
        .I3(MASK_RUDI_BUFERR_TIMER[6]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair380" *) 
   LUT5 #(
    .INIT(32'h45414141)) 
     \MASK_RUDI_BUFERR_TIMER[6]_i_1__1 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__1 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair378" *) 
   LUT5 #(
    .INIT(32'h55045104)) 
     \MASK_RUDI_BUFERR_TIMER[7]_i_1__1 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__1 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair378" *) 
   LUT5 #(
    .INIT(32'h55550400)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_1__1 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__1 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1__1 ));
LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_3__1 
       (.I0(MASK_RUDI_BUFERR_TIMER[4]),
        .I1(MASK_RUDI_BUFERR_TIMER[2]),
        .I2(MASK_RUDI_BUFERR_TIMER[0]),
        .I3(MASK_RUDI_BUFERR_TIMER[1]),
        .I4(MASK_RUDI_BUFERR_TIMER[3]),
        .I5(MASK_RUDI_BUFERR_TIMER[5]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__1 ));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1__1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[0]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1__1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[1]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1__1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[2]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1__1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[3]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1__1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[4]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1__1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[5]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1__1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[6]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1__1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[7]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1__1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[8]),
        .S(SRESET));
LUT6 #(
    .INIT(64'h00005D5500000C00)) 
     MASK_RUDI_BUFERR_i_1__1
       (.I0(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__1 ),
        .I1(I7),
        .I2(I8),
        .I3(data_out),
        .I4(SRESET),
        .I5(n_0_MASK_RUDI_BUFERR_reg),
        .O(n_0_MASK_RUDI_BUFERR_i_1__1));
FDRE MASK_RUDI_BUFERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MASK_RUDI_BUFERR_i_1__1),
        .Q(n_0_MASK_RUDI_BUFERR_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0000BF0000000F00)) 
     MASK_RUDI_CLKCOR_i_1__1
       (.I0(RX_RUDI_INVALID),
        .I1(RX_RUDI_INVALID_REG),
        .I2(n_0_MASK_RUDI_CLKCOR_i_2__1),
        .I3(RXSYNC_STATUS),
        .I4(SRESET),
        .I5(n_0_MASK_RUDI_CLKCOR_reg),
        .O(n_0_MASK_RUDI_CLKCOR_i_1__1));
LUT3 #(
    .INIT(8'h01)) 
     MASK_RUDI_CLKCOR_i_2__1
       (.I0(I6[2]),
        .I1(I6[1]),
        .I2(I6[0]),
        .O(n_0_MASK_RUDI_CLKCOR_i_2__1));
FDRE MASK_RUDI_CLKCOR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MASK_RUDI_CLKCOR_i_1__1),
        .Q(n_0_MASK_RUDI_CLKCOR_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2222322222202220)) 
     MR_AN_COMPLETE_i_1__1
       (.I0(MR_AN_COMPLETE),
        .I1(SRESET),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[3] ),
        .I5(\n_0_STATE_reg[0] ),
        .O(n_0_MR_AN_COMPLETE_i_1__1));
FDRE MR_AN_COMPLETE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_AN_COMPLETE_i_1__1),
        .Q(MR_AN_COMPLETE),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h6)) 
     MR_AN_ENABLE_CHANGE_i_1__1
       (.I0(MR_AN_ENABLE_REG1),
        .I1(MR_AN_ENABLE_REG2),
        .O(MR_AN_ENABLE_CHANGE0));
FDRE MR_AN_ENABLE_CHANGE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_AN_ENABLE_CHANGE0),
        .Q(MR_AN_ENABLE_CHANGE),
        .R(SRESET));
FDRE MR_AN_ENABLE_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(AN_ENABLE_INT),
        .Q(MR_AN_ENABLE_REG1),
        .R(SRESET));
FDRE MR_AN_ENABLE_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_AN_ENABLE_REG1),
        .Q(MR_AN_ENABLE_REG2),
        .R(SRESET));
LUT5 #(
    .INIT(32'h0000BA00)) 
     MR_LINK_STATUS_i_1__1
       (.I0(MR_LINK_STATUS),
        .I1(CLEAR_STATUS_REG2),
        .I2(CLEAR_STATUS_REG1),
        .I3(XMIT_DATA_INT),
        .I4(SRESET),
        .O(n_0_MR_LINK_STATUS_i_1__1));
FDRE MR_LINK_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_LINK_STATUS_i_1__1),
        .Q(MR_LINK_STATUS),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[11]_i_1__1 
       (.I0(RX_CONFIG_REG[10]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O8),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[11]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair383" *) 
   LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[12]_i_1__1 
       (.I0(RX_CONFIG_REG[11]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O7),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[12]_i_1__1 ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[13]_i_1__1 
       (.I0(RX_CONFIG_REG[12]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(MR_LP_ADV_ABILITY[0]),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[13]_i_1__1 ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[15]_i_1__1 
       (.I0(RX_CONFIG_REG[14]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O6),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[15]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair385" *) 
   LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[16]_i_1__1 
       (.I0(RX_CONFIG_REG[15]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(MR_LP_ADV_ABILITY[1]),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[16]_i_1__1 ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[11]_i_1__1 ),
        .Q(O8),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[12]_i_1__1 ),
        .Q(O7),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[13]_i_1__1 ),
        .Q(MR_LP_ADV_ABILITY[0]),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[15]_i_1__1 ),
        .Q(O6),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[16] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[16]_i_1__1 ),
        .Q(MR_LP_ADV_ABILITY[1]),
        .R(\<const0> ));
FDRE \MR_NP_RX_INT_reg[10] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[9]),
        .Q(O9[9]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[10]),
        .Q(O9[10]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[11]),
        .Q(O9[11]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[12]),
        .Q(O9[12]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[14] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[13]),
        .Q(O9[13]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[14]),
        .Q(O9[14]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[16] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[15]),
        .Q(O9[15]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[0]),
        .Q(O9[0]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[1]),
        .Q(O9[1]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[2]),
        .Q(O9[2]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[3]),
        .Q(O9[3]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[4]),
        .Q(O9[4]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[5]),
        .Q(O9[5]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[6]),
        .Q(O9[6]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[8] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[7]),
        .Q(O9[7]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[9] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[8]),
        .Q(O9[8]),
        .R(SRESET));
LUT6 #(
    .INIT(64'h0000BBFB000000F0)) 
     MR_REMOTE_FAULT_i_1__1
       (.I0(CLEAR_STATUS_REG2),
        .I1(CLEAR_STATUS_REG1),
        .I2(GENERATE_REMOTE_FAULT),
        .I3(MR_LP_ADV_ABILITY[1]),
        .I4(SRESET),
        .I5(status_vector_ch2[5]),
        .O(n_0_MR_REMOTE_FAULT_i_1__1));
FDRE MR_REMOTE_FAULT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_REMOTE_FAULT_i_1__1),
        .Q(status_vector_ch2[5]),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h1010331000003300)) 
     MR_RESTART_AN_INT_i_1__1
       (.I0(n_0_MR_RESTART_AN_INT_i_2__1),
        .I1(SRESET),
        .I2(AN_ENABLE_INT),
        .I3(MR_RESTART_AN_SET_REG1),
        .I4(MR_RESTART_AN_SET_REG2),
        .I5(n_0_MR_RESTART_AN_INT_reg),
        .O(n_0_MR_RESTART_AN_INT_i_1__1));
(* SOFT_HLUTNM = "soft_lutpair377" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     MR_RESTART_AN_INT_i_2__1
       (.I0(\n_0_STATE_reg[0] ),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .O(n_0_MR_RESTART_AN_INT_i_2__1));
FDRE MR_RESTART_AN_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_RESTART_AN_INT_i_1__1),
        .Q(n_0_MR_RESTART_AN_INT_reg),
        .R(\<const0> ));
FDRE MR_RESTART_AN_SET_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESTART_AN_REG),
        .Q(MR_RESTART_AN_SET_REG1),
        .R(SRESET));
FDRE MR_RESTART_AN_SET_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_RESTART_AN_SET_REG1),
        .Q(MR_RESTART_AN_SET_REG2),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[0] ),
        .Q(PREVIOUS_STATE[0]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[1] ),
        .Q(PREVIOUS_STATE[1]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[2] ),
        .Q(PREVIOUS_STATE[2]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[3] ),
        .Q(PREVIOUS_STATE[3]),
        .R(SRESET));
LUT2 #(
    .INIT(4'h2)) 
     PULSE4096_i_1__1
       (.I0(TIMER4096_MSB_REG),
        .I1(\n_0_TIMER4096_reg[11] ),
        .O(PULSE40960));
FDRE PULSE4096_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(PULSE40960),
        .Q(PULSE4096),
        .R(SRESET));
FDRE RECEIVED_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I3),
        .Q(O2),
        .R(\<const0> ));
FDRE RUDI_INVALID_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY[1]),
        .Q(status_vector_ch2[0]),
        .R(SRESET));
FDRE RX_CONFIG_REG_NULL_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(O1),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_REG_reg[0] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[0]),
        .Q(Q[0]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[10] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[10]),
        .Q(Q[7]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[11] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[11]),
        .Q(Q[8]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[12] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[12]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[12] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[13] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[13]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[13] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[14] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[14]),
        .Q(p_0_in44_in),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[15] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[15]),
        .Q(p_0_in0_in),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[1] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[1]),
        .Q(Q[1]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[2] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[2]),
        .Q(Q[2]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[3] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[3]),
        .Q(Q[3]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[4] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[4]),
        .Q(Q[4]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[5] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[5]),
        .Q(Q[5]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[6] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[6]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[6] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[7] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[7]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[7] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[8] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[8]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[8] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[9] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[9]),
        .Q(Q[6]),
        .R(SR));
LUT6 #(
    .INIT(64'h0008000000000008)) 
     \RX_CONFIG_SNAPSHOT[15]_i_1__1 
       (.I0(CO),
        .I1(\n_0_RX_CONFIG_SNAPSHOT[15]_i_3__1 ),
        .I2(\n_0_RX_CONFIG_SNAPSHOT[15]_i_4__1 ),
        .I3(O2),
        .I4(RX_CONFIG_REG[15]),
        .I5(p_0_in0_in),
        .O(RX_CONFIG_SNAPSHOT));
LUT5 #(
    .INIT(32'h00000020)) 
     \RX_CONFIG_SNAPSHOT[15]_i_3__1 
       (.I0(RX_CONFIG_VALID),
        .I1(ABILITY_MATCH),
        .I2(ABILITY_MATCH_2),
        .I3(n_0_MASK_RUDI_BUFERR_reg),
        .I4(RX_IDLE),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair386" *) 
   LUT4 #(
    .INIT(16'h0040)) 
     \RX_CONFIG_SNAPSHOT[15]_i_4__1 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[0] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_4__1 ));
LUT4 #(
    .INIT(16'h9009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_6__1 
       (.I0(\n_0_RX_CONFIG_REG_REG_reg[13] ),
        .I1(RX_CONFIG_REG[13]),
        .I2(\n_0_RX_CONFIG_REG_REG_reg[12] ),
        .I3(RX_CONFIG_REG[12]),
        .O(O4));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_8__1 
       (.I0(\n_0_RX_CONFIG_REG_REG_reg[6] ),
        .I1(RX_CONFIG_REG[6]),
        .I2(RX_CONFIG_REG[7]),
        .I3(\n_0_RX_CONFIG_REG_REG_reg[7] ),
        .I4(RX_CONFIG_REG[8]),
        .I5(\n_0_RX_CONFIG_REG_REG_reg[8] ),
        .O(S));
FDRE \RX_CONFIG_SNAPSHOT_reg[0] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[0]),
        .Q(O10[0]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[10] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[10]),
        .Q(O10[7]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[11] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[11]),
        .Q(O10[8]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[12] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[12]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[12] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[13] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[13]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[13] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[15] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[15]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[15] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[1] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[1]),
        .Q(O10[1]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[2] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[2]),
        .Q(O10[2]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[3] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[3]),
        .Q(O10[3]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[4] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[4]),
        .Q(O10[4]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[5] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[5]),
        .Q(O10[5]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[6] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[6]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[6] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[7] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[7]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[7] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[8] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[8]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[8] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[9] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[9]),
        .Q(O10[6]),
        .R(SRESET));
FDRE RX_IDLE_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE),
        .Q(RX_IDLE_REG1),
        .R(SRESET));
FDRE RX_IDLE_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE_REG1),
        .Q(RX_IDLE_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair390" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \RX_RUDI_INVALID_DELAY[0]_i_1__1 
       (.I0(RX_RUDI_INVALID),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(n_0_MASK_RUDI_CLKCOR_reg),
        .O(RX_RUDI_INVALID_DELAY0));
FDRE \RX_RUDI_INVALID_DELAY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY0),
        .Q(RX_RUDI_INVALID_DELAY[0]),
        .R(SRESET));
FDRE \RX_RUDI_INVALID_DELAY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY[0]),
        .Q(RX_RUDI_INVALID_DELAY[1]),
        .R(SRESET));
FDRE RX_RUDI_INVALID_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(RX_RUDI_INVALID_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair385" *) 
   LUT4 #(
    .INIT(16'h00E2)) 
     SGMII_PHY_STATUS_i_1__1
       (.I0(status_vector_ch2[1]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(RX_CONFIG_REG[15]),
        .I3(SRESET),
        .O(n_0_SGMII_PHY_STATUS_i_1__1));
FDRE SGMII_PHY_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SGMII_PHY_STATUS_i_1__1),
        .Q(status_vector_ch2[1]),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'hB8)) 
     \SGMII_SPEED[0]_i_1__1 
       (.I0(RX_CONFIG_REG[10]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(status_vector_ch2[3]),
        .O(\n_0_SGMII_SPEED[0]_i_1__1 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SGMII_SPEED[1]_i_1__1 
       (.I0(RX_CONFIG_REG[11]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(status_vector_ch2[4]),
        .O(\n_0_SGMII_SPEED[1]_i_1__1 ));
LUT6 #(
    .INIT(64'h0008000000000000)) 
     \SGMII_SPEED[1]_i_2__1 
       (.I0(n_0_START_LINK_TIMER_REG_i_3__1),
        .I1(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I2(PREVIOUS_STATE[3]),
        .I3(PREVIOUS_STATE[2]),
        .I4(PREVIOUS_STATE[0]),
        .I5(PREVIOUS_STATE[1]),
        .O(SGMII_PHY_STATUS1_out));
FDRE \SGMII_SPEED_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_SGMII_SPEED[0]_i_1__1 ),
        .Q(status_vector_ch2[3]),
        .R(SRESET));
FDSE \SGMII_SPEED_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_SGMII_SPEED[1]_i_1__1 ),
        .Q(status_vector_ch2[4]),
        .S(SRESET));
FDRE START_LINK_TIMER_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(START_LINK_TIMER_REG),
        .Q(START_LINK_TIMER_REG2),
        .R(SRESET));
LUT6 #(
    .INIT(64'hAAAAEAAAFFFFFFFF)) 
     START_LINK_TIMER_REG_i_1__1
       (.I0(n_0_START_LINK_TIMER_REG_i_2__1),
        .I1(LINK_TIMER_DONE),
        .I2(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I3(n_0_START_LINK_TIMER_REG_i_3__1),
        .I4(n_0_START_LINK_TIMER_REG_i_4__1),
        .I5(\n_0_STATE[3]_i_3__1 ),
        .O(START_LINK_TIMER));
LUT6 #(
    .INIT(64'h0000300200000002)) 
     START_LINK_TIMER_REG_i_2__1
       (.I0(AN_ENABLE_INT),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[2] ),
        .I5(n_0_START_LINK_TIMER_REG_i_5__1),
        .O(n_0_START_LINK_TIMER_REG_i_2__1));
(* SOFT_HLUTNM = "soft_lutpair375" *) 
   LUT2 #(
    .INIT(4'h2)) 
     START_LINK_TIMER_REG_i_3__1
       (.I0(\n_0_STATE_reg[2] ),
        .I1(\n_0_STATE_reg[1] ),
        .O(n_0_START_LINK_TIMER_REG_i_3__1));
(* SOFT_HLUTNM = "soft_lutpair387" *) 
   LUT2 #(
    .INIT(4'h8)) 
     START_LINK_TIMER_REG_i_4__1
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .O(n_0_START_LINK_TIMER_REG_i_4__1));
(* SOFT_HLUTNM = "soft_lutpair387" *) 
   LUT4 #(
    .INIT(16'h0080)) 
     START_LINK_TIMER_REG_i_5__1
       (.I0(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I1(ABILITY_MATCH),
        .I2(CONSISTENCY_MATCH),
        .I3(O1),
        .O(n_0_START_LINK_TIMER_REG_i_5__1));
FDRE START_LINK_TIMER_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(START_LINK_TIMER),
        .Q(START_LINK_TIMER_REG),
        .R(SRESET));
LUT5 #(
    .INIT(32'h0000AAA2)) 
     \STATE[0]_i_1__1 
       (.I0(\n_0_STATE[3]_i_3__1 ),
        .I1(\n_0_STATE[0]_i_2__1 ),
        .I2(\n_0_STATE[0]_i_3__1 ),
        .I3(\n_0_STATE[0]_i_4__1 ),
        .I4(\n_0_STATE_reg[3] ),
        .O(\n_0_STATE[0]_i_1__1 ));
LUT6 #(
    .INIT(64'hFBF8F8FCFBFBF8FF)) 
     \STATE[0]_i_2__1 
       (.I0(n_0_START_LINK_TIMER_REG_i_4__1),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[0] ),
        .I4(LINK_TIMER_DONE),
        .I5(AN_ENABLE_INT),
        .O(\n_0_STATE[0]_i_2__1 ));
LUT6 #(
    .INIT(64'h0000000044444664)) 
     \STATE[0]_i_3__1 
       (.I0(ABILITY_MATCH),
        .I1(\n_0_STATE_reg[0] ),
        .I2(TOGGLE_RX),
        .I3(Q[8]),
        .I4(O1),
        .I5(\n_0_STATE[0]_i_5__1 ),
        .O(\n_0_STATE[0]_i_3__1 ));
LUT6 #(
    .INIT(64'h0202002002220020)) 
     \STATE[0]_i_4__1 
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(ABILITY_MATCH),
        .I3(O1),
        .I4(\n_0_STATE_reg[0] ),
        .I5(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .O(\n_0_STATE[0]_i_4__1 ));
LUT2 #(
    .INIT(4'h7)) 
     \STATE[0]_i_5__1 
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .O(\n_0_STATE[0]_i_5__1 ));
(* SOFT_HLUTNM = "soft_lutpair381" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \STATE[1]_i_1__1 
       (.I0(\n_0_STATE[3]_i_3__1 ),
        .I1(\n_0_STATE[1]_i_2__1 ),
        .O(\n_0_STATE[1]_i_1__1 ));
LUT5 #(
    .INIT(32'hAAAAAAEF)) 
     \STATE[1]_i_2__1 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE[1]_i_3__1 ),
        .I3(\n_0_STATE[1]_i_4__1 ),
        .I4(\n_0_STATE[2]_i_4__1 ),
        .O(\n_0_STATE[1]_i_2__1 ));
LUT6 #(
    .INIT(64'h57FFFF005700FF00)) 
     \STATE[1]_i_3__1 
       (.I0(ABILITY_MATCH),
        .I1(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I2(O1),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(LINK_TIMER_DONE),
        .O(\n_0_STATE[1]_i_3__1 ));
LUT6 #(
    .INIT(64'h7000000000000000)) 
     \STATE[1]_i_4__1 
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .I2(n_0_START_LINK_TIMER_REG_i_3__1),
        .I3(IDLE_MATCH),
        .I4(LINK_TIMER_DONE),
        .I5(\n_0_STATE_reg[0] ),
        .O(\n_0_STATE[1]_i_4__1 ));
LUT2 #(
    .INIT(4'h2)) 
     \STATE[2]_i_1__1 
       (.I0(\n_0_STATE[3]_i_3__1 ),
        .I1(\n_0_STATE[2]_i_2__1 ),
        .O(\n_0_STATE[2]_i_1__1 ));
LUT6 #(
    .INIT(64'hABBBBBABABABABAB)) 
     \STATE[2]_i_2__1 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE[2]_i_3__1 ),
        .I2(\n_0_STATE[2]_i_4__1 ),
        .I3(Q[8]),
        .I4(TOGGLE_RX),
        .I5(ABILITY_MATCH),
        .O(\n_0_STATE[2]_i_2__1 ));
LUT6 #(
    .INIT(64'h0F70007000700070)) 
     \STATE[2]_i_3__1 
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(n_0_START_LINK_TIMER_REG_i_5__1),
        .O(\n_0_STATE[2]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair375" *) 
   LUT5 #(
    .INIT(32'h00880888)) 
     \STATE[2]_i_4__1 
       (.I0(\n_0_STATE_reg[2] ),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(ABILITY_MATCH),
        .I4(O1),
        .O(\n_0_STATE[2]_i_4__1 ));
(* SOFT_HLUTNM = "soft_lutpair381" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \STATE[3]_i_1__1 
       (.I0(\n_0_STATE[3]_i_2__1 ),
        .I1(\n_0_STATE[3]_i_3__1 ),
        .I2(AN_SYNC_STATUS),
        .I3(AN_ENABLE_INT),
        .O(\n_0_STATE[3]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair377" *) 
   LUT5 #(
    .INIT(32'h00000203)) 
     \STATE[3]_i_2__1 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(AN_ENABLE_INT),
        .I4(\n_0_STATE_reg[2] ),
        .O(\n_0_STATE[3]_i_2__1 ));
LUT5 #(
    .INIT(32'h00000D00)) 
     \STATE[3]_i_3__1 
       (.I0(XMIT_CONFIG_INT),
        .I1(\n_0_STATE[3]_i_4__1 ),
        .I2(n_0_MR_RESTART_AN_INT_reg),
        .I3(AN_SYNC_STATUS),
        .I4(MR_AN_ENABLE_CHANGE),
        .O(\n_0_STATE[3]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair390" *) 
   LUT3 #(
    .INIT(8'hEF)) 
     \STATE[3]_i_4__1 
       (.I0(n_0_MASK_RUDI_CLKCOR_reg),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(RX_RUDI_INVALID),
        .O(\n_0_STATE[3]_i_4__1 ));
FDRE \STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[0]_i_1__1 ),
        .Q(\n_0_STATE_reg[0] ),
        .R(SRESET));
FDRE \STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[1]_i_1__1 ),
        .Q(\n_0_STATE_reg[1] ),
        .R(SRESET));
FDRE \STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[2]_i_1__1 ),
        .Q(\n_0_STATE_reg[2] ),
        .R(SRESET));
FDRE \STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[3]_i_1__1 ),
        .Q(\n_0_STATE_reg[3] ),
        .R(SRESET));
LUT5 #(
    .INIT(32'h00BF00AA)) 
     SYNC_STATUS_HELD_i_1__1
       (.I0(RXSYNC_STATUS),
        .I1(LINK_TIMER_SATURATED),
        .I2(PULSE4096),
        .I3(SRESET),
        .I4(SYNC_STATUS_HELD),
        .O(n_0_SYNC_STATUS_HELD_i_1__1));
FDRE SYNC_STATUS_HELD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_STATUS_HELD_i_1__1),
        .Q(SYNC_STATUS_HELD),
        .R(\<const0> ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_2__1 
       (.I0(\n_0_TIMER4096_reg[3] ),
        .O(\n_0_TIMER4096[0]_i_2__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_3__1 
       (.I0(\n_0_TIMER4096_reg[2] ),
        .O(\n_0_TIMER4096[0]_i_3__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_4__1 
       (.I0(\n_0_TIMER4096_reg[1] ),
        .O(\n_0_TIMER4096[0]_i_4__1 ));
LUT1 #(
    .INIT(2'h1)) 
     \TIMER4096[0]_i_5__1 
       (.I0(\n_0_TIMER4096_reg[0] ),
        .O(\n_0_TIMER4096[0]_i_5__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_2__1 
       (.I0(\n_0_TIMER4096_reg[7] ),
        .O(\n_0_TIMER4096[4]_i_2__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_3__1 
       (.I0(\n_0_TIMER4096_reg[6] ),
        .O(\n_0_TIMER4096[4]_i_3__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_4__1 
       (.I0(\n_0_TIMER4096_reg[5] ),
        .O(\n_0_TIMER4096[4]_i_4__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_5__1 
       (.I0(\n_0_TIMER4096_reg[4] ),
        .O(\n_0_TIMER4096[4]_i_5__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_2__1 
       (.I0(\n_0_TIMER4096_reg[11] ),
        .O(\n_0_TIMER4096[8]_i_2__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_3__1 
       (.I0(\n_0_TIMER4096_reg[10] ),
        .O(\n_0_TIMER4096[8]_i_3__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_4__1 
       (.I0(\n_0_TIMER4096_reg[9] ),
        .O(\n_0_TIMER4096[8]_i_4__1 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_5__1 
       (.I0(\n_0_TIMER4096_reg[8] ),
        .O(\n_0_TIMER4096[8]_i_5__1 ));
FDRE TIMER4096_MSB_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TIMER4096_reg[11] ),
        .Q(TIMER4096_MSB_REG),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[0]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[0] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[0]_i_1__1 
       (.CI(\<const0> ),
        .CO({\n_0_TIMER4096_reg[0]_i_1__1 ,\n_1_TIMER4096_reg[0]_i_1__1 ,\n_2_TIMER4096_reg[0]_i_1__1 ,\n_3_TIMER4096_reg[0]_i_1__1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .O({\n_4_TIMER4096_reg[0]_i_1__1 ,\n_5_TIMER4096_reg[0]_i_1__1 ,\n_6_TIMER4096_reg[0]_i_1__1 ,\n_7_TIMER4096_reg[0]_i_1__1 }),
        .S({\n_0_TIMER4096[0]_i_2__1 ,\n_0_TIMER4096[0]_i_3__1 ,\n_0_TIMER4096[0]_i_4__1 ,\n_0_TIMER4096[0]_i_5__1 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[8]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[10] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[8]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[11] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[0]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[1] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[0]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[2] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[0]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[3] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[4]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[4] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[4]_i_1__1 
       (.CI(\n_0_TIMER4096_reg[0]_i_1__1 ),
        .CO({\n_0_TIMER4096_reg[4]_i_1__1 ,\n_1_TIMER4096_reg[4]_i_1__1 ,\n_2_TIMER4096_reg[4]_i_1__1 ,\n_3_TIMER4096_reg[4]_i_1__1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_TIMER4096_reg[4]_i_1__1 ,\n_5_TIMER4096_reg[4]_i_1__1 ,\n_6_TIMER4096_reg[4]_i_1__1 ,\n_7_TIMER4096_reg[4]_i_1__1 }),
        .S({\n_0_TIMER4096[4]_i_2__1 ,\n_0_TIMER4096[4]_i_3__1 ,\n_0_TIMER4096[4]_i_4__1 ,\n_0_TIMER4096[4]_i_5__1 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[4]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[5] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[4]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[6] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[4]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[7] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[8]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[8] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[8]_i_1__1 
       (.CI(\n_0_TIMER4096_reg[4]_i_1__1 ),
        .CO({\NLW_TIMER4096_reg[8]_i_1__1_CO_UNCONNECTED [3],\n_1_TIMER4096_reg[8]_i_1__1 ,\n_2_TIMER4096_reg[8]_i_1__1 ,\n_3_TIMER4096_reg[8]_i_1__1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_TIMER4096_reg[8]_i_1__1 ,\n_5_TIMER4096_reg[8]_i_1__1 ,\n_6_TIMER4096_reg[8]_i_1__1 ,\n_7_TIMER4096_reg[8]_i_1__1 }),
        .S({\n_0_TIMER4096[8]_i_2__1 ,\n_0_TIMER4096[8]_i_3__1 ,\n_0_TIMER4096[8]_i_4__1 ,\n_0_TIMER4096[8]_i_5__1 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[8]_i_1__1 ),
        .Q(\n_0_TIMER4096_reg[9] ),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair383" *) 
   LUT4 #(
    .INIT(16'h00E2)) 
     TOGGLE_RX_i_1__1
       (.I0(TOGGLE_RX),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(RX_CONFIG_REG[11]),
        .I3(SRESET),
        .O(n_0_TOGGLE_RX_i_1__1));
FDRE TOGGLE_RX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TOGGLE_RX_i_1__1),
        .Q(TOGGLE_RX),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h000000000505AA2A)) 
     TOGGLE_TX_i_1__1
       (.I0(TOGGLE_TX),
        .I1(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(SGMII_PHY_STATUS1_out),
        .I5(SRESET),
        .O(n_0_TOGGLE_TX_i_1__1));
FDRE TOGGLE_TX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TOGGLE_TX_i_1__1),
        .Q(TOGGLE_TX),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000F8AA38AA)) 
     \TX_CONFIG_REG_INT[0]_i_1__1 
       (.I0(O5[0]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I21),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[0]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[10]_i_1__1 
       (.I0(O5[10]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I11),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[10]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[11]_i_1__1 
       (.I0(O5[11]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(TOGGLE_TX),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[11]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[12]_i_1__1 
       (.I0(O5[12]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I10),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[12]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[13]_i_1__1 
       (.I0(O5[13]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I9),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[13]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000AABA8A88)) 
     \TX_CONFIG_REG_INT[14]_i_1__1 
       (.I0(O5[14]),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[14]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[15]_i_1__1 
       (.I0(O5[15]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(TX_CONFIG_REG_INT1),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[15]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair391" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \TX_CONFIG_REG_INT[15]_i_2__1 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[0] ),
        .O(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[1]_i_1__1 
       (.I0(O5[1]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I20),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[1]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[2]_i_1__1 
       (.I0(O5[2]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I19),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[2]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[3]_i_1__1 
       (.I0(O5[3]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I18),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[3]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[4]_i_1__1 
       (.I0(O5[4]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I17),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[4]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[5]_i_1__1 
       (.I0(O5[5]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I16),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[5]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[6]_i_1__1 
       (.I0(O5[6]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I15),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[6]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[7]_i_1__1 
       (.I0(O5[7]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I14),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[7]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[8]_i_1__1 
       (.I0(O5[8]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I13),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[8]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[9]_i_1__1 
       (.I0(O5[9]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(I12),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[9]_i_1__1 ));
FDRE \TX_CONFIG_REG_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[0]_i_1__1 ),
        .Q(O5[0]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[10]_i_1__1 ),
        .Q(O5[10]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[11]_i_1__1 ),
        .Q(O5[11]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[12]_i_1__1 ),
        .Q(O5[12]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[13]_i_1__1 ),
        .Q(O5[13]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[14]_i_1__1 ),
        .Q(O5[14]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[15]_i_1__1 ),
        .Q(O5[15]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[1]_i_1__1 ),
        .Q(O5[1]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[2]_i_1__1 ),
        .Q(O5[2]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[3]_i_1__1 ),
        .Q(O5[3]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[4]_i_1__1 ),
        .Q(O5[4]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[5]_i_1__1 ),
        .Q(O5[5]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[6]_i_1__1 ),
        .Q(O5[6]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[7]_i_1__1 ),
        .Q(O5[7]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[8]_i_1__1 ),
        .Q(O5[8]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[9]_i_1__1 ),
        .Q(O5[9]),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'hFFFFFFFFABAAAAAA)) 
     XMIT_CONFIG_INT_i_1__1
       (.I0(n_0_XMIT_CONFIG_INT_i_2__5),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__1 ),
        .I4(AN_ENABLE_INT),
        .I5(SRESET),
        .O(n_0_XMIT_CONFIG_INT_i_1__1));
LUT6 #(
    .INIT(64'hAAAAA28AAAAAA288)) 
     XMIT_CONFIG_INT_i_2__5
       (.I0(XMIT_CONFIG_INT),
        .I1(\n_0_STATE_reg[0] ),
        .I2(\n_0_STATE_reg[3] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[1] ),
        .I5(AN_ENABLE_INT),
        .O(n_0_XMIT_CONFIG_INT_i_2__5));
FDRE XMIT_CONFIG_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_CONFIG_INT_i_1__1),
        .Q(XMIT_CONFIG_INT),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair386" *) 
   LUT4 #(
    .INIT(16'h0180)) 
     XMIT_DATA_INT_i_1__3
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(\n_0_STATE_reg[3] ),
        .O(XMIT_DATA_INT0));
FDRE XMIT_DATA_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(XMIT_DATA_INT0),
        .Q(XMIT_DATA_INT),
        .R(SRESET));
endmodule

(* ORIG_REF_NAME = "AUTO_NEG" *) 
module quadsgmiiAUTO_NEG__parameterized0_37
   (status_vector_ch1,
    XMIT_DATA_INT,
    O1,
    O2,
    XMIT_CONFIG_INT,
    Q,
    S,
    O4,
    I4,
    I5,
    MR_LP_ADV_ABILITY,
    O5,
    O6,
    O7,
    O8,
    MR_AN_COMPLETE,
    O9,
    O10,
    MR_LINK_STATUS,
    SRESET,
    userclk2,
    RESTART_AN_REG,
    AN_ENABLE_INT,
    CLEAR_STATUS_REG,
    RX_IDLE,
    I1,
    I2,
    I3,
    RX_RUDI_INVALID,
    O3,
    RX_CONFIG_REG,
    link_timer_value_ch1,
    I6,
    I7,
    I8,
    data_out,
    RXSYNC_STATUS,
    RX_CONFIG_VALID,
    CO,
    TX_CONFIG_REG_INT1,
    I9,
    I10,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16,
    I17,
    I18,
    I19,
    I20,
    I21,
    MASK_RUDI_BUFERR_TIMER0,
    SR);
  output [5:0]status_vector_ch1;
  output XMIT_DATA_INT;
  output O1;
  output O2;
  output XMIT_CONFIG_INT;
  output [8:0]Q;
  output [0:0]S;
  output [0:0]O4;
  output [0:0]I4;
  output [0:0]I5;
  output [1:0]MR_LP_ADV_ABILITY;
  output [15:0]O5;
  output O6;
  output O7;
  output O8;
  output MR_AN_COMPLETE;
  output [15:0]O9;
  output [8:0]O10;
  output MR_LINK_STATUS;
  input SRESET;
  input userclk2;
  input RESTART_AN_REG;
  input AN_ENABLE_INT;
  input CLEAR_STATUS_REG;
  input RX_IDLE;
  input I1;
  input I2;
  input I3;
  input RX_RUDI_INVALID;
  input [0:0]O3;
  input [15:0]RX_CONFIG_REG;
  input [8:0]link_timer_value_ch1;
  input [2:0]I6;
  input I7;
  input I8;
  input data_out;
  input RXSYNC_STATUS;
  input RX_CONFIG_VALID;
  input [0:0]CO;
  input TX_CONFIG_REG_INT1;
  input I9;
  input I10;
  input I11;
  input I12;
  input I13;
  input I14;
  input I15;
  input I16;
  input I17;
  input I18;
  input I19;
  input I20;
  input I21;
  input MASK_RUDI_BUFERR_TIMER0;
  input [0:0]SR;

  wire \<const0> ;
  wire \<const1> ;
  wire ABILITY_MATCH;
  wire ABILITY_MATCH_2;
  wire ACKNOWLEDGE_MATCH_2;
  wire ACKNOWLEDGE_MATCH_3;
  wire AN_ENABLE_INT;
  wire AN_SYNC_STATUS;
  wire CLEAR_STATUS_REG;
  wire CLEAR_STATUS_REG1;
  wire CLEAR_STATUS_REG2;
  wire [0:0]CO;
  wire CONFIG_REG_MATCH_COMB;
  wire CONSISTENCY_MATCH;
  wire CONSISTENCY_MATCH_COMB;
  wire GENERATE_REMOTE_FAULT;
  wire GENERATE_REMOTE_FAULT0;
  wire I1;
  wire I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I18;
  wire I19;
  wire I2;
  wire I20;
  wire I21;
  wire I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire [2:0]I6;
  wire I7;
  wire I8;
  wire I9;
  wire IDLE_INSERTED;
  wire IDLE_INSERTED0;
  wire IDLE_INSERTED_REG1;
  wire IDLE_INSERTED_REG2;
  wire IDLE_INSERTED_REG3;
  wire IDLE_INSERTED_REG30;
  wire IDLE_INSERTED_REG4;
  wire IDLE_MATCH;
  wire IDLE_MATCH_2;
  wire IDLE_REMOVED;
  wire IDLE_REMOVED0;
  wire IDLE_REMOVED_REG1;
  wire IDLE_REMOVED_REG2;
  wire LINK_TIMER_DONE;
  wire LINK_TIMER_SATURATED;
  wire LINK_TIMER_SATURATED_COMB;
  wire [8:0]LINK_TIMER_reg__0__0;
  wire [8:0]MASK_RUDI_BUFERR_TIMER;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MR_AN_COMPLETE;
  wire MR_AN_ENABLE_CHANGE;
  wire MR_AN_ENABLE_CHANGE0;
  wire MR_AN_ENABLE_REG1;
  wire MR_AN_ENABLE_REG2;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire MR_RESTART_AN_SET_REG1;
  wire MR_RESTART_AN_SET_REG2;
  wire O1;
  wire [8:0]O10;
  wire O2;
  wire [0:0]O3;
  wire [0:0]O4;
  wire [15:0]O5;
  wire O6;
  wire O7;
  wire O8;
  wire [15:0]O9;
  wire [3:0]PREVIOUS_STATE;
  wire PULSE4096;
  wire PULSE40960;
  wire [8:0]Q;
  wire RESTART_AN_REG;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_SNAPSHOT;
  wire RX_CONFIG_VALID;
  wire RX_IDLE;
  wire RX_IDLE_REG1;
  wire RX_IDLE_REG2;
  wire RX_RUDI_INVALID;
  wire [1:0]RX_RUDI_INVALID_DELAY;
  wire RX_RUDI_INVALID_DELAY0;
  wire RX_RUDI_INVALID_REG;
  wire [0:0]S;
  wire SGMII_PHY_STATUS1_out;
  wire [0:0]SR;
  wire SRESET;
  wire START_LINK_TIMER;
  wire START_LINK_TIMER_REG;
  wire START_LINK_TIMER_REG2;
  wire SYNC_STATUS_HELD;
  wire TIMER4096_MSB_REG;
  wire TOGGLE_RX;
  wire TOGGLE_TX;
  wire TX_CONFIG_REG_INT1;
  wire XMIT_CONFIG_INT;
  wire XMIT_DATA_INT;
  wire XMIT_DATA_INT0;
  wire data_out;
  wire [8:0]link_timer_value_ch1;
  wire n_0_ABILITY_MATCH_2_i_1__0;
  wire n_0_ABILITY_MATCH_i_1__0;
  wire n_0_ACKNOWLEDGE_MATCH_2_i_1__0;
  wire n_0_ACKNOWLEDGE_MATCH_3_i_1__0;
  wire n_0_ACKNOWLEDGE_MATCH_3_reg;
  wire n_0_AN_SYNC_STATUS_i_1__0;
  wire \n_0_BASEX_REMOTE_FAULT[1]_i_1__0 ;
  wire n_0_GENERATE_REMOTE_FAULT_i_2__0;
  wire n_0_IDLE_MATCH_2_i_1__0;
  wire n_0_IDLE_MATCH_i_1__0;
  wire \n_0_LINK_TIMER[8]_i_1__0 ;
  wire \n_0_LINK_TIMER[8]_i_3__0 ;
  wire n_0_LINK_TIMER_DONE_i_1__0;
  wire n_0_LINK_TIMER_DONE_i_2__0;
  wire n_0_LINK_TIMER_DONE_i_3__0;
  wire n_0_LINK_TIMER_SATURATED_i_2__0;
  wire n_0_LINK_TIMER_SATURATED_i_3__0;
  wire n_0_LINK_TIMER_SATURATED_i_4__0;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1__0 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__0 ;
  wire n_0_MASK_RUDI_BUFERR_i_1__0;
  wire n_0_MASK_RUDI_BUFERR_reg;
  wire n_0_MASK_RUDI_CLKCOR_i_1__0;
  wire n_0_MASK_RUDI_CLKCOR_i_2__0;
  wire n_0_MASK_RUDI_CLKCOR_reg;
  wire n_0_MR_AN_COMPLETE_i_1__0;
  wire n_0_MR_LINK_STATUS_i_1__0;
  wire \n_0_MR_LP_ADV_ABILITY_INT[11]_i_1__0 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[12]_i_1__0 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[13]_i_1__0 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[15]_i_1__0 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[16]_i_1__0 ;
  wire n_0_MR_REMOTE_FAULT_i_1__0;
  wire n_0_MR_RESTART_AN_INT_i_1__0;
  wire n_0_MR_RESTART_AN_INT_i_2__0;
  wire n_0_MR_RESTART_AN_INT_reg;
  wire \n_0_RX_CONFIG_REG_REG_reg[12] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[13] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[6] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[7] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[8] ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_3__0 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_4__0 ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[12] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[13] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[15] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[6] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[7] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[8] ;
  wire n_0_SGMII_PHY_STATUS_i_1__0;
  wire \n_0_SGMII_SPEED[0]_i_1__0 ;
  wire \n_0_SGMII_SPEED[1]_i_1__0 ;
  wire n_0_START_LINK_TIMER_REG_i_2__0;
  wire n_0_START_LINK_TIMER_REG_i_3__0;
  wire n_0_START_LINK_TIMER_REG_i_4__0;
  wire n_0_START_LINK_TIMER_REG_i_5__0;
  wire \n_0_STATE[0]_i_1__0 ;
  wire \n_0_STATE[0]_i_2__0 ;
  wire \n_0_STATE[0]_i_3__0 ;
  wire \n_0_STATE[0]_i_4__0 ;
  wire \n_0_STATE[0]_i_5__0 ;
  wire \n_0_STATE[1]_i_1__0 ;
  wire \n_0_STATE[1]_i_2__0 ;
  wire \n_0_STATE[1]_i_3__0 ;
  wire \n_0_STATE[1]_i_4__0 ;
  wire \n_0_STATE[2]_i_1__0 ;
  wire \n_0_STATE[2]_i_2__0 ;
  wire \n_0_STATE[2]_i_3__0 ;
  wire \n_0_STATE[2]_i_4__0 ;
  wire \n_0_STATE[3]_i_1__0 ;
  wire \n_0_STATE[3]_i_2__0 ;
  wire \n_0_STATE[3]_i_3__0 ;
  wire \n_0_STATE[3]_i_4__0 ;
  wire \n_0_STATE_reg[0] ;
  wire \n_0_STATE_reg[1] ;
  wire \n_0_STATE_reg[2] ;
  wire \n_0_STATE_reg[3] ;
  wire n_0_SYNC_STATUS_HELD_i_1__0;
  wire \n_0_TIMER4096[0]_i_2__0 ;
  wire \n_0_TIMER4096[0]_i_3__0 ;
  wire \n_0_TIMER4096[0]_i_4__0 ;
  wire \n_0_TIMER4096[0]_i_5__0 ;
  wire \n_0_TIMER4096[4]_i_2__0 ;
  wire \n_0_TIMER4096[4]_i_3__0 ;
  wire \n_0_TIMER4096[4]_i_4__0 ;
  wire \n_0_TIMER4096[4]_i_5__0 ;
  wire \n_0_TIMER4096[8]_i_2__0 ;
  wire \n_0_TIMER4096[8]_i_3__0 ;
  wire \n_0_TIMER4096[8]_i_4__0 ;
  wire \n_0_TIMER4096[8]_i_5__0 ;
  wire \n_0_TIMER4096_reg[0] ;
  wire \n_0_TIMER4096_reg[0]_i_1__0 ;
  wire \n_0_TIMER4096_reg[10] ;
  wire \n_0_TIMER4096_reg[11] ;
  wire \n_0_TIMER4096_reg[1] ;
  wire \n_0_TIMER4096_reg[2] ;
  wire \n_0_TIMER4096_reg[3] ;
  wire \n_0_TIMER4096_reg[4] ;
  wire \n_0_TIMER4096_reg[4]_i_1__0 ;
  wire \n_0_TIMER4096_reg[5] ;
  wire \n_0_TIMER4096_reg[6] ;
  wire \n_0_TIMER4096_reg[7] ;
  wire \n_0_TIMER4096_reg[8] ;
  wire \n_0_TIMER4096_reg[9] ;
  wire n_0_TOGGLE_RX_i_1__0;
  wire n_0_TOGGLE_TX_i_1__0;
  wire \n_0_TX_CONFIG_REG_INT[0]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[10]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[11]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[12]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[13]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[14]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[15]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[15]_i_2__0 ;
  wire \n_0_TX_CONFIG_REG_INT[1]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[2]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[3]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[4]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[5]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[6]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[7]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[8]_i_1__0 ;
  wire \n_0_TX_CONFIG_REG_INT[9]_i_1__0 ;
  wire n_0_XMIT_CONFIG_INT_i_1__0;
  wire n_0_XMIT_CONFIG_INT_i_2__4;
  wire \n_1_TIMER4096_reg[0]_i_1__0 ;
  wire \n_1_TIMER4096_reg[4]_i_1__0 ;
  wire \n_1_TIMER4096_reg[8]_i_1__0 ;
  wire n_2_LINK_TIMER_SATURATED_reg_i_1__0;
  wire \n_2_TIMER4096_reg[0]_i_1__0 ;
  wire \n_2_TIMER4096_reg[4]_i_1__0 ;
  wire \n_2_TIMER4096_reg[8]_i_1__0 ;
  wire n_3_LINK_TIMER_SATURATED_reg_i_1__0;
  wire \n_3_TIMER4096_reg[0]_i_1__0 ;
  wire \n_3_TIMER4096_reg[4]_i_1__0 ;
  wire \n_3_TIMER4096_reg[8]_i_1__0 ;
  wire \n_4_TIMER4096_reg[0]_i_1__0 ;
  wire \n_4_TIMER4096_reg[4]_i_1__0 ;
  wire \n_4_TIMER4096_reg[8]_i_1__0 ;
  wire \n_5_TIMER4096_reg[0]_i_1__0 ;
  wire \n_5_TIMER4096_reg[4]_i_1__0 ;
  wire \n_5_TIMER4096_reg[8]_i_1__0 ;
  wire \n_6_TIMER4096_reg[0]_i_1__0 ;
  wire \n_6_TIMER4096_reg[4]_i_1__0 ;
  wire \n_6_TIMER4096_reg[8]_i_1__0 ;
  wire \n_7_TIMER4096_reg[0]_i_1__0 ;
  wire \n_7_TIMER4096_reg[4]_i_1__0 ;
  wire \n_7_TIMER4096_reg[8]_i_1__0 ;
  wire p_0_in0_in;
  wire p_0_in44_in;
  wire [8:0]plusOp;
  wire [5:0]status_vector_ch1;
  wire userclk2;
  wire [3:3]NLW_LINK_TIMER_SATURATED_reg_i_1__0_CO_UNCONNECTED;
  wire [3:0]NLW_LINK_TIMER_SATURATED_reg_i_1__0_O_UNCONNECTED;
  wire [3:3]\NLW_TIMER4096_reg[8]_i_1__0_CO_UNCONNECTED ;

LUT6 #(
    .INIT(64'h00000000000000E2)) 
     ABILITY_MATCH_2_i_1__0
       (.I0(ABILITY_MATCH_2),
        .I1(RX_CONFIG_VALID),
        .I2(CONFIG_REG_MATCH_COMB),
        .I3(RX_IDLE),
        .I4(n_0_MASK_RUDI_BUFERR_reg),
        .I5(SRESET),
        .O(n_0_ABILITY_MATCH_2_i_1__0));
LUT4 #(
    .INIT(16'h2002)) 
     ABILITY_MATCH_2_i_2__0
       (.I0(CO),
        .I1(O2),
        .I2(RX_CONFIG_REG[15]),
        .I3(p_0_in0_in),
        .O(CONFIG_REG_MATCH_COMB));
FDRE ABILITY_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ABILITY_MATCH_2_i_1__0),
        .Q(ABILITY_MATCH_2),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h00008F80)) 
     ABILITY_MATCH_i_1__0
       (.I0(CONFIG_REG_MATCH_COMB),
        .I1(ABILITY_MATCH_2),
        .I2(RX_CONFIG_VALID),
        .I3(ABILITY_MATCH),
        .I4(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ABILITY_MATCH_i_1__0));
(* SOFT_HLUTNM = "soft_lutpair259" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     ABILITY_MATCH_i_2__0
       (.I0(SRESET),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(RX_IDLE),
        .O(ACKNOWLEDGE_MATCH_3));
FDRE ABILITY_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ABILITY_MATCH_i_1__0),
        .Q(ABILITY_MATCH),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h0000E222)) 
     ACKNOWLEDGE_MATCH_2_i_1__0
       (.I0(ACKNOWLEDGE_MATCH_2),
        .I1(RX_CONFIG_VALID),
        .I2(p_0_in44_in),
        .I3(RX_CONFIG_REG[14]),
        .I4(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ACKNOWLEDGE_MATCH_2_i_1__0));
FDRE ACKNOWLEDGE_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ACKNOWLEDGE_MATCH_2_i_1__0),
        .Q(ACKNOWLEDGE_MATCH_2),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000E2222222)) 
     ACKNOWLEDGE_MATCH_3_i_1__0
       (.I0(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I1(RX_CONFIG_VALID),
        .I2(RX_CONFIG_REG[14]),
        .I3(p_0_in44_in),
        .I4(ACKNOWLEDGE_MATCH_2),
        .I5(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ACKNOWLEDGE_MATCH_3_i_1__0));
FDRE ACKNOWLEDGE_MATCH_3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ACKNOWLEDGE_MATCH_3_i_1__0),
        .Q(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hFFBFFF80)) 
     AN_SYNC_STATUS_i_1__0
       (.I0(SYNC_STATUS_HELD),
        .I1(PULSE4096),
        .I2(LINK_TIMER_SATURATED),
        .I3(RXSYNC_STATUS),
        .I4(AN_SYNC_STATUS),
        .O(n_0_AN_SYNC_STATUS_i_1__0));
FDRE AN_SYNC_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_AN_SYNC_STATUS_i_1__0),
        .Q(AN_SYNC_STATUS),
        .R(SRESET));
LUT4 #(
    .INIT(16'h030A)) 
     \BASEX_REMOTE_FAULT[1]_i_1__0 
       (.I0(status_vector_ch1[2]),
        .I1(RX_CONFIG_REG[15]),
        .I2(SRESET),
        .I3(SGMII_PHY_STATUS1_out),
        .O(\n_0_BASEX_REMOTE_FAULT[1]_i_1__0 ));
FDRE \BASEX_REMOTE_FAULT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_BASEX_REMOTE_FAULT[1]_i_1__0 ),
        .Q(status_vector_ch1[2]),
        .R(\<const0> ));
FDRE CLEAR_STATUS_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CLEAR_STATUS_REG),
        .Q(CLEAR_STATUS_REG1),
        .R(SRESET));
FDRE CLEAR_STATUS_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CLEAR_STATUS_REG1),
        .Q(CLEAR_STATUS_REG2),
        .R(SRESET));
LUT3 #(
    .INIT(8'h82)) 
     CONSISTENCY_MATCH_i_1__0
       (.I0(O3),
        .I1(\n_0_RX_CONFIG_SNAPSHOT_reg[15] ),
        .I2(RX_CONFIG_REG[15]),
        .O(CONSISTENCY_MATCH_COMB));
LUT4 #(
    .INIT(16'h9009)) 
     CONSISTENCY_MATCH_i_4__0
       (.I0(\n_0_RX_CONFIG_SNAPSHOT_reg[13] ),
        .I1(RX_CONFIG_REG[13]),
        .I2(\n_0_RX_CONFIG_SNAPSHOT_reg[12] ),
        .I3(RX_CONFIG_REG[12]),
        .O(I5));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_6__0
       (.I0(\n_0_RX_CONFIG_SNAPSHOT_reg[6] ),
        .I1(RX_CONFIG_REG[6]),
        .I2(RX_CONFIG_REG[7]),
        .I3(\n_0_RX_CONFIG_SNAPSHOT_reg[7] ),
        .I4(RX_CONFIG_REG[8]),
        .I5(\n_0_RX_CONFIG_SNAPSHOT_reg[8] ),
        .O(I4));
FDRE CONSISTENCY_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CONSISTENCY_MATCH_COMB),
        .Q(CONSISTENCY_MATCH),
        .R(SRESET));
LUT6 #(
    .INIT(64'h0000000004000000)) 
     GENERATE_REMOTE_FAULT_i_1__0
       (.I0(\n_0_STATE[3]_i_2__0 ),
        .I1(\n_0_STATE[3]_i_3__0 ),
        .I2(\n_0_STATE[2]_i_2__0 ),
        .I3(n_0_START_LINK_TIMER_REG_i_3__0),
        .I4(n_0_GENERATE_REMOTE_FAULT_i_2__0),
        .I5(\n_0_STATE[1]_i_2__0 ),
        .O(GENERATE_REMOTE_FAULT0));
(* SOFT_HLUTNM = "soft_lutpair262" *) 
   LUT2 #(
    .INIT(4'h2)) 
     GENERATE_REMOTE_FAULT_i_2__0
       (.I0(\n_0_STATE_reg[0] ),
        .I1(\n_0_STATE_reg[3] ),
        .O(n_0_GENERATE_REMOTE_FAULT_i_2__0));
FDRE GENERATE_REMOTE_FAULT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(GENERATE_REMOTE_FAULT0),
        .Q(GENERATE_REMOTE_FAULT),
        .R(SRESET));
GND GND
       (.G(\<const0> ));
FDRE IDLE_INSERTED_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED),
        .Q(IDLE_INSERTED_REG1),
        .R(SRESET));
FDRE IDLE_INSERTED_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG1),
        .Q(IDLE_INSERTED_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair250" *) 
   LUT2 #(
    .INIT(4'h2)) 
     IDLE_INSERTED_REG3_i_1__0
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE_REG2),
        .O(IDLE_INSERTED_REG30));
FDRE IDLE_INSERTED_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG30),
        .Q(IDLE_INSERTED_REG3),
        .R(SRESET));
FDRE IDLE_INSERTED_REG4_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG3),
        .Q(IDLE_INSERTED_REG4),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair253" *) 
   LUT4 #(
    .INIT(16'h4000)) 
     IDLE_INSERTED_i_1__0
       (.I0(XMIT_CONFIG_INT),
        .I1(I6[0]),
        .I2(I6[2]),
        .I3(I6[1]),
        .O(IDLE_INSERTED0));
FDRE IDLE_INSERTED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED0),
        .Q(IDLE_INSERTED),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair250" *) 
   LUT5 #(
    .INIT(32'h04FF0400)) 
     IDLE_MATCH_2_i_1__0
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE),
        .I2(IDLE_INSERTED_REG4),
        .I3(RX_IDLE_REG2),
        .I4(IDLE_MATCH_2),
        .O(n_0_IDLE_MATCH_2_i_1__0));
FDRE IDLE_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_IDLE_MATCH_2_i_1__0),
        .Q(IDLE_MATCH_2),
        .R(SRESET));
LUT6 #(
    .INIT(64'h4440FFFF44400000)) 
     IDLE_MATCH_i_1__0
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE),
        .I2(IDLE_REMOVED_REG2),
        .I3(IDLE_MATCH_2),
        .I4(RX_IDLE_REG2),
        .I5(IDLE_MATCH),
        .O(n_0_IDLE_MATCH_i_1__0));
FDRE IDLE_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_IDLE_MATCH_i_1__0),
        .Q(IDLE_MATCH),
        .R(SRESET));
FDRE IDLE_REMOVED_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED),
        .Q(IDLE_REMOVED_REG1),
        .R(SRESET));
FDRE IDLE_REMOVED_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED_REG1),
        .Q(IDLE_REMOVED_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair253" *) 
   LUT4 #(
    .INIT(16'h0100)) 
     IDLE_REMOVED_i_1__0
       (.I0(I6[2]),
        .I1(I6[1]),
        .I2(XMIT_CONFIG_INT),
        .I3(I6[0]),
        .O(IDLE_REMOVED0));
FDRE IDLE_REMOVED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED0),
        .Q(IDLE_REMOVED),
        .R(SRESET));
LUT1 #(
    .INIT(2'h1)) 
     \LINK_TIMER[0]_i_1__0 
       (.I0(LINK_TIMER_reg__0__0[0]),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair260" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \LINK_TIMER[1]_i_1__0 
       (.I0(LINK_TIMER_reg__0__0[0]),
        .I1(LINK_TIMER_reg__0__0[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair260" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \LINK_TIMER[2]_i_1__0 
       (.I0(LINK_TIMER_reg__0__0[2]),
        .I1(LINK_TIMER_reg__0__0[1]),
        .I2(LINK_TIMER_reg__0__0[0]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair247" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \LINK_TIMER[3]_i_1__0 
       (.I0(LINK_TIMER_reg__0__0[3]),
        .I1(LINK_TIMER_reg__0__0[2]),
        .I2(LINK_TIMER_reg__0__0[0]),
        .I3(LINK_TIMER_reg__0__0[1]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair247" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \LINK_TIMER[4]_i_1__0 
       (.I0(LINK_TIMER_reg__0__0[4]),
        .I1(LINK_TIMER_reg__0__0[3]),
        .I2(LINK_TIMER_reg__0__0[1]),
        .I3(LINK_TIMER_reg__0__0[0]),
        .I4(LINK_TIMER_reg__0__0[2]),
        .O(plusOp[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \LINK_TIMER[5]_i_1__0 
       (.I0(LINK_TIMER_reg__0__0[5]),
        .I1(LINK_TIMER_reg__0__0[2]),
        .I2(LINK_TIMER_reg__0__0[0]),
        .I3(LINK_TIMER_reg__0__0[1]),
        .I4(LINK_TIMER_reg__0__0[3]),
        .I5(LINK_TIMER_reg__0__0[4]),
        .O(plusOp[5]));
LUT2 #(
    .INIT(4'h6)) 
     \LINK_TIMER[6]_i_1__0 
       (.I0(LINK_TIMER_reg__0__0[6]),
        .I1(\n_0_LINK_TIMER[8]_i_3__0 ),
        .O(plusOp[6]));
(* SOFT_HLUTNM = "soft_lutpair255" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \LINK_TIMER[7]_i_1__0 
       (.I0(LINK_TIMER_reg__0__0[7]),
        .I1(\n_0_LINK_TIMER[8]_i_3__0 ),
        .I2(LINK_TIMER_reg__0__0[6]),
        .O(plusOp[7]));
LUT4 #(
    .INIT(16'hFFEA)) 
     \LINK_TIMER[8]_i_1__0 
       (.I0(START_LINK_TIMER_REG),
        .I1(LINK_TIMER_SATURATED),
        .I2(PULSE4096),
        .I3(SRESET),
        .O(\n_0_LINK_TIMER[8]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair255" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \LINK_TIMER[8]_i_2__0 
       (.I0(LINK_TIMER_reg__0__0[8]),
        .I1(LINK_TIMER_reg__0__0[6]),
        .I2(\n_0_LINK_TIMER[8]_i_3__0 ),
        .I3(LINK_TIMER_reg__0__0[7]),
        .O(plusOp[8]));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     \LINK_TIMER[8]_i_3__0 
       (.I0(LINK_TIMER_reg__0__0[5]),
        .I1(LINK_TIMER_reg__0__0[2]),
        .I2(LINK_TIMER_reg__0__0[0]),
        .I3(LINK_TIMER_reg__0__0[1]),
        .I4(LINK_TIMER_reg__0__0[3]),
        .I5(LINK_TIMER_reg__0__0[4]),
        .O(\n_0_LINK_TIMER[8]_i_3__0 ));
LUT6 #(
    .INIT(64'h0302000200000000)) 
     LINK_TIMER_DONE_i_1__0
       (.I0(LINK_TIMER_SATURATED),
        .I1(n_0_LINK_TIMER_DONE_i_2__0),
        .I2(n_0_START_LINK_TIMER_REG_i_2__0),
        .I3(LINK_TIMER_DONE),
        .I4(n_0_LINK_TIMER_DONE_i_3__0),
        .I5(\n_0_STATE[3]_i_3__0 ),
        .O(n_0_LINK_TIMER_DONE_i_1__0));
(* SOFT_HLUTNM = "soft_lutpair259" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     LINK_TIMER_DONE_i_2__0
       (.I0(START_LINK_TIMER_REG),
        .I1(START_LINK_TIMER_REG2),
        .I2(SRESET),
        .O(n_0_LINK_TIMER_DONE_i_2__0));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF8F)) 
     LINK_TIMER_DONE_i_3__0
       (.I0(ABILITY_MATCH),
        .I1(O1),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[3] ),
        .I5(\n_0_STATE_reg[0] ),
        .O(n_0_LINK_TIMER_DONE_i_3__0));
FDRE LINK_TIMER_DONE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_LINK_TIMER_DONE_i_1__0),
        .Q(LINK_TIMER_DONE),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_2__0
       (.I0(LINK_TIMER_reg__0__0[6]),
        .I1(link_timer_value_ch1[6]),
        .I2(LINK_TIMER_reg__0__0[7]),
        .I3(link_timer_value_ch1[7]),
        .I4(link_timer_value_ch1[8]),
        .I5(LINK_TIMER_reg__0__0[8]),
        .O(n_0_LINK_TIMER_SATURATED_i_2__0));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_3__0
       (.I0(link_timer_value_ch1[3]),
        .I1(LINK_TIMER_reg__0__0[3]),
        .I2(LINK_TIMER_reg__0__0[4]),
        .I3(link_timer_value_ch1[4]),
        .I4(LINK_TIMER_reg__0__0[5]),
        .I5(link_timer_value_ch1[5]),
        .O(n_0_LINK_TIMER_SATURATED_i_3__0));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_4__0
       (.I0(link_timer_value_ch1[2]),
        .I1(LINK_TIMER_reg__0__0[2]),
        .I2(LINK_TIMER_reg__0__0[0]),
        .I3(link_timer_value_ch1[0]),
        .I4(LINK_TIMER_reg__0__0[1]),
        .I5(link_timer_value_ch1[1]),
        .O(n_0_LINK_TIMER_SATURATED_i_4__0));
FDRE LINK_TIMER_SATURATED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(LINK_TIMER_SATURATED_COMB),
        .Q(LINK_TIMER_SATURATED),
        .R(SRESET));
CARRY4 LINK_TIMER_SATURATED_reg_i_1__0
       (.CI(\<const0> ),
        .CO({NLW_LINK_TIMER_SATURATED_reg_i_1__0_CO_UNCONNECTED[3],LINK_TIMER_SATURATED_COMB,n_2_LINK_TIMER_SATURATED_reg_i_1__0,n_3_LINK_TIMER_SATURATED_reg_i_1__0}),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_LINK_TIMER_SATURATED_reg_i_1__0_O_UNCONNECTED[3:0]),
        .S({\<const0> ,n_0_LINK_TIMER_SATURATED_i_2__0,n_0_LINK_TIMER_SATURATED_i_3__0,n_0_LINK_TIMER_SATURATED_i_4__0}));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[0] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[0]),
        .Q(LINK_TIMER_reg__0__0[0]),
        .R(\n_0_LINK_TIMER[8]_i_1__0 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[1] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[1]),
        .Q(LINK_TIMER_reg__0__0[1]),
        .R(\n_0_LINK_TIMER[8]_i_1__0 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[2] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[2]),
        .Q(LINK_TIMER_reg__0__0[2]),
        .R(\n_0_LINK_TIMER[8]_i_1__0 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[3] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[3]),
        .Q(LINK_TIMER_reg__0__0[3]),
        .R(\n_0_LINK_TIMER[8]_i_1__0 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[4] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[4]),
        .Q(LINK_TIMER_reg__0__0[4]),
        .R(\n_0_LINK_TIMER[8]_i_1__0 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[5] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[5]),
        .Q(LINK_TIMER_reg__0__0[5]),
        .R(\n_0_LINK_TIMER[8]_i_1__0 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[6] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[6]),
        .Q(LINK_TIMER_reg__0__0[6]),
        .R(\n_0_LINK_TIMER[8]_i_1__0 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[7] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[7]),
        .Q(LINK_TIMER_reg__0__0[7]),
        .R(\n_0_LINK_TIMER[8]_i_1__0 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[8] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[8]),
        .Q(LINK_TIMER_reg__0__0[8]),
        .R(\n_0_LINK_TIMER[8]_i_1__0 ));
LUT5 #(
    .INIT(32'hDF0000DF)) 
     \MASK_RUDI_BUFERR_TIMER[0]_i_1__0 
       (.I0(data_out),
        .I1(I8),
        .I2(I7),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__0 ),
        .I4(MASK_RUDI_BUFERR_TIMER[0]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1__0 ));
LUT6 #(
    .INIT(64'hF3FF51550000A2AA)) 
     \MASK_RUDI_BUFERR_TIMER[1]_i_1__0 
       (.I0(MASK_RUDI_BUFERR_TIMER[0]),
        .I1(data_out),
        .I2(I8),
        .I3(I7),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__0 ),
        .I5(MASK_RUDI_BUFERR_TIMER[1]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1__0 ));
LUT5 #(
    .INIT(32'h0F070008)) 
     \MASK_RUDI_BUFERR_TIMER[2]_i_1__0 
       (.I0(MASK_RUDI_BUFERR_TIMER[1]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER0),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__0 ),
        .I4(MASK_RUDI_BUFERR_TIMER[2]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1__0 ));
LUT6 #(
    .INIT(64'h00FF007F00000080)) 
     \MASK_RUDI_BUFERR_TIMER[3]_i_1__0 
       (.I0(MASK_RUDI_BUFERR_TIMER[2]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER[1]),
        .I3(MASK_RUDI_BUFERR_TIMER0),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__0 ),
        .I5(MASK_RUDI_BUFERR_TIMER[3]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1__0 ));
LUT6 #(
    .INIT(64'hF3FFA2AA00005155)) 
     \MASK_RUDI_BUFERR_TIMER[4]_i_1__0 
       (.I0(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__0 ),
        .I1(data_out),
        .I2(I8),
        .I3(I7),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__0 ),
        .I5(MASK_RUDI_BUFERR_TIMER[4]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1__0 ));
LUT5 #(
    .INIT(32'h0F0D0002)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_1__0 
       (.I0(MASK_RUDI_BUFERR_TIMER[4]),
        .I1(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__0 ),
        .I2(MASK_RUDI_BUFERR_TIMER0),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__0 ),
        .I4(MASK_RUDI_BUFERR_TIMER[5]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1__0 ));
LUT4 #(
    .INIT(16'h7FFF)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_2__0 
       (.I0(MASK_RUDI_BUFERR_TIMER[2]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER[1]),
        .I3(MASK_RUDI_BUFERR_TIMER[3]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair251" *) 
   LUT4 #(
    .INIT(16'h0800)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_3__0 
       (.I0(MASK_RUDI_BUFERR_TIMER[8]),
        .I1(MASK_RUDI_BUFERR_TIMER[7]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__0 ),
        .I3(MASK_RUDI_BUFERR_TIMER[6]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair251" *) 
   LUT5 #(
    .INIT(32'h45414141)) 
     \MASK_RUDI_BUFERR_TIMER[6]_i_1__0 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__0 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair249" *) 
   LUT5 #(
    .INIT(32'h55045104)) 
     \MASK_RUDI_BUFERR_TIMER[7]_i_1__0 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__0 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair249" *) 
   LUT5 #(
    .INIT(32'h55550400)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_1__0 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__0 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1__0 ));
LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_3__0 
       (.I0(MASK_RUDI_BUFERR_TIMER[4]),
        .I1(MASK_RUDI_BUFERR_TIMER[2]),
        .I2(MASK_RUDI_BUFERR_TIMER[0]),
        .I3(MASK_RUDI_BUFERR_TIMER[1]),
        .I4(MASK_RUDI_BUFERR_TIMER[3]),
        .I5(MASK_RUDI_BUFERR_TIMER[5]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3__0 ));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1__0 ),
        .Q(MASK_RUDI_BUFERR_TIMER[0]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1__0 ),
        .Q(MASK_RUDI_BUFERR_TIMER[1]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1__0 ),
        .Q(MASK_RUDI_BUFERR_TIMER[2]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1__0 ),
        .Q(MASK_RUDI_BUFERR_TIMER[3]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1__0 ),
        .Q(MASK_RUDI_BUFERR_TIMER[4]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1__0 ),
        .Q(MASK_RUDI_BUFERR_TIMER[5]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1__0 ),
        .Q(MASK_RUDI_BUFERR_TIMER[6]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1__0 ),
        .Q(MASK_RUDI_BUFERR_TIMER[7]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1__0 ),
        .Q(MASK_RUDI_BUFERR_TIMER[8]),
        .S(SRESET));
LUT6 #(
    .INIT(64'h00005D5500000C00)) 
     MASK_RUDI_BUFERR_i_1__0
       (.I0(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3__0 ),
        .I1(I7),
        .I2(I8),
        .I3(data_out),
        .I4(SRESET),
        .I5(n_0_MASK_RUDI_BUFERR_reg),
        .O(n_0_MASK_RUDI_BUFERR_i_1__0));
FDRE MASK_RUDI_BUFERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MASK_RUDI_BUFERR_i_1__0),
        .Q(n_0_MASK_RUDI_BUFERR_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0000BF0000000F00)) 
     MASK_RUDI_CLKCOR_i_1__0
       (.I0(RX_RUDI_INVALID),
        .I1(RX_RUDI_INVALID_REG),
        .I2(n_0_MASK_RUDI_CLKCOR_i_2__0),
        .I3(RXSYNC_STATUS),
        .I4(SRESET),
        .I5(n_0_MASK_RUDI_CLKCOR_reg),
        .O(n_0_MASK_RUDI_CLKCOR_i_1__0));
LUT3 #(
    .INIT(8'h01)) 
     MASK_RUDI_CLKCOR_i_2__0
       (.I0(I6[2]),
        .I1(I6[1]),
        .I2(I6[0]),
        .O(n_0_MASK_RUDI_CLKCOR_i_2__0));
FDRE MASK_RUDI_CLKCOR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MASK_RUDI_CLKCOR_i_1__0),
        .Q(n_0_MASK_RUDI_CLKCOR_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2222322222202220)) 
     MR_AN_COMPLETE_i_1__0
       (.I0(MR_AN_COMPLETE),
        .I1(SRESET),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[3] ),
        .I5(\n_0_STATE_reg[0] ),
        .O(n_0_MR_AN_COMPLETE_i_1__0));
FDRE MR_AN_COMPLETE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_AN_COMPLETE_i_1__0),
        .Q(MR_AN_COMPLETE),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h6)) 
     MR_AN_ENABLE_CHANGE_i_1__0
       (.I0(MR_AN_ENABLE_REG1),
        .I1(MR_AN_ENABLE_REG2),
        .O(MR_AN_ENABLE_CHANGE0));
FDRE MR_AN_ENABLE_CHANGE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_AN_ENABLE_CHANGE0),
        .Q(MR_AN_ENABLE_CHANGE),
        .R(SRESET));
FDRE MR_AN_ENABLE_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(AN_ENABLE_INT),
        .Q(MR_AN_ENABLE_REG1),
        .R(SRESET));
FDRE MR_AN_ENABLE_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_AN_ENABLE_REG1),
        .Q(MR_AN_ENABLE_REG2),
        .R(SRESET));
LUT5 #(
    .INIT(32'h0000BA00)) 
     MR_LINK_STATUS_i_1__0
       (.I0(MR_LINK_STATUS),
        .I1(CLEAR_STATUS_REG2),
        .I2(CLEAR_STATUS_REG1),
        .I3(XMIT_DATA_INT),
        .I4(SRESET),
        .O(n_0_MR_LINK_STATUS_i_1__0));
FDRE MR_LINK_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_LINK_STATUS_i_1__0),
        .Q(MR_LINK_STATUS),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[11]_i_1__0 
       (.I0(RX_CONFIG_REG[10]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O8),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[11]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair254" *) 
   LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[12]_i_1__0 
       (.I0(RX_CONFIG_REG[11]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O7),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[12]_i_1__0 ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[13]_i_1__0 
       (.I0(RX_CONFIG_REG[12]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(MR_LP_ADV_ABILITY[0]),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[13]_i_1__0 ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[15]_i_1__0 
       (.I0(RX_CONFIG_REG[14]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O6),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[15]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair256" *) 
   LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[16]_i_1__0 
       (.I0(RX_CONFIG_REG[15]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(MR_LP_ADV_ABILITY[1]),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[16]_i_1__0 ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[11]_i_1__0 ),
        .Q(O8),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[12]_i_1__0 ),
        .Q(O7),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[13]_i_1__0 ),
        .Q(MR_LP_ADV_ABILITY[0]),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[15]_i_1__0 ),
        .Q(O6),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[16] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[16]_i_1__0 ),
        .Q(MR_LP_ADV_ABILITY[1]),
        .R(\<const0> ));
FDRE \MR_NP_RX_INT_reg[10] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[9]),
        .Q(O9[9]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[10]),
        .Q(O9[10]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[11]),
        .Q(O9[11]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[12]),
        .Q(O9[12]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[14] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[13]),
        .Q(O9[13]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[14]),
        .Q(O9[14]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[16] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[15]),
        .Q(O9[15]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[0]),
        .Q(O9[0]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[1]),
        .Q(O9[1]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[2]),
        .Q(O9[2]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[3]),
        .Q(O9[3]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[4]),
        .Q(O9[4]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[5]),
        .Q(O9[5]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[6]),
        .Q(O9[6]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[8] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[7]),
        .Q(O9[7]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[9] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[8]),
        .Q(O9[8]),
        .R(SRESET));
LUT6 #(
    .INIT(64'h0000BBFB000000F0)) 
     MR_REMOTE_FAULT_i_1__0
       (.I0(CLEAR_STATUS_REG2),
        .I1(CLEAR_STATUS_REG1),
        .I2(GENERATE_REMOTE_FAULT),
        .I3(MR_LP_ADV_ABILITY[1]),
        .I4(SRESET),
        .I5(status_vector_ch1[5]),
        .O(n_0_MR_REMOTE_FAULT_i_1__0));
FDRE MR_REMOTE_FAULT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_REMOTE_FAULT_i_1__0),
        .Q(status_vector_ch1[5]),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h1010331000003300)) 
     MR_RESTART_AN_INT_i_1__0
       (.I0(n_0_MR_RESTART_AN_INT_i_2__0),
        .I1(SRESET),
        .I2(AN_ENABLE_INT),
        .I3(MR_RESTART_AN_SET_REG1),
        .I4(MR_RESTART_AN_SET_REG2),
        .I5(n_0_MR_RESTART_AN_INT_reg),
        .O(n_0_MR_RESTART_AN_INT_i_1__0));
(* SOFT_HLUTNM = "soft_lutpair248" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     MR_RESTART_AN_INT_i_2__0
       (.I0(\n_0_STATE_reg[0] ),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .O(n_0_MR_RESTART_AN_INT_i_2__0));
FDRE MR_RESTART_AN_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_RESTART_AN_INT_i_1__0),
        .Q(n_0_MR_RESTART_AN_INT_reg),
        .R(\<const0> ));
FDRE MR_RESTART_AN_SET_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESTART_AN_REG),
        .Q(MR_RESTART_AN_SET_REG1),
        .R(SRESET));
FDRE MR_RESTART_AN_SET_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_RESTART_AN_SET_REG1),
        .Q(MR_RESTART_AN_SET_REG2),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[0] ),
        .Q(PREVIOUS_STATE[0]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[1] ),
        .Q(PREVIOUS_STATE[1]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[2] ),
        .Q(PREVIOUS_STATE[2]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[3] ),
        .Q(PREVIOUS_STATE[3]),
        .R(SRESET));
LUT2 #(
    .INIT(4'h2)) 
     PULSE4096_i_1__0
       (.I0(TIMER4096_MSB_REG),
        .I1(\n_0_TIMER4096_reg[11] ),
        .O(PULSE40960));
FDRE PULSE4096_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(PULSE40960),
        .Q(PULSE4096),
        .R(SRESET));
FDRE RECEIVED_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I3),
        .Q(O2),
        .R(\<const0> ));
FDRE RUDI_INVALID_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY[1]),
        .Q(status_vector_ch1[0]),
        .R(SRESET));
FDRE RX_CONFIG_REG_NULL_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(O1),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_REG_reg[0] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[0]),
        .Q(Q[0]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[10] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[10]),
        .Q(Q[7]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[11] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[11]),
        .Q(Q[8]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[12] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[12]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[12] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[13] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[13]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[13] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[14] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[14]),
        .Q(p_0_in44_in),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[15] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[15]),
        .Q(p_0_in0_in),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[1] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[1]),
        .Q(Q[1]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[2] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[2]),
        .Q(Q[2]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[3] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[3]),
        .Q(Q[3]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[4] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[4]),
        .Q(Q[4]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[5] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[5]),
        .Q(Q[5]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[6] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[6]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[6] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[7] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[7]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[7] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[8] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[8]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[8] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[9] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[9]),
        .Q(Q[6]),
        .R(SR));
LUT6 #(
    .INIT(64'h0008000000000008)) 
     \RX_CONFIG_SNAPSHOT[15]_i_1__0 
       (.I0(CO),
        .I1(\n_0_RX_CONFIG_SNAPSHOT[15]_i_3__0 ),
        .I2(\n_0_RX_CONFIG_SNAPSHOT[15]_i_4__0 ),
        .I3(O2),
        .I4(RX_CONFIG_REG[15]),
        .I5(p_0_in0_in),
        .O(RX_CONFIG_SNAPSHOT));
LUT5 #(
    .INIT(32'h00000020)) 
     \RX_CONFIG_SNAPSHOT[15]_i_3__0 
       (.I0(RX_CONFIG_VALID),
        .I1(ABILITY_MATCH),
        .I2(ABILITY_MATCH_2),
        .I3(n_0_MASK_RUDI_BUFERR_reg),
        .I4(RX_IDLE),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair257" *) 
   LUT4 #(
    .INIT(16'h0040)) 
     \RX_CONFIG_SNAPSHOT[15]_i_4__0 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[0] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_4__0 ));
LUT4 #(
    .INIT(16'h9009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_6__0 
       (.I0(\n_0_RX_CONFIG_REG_REG_reg[13] ),
        .I1(RX_CONFIG_REG[13]),
        .I2(\n_0_RX_CONFIG_REG_REG_reg[12] ),
        .I3(RX_CONFIG_REG[12]),
        .O(O4));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_8__0 
       (.I0(\n_0_RX_CONFIG_REG_REG_reg[6] ),
        .I1(RX_CONFIG_REG[6]),
        .I2(RX_CONFIG_REG[7]),
        .I3(\n_0_RX_CONFIG_REG_REG_reg[7] ),
        .I4(RX_CONFIG_REG[8]),
        .I5(\n_0_RX_CONFIG_REG_REG_reg[8] ),
        .O(S));
FDRE \RX_CONFIG_SNAPSHOT_reg[0] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[0]),
        .Q(O10[0]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[10] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[10]),
        .Q(O10[7]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[11] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[11]),
        .Q(O10[8]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[12] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[12]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[12] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[13] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[13]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[13] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[15] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[15]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[15] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[1] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[1]),
        .Q(O10[1]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[2] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[2]),
        .Q(O10[2]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[3] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[3]),
        .Q(O10[3]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[4] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[4]),
        .Q(O10[4]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[5] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[5]),
        .Q(O10[5]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[6] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[6]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[6] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[7] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[7]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[7] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[8] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[8]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[8] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[9] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[9]),
        .Q(O10[6]),
        .R(SRESET));
FDRE RX_IDLE_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE),
        .Q(RX_IDLE_REG1),
        .R(SRESET));
FDRE RX_IDLE_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE_REG1),
        .Q(RX_IDLE_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair261" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \RX_RUDI_INVALID_DELAY[0]_i_1__0 
       (.I0(RX_RUDI_INVALID),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(n_0_MASK_RUDI_CLKCOR_reg),
        .O(RX_RUDI_INVALID_DELAY0));
FDRE \RX_RUDI_INVALID_DELAY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY0),
        .Q(RX_RUDI_INVALID_DELAY[0]),
        .R(SRESET));
FDRE \RX_RUDI_INVALID_DELAY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY[0]),
        .Q(RX_RUDI_INVALID_DELAY[1]),
        .R(SRESET));
FDRE RX_RUDI_INVALID_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(RX_RUDI_INVALID_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair256" *) 
   LUT4 #(
    .INIT(16'h00E2)) 
     SGMII_PHY_STATUS_i_1__0
       (.I0(status_vector_ch1[1]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(RX_CONFIG_REG[15]),
        .I3(SRESET),
        .O(n_0_SGMII_PHY_STATUS_i_1__0));
FDRE SGMII_PHY_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SGMII_PHY_STATUS_i_1__0),
        .Q(status_vector_ch1[1]),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'hB8)) 
     \SGMII_SPEED[0]_i_1__0 
       (.I0(RX_CONFIG_REG[10]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(status_vector_ch1[3]),
        .O(\n_0_SGMII_SPEED[0]_i_1__0 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SGMII_SPEED[1]_i_1__0 
       (.I0(RX_CONFIG_REG[11]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(status_vector_ch1[4]),
        .O(\n_0_SGMII_SPEED[1]_i_1__0 ));
LUT6 #(
    .INIT(64'h0008000000000000)) 
     \SGMII_SPEED[1]_i_2__0 
       (.I0(n_0_START_LINK_TIMER_REG_i_3__0),
        .I1(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I2(PREVIOUS_STATE[3]),
        .I3(PREVIOUS_STATE[2]),
        .I4(PREVIOUS_STATE[0]),
        .I5(PREVIOUS_STATE[1]),
        .O(SGMII_PHY_STATUS1_out));
FDRE \SGMII_SPEED_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_SGMII_SPEED[0]_i_1__0 ),
        .Q(status_vector_ch1[3]),
        .R(SRESET));
FDSE \SGMII_SPEED_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_SGMII_SPEED[1]_i_1__0 ),
        .Q(status_vector_ch1[4]),
        .S(SRESET));
FDRE START_LINK_TIMER_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(START_LINK_TIMER_REG),
        .Q(START_LINK_TIMER_REG2),
        .R(SRESET));
LUT6 #(
    .INIT(64'hAAAAEAAAFFFFFFFF)) 
     START_LINK_TIMER_REG_i_1__0
       (.I0(n_0_START_LINK_TIMER_REG_i_2__0),
        .I1(LINK_TIMER_DONE),
        .I2(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I3(n_0_START_LINK_TIMER_REG_i_3__0),
        .I4(n_0_START_LINK_TIMER_REG_i_4__0),
        .I5(\n_0_STATE[3]_i_3__0 ),
        .O(START_LINK_TIMER));
LUT6 #(
    .INIT(64'h0000300200000002)) 
     START_LINK_TIMER_REG_i_2__0
       (.I0(AN_ENABLE_INT),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[2] ),
        .I5(n_0_START_LINK_TIMER_REG_i_5__0),
        .O(n_0_START_LINK_TIMER_REG_i_2__0));
(* SOFT_HLUTNM = "soft_lutpair246" *) 
   LUT2 #(
    .INIT(4'h2)) 
     START_LINK_TIMER_REG_i_3__0
       (.I0(\n_0_STATE_reg[2] ),
        .I1(\n_0_STATE_reg[1] ),
        .O(n_0_START_LINK_TIMER_REG_i_3__0));
(* SOFT_HLUTNM = "soft_lutpair258" *) 
   LUT2 #(
    .INIT(4'h8)) 
     START_LINK_TIMER_REG_i_4__0
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .O(n_0_START_LINK_TIMER_REG_i_4__0));
(* SOFT_HLUTNM = "soft_lutpair258" *) 
   LUT4 #(
    .INIT(16'h0080)) 
     START_LINK_TIMER_REG_i_5__0
       (.I0(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I1(ABILITY_MATCH),
        .I2(CONSISTENCY_MATCH),
        .I3(O1),
        .O(n_0_START_LINK_TIMER_REG_i_5__0));
FDRE START_LINK_TIMER_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(START_LINK_TIMER),
        .Q(START_LINK_TIMER_REG),
        .R(SRESET));
LUT5 #(
    .INIT(32'h0000AAA2)) 
     \STATE[0]_i_1__0 
       (.I0(\n_0_STATE[3]_i_3__0 ),
        .I1(\n_0_STATE[0]_i_2__0 ),
        .I2(\n_0_STATE[0]_i_3__0 ),
        .I3(\n_0_STATE[0]_i_4__0 ),
        .I4(\n_0_STATE_reg[3] ),
        .O(\n_0_STATE[0]_i_1__0 ));
LUT6 #(
    .INIT(64'hFBF8F8FCFBFBF8FF)) 
     \STATE[0]_i_2__0 
       (.I0(n_0_START_LINK_TIMER_REG_i_4__0),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[0] ),
        .I4(LINK_TIMER_DONE),
        .I5(AN_ENABLE_INT),
        .O(\n_0_STATE[0]_i_2__0 ));
LUT6 #(
    .INIT(64'h0000000044444664)) 
     \STATE[0]_i_3__0 
       (.I0(ABILITY_MATCH),
        .I1(\n_0_STATE_reg[0] ),
        .I2(TOGGLE_RX),
        .I3(Q[8]),
        .I4(O1),
        .I5(\n_0_STATE[0]_i_5__0 ),
        .O(\n_0_STATE[0]_i_3__0 ));
LUT6 #(
    .INIT(64'h0202002002220020)) 
     \STATE[0]_i_4__0 
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(ABILITY_MATCH),
        .I3(O1),
        .I4(\n_0_STATE_reg[0] ),
        .I5(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .O(\n_0_STATE[0]_i_4__0 ));
LUT2 #(
    .INIT(4'h7)) 
     \STATE[0]_i_5__0 
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .O(\n_0_STATE[0]_i_5__0 ));
(* SOFT_HLUTNM = "soft_lutpair252" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \STATE[1]_i_1__0 
       (.I0(\n_0_STATE[3]_i_3__0 ),
        .I1(\n_0_STATE[1]_i_2__0 ),
        .O(\n_0_STATE[1]_i_1__0 ));
LUT5 #(
    .INIT(32'hAAAAAAEF)) 
     \STATE[1]_i_2__0 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE[1]_i_3__0 ),
        .I3(\n_0_STATE[1]_i_4__0 ),
        .I4(\n_0_STATE[2]_i_4__0 ),
        .O(\n_0_STATE[1]_i_2__0 ));
LUT6 #(
    .INIT(64'h57FFFF005700FF00)) 
     \STATE[1]_i_3__0 
       (.I0(ABILITY_MATCH),
        .I1(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I2(O1),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(LINK_TIMER_DONE),
        .O(\n_0_STATE[1]_i_3__0 ));
LUT6 #(
    .INIT(64'h7000000000000000)) 
     \STATE[1]_i_4__0 
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .I2(n_0_START_LINK_TIMER_REG_i_3__0),
        .I3(IDLE_MATCH),
        .I4(LINK_TIMER_DONE),
        .I5(\n_0_STATE_reg[0] ),
        .O(\n_0_STATE[1]_i_4__0 ));
LUT2 #(
    .INIT(4'h2)) 
     \STATE[2]_i_1__0 
       (.I0(\n_0_STATE[3]_i_3__0 ),
        .I1(\n_0_STATE[2]_i_2__0 ),
        .O(\n_0_STATE[2]_i_1__0 ));
LUT6 #(
    .INIT(64'hABBBBBABABABABAB)) 
     \STATE[2]_i_2__0 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE[2]_i_3__0 ),
        .I2(\n_0_STATE[2]_i_4__0 ),
        .I3(Q[8]),
        .I4(TOGGLE_RX),
        .I5(ABILITY_MATCH),
        .O(\n_0_STATE[2]_i_2__0 ));
LUT6 #(
    .INIT(64'h0F70007000700070)) 
     \STATE[2]_i_3__0 
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(n_0_START_LINK_TIMER_REG_i_5__0),
        .O(\n_0_STATE[2]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair246" *) 
   LUT5 #(
    .INIT(32'h00880888)) 
     \STATE[2]_i_4__0 
       (.I0(\n_0_STATE_reg[2] ),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(ABILITY_MATCH),
        .I4(O1),
        .O(\n_0_STATE[2]_i_4__0 ));
(* SOFT_HLUTNM = "soft_lutpair252" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \STATE[3]_i_1__0 
       (.I0(\n_0_STATE[3]_i_2__0 ),
        .I1(\n_0_STATE[3]_i_3__0 ),
        .I2(AN_SYNC_STATUS),
        .I3(AN_ENABLE_INT),
        .O(\n_0_STATE[3]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair248" *) 
   LUT5 #(
    .INIT(32'h00000203)) 
     \STATE[3]_i_2__0 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(AN_ENABLE_INT),
        .I4(\n_0_STATE_reg[2] ),
        .O(\n_0_STATE[3]_i_2__0 ));
LUT5 #(
    .INIT(32'h00000D00)) 
     \STATE[3]_i_3__0 
       (.I0(XMIT_CONFIG_INT),
        .I1(\n_0_STATE[3]_i_4__0 ),
        .I2(n_0_MR_RESTART_AN_INT_reg),
        .I3(AN_SYNC_STATUS),
        .I4(MR_AN_ENABLE_CHANGE),
        .O(\n_0_STATE[3]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair261" *) 
   LUT3 #(
    .INIT(8'hEF)) 
     \STATE[3]_i_4__0 
       (.I0(n_0_MASK_RUDI_CLKCOR_reg),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(RX_RUDI_INVALID),
        .O(\n_0_STATE[3]_i_4__0 ));
FDRE \STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[0]_i_1__0 ),
        .Q(\n_0_STATE_reg[0] ),
        .R(SRESET));
FDRE \STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[1]_i_1__0 ),
        .Q(\n_0_STATE_reg[1] ),
        .R(SRESET));
FDRE \STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[2]_i_1__0 ),
        .Q(\n_0_STATE_reg[2] ),
        .R(SRESET));
FDRE \STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[3]_i_1__0 ),
        .Q(\n_0_STATE_reg[3] ),
        .R(SRESET));
LUT5 #(
    .INIT(32'h00BF00AA)) 
     SYNC_STATUS_HELD_i_1__0
       (.I0(RXSYNC_STATUS),
        .I1(LINK_TIMER_SATURATED),
        .I2(PULSE4096),
        .I3(SRESET),
        .I4(SYNC_STATUS_HELD),
        .O(n_0_SYNC_STATUS_HELD_i_1__0));
FDRE SYNC_STATUS_HELD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_STATUS_HELD_i_1__0),
        .Q(SYNC_STATUS_HELD),
        .R(\<const0> ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_2__0 
       (.I0(\n_0_TIMER4096_reg[3] ),
        .O(\n_0_TIMER4096[0]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_3__0 
       (.I0(\n_0_TIMER4096_reg[2] ),
        .O(\n_0_TIMER4096[0]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_4__0 
       (.I0(\n_0_TIMER4096_reg[1] ),
        .O(\n_0_TIMER4096[0]_i_4__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \TIMER4096[0]_i_5__0 
       (.I0(\n_0_TIMER4096_reg[0] ),
        .O(\n_0_TIMER4096[0]_i_5__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_2__0 
       (.I0(\n_0_TIMER4096_reg[7] ),
        .O(\n_0_TIMER4096[4]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_3__0 
       (.I0(\n_0_TIMER4096_reg[6] ),
        .O(\n_0_TIMER4096[4]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_4__0 
       (.I0(\n_0_TIMER4096_reg[5] ),
        .O(\n_0_TIMER4096[4]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_5__0 
       (.I0(\n_0_TIMER4096_reg[4] ),
        .O(\n_0_TIMER4096[4]_i_5__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_2__0 
       (.I0(\n_0_TIMER4096_reg[11] ),
        .O(\n_0_TIMER4096[8]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_3__0 
       (.I0(\n_0_TIMER4096_reg[10] ),
        .O(\n_0_TIMER4096[8]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_4__0 
       (.I0(\n_0_TIMER4096_reg[9] ),
        .O(\n_0_TIMER4096[8]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_5__0 
       (.I0(\n_0_TIMER4096_reg[8] ),
        .O(\n_0_TIMER4096[8]_i_5__0 ));
FDRE TIMER4096_MSB_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TIMER4096_reg[11] ),
        .Q(TIMER4096_MSB_REG),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[0]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[0] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[0]_i_1__0 
       (.CI(\<const0> ),
        .CO({\n_0_TIMER4096_reg[0]_i_1__0 ,\n_1_TIMER4096_reg[0]_i_1__0 ,\n_2_TIMER4096_reg[0]_i_1__0 ,\n_3_TIMER4096_reg[0]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .O({\n_4_TIMER4096_reg[0]_i_1__0 ,\n_5_TIMER4096_reg[0]_i_1__0 ,\n_6_TIMER4096_reg[0]_i_1__0 ,\n_7_TIMER4096_reg[0]_i_1__0 }),
        .S({\n_0_TIMER4096[0]_i_2__0 ,\n_0_TIMER4096[0]_i_3__0 ,\n_0_TIMER4096[0]_i_4__0 ,\n_0_TIMER4096[0]_i_5__0 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[8]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[10] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[8]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[11] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[0]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[1] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[0]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[2] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[0]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[3] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[4]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[4] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[4]_i_1__0 
       (.CI(\n_0_TIMER4096_reg[0]_i_1__0 ),
        .CO({\n_0_TIMER4096_reg[4]_i_1__0 ,\n_1_TIMER4096_reg[4]_i_1__0 ,\n_2_TIMER4096_reg[4]_i_1__0 ,\n_3_TIMER4096_reg[4]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_TIMER4096_reg[4]_i_1__0 ,\n_5_TIMER4096_reg[4]_i_1__0 ,\n_6_TIMER4096_reg[4]_i_1__0 ,\n_7_TIMER4096_reg[4]_i_1__0 }),
        .S({\n_0_TIMER4096[4]_i_2__0 ,\n_0_TIMER4096[4]_i_3__0 ,\n_0_TIMER4096[4]_i_4__0 ,\n_0_TIMER4096[4]_i_5__0 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[4]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[5] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[4]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[6] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[4]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[7] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[8]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[8] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[8]_i_1__0 
       (.CI(\n_0_TIMER4096_reg[4]_i_1__0 ),
        .CO({\NLW_TIMER4096_reg[8]_i_1__0_CO_UNCONNECTED [3],\n_1_TIMER4096_reg[8]_i_1__0 ,\n_2_TIMER4096_reg[8]_i_1__0 ,\n_3_TIMER4096_reg[8]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_TIMER4096_reg[8]_i_1__0 ,\n_5_TIMER4096_reg[8]_i_1__0 ,\n_6_TIMER4096_reg[8]_i_1__0 ,\n_7_TIMER4096_reg[8]_i_1__0 }),
        .S({\n_0_TIMER4096[8]_i_2__0 ,\n_0_TIMER4096[8]_i_3__0 ,\n_0_TIMER4096[8]_i_4__0 ,\n_0_TIMER4096[8]_i_5__0 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[8]_i_1__0 ),
        .Q(\n_0_TIMER4096_reg[9] ),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair254" *) 
   LUT4 #(
    .INIT(16'h00E2)) 
     TOGGLE_RX_i_1__0
       (.I0(TOGGLE_RX),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(RX_CONFIG_REG[11]),
        .I3(SRESET),
        .O(n_0_TOGGLE_RX_i_1__0));
FDRE TOGGLE_RX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TOGGLE_RX_i_1__0),
        .Q(TOGGLE_RX),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h000000000505AA2A)) 
     TOGGLE_TX_i_1__0
       (.I0(TOGGLE_TX),
        .I1(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(SGMII_PHY_STATUS1_out),
        .I5(SRESET),
        .O(n_0_TOGGLE_TX_i_1__0));
FDRE TOGGLE_TX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TOGGLE_TX_i_1__0),
        .Q(TOGGLE_TX),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000F8AA38AA)) 
     \TX_CONFIG_REG_INT[0]_i_1__0 
       (.I0(O5[0]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I21),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[0]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[10]_i_1__0 
       (.I0(O5[10]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I11),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[10]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[11]_i_1__0 
       (.I0(O5[11]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(TOGGLE_TX),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[11]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[12]_i_1__0 
       (.I0(O5[12]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I10),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[12]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[13]_i_1__0 
       (.I0(O5[13]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I9),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[13]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000AABA8A88)) 
     \TX_CONFIG_REG_INT[14]_i_1__0 
       (.I0(O5[14]),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[14]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[15]_i_1__0 
       (.I0(O5[15]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(TX_CONFIG_REG_INT1),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[15]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair262" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \TX_CONFIG_REG_INT[15]_i_2__0 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[0] ),
        .O(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[1]_i_1__0 
       (.I0(O5[1]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I20),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[1]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[2]_i_1__0 
       (.I0(O5[2]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I19),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[2]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[3]_i_1__0 
       (.I0(O5[3]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I18),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[3]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[4]_i_1__0 
       (.I0(O5[4]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I17),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[4]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[5]_i_1__0 
       (.I0(O5[5]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I16),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[5]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[6]_i_1__0 
       (.I0(O5[6]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I15),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[6]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[7]_i_1__0 
       (.I0(O5[7]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I14),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[7]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[8]_i_1__0 
       (.I0(O5[8]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I13),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[8]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[9]_i_1__0 
       (.I0(O5[9]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(I12),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[9]_i_1__0 ));
FDRE \TX_CONFIG_REG_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[0]_i_1__0 ),
        .Q(O5[0]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[10]_i_1__0 ),
        .Q(O5[10]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[11]_i_1__0 ),
        .Q(O5[11]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[12]_i_1__0 ),
        .Q(O5[12]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[13]_i_1__0 ),
        .Q(O5[13]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[14]_i_1__0 ),
        .Q(O5[14]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[15]_i_1__0 ),
        .Q(O5[15]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[1]_i_1__0 ),
        .Q(O5[1]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[2]_i_1__0 ),
        .Q(O5[2]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[3]_i_1__0 ),
        .Q(O5[3]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[4]_i_1__0 ),
        .Q(O5[4]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[5]_i_1__0 ),
        .Q(O5[5]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[6]_i_1__0 ),
        .Q(O5[6]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[7]_i_1__0 ),
        .Q(O5[7]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[8]_i_1__0 ),
        .Q(O5[8]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[9]_i_1__0 ),
        .Q(O5[9]),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'hFFFFFFFFABAAAAAA)) 
     XMIT_CONFIG_INT_i_1__0
       (.I0(n_0_XMIT_CONFIG_INT_i_2__4),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2__0 ),
        .I4(AN_ENABLE_INT),
        .I5(SRESET),
        .O(n_0_XMIT_CONFIG_INT_i_1__0));
LUT6 #(
    .INIT(64'hAAAAA28AAAAAA288)) 
     XMIT_CONFIG_INT_i_2__4
       (.I0(XMIT_CONFIG_INT),
        .I1(\n_0_STATE_reg[0] ),
        .I2(\n_0_STATE_reg[3] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[1] ),
        .I5(AN_ENABLE_INT),
        .O(n_0_XMIT_CONFIG_INT_i_2__4));
FDRE XMIT_CONFIG_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_CONFIG_INT_i_1__0),
        .Q(XMIT_CONFIG_INT),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair257" *) 
   LUT4 #(
    .INIT(16'h0180)) 
     XMIT_DATA_INT_i_1__1
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(\n_0_STATE_reg[3] ),
        .O(XMIT_DATA_INT0));
FDRE XMIT_DATA_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(XMIT_DATA_INT0),
        .Q(XMIT_DATA_INT),
        .R(SRESET));
endmodule

(* ORIG_REF_NAME = "AUTO_NEG" *) 
module quadsgmiiAUTO_NEG__parameterized0_46
   (status_vector_ch0,
    XMIT_DATA_INT,
    O1,
    O2,
    XMIT_CONFIG_INT,
    Q,
    S,
    O4,
    I4,
    I5,
    MR_LP_ADV_ABILITY,
    O5,
    O6,
    O7,
    O8,
    MR_AN_COMPLETE,
    O9,
    O10,
    MR_LINK_STATUS,
    SRESET,
    userclk2,
    RESTART_AN_REG,
    AN_ENABLE_INT,
    CLEAR_STATUS_REG,
    RX_IDLE,
    I1,
    I2,
    I3,
    RX_RUDI_INVALID,
    O3,
    RX_CONFIG_REG,
    link_timer_value_ch0,
    I6,
    I7,
    I8,
    data_out,
    RXSYNC_STATUS,
    RX_CONFIG_VALID,
    CO,
    TX_CONFIG_REG_INT1,
    I9,
    I10,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16,
    I17,
    I18,
    I19,
    I20,
    I21,
    MASK_RUDI_BUFERR_TIMER0,
    SR);
  output [5:0]status_vector_ch0;
  output XMIT_DATA_INT;
  output O1;
  output O2;
  output XMIT_CONFIG_INT;
  output [8:0]Q;
  output [0:0]S;
  output [0:0]O4;
  output [0:0]I4;
  output [0:0]I5;
  output [1:0]MR_LP_ADV_ABILITY;
  output [15:0]O5;
  output O6;
  output O7;
  output O8;
  output MR_AN_COMPLETE;
  output [15:0]O9;
  output [8:0]O10;
  output MR_LINK_STATUS;
  input SRESET;
  input userclk2;
  input RESTART_AN_REG;
  input AN_ENABLE_INT;
  input CLEAR_STATUS_REG;
  input RX_IDLE;
  input I1;
  input I2;
  input I3;
  input RX_RUDI_INVALID;
  input [0:0]O3;
  input [15:0]RX_CONFIG_REG;
  input [8:0]link_timer_value_ch0;
  input [2:0]I6;
  input I7;
  input I8;
  input data_out;
  input RXSYNC_STATUS;
  input RX_CONFIG_VALID;
  input [0:0]CO;
  input TX_CONFIG_REG_INT1;
  input I9;
  input I10;
  input I11;
  input I12;
  input I13;
  input I14;
  input I15;
  input I16;
  input I17;
  input I18;
  input I19;
  input I20;
  input I21;
  input MASK_RUDI_BUFERR_TIMER0;
  input [0:0]SR;

  wire \<const0> ;
  wire \<const1> ;
  wire ABILITY_MATCH;
  wire ABILITY_MATCH_2;
  wire ACKNOWLEDGE_MATCH_2;
  wire ACKNOWLEDGE_MATCH_3;
  wire AN_ENABLE_INT;
  wire AN_SYNC_STATUS;
  wire CLEAR_STATUS_REG;
  wire CLEAR_STATUS_REG1;
  wire CLEAR_STATUS_REG2;
  wire [0:0]CO;
  wire CONFIG_REG_MATCH_COMB;
  wire CONSISTENCY_MATCH;
  wire CONSISTENCY_MATCH_COMB;
  wire GENERATE_REMOTE_FAULT;
  wire GENERATE_REMOTE_FAULT0;
  wire I1;
  wire I10;
  wire I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I18;
  wire I19;
  wire I2;
  wire I20;
  wire I21;
  wire I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire [2:0]I6;
  wire I7;
  wire I8;
  wire I9;
  wire IDLE_INSERTED;
  wire IDLE_INSERTED0;
  wire IDLE_INSERTED_REG1;
  wire IDLE_INSERTED_REG2;
  wire IDLE_INSERTED_REG3;
  wire IDLE_INSERTED_REG30;
  wire IDLE_INSERTED_REG4;
  wire IDLE_MATCH;
  wire IDLE_MATCH_2;
  wire IDLE_REMOVED;
  wire IDLE_REMOVED0;
  wire IDLE_REMOVED_REG1;
  wire IDLE_REMOVED_REG2;
  wire LINK_TIMER_DONE;
  wire LINK_TIMER_SATURATED;
  wire LINK_TIMER_SATURATED_COMB;
  wire [8:0]LINK_TIMER_reg__0;
  wire [8:0]MASK_RUDI_BUFERR_TIMER;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MR_AN_COMPLETE;
  wire MR_AN_ENABLE_CHANGE;
  wire MR_AN_ENABLE_CHANGE0;
  wire MR_AN_ENABLE_REG1;
  wire MR_AN_ENABLE_REG2;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire MR_RESTART_AN_SET_REG1;
  wire MR_RESTART_AN_SET_REG2;
  wire O1;
  wire [8:0]O10;
  wire O2;
  wire [0:0]O3;
  wire [0:0]O4;
  wire [15:0]O5;
  wire O6;
  wire O7;
  wire O8;
  wire [15:0]O9;
  wire [3:0]PREVIOUS_STATE;
  wire PULSE4096;
  wire PULSE40960;
  wire [8:0]Q;
  wire RESTART_AN_REG;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_SNAPSHOT;
  wire RX_CONFIG_VALID;
  wire RX_IDLE;
  wire RX_IDLE_REG1;
  wire RX_IDLE_REG2;
  wire RX_RUDI_INVALID;
  wire [1:0]RX_RUDI_INVALID_DELAY;
  wire RX_RUDI_INVALID_DELAY0;
  wire RX_RUDI_INVALID_REG;
  wire [0:0]S;
  wire SGMII_PHY_STATUS1_out;
  wire [0:0]SR;
  wire SRESET;
  wire START_LINK_TIMER;
  wire START_LINK_TIMER_REG;
  wire START_LINK_TIMER_REG2;
  wire SYNC_STATUS_HELD;
  wire TIMER4096_MSB_REG;
  wire TOGGLE_RX;
  wire TOGGLE_TX;
  wire TX_CONFIG_REG_INT1;
  wire XMIT_CONFIG_INT;
  wire XMIT_DATA_INT;
  wire XMIT_DATA_INT0;
  wire data_out;
  wire [8:0]link_timer_value_ch0;
  wire n_0_ABILITY_MATCH_2_i_1;
  wire n_0_ABILITY_MATCH_i_1;
  wire n_0_ACKNOWLEDGE_MATCH_2_i_1;
  wire n_0_ACKNOWLEDGE_MATCH_3_i_1;
  wire n_0_ACKNOWLEDGE_MATCH_3_reg;
  wire n_0_AN_SYNC_STATUS_i_1;
  wire \n_0_BASEX_REMOTE_FAULT[1]_i_1 ;
  wire n_0_GENERATE_REMOTE_FAULT_i_2;
  wire n_0_IDLE_MATCH_2_i_1;
  wire n_0_IDLE_MATCH_i_1;
  wire \n_0_LINK_TIMER[8]_i_1 ;
  wire \n_0_LINK_TIMER[8]_i_3 ;
  wire n_0_LINK_TIMER_DONE_i_1;
  wire n_0_LINK_TIMER_DONE_i_2;
  wire n_0_LINK_TIMER_DONE_i_3;
  wire n_0_LINK_TIMER_SATURATED_i_2;
  wire n_0_LINK_TIMER_SATURATED_i_3;
  wire n_0_LINK_TIMER_SATURATED_i_4;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1 ;
  wire \n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3 ;
  wire n_0_MASK_RUDI_BUFERR_i_1;
  wire n_0_MASK_RUDI_BUFERR_reg;
  wire n_0_MASK_RUDI_CLKCOR_i_1;
  wire n_0_MASK_RUDI_CLKCOR_i_2;
  wire n_0_MASK_RUDI_CLKCOR_reg;
  wire n_0_MR_AN_COMPLETE_i_1;
  wire n_0_MR_LINK_STATUS_i_1;
  wire \n_0_MR_LP_ADV_ABILITY_INT[11]_i_1 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[12]_i_1 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[13]_i_1 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[15]_i_1 ;
  wire \n_0_MR_LP_ADV_ABILITY_INT[16]_i_1 ;
  wire n_0_MR_REMOTE_FAULT_i_1;
  wire n_0_MR_RESTART_AN_INT_i_1;
  wire n_0_MR_RESTART_AN_INT_i_2;
  wire n_0_MR_RESTART_AN_INT_reg;
  wire \n_0_RX_CONFIG_REG_REG_reg[12] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[13] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[6] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[7] ;
  wire \n_0_RX_CONFIG_REG_REG_reg[8] ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_3 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_4 ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[12] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[13] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[15] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[6] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[7] ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[8] ;
  wire n_0_SGMII_PHY_STATUS_i_1;
  wire \n_0_SGMII_SPEED[0]_i_1 ;
  wire \n_0_SGMII_SPEED[1]_i_1 ;
  wire n_0_START_LINK_TIMER_REG_i_2;
  wire n_0_START_LINK_TIMER_REG_i_3;
  wire n_0_START_LINK_TIMER_REG_i_4;
  wire n_0_START_LINK_TIMER_REG_i_5;
  wire \n_0_STATE[0]_i_1 ;
  wire \n_0_STATE[0]_i_2 ;
  wire \n_0_STATE[0]_i_3 ;
  wire \n_0_STATE[0]_i_4 ;
  wire \n_0_STATE[0]_i_5 ;
  wire \n_0_STATE[1]_i_1 ;
  wire \n_0_STATE[1]_i_2 ;
  wire \n_0_STATE[1]_i_3 ;
  wire \n_0_STATE[1]_i_4 ;
  wire \n_0_STATE[2]_i_1 ;
  wire \n_0_STATE[2]_i_2 ;
  wire \n_0_STATE[2]_i_3 ;
  wire \n_0_STATE[2]_i_4 ;
  wire \n_0_STATE[3]_i_1 ;
  wire \n_0_STATE[3]_i_2 ;
  wire \n_0_STATE[3]_i_3 ;
  wire \n_0_STATE[3]_i_4 ;
  wire \n_0_STATE_reg[0] ;
  wire \n_0_STATE_reg[1] ;
  wire \n_0_STATE_reg[2] ;
  wire \n_0_STATE_reg[3] ;
  wire n_0_SYNC_STATUS_HELD_i_1;
  wire \n_0_TIMER4096[0]_i_2 ;
  wire \n_0_TIMER4096[0]_i_3 ;
  wire \n_0_TIMER4096[0]_i_4 ;
  wire \n_0_TIMER4096[0]_i_5 ;
  wire \n_0_TIMER4096[4]_i_2 ;
  wire \n_0_TIMER4096[4]_i_3 ;
  wire \n_0_TIMER4096[4]_i_4 ;
  wire \n_0_TIMER4096[4]_i_5 ;
  wire \n_0_TIMER4096[8]_i_2 ;
  wire \n_0_TIMER4096[8]_i_3 ;
  wire \n_0_TIMER4096[8]_i_4 ;
  wire \n_0_TIMER4096[8]_i_5 ;
  wire \n_0_TIMER4096_reg[0] ;
  wire \n_0_TIMER4096_reg[0]_i_1 ;
  wire \n_0_TIMER4096_reg[10] ;
  wire \n_0_TIMER4096_reg[11] ;
  wire \n_0_TIMER4096_reg[1] ;
  wire \n_0_TIMER4096_reg[2] ;
  wire \n_0_TIMER4096_reg[3] ;
  wire \n_0_TIMER4096_reg[4] ;
  wire \n_0_TIMER4096_reg[4]_i_1 ;
  wire \n_0_TIMER4096_reg[5] ;
  wire \n_0_TIMER4096_reg[6] ;
  wire \n_0_TIMER4096_reg[7] ;
  wire \n_0_TIMER4096_reg[8] ;
  wire \n_0_TIMER4096_reg[9] ;
  wire n_0_TOGGLE_RX_i_1;
  wire n_0_TOGGLE_TX_i_1;
  wire \n_0_TX_CONFIG_REG_INT[0]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[10]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[11]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[12]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[13]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[14]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[15]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[15]_i_2 ;
  wire \n_0_TX_CONFIG_REG_INT[1]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[2]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[3]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[4]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[5]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[6]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[7]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[8]_i_1 ;
  wire \n_0_TX_CONFIG_REG_INT[9]_i_1 ;
  wire n_0_XMIT_CONFIG_INT_i_1;
  wire n_0_XMIT_CONFIG_INT_i_2__3;
  wire \n_1_TIMER4096_reg[0]_i_1 ;
  wire \n_1_TIMER4096_reg[4]_i_1 ;
  wire \n_1_TIMER4096_reg[8]_i_1 ;
  wire n_2_LINK_TIMER_SATURATED_reg_i_1;
  wire \n_2_TIMER4096_reg[0]_i_1 ;
  wire \n_2_TIMER4096_reg[4]_i_1 ;
  wire \n_2_TIMER4096_reg[8]_i_1 ;
  wire n_3_LINK_TIMER_SATURATED_reg_i_1;
  wire \n_3_TIMER4096_reg[0]_i_1 ;
  wire \n_3_TIMER4096_reg[4]_i_1 ;
  wire \n_3_TIMER4096_reg[8]_i_1 ;
  wire \n_4_TIMER4096_reg[0]_i_1 ;
  wire \n_4_TIMER4096_reg[4]_i_1 ;
  wire \n_4_TIMER4096_reg[8]_i_1 ;
  wire \n_5_TIMER4096_reg[0]_i_1 ;
  wire \n_5_TIMER4096_reg[4]_i_1 ;
  wire \n_5_TIMER4096_reg[8]_i_1 ;
  wire \n_6_TIMER4096_reg[0]_i_1 ;
  wire \n_6_TIMER4096_reg[4]_i_1 ;
  wire \n_6_TIMER4096_reg[8]_i_1 ;
  wire \n_7_TIMER4096_reg[0]_i_1 ;
  wire \n_7_TIMER4096_reg[4]_i_1 ;
  wire \n_7_TIMER4096_reg[8]_i_1 ;
  wire p_0_in0_in;
  wire p_0_in44_in;
  wire [8:0]plusOp;
  wire [5:0]status_vector_ch0;
  wire userclk2;
  wire [3:3]NLW_LINK_TIMER_SATURATED_reg_i_1_CO_UNCONNECTED;
  wire [3:0]NLW_LINK_TIMER_SATURATED_reg_i_1_O_UNCONNECTED;
  wire [3:3]\NLW_TIMER4096_reg[8]_i_1_CO_UNCONNECTED ;

LUT6 #(
    .INIT(64'h00000000000000E2)) 
     ABILITY_MATCH_2_i_1
       (.I0(ABILITY_MATCH_2),
        .I1(RX_CONFIG_VALID),
        .I2(CONFIG_REG_MATCH_COMB),
        .I3(RX_IDLE),
        .I4(n_0_MASK_RUDI_BUFERR_reg),
        .I5(SRESET),
        .O(n_0_ABILITY_MATCH_2_i_1));
LUT4 #(
    .INIT(16'h2002)) 
     ABILITY_MATCH_2_i_2
       (.I0(CO),
        .I1(O2),
        .I2(RX_CONFIG_REG[15]),
        .I3(p_0_in0_in),
        .O(CONFIG_REG_MATCH_COMB));
FDRE ABILITY_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ABILITY_MATCH_2_i_1),
        .Q(ABILITY_MATCH_2),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h00008F80)) 
     ABILITY_MATCH_i_1
       (.I0(CONFIG_REG_MATCH_COMB),
        .I1(ABILITY_MATCH_2),
        .I2(RX_CONFIG_VALID),
        .I3(ABILITY_MATCH),
        .I4(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ABILITY_MATCH_i_1));
(* SOFT_HLUTNM = "soft_lutpair127" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     ABILITY_MATCH_i_2
       (.I0(SRESET),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(RX_IDLE),
        .O(ACKNOWLEDGE_MATCH_3));
FDRE ABILITY_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ABILITY_MATCH_i_1),
        .Q(ABILITY_MATCH),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h0000E222)) 
     ACKNOWLEDGE_MATCH_2_i_1
       (.I0(ACKNOWLEDGE_MATCH_2),
        .I1(RX_CONFIG_VALID),
        .I2(p_0_in44_in),
        .I3(RX_CONFIG_REG[14]),
        .I4(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ACKNOWLEDGE_MATCH_2_i_1));
FDRE ACKNOWLEDGE_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ACKNOWLEDGE_MATCH_2_i_1),
        .Q(ACKNOWLEDGE_MATCH_2),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000E2222222)) 
     ACKNOWLEDGE_MATCH_3_i_1
       (.I0(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I1(RX_CONFIG_VALID),
        .I2(RX_CONFIG_REG[14]),
        .I3(p_0_in44_in),
        .I4(ACKNOWLEDGE_MATCH_2),
        .I5(ACKNOWLEDGE_MATCH_3),
        .O(n_0_ACKNOWLEDGE_MATCH_3_i_1));
FDRE ACKNOWLEDGE_MATCH_3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ACKNOWLEDGE_MATCH_3_i_1),
        .Q(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hFFBFFF80)) 
     AN_SYNC_STATUS_i_1
       (.I0(SYNC_STATUS_HELD),
        .I1(PULSE4096),
        .I2(LINK_TIMER_SATURATED),
        .I3(RXSYNC_STATUS),
        .I4(AN_SYNC_STATUS),
        .O(n_0_AN_SYNC_STATUS_i_1));
FDRE AN_SYNC_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_AN_SYNC_STATUS_i_1),
        .Q(AN_SYNC_STATUS),
        .R(SRESET));
LUT4 #(
    .INIT(16'h030A)) 
     \BASEX_REMOTE_FAULT[1]_i_1 
       (.I0(status_vector_ch0[2]),
        .I1(RX_CONFIG_REG[15]),
        .I2(SRESET),
        .I3(SGMII_PHY_STATUS1_out),
        .O(\n_0_BASEX_REMOTE_FAULT[1]_i_1 ));
FDRE \BASEX_REMOTE_FAULT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_BASEX_REMOTE_FAULT[1]_i_1 ),
        .Q(status_vector_ch0[2]),
        .R(\<const0> ));
FDRE CLEAR_STATUS_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CLEAR_STATUS_REG),
        .Q(CLEAR_STATUS_REG1),
        .R(SRESET));
FDRE CLEAR_STATUS_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CLEAR_STATUS_REG1),
        .Q(CLEAR_STATUS_REG2),
        .R(SRESET));
LUT3 #(
    .INIT(8'h82)) 
     CONSISTENCY_MATCH_i_1
       (.I0(O3),
        .I1(\n_0_RX_CONFIG_SNAPSHOT_reg[15] ),
        .I2(RX_CONFIG_REG[15]),
        .O(CONSISTENCY_MATCH_COMB));
LUT4 #(
    .INIT(16'h9009)) 
     CONSISTENCY_MATCH_i_4
       (.I0(\n_0_RX_CONFIG_SNAPSHOT_reg[13] ),
        .I1(RX_CONFIG_REG[13]),
        .I2(\n_0_RX_CONFIG_SNAPSHOT_reg[12] ),
        .I3(RX_CONFIG_REG[12]),
        .O(I5));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_6
       (.I0(\n_0_RX_CONFIG_SNAPSHOT_reg[6] ),
        .I1(RX_CONFIG_REG[6]),
        .I2(RX_CONFIG_REG[7]),
        .I3(\n_0_RX_CONFIG_SNAPSHOT_reg[7] ),
        .I4(RX_CONFIG_REG[8]),
        .I5(\n_0_RX_CONFIG_SNAPSHOT_reg[8] ),
        .O(I4));
FDRE CONSISTENCY_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CONSISTENCY_MATCH_COMB),
        .Q(CONSISTENCY_MATCH),
        .R(SRESET));
LUT6 #(
    .INIT(64'h0000000004000000)) 
     GENERATE_REMOTE_FAULT_i_1
       (.I0(\n_0_STATE[3]_i_2 ),
        .I1(\n_0_STATE[3]_i_3 ),
        .I2(\n_0_STATE[2]_i_2 ),
        .I3(n_0_START_LINK_TIMER_REG_i_3),
        .I4(n_0_GENERATE_REMOTE_FAULT_i_2),
        .I5(\n_0_STATE[1]_i_2 ),
        .O(GENERATE_REMOTE_FAULT0));
(* SOFT_HLUTNM = "soft_lutpair130" *) 
   LUT2 #(
    .INIT(4'h2)) 
     GENERATE_REMOTE_FAULT_i_2
       (.I0(\n_0_STATE_reg[0] ),
        .I1(\n_0_STATE_reg[3] ),
        .O(n_0_GENERATE_REMOTE_FAULT_i_2));
FDRE GENERATE_REMOTE_FAULT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(GENERATE_REMOTE_FAULT0),
        .Q(GENERATE_REMOTE_FAULT),
        .R(SRESET));
GND GND
       (.G(\<const0> ));
FDRE IDLE_INSERTED_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED),
        .Q(IDLE_INSERTED_REG1),
        .R(SRESET));
FDRE IDLE_INSERTED_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG1),
        .Q(IDLE_INSERTED_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair118" *) 
   LUT2 #(
    .INIT(4'h2)) 
     IDLE_INSERTED_REG3_i_1
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE_REG2),
        .O(IDLE_INSERTED_REG30));
FDRE IDLE_INSERTED_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG30),
        .Q(IDLE_INSERTED_REG3),
        .R(SRESET));
FDRE IDLE_INSERTED_REG4_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED_REG3),
        .Q(IDLE_INSERTED_REG4),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair121" *) 
   LUT4 #(
    .INIT(16'h4000)) 
     IDLE_INSERTED_i_1
       (.I0(XMIT_CONFIG_INT),
        .I1(I6[0]),
        .I2(I6[2]),
        .I3(I6[1]),
        .O(IDLE_INSERTED0));
FDRE IDLE_INSERTED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_INSERTED0),
        .Q(IDLE_INSERTED),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair118" *) 
   LUT5 #(
    .INIT(32'h04FF0400)) 
     IDLE_MATCH_2_i_1
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE),
        .I2(IDLE_INSERTED_REG4),
        .I3(RX_IDLE_REG2),
        .I4(IDLE_MATCH_2),
        .O(n_0_IDLE_MATCH_2_i_1));
FDRE IDLE_MATCH_2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_IDLE_MATCH_2_i_1),
        .Q(IDLE_MATCH_2),
        .R(SRESET));
LUT6 #(
    .INIT(64'h4440FFFF44400000)) 
     IDLE_MATCH_i_1
       (.I0(IDLE_INSERTED_REG2),
        .I1(RX_IDLE),
        .I2(IDLE_REMOVED_REG2),
        .I3(IDLE_MATCH_2),
        .I4(RX_IDLE_REG2),
        .I5(IDLE_MATCH),
        .O(n_0_IDLE_MATCH_i_1));
FDRE IDLE_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_IDLE_MATCH_i_1),
        .Q(IDLE_MATCH),
        .R(SRESET));
FDRE IDLE_REMOVED_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED),
        .Q(IDLE_REMOVED_REG1),
        .R(SRESET));
FDRE IDLE_REMOVED_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED_REG1),
        .Q(IDLE_REMOVED_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair121" *) 
   LUT4 #(
    .INIT(16'h0100)) 
     IDLE_REMOVED_i_1
       (.I0(I6[2]),
        .I1(I6[1]),
        .I2(XMIT_CONFIG_INT),
        .I3(I6[0]),
        .O(IDLE_REMOVED0));
FDRE IDLE_REMOVED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(IDLE_REMOVED0),
        .Q(IDLE_REMOVED),
        .R(SRESET));
LUT1 #(
    .INIT(2'h1)) 
     \LINK_TIMER[0]_i_1 
       (.I0(LINK_TIMER_reg__0[0]),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair128" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \LINK_TIMER[1]_i_1 
       (.I0(LINK_TIMER_reg__0[0]),
        .I1(LINK_TIMER_reg__0[1]),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair128" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \LINK_TIMER[2]_i_1 
       (.I0(LINK_TIMER_reg__0[2]),
        .I1(LINK_TIMER_reg__0[1]),
        .I2(LINK_TIMER_reg__0[0]),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair115" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \LINK_TIMER[3]_i_1 
       (.I0(LINK_TIMER_reg__0[3]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(LINK_TIMER_reg__0[1]),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair115" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \LINK_TIMER[4]_i_1 
       (.I0(LINK_TIMER_reg__0[4]),
        .I1(LINK_TIMER_reg__0[3]),
        .I2(LINK_TIMER_reg__0[1]),
        .I3(LINK_TIMER_reg__0[0]),
        .I4(LINK_TIMER_reg__0[2]),
        .O(plusOp[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \LINK_TIMER[5]_i_1 
       (.I0(LINK_TIMER_reg__0[5]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(LINK_TIMER_reg__0[1]),
        .I4(LINK_TIMER_reg__0[3]),
        .I5(LINK_TIMER_reg__0[4]),
        .O(plusOp[5]));
LUT2 #(
    .INIT(4'h6)) 
     \LINK_TIMER[6]_i_1 
       (.I0(LINK_TIMER_reg__0[6]),
        .I1(\n_0_LINK_TIMER[8]_i_3 ),
        .O(plusOp[6]));
(* SOFT_HLUTNM = "soft_lutpair123" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \LINK_TIMER[7]_i_1 
       (.I0(LINK_TIMER_reg__0[7]),
        .I1(\n_0_LINK_TIMER[8]_i_3 ),
        .I2(LINK_TIMER_reg__0[6]),
        .O(plusOp[7]));
LUT4 #(
    .INIT(16'hFFEA)) 
     \LINK_TIMER[8]_i_1 
       (.I0(START_LINK_TIMER_REG),
        .I1(LINK_TIMER_SATURATED),
        .I2(PULSE4096),
        .I3(SRESET),
        .O(\n_0_LINK_TIMER[8]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair123" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \LINK_TIMER[8]_i_2 
       (.I0(LINK_TIMER_reg__0[8]),
        .I1(LINK_TIMER_reg__0[6]),
        .I2(\n_0_LINK_TIMER[8]_i_3 ),
        .I3(LINK_TIMER_reg__0[7]),
        .O(plusOp[8]));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     \LINK_TIMER[8]_i_3 
       (.I0(LINK_TIMER_reg__0[5]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(LINK_TIMER_reg__0[1]),
        .I4(LINK_TIMER_reg__0[3]),
        .I5(LINK_TIMER_reg__0[4]),
        .O(\n_0_LINK_TIMER[8]_i_3 ));
LUT6 #(
    .INIT(64'h0302000200000000)) 
     LINK_TIMER_DONE_i_1
       (.I0(LINK_TIMER_SATURATED),
        .I1(n_0_LINK_TIMER_DONE_i_2),
        .I2(n_0_START_LINK_TIMER_REG_i_2),
        .I3(LINK_TIMER_DONE),
        .I4(n_0_LINK_TIMER_DONE_i_3),
        .I5(\n_0_STATE[3]_i_3 ),
        .O(n_0_LINK_TIMER_DONE_i_1));
(* SOFT_HLUTNM = "soft_lutpair127" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     LINK_TIMER_DONE_i_2
       (.I0(START_LINK_TIMER_REG),
        .I1(START_LINK_TIMER_REG2),
        .I2(SRESET),
        .O(n_0_LINK_TIMER_DONE_i_2));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF8F)) 
     LINK_TIMER_DONE_i_3
       (.I0(ABILITY_MATCH),
        .I1(O1),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[3] ),
        .I5(\n_0_STATE_reg[0] ),
        .O(n_0_LINK_TIMER_DONE_i_3));
FDRE LINK_TIMER_DONE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_LINK_TIMER_DONE_i_1),
        .Q(LINK_TIMER_DONE),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_2
       (.I0(LINK_TIMER_reg__0[6]),
        .I1(link_timer_value_ch0[6]),
        .I2(LINK_TIMER_reg__0[7]),
        .I3(link_timer_value_ch0[7]),
        .I4(link_timer_value_ch0[8]),
        .I5(LINK_TIMER_reg__0[8]),
        .O(n_0_LINK_TIMER_SATURATED_i_2));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_3
       (.I0(link_timer_value_ch0[3]),
        .I1(LINK_TIMER_reg__0[3]),
        .I2(LINK_TIMER_reg__0[4]),
        .I3(link_timer_value_ch0[4]),
        .I4(LINK_TIMER_reg__0[5]),
        .I5(link_timer_value_ch0[5]),
        .O(n_0_LINK_TIMER_SATURATED_i_3));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     LINK_TIMER_SATURATED_i_4
       (.I0(link_timer_value_ch0[2]),
        .I1(LINK_TIMER_reg__0[2]),
        .I2(LINK_TIMER_reg__0[0]),
        .I3(link_timer_value_ch0[0]),
        .I4(LINK_TIMER_reg__0[1]),
        .I5(link_timer_value_ch0[1]),
        .O(n_0_LINK_TIMER_SATURATED_i_4));
FDRE LINK_TIMER_SATURATED_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(LINK_TIMER_SATURATED_COMB),
        .Q(LINK_TIMER_SATURATED),
        .R(SRESET));
CARRY4 LINK_TIMER_SATURATED_reg_i_1
       (.CI(\<const0> ),
        .CO({NLW_LINK_TIMER_SATURATED_reg_i_1_CO_UNCONNECTED[3],LINK_TIMER_SATURATED_COMB,n_2_LINK_TIMER_SATURATED_reg_i_1,n_3_LINK_TIMER_SATURATED_reg_i_1}),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_LINK_TIMER_SATURATED_reg_i_1_O_UNCONNECTED[3:0]),
        .S({\<const0> ,n_0_LINK_TIMER_SATURATED_i_2,n_0_LINK_TIMER_SATURATED_i_3,n_0_LINK_TIMER_SATURATED_i_4}));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[0] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[0]),
        .Q(LINK_TIMER_reg__0[0]),
        .R(\n_0_LINK_TIMER[8]_i_1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[1] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[1]),
        .Q(LINK_TIMER_reg__0[1]),
        .R(\n_0_LINK_TIMER[8]_i_1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[2] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[2]),
        .Q(LINK_TIMER_reg__0[2]),
        .R(\n_0_LINK_TIMER[8]_i_1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[3] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[3]),
        .Q(LINK_TIMER_reg__0[3]),
        .R(\n_0_LINK_TIMER[8]_i_1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[4] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[4]),
        .Q(LINK_TIMER_reg__0[4]),
        .R(\n_0_LINK_TIMER[8]_i_1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[5] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[5]),
        .Q(LINK_TIMER_reg__0[5]),
        .R(\n_0_LINK_TIMER[8]_i_1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[6] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[6]),
        .Q(LINK_TIMER_reg__0[6]),
        .R(\n_0_LINK_TIMER[8]_i_1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[7] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[7]),
        .Q(LINK_TIMER_reg__0[7]),
        .R(\n_0_LINK_TIMER[8]_i_1 ));
(* counter = "35" *) 
   FDRE \LINK_TIMER_reg[8] 
       (.C(userclk2),
        .CE(PULSE4096),
        .D(plusOp[8]),
        .Q(LINK_TIMER_reg__0[8]),
        .R(\n_0_LINK_TIMER[8]_i_1 ));
LUT5 #(
    .INIT(32'hDF0000DF)) 
     \MASK_RUDI_BUFERR_TIMER[0]_i_1 
       (.I0(data_out),
        .I1(I8),
        .I2(I7),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3 ),
        .I4(MASK_RUDI_BUFERR_TIMER[0]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1 ));
LUT6 #(
    .INIT(64'hF3FF51550000A2AA)) 
     \MASK_RUDI_BUFERR_TIMER[1]_i_1 
       (.I0(MASK_RUDI_BUFERR_TIMER[0]),
        .I1(data_out),
        .I2(I8),
        .I3(I7),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3 ),
        .I5(MASK_RUDI_BUFERR_TIMER[1]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1 ));
LUT5 #(
    .INIT(32'h0F070008)) 
     \MASK_RUDI_BUFERR_TIMER[2]_i_1 
       (.I0(MASK_RUDI_BUFERR_TIMER[1]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER0),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3 ),
        .I4(MASK_RUDI_BUFERR_TIMER[2]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1 ));
LUT6 #(
    .INIT(64'h00FF007F00000080)) 
     \MASK_RUDI_BUFERR_TIMER[3]_i_1 
       (.I0(MASK_RUDI_BUFERR_TIMER[2]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER[1]),
        .I3(MASK_RUDI_BUFERR_TIMER0),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3 ),
        .I5(MASK_RUDI_BUFERR_TIMER[3]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1 ));
LUT6 #(
    .INIT(64'hF3FFA2AA00005155)) 
     \MASK_RUDI_BUFERR_TIMER[4]_i_1 
       (.I0(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2 ),
        .I1(data_out),
        .I2(I8),
        .I3(I7),
        .I4(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3 ),
        .I5(MASK_RUDI_BUFERR_TIMER[4]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1 ));
LUT5 #(
    .INIT(32'h0F0D0002)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_1 
       (.I0(MASK_RUDI_BUFERR_TIMER[4]),
        .I1(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2 ),
        .I2(MASK_RUDI_BUFERR_TIMER0),
        .I3(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3 ),
        .I4(MASK_RUDI_BUFERR_TIMER[5]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1 ));
LUT4 #(
    .INIT(16'h7FFF)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_2 
       (.I0(MASK_RUDI_BUFERR_TIMER[2]),
        .I1(MASK_RUDI_BUFERR_TIMER[0]),
        .I2(MASK_RUDI_BUFERR_TIMER[1]),
        .I3(MASK_RUDI_BUFERR_TIMER[3]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair119" *) 
   LUT4 #(
    .INIT(16'h0800)) 
     \MASK_RUDI_BUFERR_TIMER[5]_i_3 
       (.I0(MASK_RUDI_BUFERR_TIMER[8]),
        .I1(MASK_RUDI_BUFERR_TIMER[7]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3 ),
        .I3(MASK_RUDI_BUFERR_TIMER[6]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair119" *) 
   LUT5 #(
    .INIT(32'h45414141)) 
     \MASK_RUDI_BUFERR_TIMER[6]_i_1 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair117" *) 
   LUT5 #(
    .INIT(32'h55045104)) 
     \MASK_RUDI_BUFERR_TIMER[7]_i_1 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair117" *) 
   LUT5 #(
    .INIT(32'h55550400)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_1 
       (.I0(MASK_RUDI_BUFERR_TIMER0),
        .I1(MASK_RUDI_BUFERR_TIMER[6]),
        .I2(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3 ),
        .I3(MASK_RUDI_BUFERR_TIMER[7]),
        .I4(MASK_RUDI_BUFERR_TIMER[8]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1 ));
LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_3 
       (.I0(MASK_RUDI_BUFERR_TIMER[4]),
        .I1(MASK_RUDI_BUFERR_TIMER[2]),
        .I2(MASK_RUDI_BUFERR_TIMER[0]),
        .I3(MASK_RUDI_BUFERR_TIMER[1]),
        .I4(MASK_RUDI_BUFERR_TIMER[3]),
        .I5(MASK_RUDI_BUFERR_TIMER[5]),
        .O(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_3 ));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[0]_i_1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[0]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[1]_i_1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[1]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[2]_i_1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[2]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[3]_i_1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[3]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[4]_i_1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[4]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[5]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[6]_i_1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[6]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[7]_i_1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[7]),
        .S(SRESET));
FDSE \MASK_RUDI_BUFERR_TIMER_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MASK_RUDI_BUFERR_TIMER[8]_i_1 ),
        .Q(MASK_RUDI_BUFERR_TIMER[8]),
        .S(SRESET));
LUT6 #(
    .INIT(64'h00005D5500000C00)) 
     MASK_RUDI_BUFERR_i_1
       (.I0(\n_0_MASK_RUDI_BUFERR_TIMER[5]_i_3 ),
        .I1(I7),
        .I2(I8),
        .I3(data_out),
        .I4(SRESET),
        .I5(n_0_MASK_RUDI_BUFERR_reg),
        .O(n_0_MASK_RUDI_BUFERR_i_1));
FDRE MASK_RUDI_BUFERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MASK_RUDI_BUFERR_i_1),
        .Q(n_0_MASK_RUDI_BUFERR_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0000BF0000000F00)) 
     MASK_RUDI_CLKCOR_i_1
       (.I0(RX_RUDI_INVALID),
        .I1(RX_RUDI_INVALID_REG),
        .I2(n_0_MASK_RUDI_CLKCOR_i_2),
        .I3(RXSYNC_STATUS),
        .I4(SRESET),
        .I5(n_0_MASK_RUDI_CLKCOR_reg),
        .O(n_0_MASK_RUDI_CLKCOR_i_1));
LUT3 #(
    .INIT(8'h01)) 
     MASK_RUDI_CLKCOR_i_2
       (.I0(I6[2]),
        .I1(I6[1]),
        .I2(I6[0]),
        .O(n_0_MASK_RUDI_CLKCOR_i_2));
FDRE MASK_RUDI_CLKCOR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MASK_RUDI_CLKCOR_i_1),
        .Q(n_0_MASK_RUDI_CLKCOR_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2222322222202220)) 
     MR_AN_COMPLETE_i_1
       (.I0(MR_AN_COMPLETE),
        .I1(SRESET),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[3] ),
        .I5(\n_0_STATE_reg[0] ),
        .O(n_0_MR_AN_COMPLETE_i_1));
FDRE MR_AN_COMPLETE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_AN_COMPLETE_i_1),
        .Q(MR_AN_COMPLETE),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h6)) 
     MR_AN_ENABLE_CHANGE_i_1
       (.I0(MR_AN_ENABLE_REG1),
        .I1(MR_AN_ENABLE_REG2),
        .O(MR_AN_ENABLE_CHANGE0));
FDRE MR_AN_ENABLE_CHANGE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_AN_ENABLE_CHANGE0),
        .Q(MR_AN_ENABLE_CHANGE),
        .R(SRESET));
FDRE MR_AN_ENABLE_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(AN_ENABLE_INT),
        .Q(MR_AN_ENABLE_REG1),
        .R(SRESET));
FDRE MR_AN_ENABLE_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_AN_ENABLE_REG1),
        .Q(MR_AN_ENABLE_REG2),
        .R(SRESET));
LUT5 #(
    .INIT(32'h0000BA00)) 
     MR_LINK_STATUS_i_1
       (.I0(MR_LINK_STATUS),
        .I1(CLEAR_STATUS_REG2),
        .I2(CLEAR_STATUS_REG1),
        .I3(XMIT_DATA_INT),
        .I4(SRESET),
        .O(n_0_MR_LINK_STATUS_i_1));
FDRE MR_LINK_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_LINK_STATUS_i_1),
        .Q(MR_LINK_STATUS),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[11]_i_1 
       (.I0(RX_CONFIG_REG[10]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O8),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[11]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair122" *) 
   LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[12]_i_1 
       (.I0(RX_CONFIG_REG[11]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O7),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[12]_i_1 ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[13]_i_1 
       (.I0(RX_CONFIG_REG[12]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(MR_LP_ADV_ABILITY[0]),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[13]_i_1 ));
LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[15]_i_1 
       (.I0(RX_CONFIG_REG[14]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(O6),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[15]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair124" *) 
   LUT4 #(
    .INIT(16'h2320)) 
     \MR_LP_ADV_ABILITY_INT[16]_i_1 
       (.I0(RX_CONFIG_REG[15]),
        .I1(SRESET),
        .I2(SGMII_PHY_STATUS1_out),
        .I3(MR_LP_ADV_ABILITY[1]),
        .O(\n_0_MR_LP_ADV_ABILITY_INT[16]_i_1 ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[11]_i_1 ),
        .Q(O8),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[12]_i_1 ),
        .Q(O7),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[13]_i_1 ),
        .Q(MR_LP_ADV_ABILITY[0]),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[15]_i_1 ),
        .Q(O6),
        .R(\<const0> ));
FDRE \MR_LP_ADV_ABILITY_INT_reg[16] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MR_LP_ADV_ABILITY_INT[16]_i_1 ),
        .Q(MR_LP_ADV_ABILITY[1]),
        .R(\<const0> ));
FDRE \MR_NP_RX_INT_reg[10] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[9]),
        .Q(O9[9]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[10]),
        .Q(O9[10]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[11]),
        .Q(O9[11]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[12]),
        .Q(O9[12]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[14] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[13]),
        .Q(O9[13]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[14]),
        .Q(O9[14]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[16] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[15]),
        .Q(O9[15]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[0]),
        .Q(O9[0]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[1]),
        .Q(O9[1]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[2]),
        .Q(O9[2]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[3]),
        .Q(O9[3]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[4]),
        .Q(O9[4]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[5]),
        .Q(O9[5]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[6]),
        .Q(O9[6]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[8] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[7]),
        .Q(O9[7]),
        .R(SRESET));
FDRE \MR_NP_RX_INT_reg[9] 
       (.C(userclk2),
        .CE(\<const0> ),
        .D(RX_CONFIG_REG[8]),
        .Q(O9[8]),
        .R(SRESET));
LUT6 #(
    .INIT(64'h0000BBFB000000F0)) 
     MR_REMOTE_FAULT_i_1
       (.I0(CLEAR_STATUS_REG2),
        .I1(CLEAR_STATUS_REG1),
        .I2(GENERATE_REMOTE_FAULT),
        .I3(MR_LP_ADV_ABILITY[1]),
        .I4(SRESET),
        .I5(status_vector_ch0[5]),
        .O(n_0_MR_REMOTE_FAULT_i_1));
FDRE MR_REMOTE_FAULT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_REMOTE_FAULT_i_1),
        .Q(status_vector_ch0[5]),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h1010331000003300)) 
     MR_RESTART_AN_INT_i_1
       (.I0(n_0_MR_RESTART_AN_INT_i_2),
        .I1(SRESET),
        .I2(AN_ENABLE_INT),
        .I3(MR_RESTART_AN_SET_REG1),
        .I4(MR_RESTART_AN_SET_REG2),
        .I5(n_0_MR_RESTART_AN_INT_reg),
        .O(n_0_MR_RESTART_AN_INT_i_1));
(* SOFT_HLUTNM = "soft_lutpair116" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     MR_RESTART_AN_INT_i_2
       (.I0(\n_0_STATE_reg[0] ),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .O(n_0_MR_RESTART_AN_INT_i_2));
FDRE MR_RESTART_AN_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_MR_RESTART_AN_INT_i_1),
        .Q(n_0_MR_RESTART_AN_INT_reg),
        .R(\<const0> ));
FDRE MR_RESTART_AN_SET_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESTART_AN_REG),
        .Q(MR_RESTART_AN_SET_REG1),
        .R(SRESET));
FDRE MR_RESTART_AN_SET_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_RESTART_AN_SET_REG1),
        .Q(MR_RESTART_AN_SET_REG2),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[0] ),
        .Q(PREVIOUS_STATE[0]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[1] ),
        .Q(PREVIOUS_STATE[1]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[2] ),
        .Q(PREVIOUS_STATE[2]),
        .R(SRESET));
FDRE \PREVIOUS_STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE_reg[3] ),
        .Q(PREVIOUS_STATE[3]),
        .R(SRESET));
LUT2 #(
    .INIT(4'h2)) 
     PULSE4096_i_1
       (.I0(TIMER4096_MSB_REG),
        .I1(\n_0_TIMER4096_reg[11] ),
        .O(PULSE40960));
FDRE PULSE4096_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(PULSE40960),
        .Q(PULSE4096),
        .R(SRESET));
FDRE RECEIVED_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I3),
        .Q(O2),
        .R(\<const0> ));
FDRE RUDI_INVALID_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY[1]),
        .Q(status_vector_ch0[0]),
        .R(SRESET));
FDRE RX_CONFIG_REG_NULL_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(O1),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_REG_reg[0] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[0]),
        .Q(Q[0]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[10] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[10]),
        .Q(Q[7]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[11] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[11]),
        .Q(Q[8]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[12] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[12]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[12] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[13] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[13]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[13] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[14] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[14]),
        .Q(p_0_in44_in),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[15] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[15]),
        .Q(p_0_in0_in),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[1] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[1]),
        .Q(Q[1]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[2] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[2]),
        .Q(Q[2]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[3] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[3]),
        .Q(Q[3]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[4] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[4]),
        .Q(Q[4]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[5] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[5]),
        .Q(Q[5]),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[6] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[6]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[6] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[7] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[7]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[7] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[8] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[8]),
        .Q(\n_0_RX_CONFIG_REG_REG_reg[8] ),
        .R(SR));
FDRE \RX_CONFIG_REG_REG_reg[9] 
       (.C(userclk2),
        .CE(RX_CONFIG_VALID),
        .D(RX_CONFIG_REG[9]),
        .Q(Q[6]),
        .R(SR));
LUT6 #(
    .INIT(64'h0008000000000008)) 
     \RX_CONFIG_SNAPSHOT[15]_i_1 
       (.I0(CO),
        .I1(\n_0_RX_CONFIG_SNAPSHOT[15]_i_3 ),
        .I2(\n_0_RX_CONFIG_SNAPSHOT[15]_i_4 ),
        .I3(O2),
        .I4(RX_CONFIG_REG[15]),
        .I5(p_0_in0_in),
        .O(RX_CONFIG_SNAPSHOT));
LUT5 #(
    .INIT(32'h00000020)) 
     \RX_CONFIG_SNAPSHOT[15]_i_3 
       (.I0(RX_CONFIG_VALID),
        .I1(ABILITY_MATCH),
        .I2(ABILITY_MATCH_2),
        .I3(n_0_MASK_RUDI_BUFERR_reg),
        .I4(RX_IDLE),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair125" *) 
   LUT4 #(
    .INIT(16'h0040)) 
     \RX_CONFIG_SNAPSHOT[15]_i_4 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[0] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_4 ));
LUT4 #(
    .INIT(16'h9009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_6 
       (.I0(\n_0_RX_CONFIG_REG_REG_reg[13] ),
        .I1(RX_CONFIG_REG[13]),
        .I2(\n_0_RX_CONFIG_REG_REG_reg[12] ),
        .I3(RX_CONFIG_REG[12]),
        .O(O4));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_8 
       (.I0(\n_0_RX_CONFIG_REG_REG_reg[6] ),
        .I1(RX_CONFIG_REG[6]),
        .I2(RX_CONFIG_REG[7]),
        .I3(\n_0_RX_CONFIG_REG_REG_reg[7] ),
        .I4(RX_CONFIG_REG[8]),
        .I5(\n_0_RX_CONFIG_REG_REG_reg[8] ),
        .O(S));
FDRE \RX_CONFIG_SNAPSHOT_reg[0] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[0]),
        .Q(O10[0]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[10] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[10]),
        .Q(O10[7]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[11] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[11]),
        .Q(O10[8]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[12] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[12]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[12] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[13] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[13]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[13] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[15] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[15]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[15] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[1] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[1]),
        .Q(O10[1]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[2] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[2]),
        .Q(O10[2]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[3] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[3]),
        .Q(O10[3]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[4] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[4]),
        .Q(O10[4]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[5] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[5]),
        .Q(O10[5]),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[6] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[6]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[6] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[7] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[7]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[7] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[8] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[8]),
        .Q(\n_0_RX_CONFIG_SNAPSHOT_reg[8] ),
        .R(SRESET));
FDRE \RX_CONFIG_SNAPSHOT_reg[9] 
       (.C(userclk2),
        .CE(RX_CONFIG_SNAPSHOT),
        .D(RX_CONFIG_REG[9]),
        .Q(O10[6]),
        .R(SRESET));
FDRE RX_IDLE_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE),
        .Q(RX_IDLE_REG1),
        .R(SRESET));
FDRE RX_IDLE_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE_REG1),
        .Q(RX_IDLE_REG2),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair129" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \RX_RUDI_INVALID_DELAY[0]_i_1 
       (.I0(RX_RUDI_INVALID),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(n_0_MASK_RUDI_CLKCOR_reg),
        .O(RX_RUDI_INVALID_DELAY0));
FDRE \RX_RUDI_INVALID_DELAY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY0),
        .Q(RX_RUDI_INVALID_DELAY[0]),
        .R(SRESET));
FDRE \RX_RUDI_INVALID_DELAY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_RUDI_INVALID_DELAY[0]),
        .Q(RX_RUDI_INVALID_DELAY[1]),
        .R(SRESET));
FDRE RX_RUDI_INVALID_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(RX_RUDI_INVALID_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair124" *) 
   LUT4 #(
    .INIT(16'h00E2)) 
     SGMII_PHY_STATUS_i_1
       (.I0(status_vector_ch0[1]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(RX_CONFIG_REG[15]),
        .I3(SRESET),
        .O(n_0_SGMII_PHY_STATUS_i_1));
FDRE SGMII_PHY_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SGMII_PHY_STATUS_i_1),
        .Q(status_vector_ch0[1]),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'hB8)) 
     \SGMII_SPEED[0]_i_1 
       (.I0(RX_CONFIG_REG[10]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(status_vector_ch0[3]),
        .O(\n_0_SGMII_SPEED[0]_i_1 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SGMII_SPEED[1]_i_1 
       (.I0(RX_CONFIG_REG[11]),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(status_vector_ch0[4]),
        .O(\n_0_SGMII_SPEED[1]_i_1 ));
LUT6 #(
    .INIT(64'h0008000000000000)) 
     \SGMII_SPEED[1]_i_2 
       (.I0(n_0_START_LINK_TIMER_REG_i_3),
        .I1(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I2(PREVIOUS_STATE[3]),
        .I3(PREVIOUS_STATE[2]),
        .I4(PREVIOUS_STATE[0]),
        .I5(PREVIOUS_STATE[1]),
        .O(SGMII_PHY_STATUS1_out));
FDRE \SGMII_SPEED_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_SGMII_SPEED[0]_i_1 ),
        .Q(status_vector_ch0[3]),
        .R(SRESET));
FDSE \SGMII_SPEED_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_SGMII_SPEED[1]_i_1 ),
        .Q(status_vector_ch0[4]),
        .S(SRESET));
FDRE START_LINK_TIMER_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(START_LINK_TIMER_REG),
        .Q(START_LINK_TIMER_REG2),
        .R(SRESET));
LUT6 #(
    .INIT(64'hAAAAEAAAFFFFFFFF)) 
     START_LINK_TIMER_REG_i_1
       (.I0(n_0_START_LINK_TIMER_REG_i_2),
        .I1(LINK_TIMER_DONE),
        .I2(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I3(n_0_START_LINK_TIMER_REG_i_3),
        .I4(n_0_START_LINK_TIMER_REG_i_4),
        .I5(\n_0_STATE[3]_i_3 ),
        .O(START_LINK_TIMER));
LUT6 #(
    .INIT(64'h0000300200000002)) 
     START_LINK_TIMER_REG_i_2
       (.I0(AN_ENABLE_INT),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[2] ),
        .I5(n_0_START_LINK_TIMER_REG_i_5),
        .O(n_0_START_LINK_TIMER_REG_i_2));
(* SOFT_HLUTNM = "soft_lutpair114" *) 
   LUT2 #(
    .INIT(4'h2)) 
     START_LINK_TIMER_REG_i_3
       (.I0(\n_0_STATE_reg[2] ),
        .I1(\n_0_STATE_reg[1] ),
        .O(n_0_START_LINK_TIMER_REG_i_3));
(* SOFT_HLUTNM = "soft_lutpair126" *) 
   LUT2 #(
    .INIT(4'h8)) 
     START_LINK_TIMER_REG_i_4
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .O(n_0_START_LINK_TIMER_REG_i_4));
(* SOFT_HLUTNM = "soft_lutpair126" *) 
   LUT4 #(
    .INIT(16'h0080)) 
     START_LINK_TIMER_REG_i_5
       (.I0(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I1(ABILITY_MATCH),
        .I2(CONSISTENCY_MATCH),
        .I3(O1),
        .O(n_0_START_LINK_TIMER_REG_i_5));
FDRE START_LINK_TIMER_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(START_LINK_TIMER),
        .Q(START_LINK_TIMER_REG),
        .R(SRESET));
LUT5 #(
    .INIT(32'h0000AAA2)) 
     \STATE[0]_i_1 
       (.I0(\n_0_STATE[3]_i_3 ),
        .I1(\n_0_STATE[0]_i_2 ),
        .I2(\n_0_STATE[0]_i_3 ),
        .I3(\n_0_STATE[0]_i_4 ),
        .I4(\n_0_STATE_reg[3] ),
        .O(\n_0_STATE[0]_i_1 ));
LUT6 #(
    .INIT(64'hFBF8F8FCFBFBF8FF)) 
     \STATE[0]_i_2 
       (.I0(n_0_START_LINK_TIMER_REG_i_4),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[0] ),
        .I4(LINK_TIMER_DONE),
        .I5(AN_ENABLE_INT),
        .O(\n_0_STATE[0]_i_2 ));
LUT6 #(
    .INIT(64'h0000000044444664)) 
     \STATE[0]_i_3 
       (.I0(ABILITY_MATCH),
        .I1(\n_0_STATE_reg[0] ),
        .I2(TOGGLE_RX),
        .I3(Q[8]),
        .I4(O1),
        .I5(\n_0_STATE[0]_i_5 ),
        .O(\n_0_STATE[0]_i_3 ));
LUT6 #(
    .INIT(64'h0202002002220020)) 
     \STATE[0]_i_4 
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(ABILITY_MATCH),
        .I3(O1),
        .I4(\n_0_STATE_reg[0] ),
        .I5(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .O(\n_0_STATE[0]_i_4 ));
LUT2 #(
    .INIT(4'h7)) 
     \STATE[0]_i_5 
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .O(\n_0_STATE[0]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair120" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \STATE[1]_i_1 
       (.I0(\n_0_STATE[3]_i_3 ),
        .I1(\n_0_STATE[1]_i_2 ),
        .O(\n_0_STATE[1]_i_1 ));
LUT5 #(
    .INIT(32'hAAAAAAEF)) 
     \STATE[1]_i_2 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE[1]_i_3 ),
        .I3(\n_0_STATE[1]_i_4 ),
        .I4(\n_0_STATE[2]_i_4 ),
        .O(\n_0_STATE[1]_i_2 ));
LUT6 #(
    .INIT(64'h57FFFF005700FF00)) 
     \STATE[1]_i_3 
       (.I0(ABILITY_MATCH),
        .I1(n_0_ACKNOWLEDGE_MATCH_3_reg),
        .I2(O1),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(LINK_TIMER_DONE),
        .O(\n_0_STATE[1]_i_3 ));
LUT6 #(
    .INIT(64'h7000000000000000)) 
     \STATE[1]_i_4 
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .I2(n_0_START_LINK_TIMER_REG_i_3),
        .I3(IDLE_MATCH),
        .I4(LINK_TIMER_DONE),
        .I5(\n_0_STATE_reg[0] ),
        .O(\n_0_STATE[1]_i_4 ));
LUT2 #(
    .INIT(4'h2)) 
     \STATE[2]_i_1 
       (.I0(\n_0_STATE[3]_i_3 ),
        .I1(\n_0_STATE[2]_i_2 ),
        .O(\n_0_STATE[2]_i_1 ));
LUT6 #(
    .INIT(64'hABBBBBABABABABAB)) 
     \STATE[2]_i_2 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE[2]_i_3 ),
        .I2(\n_0_STATE[2]_i_4 ),
        .I3(Q[8]),
        .I4(TOGGLE_RX),
        .I5(ABILITY_MATCH),
        .O(\n_0_STATE[2]_i_2 ));
LUT6 #(
    .INIT(64'h0F70007000700070)) 
     \STATE[2]_i_3 
       (.I0(O1),
        .I1(ABILITY_MATCH),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_STATE_reg[1] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(n_0_START_LINK_TIMER_REG_i_5),
        .O(\n_0_STATE[2]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair114" *) 
   LUT5 #(
    .INIT(32'h00880888)) 
     \STATE[2]_i_4 
       (.I0(\n_0_STATE_reg[2] ),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(ABILITY_MATCH),
        .I4(O1),
        .O(\n_0_STATE[2]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair120" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \STATE[3]_i_1 
       (.I0(\n_0_STATE[3]_i_2 ),
        .I1(\n_0_STATE[3]_i_3 ),
        .I2(AN_SYNC_STATUS),
        .I3(AN_ENABLE_INT),
        .O(\n_0_STATE[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair116" *) 
   LUT5 #(
    .INIT(32'h00000203)) 
     \STATE[3]_i_2 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(AN_ENABLE_INT),
        .I4(\n_0_STATE_reg[2] ),
        .O(\n_0_STATE[3]_i_2 ));
LUT5 #(
    .INIT(32'h00000D00)) 
     \STATE[3]_i_3 
       (.I0(XMIT_CONFIG_INT),
        .I1(\n_0_STATE[3]_i_4 ),
        .I2(n_0_MR_RESTART_AN_INT_reg),
        .I3(AN_SYNC_STATUS),
        .I4(MR_AN_ENABLE_CHANGE),
        .O(\n_0_STATE[3]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair129" *) 
   LUT3 #(
    .INIT(8'hEF)) 
     \STATE[3]_i_4 
       (.I0(n_0_MASK_RUDI_CLKCOR_reg),
        .I1(n_0_MASK_RUDI_BUFERR_reg),
        .I2(RX_RUDI_INVALID),
        .O(\n_0_STATE[3]_i_4 ));
FDRE \STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[0]_i_1 ),
        .Q(\n_0_STATE_reg[0] ),
        .R(SRESET));
FDRE \STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[1]_i_1 ),
        .Q(\n_0_STATE_reg[1] ),
        .R(SRESET));
FDRE \STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[2]_i_1 ),
        .Q(\n_0_STATE_reg[2] ),
        .R(SRESET));
FDRE \STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_STATE[3]_i_1 ),
        .Q(\n_0_STATE_reg[3] ),
        .R(SRESET));
LUT5 #(
    .INIT(32'h00BF00AA)) 
     SYNC_STATUS_HELD_i_1
       (.I0(RXSYNC_STATUS),
        .I1(LINK_TIMER_SATURATED),
        .I2(PULSE4096),
        .I3(SRESET),
        .I4(SYNC_STATUS_HELD),
        .O(n_0_SYNC_STATUS_HELD_i_1));
FDRE SYNC_STATUS_HELD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_STATUS_HELD_i_1),
        .Q(SYNC_STATUS_HELD),
        .R(\<const0> ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_2 
       (.I0(\n_0_TIMER4096_reg[3] ),
        .O(\n_0_TIMER4096[0]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_3 
       (.I0(\n_0_TIMER4096_reg[2] ),
        .O(\n_0_TIMER4096[0]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[0]_i_4 
       (.I0(\n_0_TIMER4096_reg[1] ),
        .O(\n_0_TIMER4096[0]_i_4 ));
LUT1 #(
    .INIT(2'h1)) 
     \TIMER4096[0]_i_5 
       (.I0(\n_0_TIMER4096_reg[0] ),
        .O(\n_0_TIMER4096[0]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_2 
       (.I0(\n_0_TIMER4096_reg[7] ),
        .O(\n_0_TIMER4096[4]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_3 
       (.I0(\n_0_TIMER4096_reg[6] ),
        .O(\n_0_TIMER4096[4]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_4 
       (.I0(\n_0_TIMER4096_reg[5] ),
        .O(\n_0_TIMER4096[4]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[4]_i_5 
       (.I0(\n_0_TIMER4096_reg[4] ),
        .O(\n_0_TIMER4096[4]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_2 
       (.I0(\n_0_TIMER4096_reg[11] ),
        .O(\n_0_TIMER4096[8]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_3 
       (.I0(\n_0_TIMER4096_reg[10] ),
        .O(\n_0_TIMER4096[8]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_4 
       (.I0(\n_0_TIMER4096_reg[9] ),
        .O(\n_0_TIMER4096[8]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \TIMER4096[8]_i_5 
       (.I0(\n_0_TIMER4096_reg[8] ),
        .O(\n_0_TIMER4096[8]_i_5 ));
FDRE TIMER4096_MSB_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TIMER4096_reg[11] ),
        .Q(TIMER4096_MSB_REG),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[0]_i_1 ),
        .Q(\n_0_TIMER4096_reg[0] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[0]_i_1 
       (.CI(\<const0> ),
        .CO({\n_0_TIMER4096_reg[0]_i_1 ,\n_1_TIMER4096_reg[0]_i_1 ,\n_2_TIMER4096_reg[0]_i_1 ,\n_3_TIMER4096_reg[0]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .O({\n_4_TIMER4096_reg[0]_i_1 ,\n_5_TIMER4096_reg[0]_i_1 ,\n_6_TIMER4096_reg[0]_i_1 ,\n_7_TIMER4096_reg[0]_i_1 }),
        .S({\n_0_TIMER4096[0]_i_2 ,\n_0_TIMER4096[0]_i_3 ,\n_0_TIMER4096[0]_i_4 ,\n_0_TIMER4096[0]_i_5 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[8]_i_1 ),
        .Q(\n_0_TIMER4096_reg[10] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[8]_i_1 ),
        .Q(\n_0_TIMER4096_reg[11] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[0]_i_1 ),
        .Q(\n_0_TIMER4096_reg[1] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[0]_i_1 ),
        .Q(\n_0_TIMER4096_reg[2] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[0]_i_1 ),
        .Q(\n_0_TIMER4096_reg[3] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[4]_i_1 ),
        .Q(\n_0_TIMER4096_reg[4] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[4]_i_1 
       (.CI(\n_0_TIMER4096_reg[0]_i_1 ),
        .CO({\n_0_TIMER4096_reg[4]_i_1 ,\n_1_TIMER4096_reg[4]_i_1 ,\n_2_TIMER4096_reg[4]_i_1 ,\n_3_TIMER4096_reg[4]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_TIMER4096_reg[4]_i_1 ,\n_5_TIMER4096_reg[4]_i_1 ,\n_6_TIMER4096_reg[4]_i_1 ,\n_7_TIMER4096_reg[4]_i_1 }),
        .S({\n_0_TIMER4096[4]_i_2 ,\n_0_TIMER4096[4]_i_3 ,\n_0_TIMER4096[4]_i_4 ,\n_0_TIMER4096[4]_i_5 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[4]_i_1 ),
        .Q(\n_0_TIMER4096_reg[5] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_5_TIMER4096_reg[4]_i_1 ),
        .Q(\n_0_TIMER4096_reg[6] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_4_TIMER4096_reg[4]_i_1 ),
        .Q(\n_0_TIMER4096_reg[7] ),
        .R(SRESET));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_7_TIMER4096_reg[8]_i_1 ),
        .Q(\n_0_TIMER4096_reg[8] ),
        .R(SRESET));
CARRY4 \TIMER4096_reg[8]_i_1 
       (.CI(\n_0_TIMER4096_reg[4]_i_1 ),
        .CO({\NLW_TIMER4096_reg[8]_i_1_CO_UNCONNECTED [3],\n_1_TIMER4096_reg[8]_i_1 ,\n_2_TIMER4096_reg[8]_i_1 ,\n_3_TIMER4096_reg[8]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_TIMER4096_reg[8]_i_1 ,\n_5_TIMER4096_reg[8]_i_1 ,\n_6_TIMER4096_reg[8]_i_1 ,\n_7_TIMER4096_reg[8]_i_1 }),
        .S({\n_0_TIMER4096[8]_i_2 ,\n_0_TIMER4096[8]_i_3 ,\n_0_TIMER4096[8]_i_4 ,\n_0_TIMER4096[8]_i_5 }));
(* counter = "34" *) 
   FDRE \TIMER4096_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_6_TIMER4096_reg[8]_i_1 ),
        .Q(\n_0_TIMER4096_reg[9] ),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair122" *) 
   LUT4 #(
    .INIT(16'h00E2)) 
     TOGGLE_RX_i_1
       (.I0(TOGGLE_RX),
        .I1(SGMII_PHY_STATUS1_out),
        .I2(RX_CONFIG_REG[11]),
        .I3(SRESET),
        .O(n_0_TOGGLE_RX_i_1));
FDRE TOGGLE_RX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TOGGLE_RX_i_1),
        .Q(TOGGLE_RX),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h000000000505AA2A)) 
     TOGGLE_TX_i_1
       (.I0(TOGGLE_TX),
        .I1(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(SGMII_PHY_STATUS1_out),
        .I5(SRESET),
        .O(n_0_TOGGLE_TX_i_1));
FDRE TOGGLE_TX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TOGGLE_TX_i_1),
        .Q(TOGGLE_TX),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000F8AA38AA)) 
     \TX_CONFIG_REG_INT[0]_i_1 
       (.I0(O5[0]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I21),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[0]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[10]_i_1 
       (.I0(O5[10]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I11),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[10]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[11]_i_1 
       (.I0(O5[11]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(TOGGLE_TX),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[11]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[12]_i_1 
       (.I0(O5[12]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I10),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[12]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[13]_i_1 
       (.I0(O5[13]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I9),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[13]_i_1 ));
LUT6 #(
    .INIT(64'h00000000AABA8A88)) 
     \TX_CONFIG_REG_INT[14]_i_1 
       (.I0(O5[14]),
        .I1(\n_0_STATE_reg[3] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[0] ),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[14]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[15]_i_1 
       (.I0(O5[15]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(TX_CONFIG_REG_INT1),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[15]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair130" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \TX_CONFIG_REG_INT[15]_i_2 
       (.I0(\n_0_STATE_reg[3] ),
        .I1(\n_0_STATE_reg[0] ),
        .O(\n_0_TX_CONFIG_REG_INT[15]_i_2 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[1]_i_1 
       (.I0(O5[1]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I20),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[1]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[2]_i_1 
       (.I0(O5[2]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I19),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[2]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[3]_i_1 
       (.I0(O5[3]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I18),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[3]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[4]_i_1 
       (.I0(O5[4]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I17),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[4]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[5]_i_1 
       (.I0(O5[5]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I16),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[5]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[6]_i_1 
       (.I0(O5[6]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I15),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[6]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[7]_i_1 
       (.I0(O5[7]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I14),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[7]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[8]_i_1 
       (.I0(O5[8]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I13),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[8]_i_1 ));
LUT6 #(
    .INIT(64'h00000000C8AA08AA)) 
     \TX_CONFIG_REG_INT[9]_i_1 
       (.I0(O5[9]),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[1] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(I12),
        .I5(SRESET),
        .O(\n_0_TX_CONFIG_REG_INT[9]_i_1 ));
FDRE \TX_CONFIG_REG_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[0]_i_1 ),
        .Q(O5[0]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[10]_i_1 ),
        .Q(O5[10]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[11]_i_1 ),
        .Q(O5[11]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[12]_i_1 ),
        .Q(O5[12]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[13]_i_1 ),
        .Q(O5[13]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[14]_i_1 ),
        .Q(O5[14]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[15]_i_1 ),
        .Q(O5[15]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[1]_i_1 ),
        .Q(O5[1]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[2]_i_1 ),
        .Q(O5[2]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[3]_i_1 ),
        .Q(O5[3]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[4]_i_1 ),
        .Q(O5[4]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[5]_i_1 ),
        .Q(O5[5]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[6]_i_1 ),
        .Q(O5[6]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[7]_i_1 ),
        .Q(O5[7]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[8]_i_1 ),
        .Q(O5[8]),
        .R(\<const0> ));
FDRE \TX_CONFIG_REG_INT_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_TX_CONFIG_REG_INT[9]_i_1 ),
        .Q(O5[9]),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'hFFFFFFFFABAAAAAA)) 
     XMIT_CONFIG_INT_i_1
       (.I0(n_0_XMIT_CONFIG_INT_i_2__3),
        .I1(\n_0_STATE_reg[1] ),
        .I2(\n_0_STATE_reg[2] ),
        .I3(\n_0_TX_CONFIG_REG_INT[15]_i_2 ),
        .I4(AN_ENABLE_INT),
        .I5(SRESET),
        .O(n_0_XMIT_CONFIG_INT_i_1));
LUT6 #(
    .INIT(64'hAAAAA28AAAAAA288)) 
     XMIT_CONFIG_INT_i_2__3
       (.I0(XMIT_CONFIG_INT),
        .I1(\n_0_STATE_reg[0] ),
        .I2(\n_0_STATE_reg[3] ),
        .I3(\n_0_STATE_reg[2] ),
        .I4(\n_0_STATE_reg[1] ),
        .I5(AN_ENABLE_INT),
        .O(n_0_XMIT_CONFIG_INT_i_2__3));
FDRE XMIT_CONFIG_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_CONFIG_INT_i_1),
        .Q(XMIT_CONFIG_INT),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair125" *) 
   LUT4 #(
    .INIT(16'h0180)) 
     XMIT_DATA_INT_i_1
       (.I0(\n_0_STATE_reg[1] ),
        .I1(\n_0_STATE_reg[2] ),
        .I2(\n_0_STATE_reg[0] ),
        .I3(\n_0_STATE_reg[3] ),
        .O(XMIT_DATA_INT0));
FDRE XMIT_DATA_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(XMIT_DATA_INT0),
        .Q(XMIT_DATA_INT),
        .R(SRESET));
endmodule

(* ORIG_REF_NAME = "GPCS_PMA_GEN" *) 
module quadsgmiiGPCS_PMA_GEN__parameterized0
   (O1,
    O2,
    gmii_rx_er_ch0_int,
    status_vector_ch0,
    mdio_o_ch0,
    mdio_t_ch0,
    D,
    O3,
    O4,
    gmii_rx_dv_ch0_int,
    O5,
    SOFT_RESET,
    an_interrupt_ch0,
    O6,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    SS,
    O13,
    O14,
    userclk2,
    gmii_tx_er_out_ch0,
    gmii_tx_en_out_ch0,
    RXBUFERR,
    p_3_out,
    txbuferr,
    I1,
    RXCHARISK_USR,
    RXCHARISCOMMA_USR,
    link_timer_value_ch0,
    phyad_ch0,
    Q,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    signal_detect,
    mdc_ch0,
    mdio_i_ch0,
    I2,
    I5,
    MGT_RX_RESET3_in,
    MGT_RX_RESET1_in,
    I3);
  output O1;
  output O2;
  output gmii_rx_er_ch0_int;
  output [12:0]status_vector_ch0;
  output mdio_o_ch0;
  output mdio_t_ch0;
  output [0:0]D;
  output O3;
  output O4;
  output gmii_rx_dv_ch0_int;
  output O5;
  output SOFT_RESET;
  output an_interrupt_ch0;
  output O6;
  output O7;
  output [2:0]O8;
  output [0:0]O9;
  output O10;
  output O11;
  output [7:0]O12;
  output [0:0]SS;
  output [0:0]O13;
  output [0:0]O14;
  input userclk2;
  input gmii_tx_er_out_ch0;
  input gmii_tx_en_out_ch0;
  input RXBUFERR;
  input p_3_out;
  input txbuferr;
  input I1;
  input RXCHARISK_USR;
  input RXCHARISCOMMA_USR;
  input [8:0]link_timer_value_ch0;
  input [4:0]phyad_ch0;
  input [7:0]Q;
  input RXDISPERR_USR;
  input RXNOTINTABLE_USR;
  input signal_detect;
  input mdc_ch0;
  input mdio_i_ch0;
  input [2:0]I2;
  input [7:0]I5;
  input MGT_RX_RESET3_in;
  input MGT_RX_RESET1_in;
  input I3;

  wire \<const0> ;
  wire \<const1> ;
  wire AN_ENABLE_INT;
  wire CLEAR_STATUS_REG;
  wire CONSISTENCY_MATCH1;
  wire [0:0]D;
  wire DUPLEX_MODE_RSLVD_REG;
  wire EOP_REG1;
  wire FALSE_NIT0;
  wire I1;
  wire [2:0]I2;
  wire I3;
  wire [7:0]I5;
  wire K28p5_REG1;
  wire LOOPBACK;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MGT_RX_RESET1_in;
  wire MGT_RX_RESET3_in;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [16:13]MR_LP_ADV_ABILITY;
  wire [16:16]MR_NP_RX;
  wire [15:1]MR_NP_RX_INT;
  wire O1;
  wire O10;
  wire O11;
  wire [7:0]O12;
  wire [0:0]O13;
  wire [0:0]O14;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire [2:0]O8;
  wire [0:0]O9;
  wire [7:0]Q;
  wire Q_0;
  wire RESET_INT;
  wire RESET_INT_PIPE;
  wire RESTART_AN_REG;
  wire RUNDISP_EN;
  wire RXBUFERR;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire RXDISPERR_INT;
  wire RXDISPERR_MOD;
  wire RXDISPERR_USR;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXNOTINTABLE_SRL;
  wire RXNOTINTABLE_USR;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_REG_REG0;
  wire RX_CONFIG_VALID;
  wire RX_IDLE;
  wire RX_RUDI_INVALID;
  wire S0;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire SOFT_RESET;
  wire SOP_REG3;
  wire SRESET;
  wire SRESET_PIPE;
  wire [0:0]SS;
  wire STATUS_VECTOR_0_PRE;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire TXBUFERR_INT;
  wire [15:15]TX_CONFIG_REG;
  wire TX_CONFIG_REG_INT1;
  wire VCC_2;
  wire XMIT_CONFIG_INT;
  wire XMIT_DATA;
  wire XMIT_DATA_INT;
  wire an_interrupt_ch0;
  wire data_out;
  wire gmii_rx_dv_ch0_int;
  wire gmii_rx_er_ch0_int;
  wire gmii_tx_en_out_ch0;
  wire gmii_tx_er_out_ch0;
  wire [8:0]link_timer_value_ch0;
  wire mdc_ch0;
  wire mdio_i_ch0;
  wire mdio_o_ch0;
  wire mdio_t_ch0;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ;
  wire \n_0_HAS_MANAGEMENT.MDIO ;
  wire \n_0_MGT_RESET.SRESET_i_1 ;
  wire \n_0_TXDATA[7]_i_2 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6 ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ;
  wire \n_0_USE_ROCKET_IO.TXDATA_reg[7] ;
  wire \n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_10_RECEIVER;
  wire n_10_TRANSMITTER;
  wire \n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_11_HAS_MANAGEMENT.MDIO ;
  wire n_11_RECEIVER;
  wire n_11_TRANSMITTER;
  wire \n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_12_HAS_MANAGEMENT.MDIO ;
  wire n_12_TRANSMITTER;
  wire \n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_13_RECEIVER;
  wire n_13_TRANSMITTER;
  wire \n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_14_RECEIVER;
  wire n_14_TRANSMITTER;
  wire \n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_15_RECEIVER;
  wire n_15_TRANSMITTER;
  wire \n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_16_TRANSMITTER;
  wire \n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_17_TRANSMITTER;
  wire \n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_18_HAS_MANAGEMENT.MDIO ;
  wire n_18_TRANSMITTER;
  wire \n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_19_TRANSMITTER;
  wire n_1_TRANSMITTER;
  wire \n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_20_HAS_MANAGEMENT.MDIO ;
  wire n_20_TRANSMITTER;
  wire \n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_22_HAS_MANAGEMENT.MDIO ;
  wire \n_23_HAS_MANAGEMENT.MDIO ;
  wire \n_24_HAS_MANAGEMENT.MDIO ;
  wire \n_25_HAS_MANAGEMENT.MDIO ;
  wire \n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_26_HAS_MANAGEMENT.MDIO ;
  wire \n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_27_HAS_MANAGEMENT.MDIO ;
  wire \n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_28_HAS_MANAGEMENT.MDIO ;
  wire \n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_29_HAS_MANAGEMENT.MDIO ;
  wire n_2_TRANSMITTER;
  wire \n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_31_HAS_MANAGEMENT.MDIO ;
  wire \n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_32_HAS_MANAGEMENT.MDIO ;
  wire \n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_33_HAS_MANAGEMENT.MDIO ;
  wire n_33_RECEIVER;
  wire \n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_34_HAS_MANAGEMENT.MDIO ;
  wire n_34_RECEIVER;
  wire \n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_35_HAS_MANAGEMENT.MDIO ;
  wire n_35_RECEIVER;
  wire \n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_36_HAS_MANAGEMENT.MDIO ;
  wire \n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_37_HAS_MANAGEMENT.MDIO ;
  wire \n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_38_HAS_MANAGEMENT.MDIO ;
  wire \n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_39_HAS_MANAGEMENT.MDIO ;
  wire n_3_TRANSMITTER;
  wire \n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_40_HAS_MANAGEMENT.MDIO ;
  wire \n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_41_HAS_MANAGEMENT.MDIO ;
  wire \n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_42_HAS_MANAGEMENT.MDIO ;
  wire \n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_43_HAS_MANAGEMENT.MDIO ;
  wire n_4_SYNCHRONISATION;
  wire n_4_TRANSMITTER;
  wire n_5_SYNCHRONISATION;
  wire n_5_TRANSMITTER;
  wire \n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_6_SYNCHRONISATION;
  wire n_6_TRANSMITTER;
  wire \n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_7_SYNCHRONISATION;
  wire n_7_TRANSMITTER;
  wire \n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_8_RECEIVER;
  wire n_8_TRANSMITTER;
  wire n_9_TRANSMITTER;
  wire p_0_out;
  wire p_1_out;
  wire p_3_out;
  wire [4:0]phyad_ch0;
  wire signal_detect;
  wire [12:0]status_vector_ch0;
  wire txbuferr;
  wire userclk2;

(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "SRL16" *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/DELAY_RXDISPERR " *) 
   SRL16E #(
    .INIT(16'h0000)) 
     DELAY_RXDISPERR
       (.A0(\<const0> ),
        .A1(\<const0> ),
        .A2(\<const1> ),
        .A3(\<const0> ),
        .CE(VCC_2),
        .CLK(userclk2),
        .D(RXDISPERR_MOD),
        .Q(Q_0));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "SRL16" *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/DELAY_RXNOTINTABLE " *) 
   SRL16E #(
    .INIT(16'h0000)) 
     DELAY_RXNOTINTABLE
       (.A0(\<const0> ),
        .A1(\<const0> ),
        .A2(\<const1> ),
        .A3(\<const0> ),
        .CE(VCC_2),
        .CLK(userclk2),
        .D(RXNOTINTABLE_INT),
        .Q(RXNOTINTABLE_SRL));
FDRE #(
    .INIT(1'b0)) 
     DUPLEX_MODE_RSLVD_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_LP_ADV_ABILITY[13]),
        .Q(DUPLEX_MODE_RSLVD_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair132" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair133" *) 
   LUT5 #(
    .INIT(32'h04040400)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair134" *) 
   LUT5 #(
    .INIT(32'h40404000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair136" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_1 
       (.I0(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I1(RESET_INT),
        .O(p_0_out));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10 ));
LUT6 #(
    .INIT(64'h04040404040404FF)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12 ));
(* SOFT_HLUTNM = "soft_lutpair157" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13 ));
(* SOFT_HLUTNM = "soft_lutpair165" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14 ));
(* SOFT_HLUTNM = "soft_lutpair139" *) 
   LUT5 #(
    .INIT(32'h00000116)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15 ));
LUT6 #(
    .INIT(64'h0000000000020200)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16 ));
(* SOFT_HLUTNM = "soft_lutpair139" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I4(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6 ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19 ));
(* SOFT_HLUTNM = "soft_lutpair138" *) 
   LUT5 #(
    .INIT(32'hFE000000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair141" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20 ));
LUT6 #(
    .INIT(64'hFFFCFFFCFF00FFF8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFEE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23 ));
LUT6 #(
    .INIT(64'h0000000000000103)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26 ));
(* SOFT_HLUTNM = "soft_lutpair161" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27 ));
(* SOFT_HLUTNM = "soft_lutpair141" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA0080)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair159" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30 ));
(* SOFT_HLUTNM = "soft_lutpair153" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33 ));
(* SOFT_HLUTNM = "soft_lutpair159" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34 ));
(* SOFT_HLUTNM = "soft_lutpair161" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35 ));
(* SOFT_HLUTNM = "soft_lutpair143" *) 
   LUT5 #(
    .INIT(32'hFFFEFEEE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36 ));
(* SOFT_HLUTNM = "soft_lutpair160" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38 ));
(* SOFT_HLUTNM = "soft_lutpair143" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair165" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40 ));
(* SOFT_HLUTNM = "soft_lutpair158" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41 ));
(* SOFT_HLUTNM = "soft_lutpair157" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42 ));
LUT6 #(
    .INIT(64'hF0F01010F0F01000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFF66666)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ));
LUT6 #(
    .INIT(64'hEEFEAAAAEEEEAAAA)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair150" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9 ));
(* SOFT_HLUTNM = "soft_lutpair131" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair133" *) 
   LUT5 #(
    .INIT(32'h00000010)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair132" *) 
   LUT5 #(
    .INIT(32'h00001110)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair137" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair138" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair134" *) 
   LUT5 #(
    .INIT(32'h00000040)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair136" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair137" *) 
   LUT5 #(
    .INIT(32'h00008880)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair131" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .S(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .R(p_0_out));
(* SOFT_HLUTNM = "soft_lutpair135" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair140" *) 
   LUT5 #(
    .INIT(32'h04040400)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair142" *) 
   LUT5 #(
    .INIT(32'h40404000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair140" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_1 
       (.I0(RESET_INT),
        .I1(TXBUFERR_INT),
        .O(p_1_out));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10 ));
LUT6 #(
    .INIT(64'h04040404040404FF)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12 ));
(* SOFT_HLUTNM = "soft_lutpair162" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13 ));
(* SOFT_HLUTNM = "soft_lutpair162" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14 ));
(* SOFT_HLUTNM = "soft_lutpair149" *) 
   LUT5 #(
    .INIT(32'h00000116)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15 ));
LUT6 #(
    .INIT(64'h0000000000020200)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16 ));
(* SOFT_HLUTNM = "soft_lutpair149" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I4(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6 ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19 ));
(* SOFT_HLUTNM = "soft_lutpair144" *) 
   LUT5 #(
    .INIT(32'hFE000000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair147" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20 ));
LUT6 #(
    .INIT(64'hFFFCFFFCFF00FFF8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFEE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23 ));
LUT6 #(
    .INIT(64'h0000000000000103)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26 ));
(* SOFT_HLUTNM = "soft_lutpair164" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27 ));
(* SOFT_HLUTNM = "soft_lutpair145" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA0080)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair155" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33 ));
(* SOFT_HLUTNM = "soft_lutpair155" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34 ));
(* SOFT_HLUTNM = "soft_lutpair164" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35 ));
(* SOFT_HLUTNM = "soft_lutpair146" *) 
   LUT5 #(
    .INIT(32'hFFFEFEEE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36 ));
(* SOFT_HLUTNM = "soft_lutpair163" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38 ));
(* SOFT_HLUTNM = "soft_lutpair146" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair163" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40 ));
(* SOFT_HLUTNM = "soft_lutpair154" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41 ));
(* SOFT_HLUTNM = "soft_lutpair147" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42 ));
LUT6 #(
    .INIT(64'hF0F01010F0F01000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFF66666)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ));
LUT6 #(
    .INIT(64'hEEFEAAAAEEEEAAAA)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair145" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9 ));
(* SOFT_HLUTNM = "soft_lutpair142" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair144" *) 
   LUT5 #(
    .INIT(32'h00000010)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair148" *) 
   LUT5 #(
    .INIT(32'h00001110)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair151" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair152" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair151" *) 
   LUT5 #(
    .INIT(32'h00000040)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair152" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair148" *) 
   LUT5 #(
    .INIT(32'h00008880)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair135" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .S(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .R(p_1_out));
GND GND
       (.G(\<const0> ));
quadsgmiiAUTO_NEG__parameterized0_46 \HAS_AUTO_NEG.AUTO_NEGOTIATION 
       (.AN_ENABLE_INT(AN_ENABLE_INT),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .CO(n_11_RECEIVER),
        .I1(n_7_SYNCHRONISATION),
        .I10(\n_32_HAS_MANAGEMENT.MDIO ),
        .I11(\n_33_HAS_MANAGEMENT.MDIO ),
        .I12(\n_34_HAS_MANAGEMENT.MDIO ),
        .I13(\n_35_HAS_MANAGEMENT.MDIO ),
        .I14(\n_36_HAS_MANAGEMENT.MDIO ),
        .I15(\n_37_HAS_MANAGEMENT.MDIO ),
        .I16(\n_38_HAS_MANAGEMENT.MDIO ),
        .I17(\n_39_HAS_MANAGEMENT.MDIO ),
        .I18(\n_40_HAS_MANAGEMENT.MDIO ),
        .I19(\n_41_HAS_MANAGEMENT.MDIO ),
        .I2(n_34_RECEIVER),
        .I20(\n_42_HAS_MANAGEMENT.MDIO ),
        .I21(\n_43_HAS_MANAGEMENT.MDIO ),
        .I3(n_35_RECEIVER),
        .I4(\n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I5(\n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I6({\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] }),
        .I7(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I8(O5),
        .I9(\n_31_HAS_MANAGEMENT.MDIO ),
        .MASK_RUDI_BUFERR_TIMER0(MASK_RUDI_BUFERR_TIMER0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY({MR_LP_ADV_ABILITY[16],MR_LP_ADV_ABILITY[13]}),
        .O1(\n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O10({\n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .O2(\n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O3(CONSISTENCY_MATCH1),
        .O4(\n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O5({TX_CONFIG_REG,\n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .O6(\n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O7(\n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O8(\n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O9({MR_NP_RX,MR_NP_RX_INT}),
        .Q({\n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .RESTART_AN_REG(RESTART_AN_REG),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_CONFIG_REG(RX_CONFIG_REG),
        .RX_CONFIG_VALID(RX_CONFIG_VALID),
        .RX_IDLE(RX_IDLE),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S(\n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .SR(RX_CONFIG_REG_REG0),
        .SRESET(SRESET),
        .TX_CONFIG_REG_INT1(TX_CONFIG_REG_INT1),
        .XMIT_CONFIG_INT(XMIT_CONFIG_INT),
        .XMIT_DATA_INT(XMIT_DATA_INT),
        .data_out(data_out),
        .link_timer_value_ch0(link_timer_value_ch0),
        .status_vector_ch0({status_vector_ch0[12],status_vector_ch0[10:7],status_vector_ch0[4]}),
        .userclk2(userclk2));
quadsgmiiMANAGEMENT__parameterized0_43 \HAS_MANAGEMENT.MDIO 
       (.AN_ENABLE_INT(AN_ENABLE_INT),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .EOP_REG1(EOP_REG1),
        .FALSE_NIT0(FALSE_NIT0),
        .I1(n_1_TRANSMITTER),
        .I10(O2),
        .I11({MR_NP_RX,MR_NP_RX_INT}),
        .I12(\n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I13(\n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I14(\n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I15(n_6_SYNCHRONISATION),
        .I2(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .I3(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I4(n_13_RECEIVER),
        .I5(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I6(n_14_RECEIVER),
        .I7(n_15_RECEIVER),
        .I8(n_33_RECEIVER),
        .I9(n_10_RECEIVER),
        .LOOPBACK(LOOPBACK),
        .MASK_RUDI_BUFERR_TIMER0(MASK_RUDI_BUFERR_TIMER0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY({MR_LP_ADV_ABILITY[16],MR_LP_ADV_ABILITY[13]}),
        .O1(\n_0_HAS_MANAGEMENT.MDIO ),
        .O10(\n_26_HAS_MANAGEMENT.MDIO ),
        .O11(\n_27_HAS_MANAGEMENT.MDIO ),
        .O12(\n_28_HAS_MANAGEMENT.MDIO ),
        .O13(\n_29_HAS_MANAGEMENT.MDIO ),
        .O14(\n_31_HAS_MANAGEMENT.MDIO ),
        .O15(\n_32_HAS_MANAGEMENT.MDIO ),
        .O16(\n_33_HAS_MANAGEMENT.MDIO ),
        .O17(\n_34_HAS_MANAGEMENT.MDIO ),
        .O18(\n_35_HAS_MANAGEMENT.MDIO ),
        .O19(\n_36_HAS_MANAGEMENT.MDIO ),
        .O2(O5),
        .O20(\n_37_HAS_MANAGEMENT.MDIO ),
        .O21(\n_38_HAS_MANAGEMENT.MDIO ),
        .O22(\n_39_HAS_MANAGEMENT.MDIO ),
        .O23(\n_40_HAS_MANAGEMENT.MDIO ),
        .O24(\n_41_HAS_MANAGEMENT.MDIO ),
        .O25(\n_42_HAS_MANAGEMENT.MDIO ),
        .O26(\n_43_HAS_MANAGEMENT.MDIO ),
        .O3(\n_11_HAS_MANAGEMENT.MDIO ),
        .O4(\n_12_HAS_MANAGEMENT.MDIO ),
        .O5(\n_18_HAS_MANAGEMENT.MDIO ),
        .O6(\n_20_HAS_MANAGEMENT.MDIO ),
        .O7(\n_23_HAS_MANAGEMENT.MDIO ),
        .O8(\n_24_HAS_MANAGEMENT.MDIO ),
        .O9(\n_25_HAS_MANAGEMENT.MDIO ),
        .Q({\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] }),
        .RESTART_AN_REG(RESTART_AN_REG),
        .RUNDISP_EN(RUNDISP_EN),
        .RXDISPERR_INT(RXDISPERR_INT),
        .RXDISPERR_MOD(RXDISPERR_MOD),
        .RXDISPERR_USR(RXDISPERR_USR),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXNOTINTABLE_USR(RXNOTINTABLE_USR),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S0(S0),
        .S2(S2),
        .SOFT_RESET(SOFT_RESET),
        .SOP_REG3(SOP_REG3),
        .SR(\n_22_HAS_MANAGEMENT.MDIO ),
        .SRESET(SRESET),
        .TX_CONFIG_REG_INT1(TX_CONFIG_REG_INT1),
        .XMIT_DATA(XMIT_DATA),
        .XMIT_DATA_INT(XMIT_DATA_INT),
        .an_interrupt_ch0(an_interrupt_ch0),
        .data_out(data_out),
        .gmii_rx_dv_ch0_int(gmii_rx_dv_ch0_int),
        .mdc_ch0(mdc_ch0),
        .mdio_i_ch0(mdio_i_ch0),
        .mdio_o_ch0(mdio_o_ch0),
        .mdio_t_ch0(mdio_t_ch0),
        .phyad_ch0(phyad_ch0),
        .status_vector_ch0(status_vector_ch0[12]),
        .userclk2(userclk2));
(* ASYNC_REG *) 
   FDPE #(
    .INIT(1'b0)) 
     \MGT_RESET.RESET_INT_PIPE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .PRE(p_3_out),
        .Q(RESET_INT_PIPE));
(* ASYNC_REG *) 
   FDPE #(
    .INIT(1'b0)) 
     \MGT_RESET.RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESET_INT_PIPE),
        .PRE(p_3_out),
        .Q(RESET_INT));
(* ASYNC_REG *) 
   FDRE #(
    .INIT(1'b0)) 
     \MGT_RESET.SRESET_PIPE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESET_INT),
        .Q(SRESET_PIPE),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'hE)) 
     \MGT_RESET.SRESET_i_1 
       (.I0(SRESET_PIPE),
        .I1(RESET_INT),
        .O(\n_0_MGT_RESET.SRESET_i_1 ));
(* ASYNC_REG *) 
   FDRE #(
    .INIT(1'b0)) 
     \MGT_RESET.SRESET_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MGT_RESET.SRESET_i_1 ),
        .Q(SRESET),
        .R(\<const0> ));
quadsgmiiRX__parameterized0_44 RECEIVER
       (.CO(n_11_RECEIVER),
        .EOP_REG1(EOP_REG1),
        .FALSE_NIT0(FALSE_NIT0),
        .I1(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I10(O2),
        .I11(n_5_SYNCHRONISATION),
        .I12({\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] }),
        .I13(n_4_SYNCHRONISATION),
        .I14(\n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I15(\n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I16(\n_0_HAS_MANAGEMENT.MDIO ),
        .I2(\n_24_HAS_MANAGEMENT.MDIO ),
        .I3(\n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I4(\n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I5(\n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I6(\n_18_HAS_MANAGEMENT.MDIO ),
        .I7(\n_23_HAS_MANAGEMENT.MDIO ),
        .I8({\n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .I9({\n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .K28p5_REG1(K28p5_REG1),
        .O1(n_8_RECEIVER),
        .O12(O12),
        .O2(n_10_RECEIVER),
        .O3(CONSISTENCY_MATCH1),
        .O4(n_13_RECEIVER),
        .O5(n_14_RECEIVER),
        .O6(n_15_RECEIVER),
        .O7(n_33_RECEIVER),
        .O8(n_34_RECEIVER),
        .O9(n_35_RECEIVER),
        .Q({\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] }),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_CONFIG_REG(RX_CONFIG_REG),
        .RX_CONFIG_VALID(RX_CONFIG_VALID),
        .RX_IDLE(RX_IDLE),
        .S(\n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .S0(S0),
        .S2(S2),
        .SOP_REG3(SOP_REG3),
        .SR(RX_CONFIG_REG_REG0),
        .SRESET(SRESET),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .XMIT_DATA(XMIT_DATA),
        .gmii_rx_dv_ch0_int(gmii_rx_dv_ch0_int),
        .gmii_rx_er_ch0_int(gmii_rx_er_ch0_int),
        .status_vector_ch0(status_vector_ch0[3:2]),
        .userclk2(userclk2));
FDRE #(
    .INIT(1'b0)) 
     RXDISPERR_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(Q_0),
        .Q(status_vector_ch0[5]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     RXNOTINTABLE_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RXNOTINTABLE_SRL),
        .Q(status_vector_ch0[6]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     STATUS_VECTOR_0_PRE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_18_HAS_MANAGEMENT.MDIO ),
        .Q(STATUS_VECTOR_0_PRE),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(STATUS_VECTOR_0_PRE),
        .Q(status_vector_ch0[0]),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(DUPLEX_MODE_RSLVD_REG),
        .Q(status_vector_ch0[11]),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SYNC_STATUS_REG),
        .Q(status_vector_ch0[1]),
        .R(\<const0> ));
quadsgmiiSYNCHRONISE_45 SYNCHRONISATION
       (.I1(\n_12_HAS_MANAGEMENT.MDIO ),
        .I10(O2),
        .I2(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .I3(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I4(\n_28_HAS_MANAGEMENT.MDIO ),
        .I5(n_8_RECEIVER),
        .I6(\n_27_HAS_MANAGEMENT.MDIO ),
        .I7(\n_29_HAS_MANAGEMENT.MDIO ),
        .I8(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .K28p5_REG1(K28p5_REG1),
        .LOOPBACK(LOOPBACK),
        .O1(n_4_SYNCHRONISATION),
        .O2(n_5_SYNCHRONISATION),
        .O3(n_6_SYNCHRONISATION),
        .O4(O4),
        .O5(n_7_SYNCHRONISATION),
        .RUNDISP_EN(RUNDISP_EN),
        .RXDISPERR_INT(RXDISPERR_INT),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S2(S2),
        .SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .SRESET(SRESET),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .userclk2(userclk2));
quadsgmiisync_block__parameterized0_41 SYNC_SIGNAL_DETECT
       (.I1(O5),
        .SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .data_out(data_out),
        .signal_detect(signal_detect),
        .userclk2(userclk2));
FDRE #(
    .INIT(1'b0)) 
     SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RXSYNC_STATUS),
        .Q(SYNC_STATUS_REG),
        .R(\<const0> ));
quadsgmiiTX__parameterized0_42 TRANSMITTER
       (.D({n_6_TRANSMITTER,n_7_TRANSMITTER,n_8_TRANSMITTER,n_9_TRANSMITTER,n_10_TRANSMITTER,n_11_TRANSMITTER,n_12_TRANSMITTER,n_13_TRANSMITTER}),
        .I1(I1),
        .I2(\n_0_HAS_MANAGEMENT.MDIO ),
        .I3(\n_11_HAS_MANAGEMENT.MDIO ),
        .I4(\n_20_HAS_MANAGEMENT.MDIO ),
        .I5(I5),
        .I6({TX_CONFIG_REG,\n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .LOOPBACK(LOOPBACK),
        .O1(O3),
        .O10(n_17_TRANSMITTER),
        .O11({n_18_TRANSMITTER,n_19_TRANSMITTER,n_20_TRANSMITTER}),
        .O2(n_1_TRANSMITTER),
        .O3(n_2_TRANSMITTER),
        .O4(n_3_TRANSMITTER),
        .O5(n_4_TRANSMITTER),
        .O6(n_5_TRANSMITTER),
        .O7(n_14_TRANSMITTER),
        .O8(n_15_TRANSMITTER),
        .O9(n_16_TRANSMITTER),
        .Q(Q),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_USR),
        .RXCHARISK_USR(RXCHARISK_USR),
        .SR(O1),
        .XMIT_CONFIG_INT(XMIT_CONFIG_INT),
        .XMIT_DATA(XMIT_DATA),
        .gmii_tx_en_out_ch0(gmii_tx_en_out_ch0),
        .gmii_tx_er_out_ch0(gmii_tx_er_out_ch0),
        .userclk2(userclk2));
LUT6 #(
    .INIT(64'h4444444444044444)) 
     \TXDATA[7]_i_1 
       (.I0(O1),
        .I1(\n_0_USE_ROCKET_IO.TXDATA_reg[7] ),
        .I2(\n_0_TXDATA[7]_i_2 ),
        .I3(O10),
        .I4(O11),
        .I5(O8[1]),
        .O(O9));
LUT6 #(
    .INIT(64'h0000000080000000)) 
     \TXDATA[7]_i_2 
       (.I0(O6),
        .I1(O7),
        .I2(O8[2]),
        .I3(D),
        .I4(\n_0_USE_ROCKET_IO.TXDATA_reg[7] ),
        .I5(O8[0]),
        .O(\n_0_TXDATA[7]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0001)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3 ),
        .I4(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4 ),
        .I5(p_0_out),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair160" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair150" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_3 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3 ));
LUT6 #(
    .INIT(64'h00000A0A00000A0B)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_4 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair153" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_5 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair158" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_6 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6 ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1 ),
        .Q(O2),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0001)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3 ),
        .I4(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4 ),
        .I5(p_1_out),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1 ));
LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair156" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_3 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3 ));
LUT6 #(
    .INIT(64'h00000A0A00000A0B)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_4 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair156" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_5 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair154" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_6 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6 ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1 ),
        .Q(O1),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RXBUFERR),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_4_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_3_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2[0]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2[1]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2[2]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_13_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_12_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_11_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_10_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_9_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_8_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_7_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_6_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ),
        .R(O2));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDISPERR_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_25_HAS_MANAGEMENT.MDIO ),
        .Q(RXDISPERR_INT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXNOTINTABLE_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_26_HAS_MANAGEMENT.MDIO ),
        .Q(RXNOTINTABLE_INT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.TXBUFERR_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(txbuferr),
        .Q(TXBUFERR_INT),
        .R(O1));
FDRE \USE_ROCKET_IO.TXCHARISK_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_2_TRANSMITTER),
        .Q(D),
        .R(O1));
FDRE \USE_ROCKET_IO.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_20_TRANSMITTER),
        .Q(O8[0]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_19_TRANSMITTER),
        .Q(O8[1]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_17_TRANSMITTER),
        .Q(O7),
        .R(O1));
FDRE \USE_ROCKET_IO.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_16_TRANSMITTER),
        .Q(O6),
        .R(O1));
FDRE \USE_ROCKET_IO.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_18_TRANSMITTER),
        .Q(O8[2]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_15_TRANSMITTER),
        .Q(O11),
        .R(O1));
FDRE \USE_ROCKET_IO.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_5_TRANSMITTER),
        .Q(O10),
        .R(O1));
FDRE \USE_ROCKET_IO.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_14_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.TXDATA_reg[7] ),
        .R(O1));
VCC VCC
       (.P(\<const1> ));
VCC VCC_1
       (.P(VCC_2));
(* SOFT_HLUTNM = "soft_lutpair166" *) 
   LUT2 #(
    .INIT(4'hE)) 
     reclock_rxreset1_i_1
       (.I0(O2),
        .I1(MGT_RX_RESET3_in),
        .O(SS));
(* SOFT_HLUTNM = "soft_lutpair166" *) 
   LUT2 #(
    .INIT(4'hE)) 
     reclock_rxreset2_i_1
       (.I0(O2),
        .I1(MGT_RX_RESET1_in),
        .O(O13));
LUT2 #(
    .INIT(4'hE)) 
     reclock_rxreset3_i_1
       (.I0(O2),
        .I1(I3),
        .O(O14));
endmodule

(* ORIG_REF_NAME = "GPCS_PMA_GEN" *) 
module quadsgmiiGPCS_PMA_GEN__parameterized0_15
   (MGT_RX_RESET3_in,
    gmii_rx_er_ch1_int,
    status_vector_ch1,
    mdio_o_ch1,
    mdio_t_ch1,
    D,
    O1,
    gmii_rx_dv_ch1_int,
    SOFT_RESET_0,
    an_interrupt_ch1,
    data_valid,
    POWERDOWN0,
    ENABLEALIGN0,
    O2,
    O6,
    O3,
    O4,
    O5,
    O7,
    O8,
    O9,
    userclk2,
    gmii_tx_er_out_ch1,
    gmii_tx_en_out_ch1,
    I1,
    p_3_out_3,
    txbuferr,
    I2,
    RXCHARISK_USR,
    RXCHARISCOMMA_USR,
    link_timer_value_ch1,
    phyad_ch1,
    Q,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    status_vector_ch2,
    status_vector_ch0,
    status_vector_ch3,
    I3,
    I4,
    I5,
    I6,
    I7,
    I8,
    signal_detect,
    mdc_ch1,
    mdio_i_ch1,
    I9,
    I10);
  output MGT_RX_RESET3_in;
  output gmii_rx_er_ch1_int;
  output [12:0]status_vector_ch1;
  output mdio_o_ch1;
  output mdio_t_ch1;
  output [0:0]D;
  output O1;
  output gmii_rx_dv_ch1_int;
  output SOFT_RESET_0;
  output an_interrupt_ch1;
  output data_valid;
  output POWERDOWN0;
  output ENABLEALIGN0;
  output O2;
  output [7:0]O6;
  output [2:0]O3;
  output O4;
  output O5;
  output O7;
  output O8;
  output O9;
  input userclk2;
  input gmii_tx_er_out_ch1;
  input gmii_tx_en_out_ch1;
  input I1;
  input p_3_out_3;
  input txbuferr;
  input I2;
  input RXCHARISK_USR;
  input RXCHARISCOMMA_USR;
  input [8:0]link_timer_value_ch1;
  input [4:0]phyad_ch1;
  input [7:0]Q;
  input RXDISPERR_USR;
  input RXNOTINTABLE_USR;
  input [0:0]status_vector_ch2;
  input [0:0]status_vector_ch0;
  input [0:0]status_vector_ch3;
  input I3;
  input I4;
  input I5;
  input I6;
  input I7;
  input I8;
  input signal_detect;
  input mdc_ch1;
  input mdio_i_ch1;
  input [2:0]I9;
  input [7:0]I10;

  wire \<const0> ;
  wire \<const1> ;
  wire AN_ENABLE_INT;
  wire CLEAR_STATUS_REG;
  wire CONSISTENCY_MATCH1;
  wire [0:0]D;
  wire DUPLEX_MODE_RSLVD_REG;
  wire ENABLEALIGN0;
  wire EOP_REG1;
  wire FALSE_NIT0;
  wire I1;
  wire [7:0]I10;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire [2:0]I9;
  wire K28p5_REG1;
  wire LOOPBACK;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MGT_RX_RESET3_in;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [16:13]MR_LP_ADV_ABILITY;
  wire [16:16]MR_NP_RX;
  wire [15:1]MR_NP_RX_INT;
  wire O1;
  wire O2;
  wire [2:0]O3;
  wire O4;
  wire O5;
  wire [7:0]O6;
  wire O7;
  wire O8;
  wire O9;
  wire POWERDOWN0;
  wire [7:0]Q;
  wire Q_0;
  wire RESET_INT;
  wire RESET_INT_PIPE;
  wire RESTART_AN_REG;
  wire RUNDISP_EN;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire RXDISPERR_INT;
  wire RXDISPERR_MOD;
  wire RXDISPERR_USR;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXNOTINTABLE_SRL;
  wire RXNOTINTABLE_USR;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_REG_REG0;
  wire RX_CONFIG_VALID;
  wire RX_IDLE;
  wire RX_RUDI_INVALID;
  wire S0;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire SOFT_RESET_0;
  wire SOP_REG3;
  wire SRESET;
  wire SRESET_PIPE;
  wire STATUS_VECTOR_0_PRE;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire TXBUFERR_INT;
  wire [15:15]TX_CONFIG_REG;
  wire TX_CONFIG_REG_INT1;
  wire VCC_2;
  wire XMIT_CONFIG_INT;
  wire XMIT_DATA;
  wire XMIT_DATA_INT;
  wire an_interrupt_ch1;
  wire data_out;
  wire data_valid;
  wire gmii_rx_dv_ch1_int;
  wire gmii_rx_er_ch1_int;
  wire gmii_tx_en_out_ch1;
  wire gmii_tx_er_out_ch1;
  wire [8:0]link_timer_value_ch1;
  wire mdc_ch1;
  wire mdio_i_ch1;
  wire mdio_o_ch1;
  wire mdio_t_ch1;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__0 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ;
  wire \n_0_HAS_MANAGEMENT.MDIO ;
  wire \n_0_MGT_RESET.SRESET_i_1__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__0 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ;
  wire \n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_10_RECEIVER;
  wire n_10_TRANSMITTER;
  wire \n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_11_HAS_MANAGEMENT.MDIO ;
  wire n_11_RECEIVER;
  wire n_11_TRANSMITTER;
  wire \n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_12_HAS_MANAGEMENT.MDIO ;
  wire n_12_TRANSMITTER;
  wire \n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_13_RECEIVER;
  wire n_13_TRANSMITTER;
  wire \n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_14_RECEIVER;
  wire n_14_TRANSMITTER;
  wire \n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_15_RECEIVER;
  wire n_15_TRANSMITTER;
  wire \n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_16_TRANSMITTER;
  wire \n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_17_TRANSMITTER;
  wire \n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_18_HAS_MANAGEMENT.MDIO ;
  wire n_18_TRANSMITTER;
  wire \n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_19_TRANSMITTER;
  wire n_1_TRANSMITTER;
  wire \n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_20_HAS_MANAGEMENT.MDIO ;
  wire n_20_TRANSMITTER;
  wire \n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_22_HAS_MANAGEMENT.MDIO ;
  wire \n_23_HAS_MANAGEMENT.MDIO ;
  wire \n_24_HAS_MANAGEMENT.MDIO ;
  wire \n_25_HAS_MANAGEMENT.MDIO ;
  wire \n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_26_HAS_MANAGEMENT.MDIO ;
  wire \n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_27_HAS_MANAGEMENT.MDIO ;
  wire \n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_28_HAS_MANAGEMENT.MDIO ;
  wire \n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_29_HAS_MANAGEMENT.MDIO ;
  wire n_2_TRANSMITTER;
  wire \n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_33_HAS_MANAGEMENT.MDIO ;
  wire n_33_RECEIVER;
  wire \n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_34_HAS_MANAGEMENT.MDIO ;
  wire n_34_RECEIVER;
  wire \n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_35_HAS_MANAGEMENT.MDIO ;
  wire n_35_RECEIVER;
  wire \n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_36_HAS_MANAGEMENT.MDIO ;
  wire \n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_37_HAS_MANAGEMENT.MDIO ;
  wire \n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_38_HAS_MANAGEMENT.MDIO ;
  wire \n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_39_HAS_MANAGEMENT.MDIO ;
  wire n_3_SYNCHRONISATION;
  wire n_3_TRANSMITTER;
  wire \n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_40_HAS_MANAGEMENT.MDIO ;
  wire \n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_41_HAS_MANAGEMENT.MDIO ;
  wire \n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_42_HAS_MANAGEMENT.MDIO ;
  wire \n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_43_HAS_MANAGEMENT.MDIO ;
  wire \n_44_HAS_MANAGEMENT.MDIO ;
  wire \n_45_HAS_MANAGEMENT.MDIO ;
  wire n_4_SYNCHRONISATION;
  wire n_4_TRANSMITTER;
  wire \n_5_HAS_MANAGEMENT.MDIO ;
  wire n_5_SYNCHRONISATION;
  wire n_5_TRANSMITTER;
  wire \n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_6_SYNCHRONISATION;
  wire n_6_TRANSMITTER;
  wire \n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_7_TRANSMITTER;
  wire \n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_8_RECEIVER;
  wire n_8_TRANSMITTER;
  wire n_9_TRANSMITTER;
  wire p_0_out;
  wire p_1_out;
  wire p_3_out_3;
  wire [4:0]phyad_ch1;
  wire signal_detect;
  wire [0:0]status_vector_ch0;
  wire [12:0]status_vector_ch1;
  wire [0:0]status_vector_ch2;
  wire [0:0]status_vector_ch3;
  wire txbuferr;
  wire userclk2;

(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "SRL16" *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/DELAY_RXDISPERR " *) 
   SRL16E #(
    .INIT(16'h0000)) 
     DELAY_RXDISPERR
       (.A0(\<const0> ),
        .A1(\<const0> ),
        .A2(\<const1> ),
        .A3(\<const0> ),
        .CE(VCC_2),
        .CLK(userclk2),
        .D(RXDISPERR_MOD),
        .Q(Q_0));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "SRL16" *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/DELAY_RXNOTINTABLE " *) 
   SRL16E #(
    .INIT(16'h0000)) 
     DELAY_RXNOTINTABLE
       (.A0(\<const0> ),
        .A1(\<const0> ),
        .A2(\<const1> ),
        .A3(\<const0> ),
        .CE(VCC_2),
        .CLK(userclk2),
        .D(RXNOTINTABLE_INT),
        .Q(RXNOTINTABLE_SRL));
FDRE #(
    .INIT(1'b0)) 
     DUPLEX_MODE_RSLVD_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_LP_ADV_ABILITY[13]),
        .Q(DUPLEX_MODE_RSLVD_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair265" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair266" *) 
   LUT5 #(
    .INIT(32'h04040400)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair267" *) 
   LUT5 #(
    .INIT(32'h40404000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair269" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__0 ));
LUT6 #(
    .INIT(64'h04040404040404FF)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__0 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__0 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__0 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__0 ));
(* SOFT_HLUTNM = "soft_lutpair289" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__0 ));
(* SOFT_HLUTNM = "soft_lutpair292" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__0 ));
(* SOFT_HLUTNM = "soft_lutpair272" *) 
   LUT5 #(
    .INIT(32'h00000116)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__0 ));
LUT6 #(
    .INIT(64'h0000000000020200)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__0 ));
(* SOFT_HLUTNM = "soft_lutpair272" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__0 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I4(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__0 ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__0 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_1__0 
       (.I0(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I1(RESET_INT),
        .O(p_0_out));
(* SOFT_HLUTNM = "soft_lutpair276" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__0 ));
LUT6 #(
    .INIT(64'hFFFCFFFCFF00FFF8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__0 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFEE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__0 ));
LUT6 #(
    .INIT(64'h0000000000000103)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__0 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__0 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__0 ));
(* SOFT_HLUTNM = "soft_lutpair294" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__0 ));
(* SOFT_HLUTNM = "soft_lutpair276" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__0 ));
(* SOFT_HLUTNM = "soft_lutpair271" *) 
   LUT5 #(
    .INIT(32'hFE000000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair287" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__0 ));
(* SOFT_HLUTNM = "soft_lutpair285" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__0 ));
LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__0 ));
(* SOFT_HLUTNM = "soft_lutpair294" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__0 ));
(* SOFT_HLUTNM = "soft_lutpair278" *) 
   LUT5 #(
    .INIT(32'hFFFEFEEE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__0 ));
(* SOFT_HLUTNM = "soft_lutpair290" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__0 ));
(* SOFT_HLUTNM = "soft_lutpair278" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__0 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA0080)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair292" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__0 ));
(* SOFT_HLUTNM = "soft_lutpair290" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__0 ));
(* SOFT_HLUTNM = "soft_lutpair289" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__0 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ));
LUT6 #(
    .INIT(64'hF0F01010F0F01000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFF66666)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ));
LUT6 #(
    .INIT(64'hEEFEAAAAEEEEAAAA)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__0 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__0 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__0 ));
(* SOFT_HLUTNM = "soft_lutpair284" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__0 ));
(* SOFT_HLUTNM = "soft_lutpair265" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair264" *) 
   LUT5 #(
    .INIT(32'h00000010)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair270" *) 
   LUT5 #(
    .INIT(32'h00001110)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair266" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair271" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair267" *) 
   LUT5 #(
    .INIT(32'h00000040)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair269" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair270" *) 
   LUT5 #(
    .INIT(32'h00008880)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair264" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__0 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .S(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .R(p_0_out));
(* SOFT_HLUTNM = "soft_lutpair268" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair274" *) 
   LUT5 #(
    .INIT(32'h04040400)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair275" *) 
   LUT5 #(
    .INIT(32'h40404000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair274" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__0 ));
LUT6 #(
    .INIT(64'h04040404040404FF)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__0 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__0 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__0 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__0 ));
(* SOFT_HLUTNM = "soft_lutpair295" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__0 ));
(* SOFT_HLUTNM = "soft_lutpair295" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__0 ));
(* SOFT_HLUTNM = "soft_lutpair279" *) 
   LUT5 #(
    .INIT(32'h00000116)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__0 ));
LUT6 #(
    .INIT(64'h0000000000020200)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__0 ));
(* SOFT_HLUTNM = "soft_lutpair279" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__0 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I4(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__0 ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__0 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_1__0 
       (.I0(RESET_INT),
        .I1(TXBUFERR_INT),
        .O(p_1_out));
(* SOFT_HLUTNM = "soft_lutpair277" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__0 ));
LUT6 #(
    .INIT(64'hFFFCFFFCFF00FFF8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__0 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFEE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__0 ));
LUT6 #(
    .INIT(64'h0000000000000103)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__0 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__0 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__0 ));
(* SOFT_HLUTNM = "soft_lutpair293" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__0 ));
(* SOFT_HLUTNM = "soft_lutpair263" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__0 ));
(* SOFT_HLUTNM = "soft_lutpair283" *) 
   LUT5 #(
    .INIT(32'hFE000000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair286" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__0 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__0 ));
(* SOFT_HLUTNM = "soft_lutpair296" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__0 ));
(* SOFT_HLUTNM = "soft_lutpair293" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__0 ));
(* SOFT_HLUTNM = "soft_lutpair273" *) 
   LUT5 #(
    .INIT(32'hFFFEFEEE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__0 ));
(* SOFT_HLUTNM = "soft_lutpair288" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__0 ));
(* SOFT_HLUTNM = "soft_lutpair273" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__0 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA0080)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair296" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__0 ));
(* SOFT_HLUTNM = "soft_lutpair288" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__0 ));
(* SOFT_HLUTNM = "soft_lutpair277" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__0 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ));
LUT6 #(
    .INIT(64'hF0F01010F0F01000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFF66666)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ));
LUT6 #(
    .INIT(64'hEEFEAAAAEEEEAAAA)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__0 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__0 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__0 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__0 ));
(* SOFT_HLUTNM = "soft_lutpair263" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__0 ));
(* SOFT_HLUTNM = "soft_lutpair275" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair280" *) 
   LUT5 #(
    .INIT(32'h00000010)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair281" *) 
   LUT5 #(
    .INIT(32'h00001110)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair282" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair283" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair282" *) 
   LUT5 #(
    .INIT(32'h00000040)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair281" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair280" *) 
   LUT5 #(
    .INIT(32'h00008880)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair268" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__0 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__0 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__0 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__0 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .S(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__0 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .R(p_1_out));
GND GND
       (.G(\<const0> ));
quadsgmiiAUTO_NEG__parameterized0_37 \HAS_AUTO_NEG.AUTO_NEGOTIATION 
       (.AN_ENABLE_INT(AN_ENABLE_INT),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .CO(n_11_RECEIVER),
        .I1(n_6_SYNCHRONISATION),
        .I10(\n_34_HAS_MANAGEMENT.MDIO ),
        .I11(\n_35_HAS_MANAGEMENT.MDIO ),
        .I12(\n_36_HAS_MANAGEMENT.MDIO ),
        .I13(\n_37_HAS_MANAGEMENT.MDIO ),
        .I14(\n_38_HAS_MANAGEMENT.MDIO ),
        .I15(\n_39_HAS_MANAGEMENT.MDIO ),
        .I16(\n_40_HAS_MANAGEMENT.MDIO ),
        .I17(\n_41_HAS_MANAGEMENT.MDIO ),
        .I18(\n_42_HAS_MANAGEMENT.MDIO ),
        .I19(\n_43_HAS_MANAGEMENT.MDIO ),
        .I2(n_34_RECEIVER),
        .I20(\n_44_HAS_MANAGEMENT.MDIO ),
        .I21(\n_45_HAS_MANAGEMENT.MDIO ),
        .I3(n_35_RECEIVER),
        .I4(\n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I5(\n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I6({\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] }),
        .I7(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I8(\n_5_HAS_MANAGEMENT.MDIO ),
        .I9(\n_33_HAS_MANAGEMENT.MDIO ),
        .MASK_RUDI_BUFERR_TIMER0(MASK_RUDI_BUFERR_TIMER0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY({MR_LP_ADV_ABILITY[16],MR_LP_ADV_ABILITY[13]}),
        .O1(\n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O10({\n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .O2(\n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O3(CONSISTENCY_MATCH1),
        .O4(\n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O5({TX_CONFIG_REG,\n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .O6(\n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O7(\n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O8(\n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O9({MR_NP_RX,MR_NP_RX_INT}),
        .Q({\n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .RESTART_AN_REG(RESTART_AN_REG),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_CONFIG_REG(RX_CONFIG_REG),
        .RX_CONFIG_VALID(RX_CONFIG_VALID),
        .RX_IDLE(RX_IDLE),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S(\n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .SR(RX_CONFIG_REG_REG0),
        .SRESET(SRESET),
        .TX_CONFIG_REG_INT1(TX_CONFIG_REG_INT1),
        .XMIT_CONFIG_INT(XMIT_CONFIG_INT),
        .XMIT_DATA_INT(XMIT_DATA_INT),
        .data_out(data_out),
        .link_timer_value_ch1(link_timer_value_ch1),
        .status_vector_ch1({status_vector_ch1[12],status_vector_ch1[10:7],status_vector_ch1[4]}),
        .userclk2(userclk2));
quadsgmiiMANAGEMENT__parameterized0_34 \HAS_MANAGEMENT.MDIO 
       (.AN_ENABLE_INT(AN_ENABLE_INT),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .EOP_REG1(EOP_REG1),
        .FALSE_NIT0(FALSE_NIT0),
        .I1(n_1_TRANSMITTER),
        .I10(MGT_RX_RESET3_in),
        .I11({MR_NP_RX,MR_NP_RX_INT}),
        .I12(\n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I13(\n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I14(\n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I15(n_5_SYNCHRONISATION),
        .I16(I3),
        .I17(I4),
        .I18(I5),
        .I2(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .I3(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I4(n_13_RECEIVER),
        .I5(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I6(n_14_RECEIVER),
        .I7(n_15_RECEIVER),
        .I8(n_33_RECEIVER),
        .I9(n_10_RECEIVER),
        .LOOPBACK(LOOPBACK),
        .MASK_RUDI_BUFERR_TIMER0(MASK_RUDI_BUFERR_TIMER0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY({MR_LP_ADV_ABILITY[16],MR_LP_ADV_ABILITY[13]}),
        .O1(\n_0_HAS_MANAGEMENT.MDIO ),
        .O10(\n_26_HAS_MANAGEMENT.MDIO ),
        .O11(\n_27_HAS_MANAGEMENT.MDIO ),
        .O12(\n_28_HAS_MANAGEMENT.MDIO ),
        .O13(\n_29_HAS_MANAGEMENT.MDIO ),
        .O14(O2),
        .O15(\n_33_HAS_MANAGEMENT.MDIO ),
        .O16(\n_34_HAS_MANAGEMENT.MDIO ),
        .O17(\n_35_HAS_MANAGEMENT.MDIO ),
        .O18(\n_36_HAS_MANAGEMENT.MDIO ),
        .O19(\n_37_HAS_MANAGEMENT.MDIO ),
        .O2(\n_5_HAS_MANAGEMENT.MDIO ),
        .O20(\n_38_HAS_MANAGEMENT.MDIO ),
        .O21(\n_39_HAS_MANAGEMENT.MDIO ),
        .O22(\n_40_HAS_MANAGEMENT.MDIO ),
        .O23(\n_41_HAS_MANAGEMENT.MDIO ),
        .O24(\n_42_HAS_MANAGEMENT.MDIO ),
        .O25(\n_43_HAS_MANAGEMENT.MDIO ),
        .O26(\n_44_HAS_MANAGEMENT.MDIO ),
        .O27(\n_45_HAS_MANAGEMENT.MDIO ),
        .O3(\n_11_HAS_MANAGEMENT.MDIO ),
        .O4(\n_12_HAS_MANAGEMENT.MDIO ),
        .O5(\n_18_HAS_MANAGEMENT.MDIO ),
        .O6(\n_20_HAS_MANAGEMENT.MDIO ),
        .O7(\n_23_HAS_MANAGEMENT.MDIO ),
        .O8(\n_24_HAS_MANAGEMENT.MDIO ),
        .O9(\n_25_HAS_MANAGEMENT.MDIO ),
        .POWERDOWN0(POWERDOWN0),
        .Q({\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] }),
        .RESTART_AN_REG(RESTART_AN_REG),
        .RUNDISP_EN(RUNDISP_EN),
        .RXDISPERR_INT(RXDISPERR_INT),
        .RXDISPERR_MOD(RXDISPERR_MOD),
        .RXDISPERR_USR(RXDISPERR_USR),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXNOTINTABLE_USR(RXNOTINTABLE_USR),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S0(S0),
        .S2(S2),
        .SOFT_RESET_0(SOFT_RESET_0),
        .SOP_REG3(SOP_REG3),
        .SR(\n_22_HAS_MANAGEMENT.MDIO ),
        .SRESET(SRESET),
        .TX_CONFIG_REG_INT1(TX_CONFIG_REG_INT1),
        .XMIT_DATA(XMIT_DATA),
        .XMIT_DATA_INT(XMIT_DATA_INT),
        .an_interrupt_ch1(an_interrupt_ch1),
        .data_out(data_out),
        .gmii_rx_dv_ch1_int(gmii_rx_dv_ch1_int),
        .mdc_ch1(mdc_ch1),
        .mdio_i_ch1(mdio_i_ch1),
        .mdio_o_ch1(mdio_o_ch1),
        .mdio_t_ch1(mdio_t_ch1),
        .phyad_ch1(phyad_ch1),
        .status_vector_ch1(status_vector_ch1[12]),
        .userclk2(userclk2));
(* ASYNC_REG *) 
   FDPE #(
    .INIT(1'b0)) 
     \MGT_RESET.RESET_INT_PIPE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .PRE(p_3_out_3),
        .Q(RESET_INT_PIPE));
(* ASYNC_REG *) 
   FDPE #(
    .INIT(1'b0)) 
     \MGT_RESET.RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESET_INT_PIPE),
        .PRE(p_3_out_3),
        .Q(RESET_INT));
(* ASYNC_REG *) 
   FDRE #(
    .INIT(1'b0)) 
     \MGT_RESET.SRESET_PIPE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESET_INT),
        .Q(SRESET_PIPE),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'hE)) 
     \MGT_RESET.SRESET_i_1__0 
       (.I0(SRESET_PIPE),
        .I1(RESET_INT),
        .O(\n_0_MGT_RESET.SRESET_i_1__0 ));
(* ASYNC_REG *) 
   FDRE #(
    .INIT(1'b0)) 
     \MGT_RESET.SRESET_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MGT_RESET.SRESET_i_1__0 ),
        .Q(SRESET),
        .R(\<const0> ));
quadsgmiiRX__parameterized0_35 RECEIVER
       (.CO(n_11_RECEIVER),
        .EOP_REG1(EOP_REG1),
        .FALSE_NIT0(FALSE_NIT0),
        .I1(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I10(MGT_RX_RESET3_in),
        .I11(n_4_SYNCHRONISATION),
        .I12({\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] }),
        .I13(n_3_SYNCHRONISATION),
        .I14(\n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I15(\n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I16(\n_0_HAS_MANAGEMENT.MDIO ),
        .I2(\n_24_HAS_MANAGEMENT.MDIO ),
        .I3(\n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I4(\n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I5(\n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I6(\n_18_HAS_MANAGEMENT.MDIO ),
        .I7(\n_23_HAS_MANAGEMENT.MDIO ),
        .I8({\n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .I9({\n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .K28p5_REG1(K28p5_REG1),
        .O1(n_8_RECEIVER),
        .O10(O6),
        .O2(n_10_RECEIVER),
        .O3(CONSISTENCY_MATCH1),
        .O4(n_13_RECEIVER),
        .O5(n_14_RECEIVER),
        .O6(n_15_RECEIVER),
        .O7(n_33_RECEIVER),
        .O8(n_34_RECEIVER),
        .O9(n_35_RECEIVER),
        .Q({\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] }),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_CONFIG_REG(RX_CONFIG_REG),
        .RX_CONFIG_VALID(RX_CONFIG_VALID),
        .RX_IDLE(RX_IDLE),
        .S(\n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .S0(S0),
        .S2(S2),
        .SOP_REG3(SOP_REG3),
        .SR(RX_CONFIG_REG_REG0),
        .SRESET(SRESET),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .XMIT_DATA(XMIT_DATA),
        .gmii_rx_dv_ch1_int(gmii_rx_dv_ch1_int),
        .gmii_rx_er_ch1_int(gmii_rx_er_ch1_int),
        .status_vector_ch1(status_vector_ch1[3:2]),
        .userclk2(userclk2));
FDRE #(
    .INIT(1'b0)) 
     RXDISPERR_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(Q_0),
        .Q(status_vector_ch1[5]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     RXNOTINTABLE_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RXNOTINTABLE_SRL),
        .Q(status_vector_ch1[6]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     STATUS_VECTOR_0_PRE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_18_HAS_MANAGEMENT.MDIO ),
        .Q(STATUS_VECTOR_0_PRE),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(STATUS_VECTOR_0_PRE),
        .Q(status_vector_ch1[0]),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(DUPLEX_MODE_RSLVD_REG),
        .Q(status_vector_ch1[11]),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SYNC_STATUS_REG),
        .Q(status_vector_ch1[1]),
        .R(\<const0> ));
quadsgmiiSYNCHRONISE_36 SYNCHRONISATION
       (.ENABLEALIGN0(ENABLEALIGN0),
        .I1(\n_12_HAS_MANAGEMENT.MDIO ),
        .I10(MGT_RX_RESET3_in),
        .I11(I7),
        .I12(I8),
        .I2(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .I3(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I4(\n_28_HAS_MANAGEMENT.MDIO ),
        .I5(n_8_RECEIVER),
        .I6(\n_27_HAS_MANAGEMENT.MDIO ),
        .I7(\n_29_HAS_MANAGEMENT.MDIO ),
        .I8(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I9(I6),
        .K28p5_REG1(K28p5_REG1),
        .LOOPBACK(LOOPBACK),
        .O1(n_3_SYNCHRONISATION),
        .O2(n_4_SYNCHRONISATION),
        .O3(n_5_SYNCHRONISATION),
        .O4(n_6_SYNCHRONISATION),
        .RUNDISP_EN(RUNDISP_EN),
        .RXDISPERR_INT(RXDISPERR_INT),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S2(S2),
        .SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .SRESET(SRESET),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .userclk2(userclk2));
quadsgmiisync_block__parameterized0_32 SYNC_SIGNAL_DETECT
       (.I1(\n_5_HAS_MANAGEMENT.MDIO ),
        .SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .data_out(data_out),
        .signal_detect(signal_detect),
        .userclk2(userclk2));
FDRE #(
    .INIT(1'b0)) 
     SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RXSYNC_STATUS),
        .Q(SYNC_STATUS_REG),
        .R(\<const0> ));
quadsgmiiTX__parameterized0_33 TRANSMITTER
       (.D({n_6_TRANSMITTER,n_7_TRANSMITTER,n_8_TRANSMITTER,n_9_TRANSMITTER,n_10_TRANSMITTER,n_11_TRANSMITTER,n_12_TRANSMITTER,n_13_TRANSMITTER}),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ),
        .I10(I10),
        .I2(I2),
        .I3(\n_0_HAS_MANAGEMENT.MDIO ),
        .I4(\n_11_HAS_MANAGEMENT.MDIO ),
        .I5(\n_20_HAS_MANAGEMENT.MDIO ),
        .I6({TX_CONFIG_REG,\n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .LOOPBACK(LOOPBACK),
        .O1(O1),
        .O10(n_17_TRANSMITTER),
        .O11({n_18_TRANSMITTER,n_19_TRANSMITTER,n_20_TRANSMITTER}),
        .O2(n_1_TRANSMITTER),
        .O3(n_2_TRANSMITTER),
        .O4(n_3_TRANSMITTER),
        .O5(n_4_TRANSMITTER),
        .O6(n_5_TRANSMITTER),
        .O7(n_14_TRANSMITTER),
        .O8(n_15_TRANSMITTER),
        .O9(n_16_TRANSMITTER),
        .Q(Q),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_USR),
        .RXCHARISK_USR(RXCHARISK_USR),
        .XMIT_CONFIG_INT(XMIT_CONFIG_INT),
        .XMIT_DATA(XMIT_DATA),
        .gmii_tx_en_out_ch1(gmii_tx_en_out_ch1),
        .gmii_tx_er_out_ch1(gmii_tx_er_out_ch1),
        .userclk2(userclk2));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0001)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__0 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__0 ),
        .I4(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__0 ),
        .I5(p_0_out),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__0 ));
LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair284" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__0 ));
LUT6 #(
    .INIT(64'h00000A0A00000A0B)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__0 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__0 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__0 ));
(* SOFT_HLUTNM = "soft_lutpair285" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__0 ));
(* SOFT_HLUTNM = "soft_lutpair287" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__0 ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__0 ),
        .Q(MGT_RX_RESET3_in),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0001)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__0 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__0 ),
        .I4(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__0 ),
        .I5(p_1_out),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__0 ));
LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair291" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__0 ));
LUT6 #(
    .INIT(64'h00000A0A00000A0B)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__0 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__0 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__0 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__0 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__0 ));
(* SOFT_HLUTNM = "soft_lutpair291" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__0 ));
(* SOFT_HLUTNM = "soft_lutpair286" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__0 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__0 ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__0 ),
        .Q(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_4_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_3_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I9[0]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I9[1]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I9[2]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_13_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_12_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_11_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_10_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_9_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_8_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_7_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_6_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ),
        .R(MGT_RX_RESET3_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDISPERR_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_25_HAS_MANAGEMENT.MDIO ),
        .Q(RXDISPERR_INT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXNOTINTABLE_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_26_HAS_MANAGEMENT.MDIO ),
        .Q(RXNOTINTABLE_INT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.TXBUFERR_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(txbuferr),
        .Q(TXBUFERR_INT),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXCHARISK_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_2_TRANSMITTER),
        .Q(D),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_20_TRANSMITTER),
        .Q(O3[0]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_19_TRANSMITTER),
        .Q(O3[1]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_17_TRANSMITTER),
        .Q(O9),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_16_TRANSMITTER),
        .Q(O8),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_18_TRANSMITTER),
        .Q(O3[2]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_15_TRANSMITTER),
        .Q(O7),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_5_TRANSMITTER),
        .Q(O5),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_14_TRANSMITTER),
        .Q(O4),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
VCC VCC
       (.P(\<const1> ));
VCC VCC_1
       (.P(VCC_2));
LUT4 #(
    .INIT(16'hFFFE)) 
     data_valid_reg_i_1
       (.I0(status_vector_ch1[1]),
        .I1(status_vector_ch2),
        .I2(status_vector_ch0),
        .I3(status_vector_ch3),
        .O(data_valid));
endmodule

(* ORIG_REF_NAME = "GPCS_PMA_GEN" *) 
module quadsgmiiGPCS_PMA_GEN__parameterized0_16
   (MGT_RX_RESET1_in,
    gmii_rx_er_ch2_int,
    status_vector_ch2,
    mdio_o_ch2,
    mdio_t_ch2,
    D,
    O1,
    O2,
    gmii_rx_dv_ch2_int,
    O3,
    SOFT_RESET_1,
    an_interrupt_ch2,
    O7,
    O4,
    O5,
    O6,
    O8,
    O9,
    O10,
    userclk2,
    gmii_tx_er_out_ch2,
    gmii_tx_en_out_ch2,
    I1,
    p_3_out_4,
    txbuferr,
    I3,
    RXCHARISK_USR,
    RXCHARISCOMMA_USR,
    link_timer_value_ch2,
    phyad_ch2,
    Q,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    signal_detect,
    mdc_ch2,
    mdio_i_ch2,
    I2,
    I7);
  output MGT_RX_RESET1_in;
  output gmii_rx_er_ch2_int;
  output [12:0]status_vector_ch2;
  output mdio_o_ch2;
  output mdio_t_ch2;
  output [0:0]D;
  output O1;
  output O2;
  output gmii_rx_dv_ch2_int;
  output O3;
  output SOFT_RESET_1;
  output an_interrupt_ch2;
  output [7:0]O7;
  output [2:0]O4;
  output O5;
  output O6;
  output O8;
  output O9;
  output O10;
  input userclk2;
  input gmii_tx_er_out_ch2;
  input gmii_tx_en_out_ch2;
  input I1;
  input p_3_out_4;
  input txbuferr;
  input I3;
  input RXCHARISK_USR;
  input RXCHARISCOMMA_USR;
  input [8:0]link_timer_value_ch2;
  input [4:0]phyad_ch2;
  input [7:0]Q;
  input RXDISPERR_USR;
  input RXNOTINTABLE_USR;
  input signal_detect;
  input mdc_ch2;
  input mdio_i_ch2;
  input [2:0]I2;
  input [7:0]I7;

  wire \<const0> ;
  wire \<const1> ;
  wire AN_ENABLE_INT;
  wire CLEAR_STATUS_REG;
  wire CONSISTENCY_MATCH1;
  wire [0:0]D;
  wire DUPLEX_MODE_RSLVD_REG;
  wire EOP_REG1;
  wire FALSE_NIT0;
  wire I1;
  wire [2:0]I2;
  wire I3;
  wire [7:0]I7;
  wire K28p5_REG1;
  wire LOOPBACK;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MGT_RX_RESET1_in;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [16:13]MR_LP_ADV_ABILITY;
  wire [16:16]MR_NP_RX;
  wire [15:1]MR_NP_RX_INT;
  wire O1;
  wire O10;
  wire O2;
  wire O3;
  wire [2:0]O4;
  wire O5;
  wire O6;
  wire [7:0]O7;
  wire O8;
  wire O9;
  wire [7:0]Q;
  wire Q_0;
  wire RESET_INT;
  wire RESET_INT_PIPE;
  wire RESTART_AN_REG;
  wire RUNDISP_EN;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire RXDISPERR_INT;
  wire RXDISPERR_MOD;
  wire RXDISPERR_USR;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXNOTINTABLE_SRL;
  wire RXNOTINTABLE_USR;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_REG_REG0;
  wire RX_CONFIG_VALID;
  wire RX_IDLE;
  wire RX_RUDI_INVALID;
  wire S0;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire SOFT_RESET_1;
  wire SOP_REG3;
  wire SRESET;
  wire SRESET_PIPE;
  wire STATUS_VECTOR_0_PRE;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire TXBUFERR_INT;
  wire [15:15]TX_CONFIG_REG;
  wire TX_CONFIG_REG_INT1;
  wire VCC_2;
  wire XMIT_CONFIG_INT;
  wire XMIT_DATA;
  wire XMIT_DATA_INT;
  wire an_interrupt_ch2;
  wire data_out;
  wire gmii_rx_dv_ch2_int;
  wire gmii_rx_er_ch2_int;
  wire gmii_tx_en_out_ch2;
  wire gmii_tx_er_out_ch2;
  wire [8:0]link_timer_value_ch2;
  wire mdc_ch2;
  wire mdio_i_ch2;
  wire mdio_o_ch2;
  wire mdio_t_ch2;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__1 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ;
  wire \n_0_HAS_MANAGEMENT.MDIO ;
  wire \n_0_MGT_RESET.SRESET_i_1__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__1 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ;
  wire \n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_10_RECEIVER;
  wire n_10_TRANSMITTER;
  wire \n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_11_HAS_MANAGEMENT.MDIO ;
  wire n_11_RECEIVER;
  wire n_11_TRANSMITTER;
  wire \n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_12_HAS_MANAGEMENT.MDIO ;
  wire n_12_TRANSMITTER;
  wire \n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_13_RECEIVER;
  wire n_13_TRANSMITTER;
  wire \n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_14_RECEIVER;
  wire n_14_TRANSMITTER;
  wire \n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_15_RECEIVER;
  wire n_15_TRANSMITTER;
  wire \n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_16_TRANSMITTER;
  wire \n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_17_TRANSMITTER;
  wire \n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_18_HAS_MANAGEMENT.MDIO ;
  wire n_18_TRANSMITTER;
  wire \n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_19_TRANSMITTER;
  wire n_1_TRANSMITTER;
  wire \n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_20_HAS_MANAGEMENT.MDIO ;
  wire n_20_TRANSMITTER;
  wire \n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_22_HAS_MANAGEMENT.MDIO ;
  wire \n_23_HAS_MANAGEMENT.MDIO ;
  wire \n_24_HAS_MANAGEMENT.MDIO ;
  wire \n_25_HAS_MANAGEMENT.MDIO ;
  wire \n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_26_HAS_MANAGEMENT.MDIO ;
  wire \n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_27_HAS_MANAGEMENT.MDIO ;
  wire \n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_28_HAS_MANAGEMENT.MDIO ;
  wire \n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_29_HAS_MANAGEMENT.MDIO ;
  wire n_2_TRANSMITTER;
  wire \n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_31_HAS_MANAGEMENT.MDIO ;
  wire \n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_32_HAS_MANAGEMENT.MDIO ;
  wire \n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_33_HAS_MANAGEMENT.MDIO ;
  wire n_33_RECEIVER;
  wire \n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_34_HAS_MANAGEMENT.MDIO ;
  wire n_34_RECEIVER;
  wire \n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_35_HAS_MANAGEMENT.MDIO ;
  wire n_35_RECEIVER;
  wire \n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_36_HAS_MANAGEMENT.MDIO ;
  wire \n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_37_HAS_MANAGEMENT.MDIO ;
  wire \n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_38_HAS_MANAGEMENT.MDIO ;
  wire \n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_39_HAS_MANAGEMENT.MDIO ;
  wire n_3_TRANSMITTER;
  wire \n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_40_HAS_MANAGEMENT.MDIO ;
  wire \n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_41_HAS_MANAGEMENT.MDIO ;
  wire \n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_42_HAS_MANAGEMENT.MDIO ;
  wire \n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_43_HAS_MANAGEMENT.MDIO ;
  wire n_4_SYNCHRONISATION;
  wire n_4_TRANSMITTER;
  wire n_5_SYNCHRONISATION;
  wire n_5_TRANSMITTER;
  wire \n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_6_SYNCHRONISATION;
  wire n_6_TRANSMITTER;
  wire \n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_7_SYNCHRONISATION;
  wire n_7_TRANSMITTER;
  wire \n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_8_RECEIVER;
  wire n_8_TRANSMITTER;
  wire n_9_TRANSMITTER;
  wire p_0_out;
  wire p_1_out;
  wire p_3_out_4;
  wire [4:0]phyad_ch2;
  wire signal_detect;
  wire [12:0]status_vector_ch2;
  wire txbuferr;
  wire userclk2;

(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "SRL16" *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/DELAY_RXDISPERR " *) 
   SRL16E #(
    .INIT(16'h0000)) 
     DELAY_RXDISPERR
       (.A0(\<const0> ),
        .A1(\<const0> ),
        .A2(\<const1> ),
        .A3(\<const0> ),
        .CE(VCC_2),
        .CLK(userclk2),
        .D(RXDISPERR_MOD),
        .Q(Q_0));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "SRL16" *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/DELAY_RXNOTINTABLE " *) 
   SRL16E #(
    .INIT(16'h0000)) 
     DELAY_RXNOTINTABLE
       (.A0(\<const0> ),
        .A1(\<const0> ),
        .A2(\<const1> ),
        .A3(\<const0> ),
        .CE(VCC_2),
        .CLK(userclk2),
        .D(RXNOTINTABLE_INT),
        .Q(RXNOTINTABLE_SRL));
FDRE #(
    .INIT(1'b0)) 
     DUPLEX_MODE_RSLVD_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_LP_ADV_ABILITY[13]),
        .Q(DUPLEX_MODE_RSLVD_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair393" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair394" *) 
   LUT5 #(
    .INIT(32'h04040400)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair395" *) 
   LUT5 #(
    .INIT(32'h40404000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair396" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__1 ));
LUT6 #(
    .INIT(64'h04040404040404FF)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__1 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__1 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__1 ));
(* SOFT_HLUTNM = "soft_lutpair420" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__1 ));
(* SOFT_HLUTNM = "soft_lutpair424" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__1 ));
(* SOFT_HLUTNM = "soft_lutpair399" *) 
   LUT5 #(
    .INIT(32'h00000116)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__1 ));
LUT6 #(
    .INIT(64'h0000000000020200)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__1 ));
(* SOFT_HLUTNM = "soft_lutpair399" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I4(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__1 ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__1 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_1__1 
       (.I0(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I1(RESET_INT),
        .O(p_0_out));
(* SOFT_HLUTNM = "soft_lutpair402" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__1 ));
LUT6 #(
    .INIT(64'hFFFCFFFCFF00FFF8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__1 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFEE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__1 ));
LUT6 #(
    .INIT(64'h0000000000000103)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__1 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__1 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__1 ));
(* SOFT_HLUTNM = "soft_lutpair421" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__1 ));
(* SOFT_HLUTNM = "soft_lutpair402" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__1 ));
(* SOFT_HLUTNM = "soft_lutpair398" *) 
   LUT5 #(
    .INIT(32'hFE000000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__1 ));
(* SOFT_HLUTNM = "soft_lutpair419" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__1 ));
(* SOFT_HLUTNM = "soft_lutpair414" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__1 ));
(* SOFT_HLUTNM = "soft_lutpair419" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__1 ));
(* SOFT_HLUTNM = "soft_lutpair421" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__1 ));
(* SOFT_HLUTNM = "soft_lutpair404" *) 
   LUT5 #(
    .INIT(32'hFFFEFEEE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__1 ));
(* SOFT_HLUTNM = "soft_lutpair422" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__1 ));
(* SOFT_HLUTNM = "soft_lutpair404" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__1 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA0080)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair424" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__1 ));
(* SOFT_HLUTNM = "soft_lutpair417" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__1 ));
(* SOFT_HLUTNM = "soft_lutpair420" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__1 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ));
LUT6 #(
    .INIT(64'hF0F01010F0F01000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFF66666)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ));
LUT6 #(
    .INIT(64'hEEFEAAAAEEEEAAAA)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__1 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__1 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__1 ));
(* SOFT_HLUTNM = "soft_lutpair411" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__1 ));
(* SOFT_HLUTNM = "soft_lutpair392" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair394" *) 
   LUT5 #(
    .INIT(32'h00000010)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair393" *) 
   LUT5 #(
    .INIT(32'h00001110)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair396" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair395" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair397" *) 
   LUT5 #(
    .INIT(32'h00000040)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair397" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair398" *) 
   LUT5 #(
    .INIT(32'h00008880)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair392" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__1 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .S(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .R(p_0_out));
(* SOFT_HLUTNM = "soft_lutpair400" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair401" *) 
   LUT5 #(
    .INIT(32'h04040400)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair403" *) 
   LUT5 #(
    .INIT(32'h40404000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair401" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__1 ));
LUT6 #(
    .INIT(64'h04040404040404FF)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__1 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__1 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__1 ));
(* SOFT_HLUTNM = "soft_lutpair425" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__1 ));
(* SOFT_HLUTNM = "soft_lutpair425" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__1 ));
(* SOFT_HLUTNM = "soft_lutpair405" *) 
   LUT5 #(
    .INIT(32'h00000116)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__1 ));
LUT6 #(
    .INIT(64'h0000000000020200)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__1 ));
(* SOFT_HLUTNM = "soft_lutpair405" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I4(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__1 ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__1 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_1__1 
       (.I0(RESET_INT),
        .I1(TXBUFERR_INT),
        .O(p_1_out));
(* SOFT_HLUTNM = "soft_lutpair409" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__1 ));
LUT6 #(
    .INIT(64'hFFFCFFFCFF00FFF8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__1 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFEE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__1 ));
LUT6 #(
    .INIT(64'h0000000000000103)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__1 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__1 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__1 ));
(* SOFT_HLUTNM = "soft_lutpair426" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__1 ));
(* SOFT_HLUTNM = "soft_lutpair406" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__1 ));
(* SOFT_HLUTNM = "soft_lutpair410" *) 
   LUT5 #(
    .INIT(32'hFE000000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__1 ));
(* SOFT_HLUTNM = "soft_lutpair416" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__1 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__1 ));
(* SOFT_HLUTNM = "soft_lutpair416" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__1 ));
(* SOFT_HLUTNM = "soft_lutpair426" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__1 ));
(* SOFT_HLUTNM = "soft_lutpair407" *) 
   LUT5 #(
    .INIT(32'hFFFEFEEE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__1 ));
(* SOFT_HLUTNM = "soft_lutpair423" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__1 ));
(* SOFT_HLUTNM = "soft_lutpair407" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__1 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA0080)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair423" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__1 ));
(* SOFT_HLUTNM = "soft_lutpair415" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__1 ));
(* SOFT_HLUTNM = "soft_lutpair409" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__1 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ));
LUT6 #(
    .INIT(64'hF0F01010F0F01000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFF66666)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ));
LUT6 #(
    .INIT(64'hEEFEAAAAEEEEAAAA)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__1 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__1 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__1 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__1 ));
(* SOFT_HLUTNM = "soft_lutpair406" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__1 ));
(* SOFT_HLUTNM = "soft_lutpair403" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair408" *) 
   LUT5 #(
    .INIT(32'h00000010)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair410" *) 
   LUT5 #(
    .INIT(32'h00001110)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair412" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair413" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair412" *) 
   LUT5 #(
    .INIT(32'h00000040)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair413" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair408" *) 
   LUT5 #(
    .INIT(32'h00008880)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair400" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__1 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__1 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__1 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__1 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .S(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__1 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .R(p_1_out));
GND GND
       (.G(\<const0> ));
quadsgmiiAUTO_NEG__parameterized0_28 \HAS_AUTO_NEG.AUTO_NEGOTIATION 
       (.AN_ENABLE_INT(AN_ENABLE_INT),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .CO(n_11_RECEIVER),
        .I1(n_7_SYNCHRONISATION),
        .I10(\n_32_HAS_MANAGEMENT.MDIO ),
        .I11(\n_33_HAS_MANAGEMENT.MDIO ),
        .I12(\n_34_HAS_MANAGEMENT.MDIO ),
        .I13(\n_35_HAS_MANAGEMENT.MDIO ),
        .I14(\n_36_HAS_MANAGEMENT.MDIO ),
        .I15(\n_37_HAS_MANAGEMENT.MDIO ),
        .I16(\n_38_HAS_MANAGEMENT.MDIO ),
        .I17(\n_39_HAS_MANAGEMENT.MDIO ),
        .I18(\n_40_HAS_MANAGEMENT.MDIO ),
        .I19(\n_41_HAS_MANAGEMENT.MDIO ),
        .I2(n_34_RECEIVER),
        .I20(\n_42_HAS_MANAGEMENT.MDIO ),
        .I21(\n_43_HAS_MANAGEMENT.MDIO ),
        .I3(n_35_RECEIVER),
        .I4(\n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I5(\n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I6({\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] }),
        .I7(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I8(O3),
        .I9(\n_31_HAS_MANAGEMENT.MDIO ),
        .MASK_RUDI_BUFERR_TIMER0(MASK_RUDI_BUFERR_TIMER0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY({MR_LP_ADV_ABILITY[16],MR_LP_ADV_ABILITY[13]}),
        .O1(\n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O10({\n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .O2(\n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O3(CONSISTENCY_MATCH1),
        .O4(\n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O5({TX_CONFIG_REG,\n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .O6(\n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O7(\n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O8(\n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O9({MR_NP_RX,MR_NP_RX_INT}),
        .Q({\n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .RESTART_AN_REG(RESTART_AN_REG),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_CONFIG_REG(RX_CONFIG_REG),
        .RX_CONFIG_VALID(RX_CONFIG_VALID),
        .RX_IDLE(RX_IDLE),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S(\n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .SR(RX_CONFIG_REG_REG0),
        .SRESET(SRESET),
        .TX_CONFIG_REG_INT1(TX_CONFIG_REG_INT1),
        .XMIT_CONFIG_INT(XMIT_CONFIG_INT),
        .XMIT_DATA_INT(XMIT_DATA_INT),
        .data_out(data_out),
        .link_timer_value_ch2(link_timer_value_ch2),
        .status_vector_ch2({status_vector_ch2[12],status_vector_ch2[10:7],status_vector_ch2[4]}),
        .userclk2(userclk2));
quadsgmiiMANAGEMENT__parameterized0_25 \HAS_MANAGEMENT.MDIO 
       (.AN_ENABLE_INT(AN_ENABLE_INT),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .EOP_REG1(EOP_REG1),
        .FALSE_NIT0(FALSE_NIT0),
        .I1(n_1_TRANSMITTER),
        .I10(MGT_RX_RESET1_in),
        .I11({MR_NP_RX,MR_NP_RX_INT}),
        .I12(\n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I13(\n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I14(\n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I15(n_6_SYNCHRONISATION),
        .I2(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .I3(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I4(n_13_RECEIVER),
        .I5(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I6(n_14_RECEIVER),
        .I7(n_15_RECEIVER),
        .I8(n_33_RECEIVER),
        .I9(n_10_RECEIVER),
        .LOOPBACK(LOOPBACK),
        .MASK_RUDI_BUFERR_TIMER0(MASK_RUDI_BUFERR_TIMER0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY({MR_LP_ADV_ABILITY[16],MR_LP_ADV_ABILITY[13]}),
        .O1(\n_0_HAS_MANAGEMENT.MDIO ),
        .O10(\n_26_HAS_MANAGEMENT.MDIO ),
        .O11(\n_27_HAS_MANAGEMENT.MDIO ),
        .O12(\n_28_HAS_MANAGEMENT.MDIO ),
        .O13(\n_29_HAS_MANAGEMENT.MDIO ),
        .O14(\n_31_HAS_MANAGEMENT.MDIO ),
        .O15(\n_32_HAS_MANAGEMENT.MDIO ),
        .O16(\n_33_HAS_MANAGEMENT.MDIO ),
        .O17(\n_34_HAS_MANAGEMENT.MDIO ),
        .O18(\n_35_HAS_MANAGEMENT.MDIO ),
        .O19(\n_36_HAS_MANAGEMENT.MDIO ),
        .O2(O3),
        .O20(\n_37_HAS_MANAGEMENT.MDIO ),
        .O21(\n_38_HAS_MANAGEMENT.MDIO ),
        .O22(\n_39_HAS_MANAGEMENT.MDIO ),
        .O23(\n_40_HAS_MANAGEMENT.MDIO ),
        .O24(\n_41_HAS_MANAGEMENT.MDIO ),
        .O25(\n_42_HAS_MANAGEMENT.MDIO ),
        .O26(\n_43_HAS_MANAGEMENT.MDIO ),
        .O3(\n_11_HAS_MANAGEMENT.MDIO ),
        .O4(\n_12_HAS_MANAGEMENT.MDIO ),
        .O5(\n_18_HAS_MANAGEMENT.MDIO ),
        .O6(\n_20_HAS_MANAGEMENT.MDIO ),
        .O7(\n_23_HAS_MANAGEMENT.MDIO ),
        .O8(\n_24_HAS_MANAGEMENT.MDIO ),
        .O9(\n_25_HAS_MANAGEMENT.MDIO ),
        .Q({\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] }),
        .RESTART_AN_REG(RESTART_AN_REG),
        .RUNDISP_EN(RUNDISP_EN),
        .RXDISPERR_INT(RXDISPERR_INT),
        .RXDISPERR_MOD(RXDISPERR_MOD),
        .RXDISPERR_USR(RXDISPERR_USR),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXNOTINTABLE_USR(RXNOTINTABLE_USR),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S0(S0),
        .S2(S2),
        .SOFT_RESET_1(SOFT_RESET_1),
        .SOP_REG3(SOP_REG3),
        .SR(\n_22_HAS_MANAGEMENT.MDIO ),
        .SRESET(SRESET),
        .TX_CONFIG_REG_INT1(TX_CONFIG_REG_INT1),
        .XMIT_DATA(XMIT_DATA),
        .XMIT_DATA_INT(XMIT_DATA_INT),
        .an_interrupt_ch2(an_interrupt_ch2),
        .data_out(data_out),
        .gmii_rx_dv_ch2_int(gmii_rx_dv_ch2_int),
        .mdc_ch2(mdc_ch2),
        .mdio_i_ch2(mdio_i_ch2),
        .mdio_o_ch2(mdio_o_ch2),
        .mdio_t_ch2(mdio_t_ch2),
        .phyad_ch2(phyad_ch2),
        .status_vector_ch2(status_vector_ch2[12]),
        .userclk2(userclk2));
(* ASYNC_REG *) 
   FDPE #(
    .INIT(1'b0)) 
     \MGT_RESET.RESET_INT_PIPE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .PRE(p_3_out_4),
        .Q(RESET_INT_PIPE));
(* ASYNC_REG *) 
   FDPE #(
    .INIT(1'b0)) 
     \MGT_RESET.RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESET_INT_PIPE),
        .PRE(p_3_out_4),
        .Q(RESET_INT));
(* ASYNC_REG *) 
   FDRE #(
    .INIT(1'b0)) 
     \MGT_RESET.SRESET_PIPE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESET_INT),
        .Q(SRESET_PIPE),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'hE)) 
     \MGT_RESET.SRESET_i_1__1 
       (.I0(SRESET_PIPE),
        .I1(RESET_INT),
        .O(\n_0_MGT_RESET.SRESET_i_1__1 ));
(* ASYNC_REG *) 
   FDRE #(
    .INIT(1'b0)) 
     \MGT_RESET.SRESET_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MGT_RESET.SRESET_i_1__1 ),
        .Q(SRESET),
        .R(\<const0> ));
quadsgmiiRX__parameterized0_26 RECEIVER
       (.CO(n_11_RECEIVER),
        .EOP_REG1(EOP_REG1),
        .FALSE_NIT0(FALSE_NIT0),
        .I1(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I10(MGT_RX_RESET1_in),
        .I11(n_5_SYNCHRONISATION),
        .I12({\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] }),
        .I13(n_4_SYNCHRONISATION),
        .I14(\n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I15(\n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I16(\n_0_HAS_MANAGEMENT.MDIO ),
        .I2(\n_24_HAS_MANAGEMENT.MDIO ),
        .I3(\n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I4(\n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I5(\n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I6(\n_18_HAS_MANAGEMENT.MDIO ),
        .I7(\n_23_HAS_MANAGEMENT.MDIO ),
        .I8({\n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .I9({\n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .K28p5_REG1(K28p5_REG1),
        .O1(n_8_RECEIVER),
        .O10(O7),
        .O2(n_10_RECEIVER),
        .O3(CONSISTENCY_MATCH1),
        .O4(n_13_RECEIVER),
        .O5(n_14_RECEIVER),
        .O6(n_15_RECEIVER),
        .O7(n_33_RECEIVER),
        .O8(n_34_RECEIVER),
        .O9(n_35_RECEIVER),
        .Q({\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] }),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_CONFIG_REG(RX_CONFIG_REG),
        .RX_CONFIG_VALID(RX_CONFIG_VALID),
        .RX_IDLE(RX_IDLE),
        .S(\n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .S0(S0),
        .S2(S2),
        .SOP_REG3(SOP_REG3),
        .SR(RX_CONFIG_REG_REG0),
        .SRESET(SRESET),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .XMIT_DATA(XMIT_DATA),
        .gmii_rx_dv_ch2_int(gmii_rx_dv_ch2_int),
        .gmii_rx_er_ch2_int(gmii_rx_er_ch2_int),
        .status_vector_ch2(status_vector_ch2[3:2]),
        .userclk2(userclk2));
FDRE #(
    .INIT(1'b0)) 
     RXDISPERR_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(Q_0),
        .Q(status_vector_ch2[5]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     RXNOTINTABLE_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RXNOTINTABLE_SRL),
        .Q(status_vector_ch2[6]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     STATUS_VECTOR_0_PRE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_18_HAS_MANAGEMENT.MDIO ),
        .Q(STATUS_VECTOR_0_PRE),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(STATUS_VECTOR_0_PRE),
        .Q(status_vector_ch2[0]),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(DUPLEX_MODE_RSLVD_REG),
        .Q(status_vector_ch2[11]),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SYNC_STATUS_REG),
        .Q(status_vector_ch2[1]),
        .R(\<const0> ));
quadsgmiiSYNCHRONISE_27 SYNCHRONISATION
       (.I1(\n_12_HAS_MANAGEMENT.MDIO ),
        .I10(MGT_RX_RESET1_in),
        .I2(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .I3(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I4(\n_28_HAS_MANAGEMENT.MDIO ),
        .I5(n_8_RECEIVER),
        .I6(\n_27_HAS_MANAGEMENT.MDIO ),
        .I7(\n_29_HAS_MANAGEMENT.MDIO ),
        .I8(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .K28p5_REG1(K28p5_REG1),
        .LOOPBACK(LOOPBACK),
        .O1(n_4_SYNCHRONISATION),
        .O2(O2),
        .O3(n_5_SYNCHRONISATION),
        .O4(n_6_SYNCHRONISATION),
        .O5(n_7_SYNCHRONISATION),
        .RUNDISP_EN(RUNDISP_EN),
        .RXDISPERR_INT(RXDISPERR_INT),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S2(S2),
        .SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .SRESET(SRESET),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .userclk2(userclk2));
quadsgmiisync_block__parameterized0_23 SYNC_SIGNAL_DETECT
       (.I1(O3),
        .SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .data_out(data_out),
        .signal_detect(signal_detect),
        .userclk2(userclk2));
FDRE #(
    .INIT(1'b0)) 
     SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RXSYNC_STATUS),
        .Q(SYNC_STATUS_REG),
        .R(\<const0> ));
quadsgmiiTX__parameterized0_24 TRANSMITTER
       (.D({n_6_TRANSMITTER,n_7_TRANSMITTER,n_8_TRANSMITTER,n_9_TRANSMITTER,n_10_TRANSMITTER,n_11_TRANSMITTER,n_12_TRANSMITTER,n_13_TRANSMITTER}),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ),
        .I2(\n_0_HAS_MANAGEMENT.MDIO ),
        .I3(I3),
        .I4(\n_11_HAS_MANAGEMENT.MDIO ),
        .I5(\n_20_HAS_MANAGEMENT.MDIO ),
        .I6({TX_CONFIG_REG,\n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .I7(I7),
        .LOOPBACK(LOOPBACK),
        .O1(O1),
        .O10(n_17_TRANSMITTER),
        .O11({n_18_TRANSMITTER,n_19_TRANSMITTER,n_20_TRANSMITTER}),
        .O2(n_1_TRANSMITTER),
        .O3(n_2_TRANSMITTER),
        .O4(n_3_TRANSMITTER),
        .O5(n_4_TRANSMITTER),
        .O6(n_5_TRANSMITTER),
        .O7(n_14_TRANSMITTER),
        .O8(n_15_TRANSMITTER),
        .O9(n_16_TRANSMITTER),
        .Q(Q),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_USR),
        .RXCHARISK_USR(RXCHARISK_USR),
        .XMIT_CONFIG_INT(XMIT_CONFIG_INT),
        .XMIT_DATA(XMIT_DATA),
        .gmii_tx_en_out_ch2(gmii_tx_en_out_ch2),
        .gmii_tx_er_out_ch2(gmii_tx_er_out_ch2),
        .userclk2(userclk2));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0001)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__1 ),
        .I4(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__1 ),
        .I5(p_0_out),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair422" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 ));
(* SOFT_HLUTNM = "soft_lutpair411" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__1 ));
LUT6 #(
    .INIT(64'h00000A0A00000A0B)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__1 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__1 ));
(* SOFT_HLUTNM = "soft_lutpair414" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__1 ));
(* SOFT_HLUTNM = "soft_lutpair417" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__1 ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__1 ),
        .Q(MGT_RX_RESET1_in),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0001)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__1 ),
        .I4(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__1 ),
        .I5(p_1_out),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__1 ));
LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 ));
(* SOFT_HLUTNM = "soft_lutpair418" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__1 ));
LUT6 #(
    .INIT(64'h00000A0A00000A0B)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__1 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__1 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__1 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__1 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__1 ));
(* SOFT_HLUTNM = "soft_lutpair418" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__1 ));
(* SOFT_HLUTNM = "soft_lutpair415" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__1 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__1 ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__1 ),
        .Q(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_4_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_3_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2[0]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2[1]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2[2]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_13_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_12_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_11_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_10_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_9_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_8_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_7_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_6_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ),
        .R(MGT_RX_RESET1_in));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDISPERR_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_25_HAS_MANAGEMENT.MDIO ),
        .Q(RXDISPERR_INT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXNOTINTABLE_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_26_HAS_MANAGEMENT.MDIO ),
        .Q(RXNOTINTABLE_INT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.TXBUFERR_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(txbuferr),
        .Q(TXBUFERR_INT),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXCHARISK_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_2_TRANSMITTER),
        .Q(D),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_20_TRANSMITTER),
        .Q(O4[0]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_19_TRANSMITTER),
        .Q(O4[1]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_17_TRANSMITTER),
        .Q(O10),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_16_TRANSMITTER),
        .Q(O9),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_18_TRANSMITTER),
        .Q(O4[2]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_15_TRANSMITTER),
        .Q(O8),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_5_TRANSMITTER),
        .Q(O6),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_14_TRANSMITTER),
        .Q(O5),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
VCC VCC
       (.P(\<const1> ));
VCC VCC_1
       (.P(VCC_2));
endmodule

(* ORIG_REF_NAME = "GPCS_PMA_GEN" *) 
module quadsgmiiGPCS_PMA_GEN__parameterized0_17
   (O1,
    gmii_rx_er_ch3_int,
    status_vector_ch3,
    mdio_o_ch3,
    mdio_t_ch3,
    D,
    O2,
    O3,
    gmii_rx_dv_ch3_int,
    O4,
    SOFT_RESET_2,
    an_interrupt_ch3,
    O8,
    O5,
    O6,
    O7,
    O9,
    O10,
    O11,
    userclk2,
    gmii_tx_er_out_ch3,
    gmii_tx_en_out_ch3,
    I1,
    p_3_out_5,
    txbuferr,
    I4,
    RXCHARISK_USR,
    RXCHARISCOMMA_USR,
    link_timer_value_ch3,
    phyad_ch3,
    Q,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    signal_detect,
    mdc_ch3,
    mdio_i_ch3,
    I2,
    I8);
  output O1;
  output gmii_rx_er_ch3_int;
  output [12:0]status_vector_ch3;
  output mdio_o_ch3;
  output mdio_t_ch3;
  output [0:0]D;
  output O2;
  output O3;
  output gmii_rx_dv_ch3_int;
  output O4;
  output SOFT_RESET_2;
  output an_interrupt_ch3;
  output [7:0]O8;
  output [2:0]O5;
  output O6;
  output O7;
  output O9;
  output O10;
  output O11;
  input userclk2;
  input gmii_tx_er_out_ch3;
  input gmii_tx_en_out_ch3;
  input I1;
  input p_3_out_5;
  input txbuferr;
  input I4;
  input RXCHARISK_USR;
  input RXCHARISCOMMA_USR;
  input [8:0]link_timer_value_ch3;
  input [4:0]phyad_ch3;
  input [7:0]Q;
  input RXDISPERR_USR;
  input RXNOTINTABLE_USR;
  input signal_detect;
  input mdc_ch3;
  input mdio_i_ch3;
  input [2:0]I2;
  input [7:0]I8;

  wire \<const0> ;
  wire \<const1> ;
  wire AN_ENABLE_INT;
  wire CLEAR_STATUS_REG;
  wire CONSISTENCY_MATCH1;
  wire [0:0]D;
  wire DUPLEX_MODE_RSLVD_REG;
  wire EOP_REG1;
  wire FALSE_NIT0;
  wire I1;
  wire [2:0]I2;
  wire I4;
  wire [7:0]I8;
  wire K28p5_REG1;
  wire LOOPBACK;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [16:13]MR_LP_ADV_ABILITY;
  wire [16:16]MR_NP_RX;
  wire [15:1]MR_NP_RX_INT;
  wire O1;
  wire O10;
  wire O11;
  wire O2;
  wire O3;
  wire O4;
  wire [2:0]O5;
  wire O6;
  wire O7;
  wire [7:0]O8;
  wire O9;
  wire [7:0]Q;
  wire Q_0;
  wire RESET_INT;
  wire RESET_INT_PIPE;
  wire RESTART_AN_REG;
  wire RUNDISP_EN;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire RXDISPERR_INT;
  wire RXDISPERR_MOD;
  wire RXDISPERR_USR;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXNOTINTABLE_SRL;
  wire RXNOTINTABLE_USR;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_REG_REG0;
  wire RX_CONFIG_VALID;
  wire RX_IDLE;
  wire RX_RUDI_INVALID;
  wire S0;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire SOFT_RESET_2;
  wire SOP_REG3;
  wire SRESET;
  wire SRESET_PIPE;
  wire STATUS_VECTOR_0_PRE;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire TXBUFERR_INT;
  wire [15:15]TX_CONFIG_REG;
  wire TX_CONFIG_REG_INT1;
  wire VCC_2;
  wire XMIT_CONFIG_INT;
  wire XMIT_DATA;
  wire XMIT_DATA_INT;
  wire an_interrupt_ch3;
  wire data_out;
  wire gmii_rx_dv_ch3_int;
  wire gmii_rx_er_ch3_int;
  wire gmii_tx_en_out_ch3;
  wire gmii_tx_er_out_ch3;
  wire [8:0]link_timer_value_ch3;
  wire mdc_ch3;
  wire mdio_i_ch3;
  wire mdio_o_ch3;
  wire mdio_t_ch3;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__2 ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ;
  wire \n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ;
  wire \n_0_HAS_MANAGEMENT.MDIO ;
  wire \n_0_MGT_RESET.SRESET_i_1__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__2 ;
  wire \n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ;
  wire \n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ;
  wire \n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_10_RECEIVER;
  wire n_10_TRANSMITTER;
  wire \n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_11_HAS_MANAGEMENT.MDIO ;
  wire n_11_RECEIVER;
  wire n_11_TRANSMITTER;
  wire \n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_12_HAS_MANAGEMENT.MDIO ;
  wire n_12_TRANSMITTER;
  wire \n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_13_RECEIVER;
  wire n_13_TRANSMITTER;
  wire \n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_14_RECEIVER;
  wire n_14_TRANSMITTER;
  wire \n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_15_RECEIVER;
  wire n_15_TRANSMITTER;
  wire \n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_16_TRANSMITTER;
  wire \n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_17_TRANSMITTER;
  wire \n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_18_HAS_MANAGEMENT.MDIO ;
  wire n_18_TRANSMITTER;
  wire \n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_19_TRANSMITTER;
  wire n_1_TRANSMITTER;
  wire \n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_20_HAS_MANAGEMENT.MDIO ;
  wire n_20_TRANSMITTER;
  wire \n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_22_HAS_MANAGEMENT.MDIO ;
  wire \n_23_HAS_MANAGEMENT.MDIO ;
  wire \n_24_HAS_MANAGEMENT.MDIO ;
  wire \n_25_HAS_MANAGEMENT.MDIO ;
  wire \n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_26_HAS_MANAGEMENT.MDIO ;
  wire \n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_27_HAS_MANAGEMENT.MDIO ;
  wire \n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_28_HAS_MANAGEMENT.MDIO ;
  wire \n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_29_HAS_MANAGEMENT.MDIO ;
  wire n_2_TRANSMITTER;
  wire \n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_31_HAS_MANAGEMENT.MDIO ;
  wire \n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_32_HAS_MANAGEMENT.MDIO ;
  wire \n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_33_HAS_MANAGEMENT.MDIO ;
  wire n_33_RECEIVER;
  wire \n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_34_HAS_MANAGEMENT.MDIO ;
  wire n_34_RECEIVER;
  wire \n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_35_HAS_MANAGEMENT.MDIO ;
  wire n_35_RECEIVER;
  wire \n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_36_HAS_MANAGEMENT.MDIO ;
  wire \n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_37_HAS_MANAGEMENT.MDIO ;
  wire \n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_38_HAS_MANAGEMENT.MDIO ;
  wire \n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_39_HAS_MANAGEMENT.MDIO ;
  wire n_3_TRANSMITTER;
  wire \n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_40_HAS_MANAGEMENT.MDIO ;
  wire \n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_41_HAS_MANAGEMENT.MDIO ;
  wire \n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_42_HAS_MANAGEMENT.MDIO ;
  wire \n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_43_HAS_MANAGEMENT.MDIO ;
  wire n_4_SYNCHRONISATION;
  wire n_4_TRANSMITTER;
  wire n_5_SYNCHRONISATION;
  wire n_5_TRANSMITTER;
  wire \n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire \n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_6_SYNCHRONISATION;
  wire n_6_TRANSMITTER;
  wire \n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_7_SYNCHRONISATION;
  wire n_7_TRANSMITTER;
  wire \n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ;
  wire n_8_RECEIVER;
  wire n_8_TRANSMITTER;
  wire n_9_TRANSMITTER;
  wire p_0_out;
  wire p_1_out;
  wire p_3_out_5;
  wire [4:0]phyad_ch3;
  wire signal_detect;
  wire [12:0]status_vector_ch3;
  wire txbuferr;
  wire userclk2;

(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "SRL16" *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/DELAY_RXDISPERR " *) 
   SRL16E #(
    .INIT(16'h0000)) 
     DELAY_RXDISPERR
       (.A0(\<const0> ),
        .A1(\<const0> ),
        .A2(\<const1> ),
        .A3(\<const0> ),
        .CE(VCC_2),
        .CLK(userclk2),
        .D(RXDISPERR_MOD),
        .Q(Q_0));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "SRL16" *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/DELAY_RXNOTINTABLE " *) 
   SRL16E #(
    .INIT(16'h0000)) 
     DELAY_RXNOTINTABLE
       (.A0(\<const0> ),
        .A1(\<const0> ),
        .A2(\<const1> ),
        .A3(\<const0> ),
        .CE(VCC_2),
        .CLK(userclk2),
        .D(RXNOTINTABLE_INT),
        .Q(RXNOTINTABLE_SRL));
FDRE #(
    .INIT(1'b0)) 
     DUPLEX_MODE_RSLVD_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MR_LP_ADV_ABILITY[13]),
        .Q(DUPLEX_MODE_RSLVD_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair523" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair524" *) 
   LUT5 #(
    .INIT(32'h04040400)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair525" *) 
   LUT5 #(
    .INIT(32'h40404000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair526" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__2 ));
LUT6 #(
    .INIT(64'h04040404040404FF)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__2 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__2 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__2 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__2 ));
(* SOFT_HLUTNM = "soft_lutpair550" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__2 ));
(* SOFT_HLUTNM = "soft_lutpair554" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__2 ));
(* SOFT_HLUTNM = "soft_lutpair529" *) 
   LUT5 #(
    .INIT(32'h00000116)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__2 ));
LUT6 #(
    .INIT(64'h0000000000020200)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__2 ));
(* SOFT_HLUTNM = "soft_lutpair529" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__2 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I4(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__2 ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__2 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_1__2 
       (.I0(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I1(RESET_INT),
        .O(p_0_out));
(* SOFT_HLUTNM = "soft_lutpair532" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__2 ));
LUT6 #(
    .INIT(64'hFFFCFFFCFF00FFF8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFEE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__2 ));
LUT6 #(
    .INIT(64'h0000000000000103)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__2 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__2 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__2 ));
(* SOFT_HLUTNM = "soft_lutpair551" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__2 ));
(* SOFT_HLUTNM = "soft_lutpair532" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__2 ));
(* SOFT_HLUTNM = "soft_lutpair528" *) 
   LUT5 #(
    .INIT(32'hFE000000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__2 ));
(* SOFT_HLUTNM = "soft_lutpair549" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_30__2 ));
(* SOFT_HLUTNM = "soft_lutpair544" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_31__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_32__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_33__2 ));
(* SOFT_HLUTNM = "soft_lutpair549" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_34__2 ));
(* SOFT_HLUTNM = "soft_lutpair551" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_35__2 ));
(* SOFT_HLUTNM = "soft_lutpair534" *) 
   LUT5 #(
    .INIT(32'hFFFEFEEE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_36__2 ));
(* SOFT_HLUTNM = "soft_lutpair552" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_37__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_38__2 ));
(* SOFT_HLUTNM = "soft_lutpair534" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_39__2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA0080)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_10__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_11__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_12__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair554" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_40__2 ));
(* SOFT_HLUTNM = "soft_lutpair547" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_41__2 ));
(* SOFT_HLUTNM = "soft_lutpair550" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_42__2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_13__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ));
LUT6 #(
    .INIT(64'hF0F01010F0F01000)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_14__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_15__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_16__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_17__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFF66666)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_18__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_19__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_20__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_21__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ));
LUT6 #(
    .INIT(64'hEEFEAAAAEEEEAAAA)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_22__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_23__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_24__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_25__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_26__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_27__2 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_28__2 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_8__2 ));
(* SOFT_HLUTNM = "soft_lutpair541" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_29__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_9__2 ));
(* SOFT_HLUTNM = "soft_lutpair522" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair524" *) 
   LUT5 #(
    .INIT(32'h00000010)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair523" *) 
   LUT5 #(
    .INIT(32'h00001110)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair526" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair525" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair527" *) 
   LUT5 #(
    .INIT(32'h00000040)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair527" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair528" *) 
   LUT5 #(
    .INIT(32'h00008880)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair522" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_7__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_6__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_3__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__2 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[0] ),
        .S(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[10]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[11]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[12]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[13]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[14]_i_2__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[1]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[1] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[2]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[3]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[4]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[5]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[6]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[7]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[8]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .R(p_0_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM[9]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .R(p_0_out));
(* SOFT_HLUTNM = "soft_lutpair530" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair531" *) 
   LUT5 #(
    .INIT(32'h04040400)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair533" *) 
   LUT5 #(
    .INIT(32'h40404000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair531" *) 
   LUT5 #(
    .INIT(32'h00000008)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__2 ));
LUT6 #(
    .INIT(64'h04040404040404FF)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__2 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__2 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__2 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__2 ));
(* SOFT_HLUTNM = "soft_lutpair555" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__2 ));
(* SOFT_HLUTNM = "soft_lutpair555" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__2 ));
(* SOFT_HLUTNM = "soft_lutpair535" *) 
   LUT5 #(
    .INIT(32'h00000116)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__2 ));
LUT6 #(
    .INIT(64'h0000000000020200)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__2 ));
(* SOFT_HLUTNM = "soft_lutpair535" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__2 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I4(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__2 ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__2 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_1__2 
       (.I0(RESET_INT),
        .I1(TXBUFERR_INT),
        .O(p_1_out));
(* SOFT_HLUTNM = "soft_lutpair539" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__2 ));
LUT6 #(
    .INIT(64'hFFFCFFFCFF00FFF8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFEE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__2 ));
LUT6 #(
    .INIT(64'h0000000000000103)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__2 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__2 ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__2 ));
(* SOFT_HLUTNM = "soft_lutpair556" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__2 ));
(* SOFT_HLUTNM = "soft_lutpair536" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__2 ));
(* SOFT_HLUTNM = "soft_lutpair540" *) 
   LUT5 #(
    .INIT(32'hFE000000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__2 ));
(* SOFT_HLUTNM = "soft_lutpair546" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_30__2 ));
LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_31__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_32__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_33__2 ));
(* SOFT_HLUTNM = "soft_lutpair546" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_34__2 ));
(* SOFT_HLUTNM = "soft_lutpair556" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_35__2 ));
(* SOFT_HLUTNM = "soft_lutpair537" *) 
   LUT5 #(
    .INIT(32'hFFFEFEEE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_36__2 ));
(* SOFT_HLUTNM = "soft_lutpair553" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_37__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_38__2 ));
(* SOFT_HLUTNM = "soft_lutpair537" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_39__2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAA0080)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_10__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_11__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_12__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair553" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_40__2 ));
(* SOFT_HLUTNM = "soft_lutpair545" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_41__2 ));
(* SOFT_HLUTNM = "soft_lutpair539" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_42__2 ));
LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_13__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I5(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ));
LUT6 #(
    .INIT(64'hF0F01010F0F01000)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_14__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_15__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_16__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_17__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFF66666)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_18__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_19__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_20__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_21__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ));
LUT6 #(
    .INIT(64'hEEFEAAAAEEEEAAAA)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_22__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_23__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_24__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_25__2 ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_26__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_27__2 ),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_28__2 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_8__2 ));
(* SOFT_HLUTNM = "soft_lutpair536" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_29__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_9__2 ));
(* SOFT_HLUTNM = "soft_lutpair533" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair538" *) 
   LUT5 #(
    .INIT(32'h00000010)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair540" *) 
   LUT5 #(
    .INIT(32'h00001110)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair542" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair543" *) 
   LUT5 #(
    .INIT(32'h00000004)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair542" *) 
   LUT5 #(
    .INIT(32'h00000040)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair543" *) 
   LUT5 #(
    .INIT(32'h00004440)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair538" *) 
   LUT5 #(
    .INIT(32'h00008880)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair530" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_7__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_5__2 ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_4__2 ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_6__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_3__2 ),
        .O(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__2 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[0] ),
        .S(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[10]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[11]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[12]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[13]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[14]_i_2__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[1]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[1] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[2]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[3]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[4]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[5]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[6]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[7]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[8]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .R(p_1_out));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM[9]_i_1__2 ),
        .Q(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .R(p_1_out));
GND GND
       (.G(\<const0> ));
quadsgmiiAUTO_NEG__parameterized0 \HAS_AUTO_NEG.AUTO_NEGOTIATION 
       (.AN_ENABLE_INT(AN_ENABLE_INT),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .CO(n_11_RECEIVER),
        .I1(n_7_SYNCHRONISATION),
        .I10(\n_32_HAS_MANAGEMENT.MDIO ),
        .I11(\n_33_HAS_MANAGEMENT.MDIO ),
        .I12(\n_34_HAS_MANAGEMENT.MDIO ),
        .I13(\n_35_HAS_MANAGEMENT.MDIO ),
        .I14(\n_36_HAS_MANAGEMENT.MDIO ),
        .I15(\n_37_HAS_MANAGEMENT.MDIO ),
        .I16(\n_38_HAS_MANAGEMENT.MDIO ),
        .I17(\n_39_HAS_MANAGEMENT.MDIO ),
        .I18(\n_40_HAS_MANAGEMENT.MDIO ),
        .I19(\n_41_HAS_MANAGEMENT.MDIO ),
        .I2(n_34_RECEIVER),
        .I20(\n_42_HAS_MANAGEMENT.MDIO ),
        .I21(\n_43_HAS_MANAGEMENT.MDIO ),
        .I3(n_35_RECEIVER),
        .I4(\n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I5(\n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I6({\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] }),
        .I7(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I8(O4),
        .I9(\n_31_HAS_MANAGEMENT.MDIO ),
        .MASK_RUDI_BUFERR_TIMER0(MASK_RUDI_BUFERR_TIMER0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY({MR_LP_ADV_ABILITY[16],MR_LP_ADV_ABILITY[13]}),
        .O1(\n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O10({\n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .O2(\n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O3(CONSISTENCY_MATCH1),
        .O4(\n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O5({TX_CONFIG_REG,\n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .O6(\n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O7(\n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O8(\n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .O9({MR_NP_RX,MR_NP_RX_INT}),
        .Q({\n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .RESTART_AN_REG(RESTART_AN_REG),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_CONFIG_REG(RX_CONFIG_REG),
        .RX_CONFIG_VALID(RX_CONFIG_VALID),
        .RX_IDLE(RX_IDLE),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S(\n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .SR(RX_CONFIG_REG_REG0),
        .SRESET(SRESET),
        .TX_CONFIG_REG_INT1(TX_CONFIG_REG_INT1),
        .XMIT_CONFIG_INT(XMIT_CONFIG_INT),
        .XMIT_DATA_INT(XMIT_DATA_INT),
        .data_out(data_out),
        .link_timer_value_ch3(link_timer_value_ch3),
        .status_vector_ch3({status_vector_ch3[12],status_vector_ch3[10:7],status_vector_ch3[4]}),
        .userclk2(userclk2));
quadsgmiiMANAGEMENT__parameterized0 \HAS_MANAGEMENT.MDIO 
       (.AN_ENABLE_INT(AN_ENABLE_INT),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .EOP_REG1(EOP_REG1),
        .FALSE_NIT0(FALSE_NIT0),
        .I1(n_1_TRANSMITTER),
        .I10(O1),
        .I11({MR_NP_RX,MR_NP_RX_INT}),
        .I12(\n_41_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I13(\n_42_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I14(\n_43_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I15(n_6_SYNCHRONISATION),
        .I2(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .I3(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .I4(n_13_RECEIVER),
        .I5(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I6(n_14_RECEIVER),
        .I7(n_15_RECEIVER),
        .I8(n_33_RECEIVER),
        .I9(n_10_RECEIVER),
        .LOOPBACK(LOOPBACK),
        .MASK_RUDI_BUFERR_TIMER0(MASK_RUDI_BUFERR_TIMER0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY({MR_LP_ADV_ABILITY[16],MR_LP_ADV_ABILITY[13]}),
        .O1(\n_0_HAS_MANAGEMENT.MDIO ),
        .O10(\n_26_HAS_MANAGEMENT.MDIO ),
        .O11(\n_27_HAS_MANAGEMENT.MDIO ),
        .O12(\n_28_HAS_MANAGEMENT.MDIO ),
        .O13(\n_29_HAS_MANAGEMENT.MDIO ),
        .O14(\n_31_HAS_MANAGEMENT.MDIO ),
        .O15(\n_32_HAS_MANAGEMENT.MDIO ),
        .O16(\n_33_HAS_MANAGEMENT.MDIO ),
        .O17(\n_34_HAS_MANAGEMENT.MDIO ),
        .O18(\n_35_HAS_MANAGEMENT.MDIO ),
        .O19(\n_36_HAS_MANAGEMENT.MDIO ),
        .O2(O4),
        .O20(\n_37_HAS_MANAGEMENT.MDIO ),
        .O21(\n_38_HAS_MANAGEMENT.MDIO ),
        .O22(\n_39_HAS_MANAGEMENT.MDIO ),
        .O23(\n_40_HAS_MANAGEMENT.MDIO ),
        .O24(\n_41_HAS_MANAGEMENT.MDIO ),
        .O25(\n_42_HAS_MANAGEMENT.MDIO ),
        .O26(\n_43_HAS_MANAGEMENT.MDIO ),
        .O3(\n_11_HAS_MANAGEMENT.MDIO ),
        .O4(\n_12_HAS_MANAGEMENT.MDIO ),
        .O5(\n_18_HAS_MANAGEMENT.MDIO ),
        .O6(\n_20_HAS_MANAGEMENT.MDIO ),
        .O7(\n_23_HAS_MANAGEMENT.MDIO ),
        .O8(\n_24_HAS_MANAGEMENT.MDIO ),
        .O9(\n_25_HAS_MANAGEMENT.MDIO ),
        .Q({\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] }),
        .RESTART_AN_REG(RESTART_AN_REG),
        .RUNDISP_EN(RUNDISP_EN),
        .RXDISPERR_INT(RXDISPERR_INT),
        .RXDISPERR_MOD(RXDISPERR_MOD),
        .RXDISPERR_USR(RXDISPERR_USR),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXNOTINTABLE_USR(RXNOTINTABLE_USR),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S0(S0),
        .S2(S2),
        .SOFT_RESET_2(SOFT_RESET_2),
        .SOP_REG3(SOP_REG3),
        .SR(\n_22_HAS_MANAGEMENT.MDIO ),
        .SRESET(SRESET),
        .TX_CONFIG_REG_INT1(TX_CONFIG_REG_INT1),
        .XMIT_DATA(XMIT_DATA),
        .XMIT_DATA_INT(XMIT_DATA_INT),
        .an_interrupt_ch3(an_interrupt_ch3),
        .data_out(data_out),
        .gmii_rx_dv_ch3_int(gmii_rx_dv_ch3_int),
        .mdc_ch3(mdc_ch3),
        .mdio_i_ch3(mdio_i_ch3),
        .mdio_o_ch3(mdio_o_ch3),
        .mdio_t_ch3(mdio_t_ch3),
        .phyad_ch3(phyad_ch3),
        .status_vector_ch3(status_vector_ch3[12]),
        .userclk2(userclk2));
(* ASYNC_REG *) 
   FDPE #(
    .INIT(1'b0)) 
     \MGT_RESET.RESET_INT_PIPE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const0> ),
        .PRE(p_3_out_5),
        .Q(RESET_INT_PIPE));
(* ASYNC_REG *) 
   FDPE #(
    .INIT(1'b0)) 
     \MGT_RESET.RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESET_INT_PIPE),
        .PRE(p_3_out_5),
        .Q(RESET_INT));
(* ASYNC_REG *) 
   FDRE #(
    .INIT(1'b0)) 
     \MGT_RESET.SRESET_PIPE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RESET_INT),
        .Q(SRESET_PIPE),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'hE)) 
     \MGT_RESET.SRESET_i_1__2 
       (.I0(SRESET_PIPE),
        .I1(RESET_INT),
        .O(\n_0_MGT_RESET.SRESET_i_1__2 ));
(* ASYNC_REG *) 
   FDRE #(
    .INIT(1'b0)) 
     \MGT_RESET.SRESET_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_MGT_RESET.SRESET_i_1__2 ),
        .Q(SRESET),
        .R(\<const0> ));
quadsgmiiRX__parameterized0 RECEIVER
       (.CO(n_11_RECEIVER),
        .EOP_REG1(EOP_REG1),
        .FALSE_NIT0(FALSE_NIT0),
        .I1(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I10(n_5_SYNCHRONISATION),
        .I11({\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] }),
        .I12(n_4_SYNCHRONISATION),
        .I13(\n_7_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I14(\n_8_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I15(\n_0_HAS_MANAGEMENT.MDIO ),
        .I2(\n_24_HAS_MANAGEMENT.MDIO ),
        .I3(\n_20_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I4(\n_21_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I5(\n_22_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .I6(\n_18_HAS_MANAGEMENT.MDIO ),
        .I7(\n_23_HAS_MANAGEMENT.MDIO ),
        .I8({\n_10_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_11_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_12_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_13_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_14_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_15_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_16_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_17_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_18_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .I9({\n_61_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_62_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_63_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_64_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_65_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_66_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_67_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_68_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_69_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .K28p5_REG1(K28p5_REG1),
        .O1(n_8_RECEIVER),
        .O10(n_35_RECEIVER),
        .O11(O8),
        .O2(n_10_RECEIVER),
        .O3(CONSISTENCY_MATCH1),
        .O4(n_13_RECEIVER),
        .O5(n_14_RECEIVER),
        .O6(n_15_RECEIVER),
        .O7(RX_CONFIG_REG_REG0),
        .O8(n_33_RECEIVER),
        .O9(n_34_RECEIVER),
        .Q({\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ,\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] }),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_CONFIG_REG(RX_CONFIG_REG),
        .RX_CONFIG_VALID(RX_CONFIG_VALID),
        .RX_IDLE(RX_IDLE),
        .S(\n_19_HAS_AUTO_NEG.AUTO_NEGOTIATION ),
        .S0(S0),
        .S2(S2),
        .SOP_REG3(SOP_REG3),
        .SR(O1),
        .SRESET(SRESET),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .XMIT_DATA(XMIT_DATA),
        .gmii_rx_dv_ch3_int(gmii_rx_dv_ch3_int),
        .gmii_rx_er_ch3_int(gmii_rx_er_ch3_int),
        .status_vector_ch3(status_vector_ch3[3:2]),
        .userclk2(userclk2));
FDRE #(
    .INIT(1'b0)) 
     RXDISPERR_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(Q_0),
        .Q(status_vector_ch3[5]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     RXNOTINTABLE_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RXNOTINTABLE_SRL),
        .Q(status_vector_ch3[6]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     STATUS_VECTOR_0_PRE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_18_HAS_MANAGEMENT.MDIO ),
        .Q(STATUS_VECTOR_0_PRE),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(STATUS_VECTOR_0_PRE),
        .Q(status_vector_ch3[0]),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(DUPLEX_MODE_RSLVD_REG),
        .Q(status_vector_ch3[11]),
        .R(\<const0> ));
FDRE \STATUS_VECTOR_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SYNC_STATUS_REG),
        .Q(status_vector_ch3[1]),
        .R(\<const0> ));
quadsgmiiSYNCHRONISE SYNCHRONISATION
       (.I1(\n_12_HAS_MANAGEMENT.MDIO ),
        .I2(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .I3(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .I4(\n_28_HAS_MANAGEMENT.MDIO ),
        .I5(n_8_RECEIVER),
        .I6(\n_27_HAS_MANAGEMENT.MDIO ),
        .I7(\n_29_HAS_MANAGEMENT.MDIO ),
        .I8(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .K28p5_REG1(K28p5_REG1),
        .LOOPBACK(LOOPBACK),
        .O1(n_4_SYNCHRONISATION),
        .O2(n_5_SYNCHRONISATION),
        .O3(O3),
        .O4(n_6_SYNCHRONISATION),
        .O5(n_7_SYNCHRONISATION),
        .RUNDISP_EN(RUNDISP_EN),
        .RXDISPERR_INT(RXDISPERR_INT),
        .RXEVEN(RXEVEN),
        .RXNOTINTABLE_INT(RXNOTINTABLE_INT),
        .RXSYNC_STATUS(RXSYNC_STATUS),
        .RX_RUDI_INVALID(RX_RUDI_INVALID),
        .S2(S2),
        .SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .SR(O1),
        .SRESET(SRESET),
        .SYNC_STATUS_REG0(SYNC_STATUS_REG0),
        .userclk2(userclk2));
quadsgmiisync_block__parameterized0 SYNC_SIGNAL_DETECT
       (.I1(O4),
        .SIGNAL_DETECT_MOD(SIGNAL_DETECT_MOD),
        .data_out(data_out),
        .signal_detect(signal_detect),
        .userclk2(userclk2));
FDRE #(
    .INIT(1'b0)) 
     SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RXSYNC_STATUS),
        .Q(SYNC_STATUS_REG),
        .R(\<const0> ));
quadsgmiiTX__parameterized0 TRANSMITTER
       (.D({n_6_TRANSMITTER,n_7_TRANSMITTER,n_8_TRANSMITTER,n_9_TRANSMITTER,n_10_TRANSMITTER,n_11_TRANSMITTER,n_12_TRANSMITTER,n_13_TRANSMITTER}),
        .I1(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ),
        .I2(\n_0_HAS_MANAGEMENT.MDIO ),
        .I3(\n_11_HAS_MANAGEMENT.MDIO ),
        .I4(I4),
        .I5(\n_20_HAS_MANAGEMENT.MDIO ),
        .I6({TX_CONFIG_REG,\n_26_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_27_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_28_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_29_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_30_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_31_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_32_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_33_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_34_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_35_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_36_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_37_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_38_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_39_HAS_AUTO_NEG.AUTO_NEGOTIATION ,\n_40_HAS_AUTO_NEG.AUTO_NEGOTIATION }),
        .I8(I8),
        .LOOPBACK(LOOPBACK),
        .O1(O2),
        .O10(n_17_TRANSMITTER),
        .O11({n_18_TRANSMITTER,n_19_TRANSMITTER,n_20_TRANSMITTER}),
        .O2(n_1_TRANSMITTER),
        .O3(n_2_TRANSMITTER),
        .O4(n_3_TRANSMITTER),
        .O5(n_4_TRANSMITTER),
        .O6(n_5_TRANSMITTER),
        .O7(n_14_TRANSMITTER),
        .O8(n_15_TRANSMITTER),
        .O9(n_16_TRANSMITTER),
        .Q(Q),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_USR),
        .RXCHARISK_USR(RXCHARISK_USR),
        .XMIT_CONFIG_INT(XMIT_CONFIG_INT),
        .XMIT_DATA(XMIT_DATA),
        .gmii_tx_en_out_ch3(gmii_tx_en_out_ch3),
        .gmii_tx_er_out_ch3(gmii_tx_er_out_ch3),
        .userclk2(userclk2));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0001)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__2 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[4] ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__2 ),
        .I4(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__2 ),
        .I5(p_0_out),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair552" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[12] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[13] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 ));
(* SOFT_HLUTNM = "soft_lutpair541" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[5] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_3__2 ));
LUT6 #(
    .INIT(64'h00000A0A00000A0B)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__2 
       (.I0(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[9] ),
        .I2(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__2 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_2__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[8] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_4__2 ));
(* SOFT_HLUTNM = "soft_lutpair544" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[2] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_5__2 ));
(* SOFT_HLUTNM = "soft_lutpair547" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[10] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.RX_RST_SM_reg[11] ),
        .O(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_6__2 ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.MGT_RX_RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_ROCKET_IO.MGT_RX_RESET_INT_i_1__2 ),
        .Q(O1),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0001)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__2 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[4] ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__2 ),
        .I4(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__2 ),
        .I5(p_1_out),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__2 ));
LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[12] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[13] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 ));
(* SOFT_HLUTNM = "soft_lutpair548" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[5] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_3__2 ));
LUT6 #(
    .INIT(64'h00000A0A00000A0B)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__2 
       (.I0(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__2 ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[9] ),
        .I2(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__2 ),
        .I3(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_2__2 ),
        .I4(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[14] ),
        .I5(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[8] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_4__2 ));
(* SOFT_HLUTNM = "soft_lutpair548" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[7] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[6] ),
        .I2(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[3] ),
        .I3(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[2] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_5__2 ));
(* SOFT_HLUTNM = "soft_lutpair545" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__2 
       (.I0(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[10] ),
        .I1(\n_0_FSM_onehot_USE_ROCKET_IO.TX_RST_SM_reg[11] ),
        .O(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_6__2 ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.MGT_TX_RESET_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_i_1__2 ),
        .Q(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXBUFSTATUS_INT_reg[1] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_4_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_reg ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_3_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCHARISK_INT_reg ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2[0]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[0] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2[1]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[1] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2[2]),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT_reg[2] ),
        .R(\n_22_HAS_MANAGEMENT.MDIO ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_13_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[0] ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_12_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[1] ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_11_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[2] ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_10_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[3] ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_9_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[4] ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_8_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[5] ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_7_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[6] ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_6_TRANSMITTER),
        .Q(\n_0_USE_ROCKET_IO.NO_1588.RXDATA_INT_reg[7] ),
        .R(O1));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXDISPERR_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_25_HAS_MANAGEMENT.MDIO ),
        .Q(RXDISPERR_INT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.NO_1588.RXNOTINTABLE_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_26_HAS_MANAGEMENT.MDIO ),
        .Q(RXNOTINTABLE_INT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \USE_ROCKET_IO.TXBUFERR_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(txbuferr),
        .Q(TXBUFERR_INT),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXCHARISK_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_2_TRANSMITTER),
        .Q(D),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_20_TRANSMITTER),
        .Q(O5[0]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_19_TRANSMITTER),
        .Q(O5[1]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_17_TRANSMITTER),
        .Q(O11),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_16_TRANSMITTER),
        .Q(O10),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_18_TRANSMITTER),
        .Q(O5[2]),
        .R(\<const0> ));
FDRE \USE_ROCKET_IO.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_15_TRANSMITTER),
        .Q(O9),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_5_TRANSMITTER),
        .Q(O7),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
FDRE \USE_ROCKET_IO.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_14_TRANSMITTER),
        .Q(O6),
        .R(\n_0_USE_ROCKET_IO.MGT_TX_RESET_INT_reg ));
VCC VCC
       (.P(\<const1> ));
VCC VCC_1
       (.P(VCC_2));
endmodule

(* ORIG_REF_NAME = "MANAGEMENT" *) 
module quadsgmiiMANAGEMENT__parameterized0
   (O1,
    mdio_o_ch3,
    mdio_t_ch3,
    AN_ENABLE_INT,
    LOOPBACK,
    O2,
    SOFT_RESET_2,
    an_interrupt_ch3,
    RUNDISP_EN,
    RESTART_AN_REG,
    CLEAR_STATUS_REG,
    O3,
    O4,
    S0,
    S2,
    FALSE_NIT0,
    RXDISPERR_MOD,
    RX_RUDI_INVALID,
    O5,
    XMIT_DATA,
    O6,
    MASK_RUDI_BUFERR_TIMER0,
    SR,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    TX_CONFIG_REG_INT1,
    O14,
    O15,
    O16,
    O17,
    O18,
    O19,
    O20,
    O21,
    O22,
    O23,
    O24,
    O25,
    O26,
    SRESET,
    userclk2,
    I1,
    I2,
    RXDISPERR_INT,
    RXNOTINTABLE_INT,
    I3,
    RXEVEN,
    I4,
    Q,
    I5,
    I6,
    I7,
    I8,
    I9,
    XMIT_DATA_INT,
    RXSYNC_STATUS,
    SOP_REG3,
    data_out,
    I10,
    I11,
    MR_LP_ADV_ABILITY,
    I12,
    I13,
    I14,
    status_vector_ch3,
    MR_LINK_STATUS,
    phyad_ch3,
    EOP_REG1,
    I15,
    gmii_rx_dv_ch3_int,
    MR_AN_COMPLETE,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    mdc_ch3,
    mdio_i_ch3);
  output O1;
  output mdio_o_ch3;
  output mdio_t_ch3;
  output AN_ENABLE_INT;
  output LOOPBACK;
  output O2;
  output SOFT_RESET_2;
  output an_interrupt_ch3;
  output RUNDISP_EN;
  output RESTART_AN_REG;
  output CLEAR_STATUS_REG;
  output O3;
  output O4;
  output S0;
  output S2;
  output FALSE_NIT0;
  output RXDISPERR_MOD;
  output RX_RUDI_INVALID;
  output O5;
  output XMIT_DATA;
  output O6;
  output MASK_RUDI_BUFERR_TIMER0;
  output [0:0]SR;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  output TX_CONFIG_REG_INT1;
  output O14;
  output O15;
  output O16;
  output O17;
  output O18;
  output O19;
  output O20;
  output O21;
  output O22;
  output O23;
  output O24;
  output O25;
  output O26;
  input SRESET;
  input userclk2;
  input I1;
  input I2;
  input RXDISPERR_INT;
  input RXNOTINTABLE_INT;
  input I3;
  input RXEVEN;
  input I4;
  input [3:0]Q;
  input I5;
  input I6;
  input I7;
  input I8;
  input I9;
  input XMIT_DATA_INT;
  input RXSYNC_STATUS;
  input SOP_REG3;
  input data_out;
  input [0:0]I10;
  input [15:0]I11;
  input [1:0]MR_LP_ADV_ABILITY;
  input I12;
  input I13;
  input I14;
  input [0:0]status_vector_ch3;
  input MR_LINK_STATUS;
  input [4:0]phyad_ch3;
  input EOP_REG1;
  input I15;
  input gmii_rx_dv_ch3_int;
  input MR_AN_COMPLETE;
  input RXDISPERR_USR;
  input RXNOTINTABLE_USR;
  input mdc_ch3;
  input mdio_i_ch3;

  wire \<const0> ;
  wire \<const1> ;
  wire AN_COMPLETE_REG1;
  wire AN_ENABLE_INT;
  wire AN_INTERRUPT_ENABLE;
  wire CLEAR_STATUS_REG;
  wire EOP_REG1;
  wire FALSE_NIT0;
  wire I1;
  wire [0:0]I10;
  wire [15:0]I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire I9;
  wire LOOPBACK;
  wire LOOPBACK_REG;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MDC_REG3;
  wire MDC_RISING_REG1;
  wire MDIO_IN_REG3;
  wire MDIO_IN__0;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O14;
  wire O15;
  wire O16;
  wire O17;
  wire O18;
  wire O19;
  wire O2;
  wire O20;
  wire O21;
  wire O22;
  wire O23;
  wire O24;
  wire O25;
  wire O26;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [3:0]Q;
  wire RESTART_AN_REG;
  wire RUNDISP_EN;
  wire RXDISPERR_INT;
  wire RXDISPERR_MOD;
  wire RXDISPERR_USR;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXNOTINTABLE_USR;
  wire RXSYNC_STATUS;
  wire RX_RUDI_INVALID;
  wire S0;
  wire S2;
  wire SOFT_RESET_2;
  wire SOP_REG3;
  wire [0:0]SR;
  wire SRESET;
  wire TX_CONFIG_REG_INT1;
  wire XMIT_DATA;
  wire XMIT_DATA_INT;
  wire an_interrupt_ch3;
  wire data_out;
  wire data_out_0;
  wire gmii_rx_dv_ch3_int;
  wire mdc_ch3;
  wire mdio_i_ch3;
  wire mdio_o_ch3;
  wire mdio_t_ch3;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__2 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__2 ;
  wire \n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ;
  wire \n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ;
  wire \n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__2 ;
  wire n_0_RX_DV_i_2__2;
  wire n_0_SYNC_MDC;
  wire n_0_SYNC_MDIO_IN;
  wire n_10_MDIO_INTERFACE_1;
  wire n_11_MDIO_INTERFACE_1;
  wire n_12_MDIO_INTERFACE_1;
  wire n_13_MDIO_INTERFACE_1;
  wire n_14_MDIO_INTERFACE_1;
  wire n_15_MDIO_INTERFACE_1;
  wire n_3_MDIO_INTERFACE_1;
  wire n_4_MDIO_INTERFACE_1;
  wire n_5_MDIO_INTERFACE_1;
  wire n_6_MDIO_INTERFACE_1;
  wire n_7_MDIO_INTERFACE_1;
  wire n_8_MDIO_INTERFACE_1;
  wire n_9_MDIO_INTERFACE_1;
  wire [4:0]phyad_ch3;
  wire [0:0]status_vector_ch3;
  wire userclk2;

LUT2 #(
    .INIT(4'hE)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__2 
       (.I0(SRESET),
        .I1(O26),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair475" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__2 
       (.I0(SRESET),
        .I1(O16),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair474" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__2 
       (.I0(SRESET),
        .I1(O15),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair474" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__2 
       (.I0(SRESET),
        .I1(O14),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair473" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__2 
       (.I0(SRESET),
        .I1(TX_CONFIG_REG_INT1),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair479" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__2 
       (.I0(SRESET),
        .I1(O25),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair479" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__2 
       (.I0(SRESET),
        .I1(O24),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair478" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__2 
       (.I0(SRESET),
        .I1(O23),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair478" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__2 
       (.I0(SRESET),
        .I1(O22),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair477" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__2 
       (.I0(SRESET),
        .I1(O21),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair477" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__2 
       (.I0(SRESET),
        .I1(O20),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair476" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__2 
       (.I0(SRESET),
        .I1(O19),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair476" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__2 
       (.I0(SRESET),
        .I1(O18),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair475" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__2 
       (.I0(SRESET),
        .I1(O17),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__2 ),
        .Q(O26),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__2 ),
        .Q(O16),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__2 ),
        .Q(O15),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__2 ),
        .Q(O14),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__2 ),
        .Q(TX_CONFIG_REG_INT1),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__2 ),
        .Q(O25),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__2 ),
        .Q(O24),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__2 ),
        .Q(O23),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__2 ),
        .Q(O22),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__2 ),
        .Q(O21),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__2 ),
        .Q(O20),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__2 ),
        .Q(O19),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__2 ),
        .Q(O18),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__2 ),
        .Q(O17),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair471" *) 
   LUT4 #(
    .INIT(16'hFFF8)) 
     CGBAD_i_1__2
       (.I0(RXDISPERR_INT),
        .I1(RUNDISP_EN),
        .I2(RXNOTINTABLE_INT),
        .I3(I3),
        .O(S2));
FDRE CLEAR_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_10_MDIO_INTERFACE_1),
        .Q(CLEAR_STATUS_REG),
        .R(SRESET));
LUT2 #(
    .INIT(4'hE)) 
     CODE_GRPISK_i_3__2
       (.I0(O1),
        .I1(I1),
        .O(O3));
FDSE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.AN_ENABLE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_14_MDIO_INTERFACE_1),
        .Q(AN_ENABLE_INT),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_3_MDIO_INTERFACE_1),
        .Q(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .R(\<const0> ));
FDSE #(
    .INIT(1'b1)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_13_MDIO_INTERFACE_1),
        .Q(O1),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.LOOPBACK_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_15_MDIO_INTERFACE_1),
        .Q(LOOPBACK),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.POWERDOWN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_8_MDIO_INTERFACE_1),
        .Q(O2),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.RESET_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_9_MDIO_INTERFACE_1),
        .Q(SOFT_RESET_2),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.RESTART_AN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_7_MDIO_INTERFACE_1),
        .Q(RESTART_AN_REG),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_12_MDIO_INTERFACE_1),
        .Q(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair471" *) 
   LUT2 #(
    .INIT(4'h8)) 
     DELAY_RXDISPERR_i_1__2
       (.I0(RUNDISP_EN),
        .I1(RXDISPERR_INT),
        .O(RXDISPERR_MOD));
LUT6 #(
    .INIT(64'hA8A220A2A8802080)) 
     FALSE_NIT_i_1__2
       (.I0(RXNOTINTABLE_INT),
        .I1(RXDISPERR_MOD),
        .I2(I6),
        .I3(Q[3]),
        .I4(I7),
        .I5(I8),
        .O(FALSE_NIT0));
LUT6 #(
    .INIT(64'h000000150000003F)) 
     \FSM_onehot_STATE[12]_i_6__2 
       (.I0(I2),
        .I1(RXDISPERR_INT),
        .I2(RUNDISP_EN),
        .I3(RXNOTINTABLE_INT),
        .I4(I3),
        .I5(RXEVEN),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair468" *) 
   LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[2]_i_2__2 
       (.I0(I2),
        .I1(I3),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(O12));
(* SOFT_HLUTNM = "soft_lutpair468" *) 
   LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[4]_i_2__2 
       (.I0(I2),
        .I1(I3),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(O13));
LUT2 #(
    .INIT(4'hB)) 
     \FSM_onehot_STATE[4]_i_3__2 
       (.I0(I5),
        .I1(O4),
        .O(O11));
FDRE \GEN_INTERRUPT_LOGIC.AN_COMPLETE_REG1_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_11_MDIO_INTERFACE_1),
        .Q(AN_COMPLETE_REG1),
        .R(SRESET));
FDRE \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_ENABLE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_4_MDIO_INTERFACE_1),
        .Q(AN_INTERRUPT_ENABLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair473" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__2 
       (.I0(AN_INTERRUPT_ENABLE),
        .I1(SRESET),
        .O(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__2 ));
FDRE \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_5_MDIO_INTERFACE_1),
        .Q(an_interrupt_ch3),
        .R(\<const0> ));
GND GND
       (.G(\<const0> ));
LUT3 #(
    .INIT(8'h20)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_2__2 
       (.I0(I3),
        .I1(O2),
        .I2(data_out),
        .O(MASK_RUDI_BUFERR_TIMER0));
FDRE MDC_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(data_out_0),
        .Q(MDC_REG3),
        .R(SRESET));
FDRE MDC_RISING_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_MDC),
        .Q(MDC_RISING_REG1),
        .R(SRESET));
quadsgmiiMDIO_INTERFACE MDIO_INTERFACE_1
       (.AN_COMPLETE_REG1(AN_COMPLETE_REG1),
        .AN_INTERRUPT_ENABLE(AN_INTERRUPT_ENABLE),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .I1(LOOPBACK),
        .I11(I11),
        .I12(I12),
        .I13(I13),
        .I14(I14),
        .I2(AN_ENABLE_INT),
        .I3(O2),
        .I4(O1),
        .I5(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I6(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__2 ),
        .I7(RUNDISP_EN),
        .I8(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .LOOPBACK_REG(LOOPBACK_REG),
        .MDC_RISING_REG1(MDC_RISING_REG1),
        .MDIO_IN__0(MDIO_IN__0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY(MR_LP_ADV_ABILITY),
        .O1(n_3_MDIO_INTERFACE_1),
        .O10(n_12_MDIO_INTERFACE_1),
        .O11(n_13_MDIO_INTERFACE_1),
        .O12(n_14_MDIO_INTERFACE_1),
        .O13(n_15_MDIO_INTERFACE_1),
        .O2(n_4_MDIO_INTERFACE_1),
        .O3(n_5_MDIO_INTERFACE_1),
        .O4(n_6_MDIO_INTERFACE_1),
        .O5(n_7_MDIO_INTERFACE_1),
        .O6(n_8_MDIO_INTERFACE_1),
        .O7(n_9_MDIO_INTERFACE_1),
        .O8(n_10_MDIO_INTERFACE_1),
        .O9(n_11_MDIO_INTERFACE_1),
        .RESTART_AN_REG(RESTART_AN_REG),
        .SOFT_RESET_2(SOFT_RESET_2),
        .SRESET(SRESET),
        .an_interrupt_ch3(an_interrupt_ch3),
        .mdio_o_ch3(mdio_o_ch3),
        .mdio_t_ch3(mdio_t_ch3),
        .phyad_ch3(phyad_ch3),
        .status_vector_ch3(status_vector_ch3),
        .userclk2(userclk2));
FDSE MDIO_IN_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_MDIO_IN),
        .Q(MDIO_IN_REG3),
        .S(SRESET));
FDSE MDIO_IN_REG4_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDIO_IN_REG3),
        .Q(MDIO_IN__0),
        .S(SRESET));
FDRE \QSGMII_SPEC.RUNDISP_EN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_6_MDIO_INTERFACE_1),
        .Q(RUNDISP_EN),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0A0B0A0A0A0A0A0A)) 
     RX_DV_i_1__2
       (.I0(n_0_RX_DV_i_2__2),
        .I1(EOP_REG1),
        .I2(I10),
        .I3(I15),
        .I4(XMIT_DATA),
        .I5(gmii_rx_dv_ch3_int),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair470" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     RX_DV_i_2__2
       (.I0(O5),
        .I1(SOP_REG3),
        .I2(O1),
        .I3(O2),
        .O(n_0_RX_DV_i_2__2));
(* SOFT_HLUTNM = "soft_lutpair469" *) 
   LUT4 #(
    .INIT(16'hBAAA)) 
     RX_ER_i_2__2
       (.I0(XMIT_DATA_INT),
        .I1(AN_ENABLE_INT),
        .I2(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I3(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .O(XMIT_DATA));
(* SOFT_HLUTNM = "soft_lutpair470" *) 
   LUT2 #(
    .INIT(4'hE)) 
     RX_ER_i_3__2
       (.I0(O1),
        .I1(O2),
        .O(O7));
LUT6 #(
    .INIT(64'hABABAAABABABABAB)) 
     \RX_RUDI_INVALID_DELAY[0]_i_2__2 
       (.I0(I9),
        .I1(XMIT_DATA_INT),
        .I2(RXSYNC_STATUS),
        .I3(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I4(AN_ENABLE_INT),
        .I5(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .O(RX_RUDI_INVALID));
(* SOFT_HLUTNM = "soft_lutpair469" *) 
   LUT5 #(
    .INIT(32'hFF080000)) 
     STATUS_VECTOR_0_PRE_i_1__2
       (.I0(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I1(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I2(AN_ENABLE_INT),
        .I3(XMIT_DATA_INT),
        .I4(RXSYNC_STATUS),
        .O(O5));
quadsgmiisync_block__parameterized0_22 SYNC_MDC
       (.MDC_REG3(MDC_REG3),
        .O1(n_0_SYNC_MDC),
        .data_out(data_out_0),
        .mdc_ch3(mdc_ch3),
        .userclk2(userclk2));
quadsgmiisync_block__parameterized0_21 SYNC_MDIO_IN
       (.data_out(n_0_SYNC_MDIO_IN),
        .mdio_i_ch3(mdio_i_ch3),
        .userclk2(userclk2));
LUT6 #(
    .INIT(64'h0000000000800000)) 
     S_i_1__5
       (.I0(I4),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(I5),
        .I5(S2),
        .O(S0));
(* SOFT_HLUTNM = "soft_lutpair472" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT[2]_i_1__2 
       (.I0(LOOPBACK),
        .I1(I10),
        .O(SR));
LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.NO_1588.RXDISPERR_INT_i_1__2 
       (.I0(RXDISPERR_USR),
        .I1(I10),
        .I2(LOOPBACK),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair472" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.NO_1588.RXNOTINTABLE_INT_i_1__2 
       (.I0(RXNOTINTABLE_USR),
        .I1(I10),
        .I2(LOOPBACK),
        .O(O10));
VCC VCC
       (.P(\<const1> ));
LUT3 #(
    .INIT(8'h08)) 
     XMIT_CONFIG_INT_i_2__2
       (.I0(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I1(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I2(AN_ENABLE_INT),
        .O(O6));
endmodule

(* ORIG_REF_NAME = "MANAGEMENT" *) 
module quadsgmiiMANAGEMENT__parameterized0_25
   (O1,
    mdio_o_ch2,
    mdio_t_ch2,
    AN_ENABLE_INT,
    LOOPBACK,
    O2,
    SOFT_RESET_1,
    an_interrupt_ch2,
    RUNDISP_EN,
    RESTART_AN_REG,
    CLEAR_STATUS_REG,
    O3,
    O4,
    S0,
    S2,
    FALSE_NIT0,
    RXDISPERR_MOD,
    RX_RUDI_INVALID,
    O5,
    XMIT_DATA,
    O6,
    MASK_RUDI_BUFERR_TIMER0,
    SR,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    TX_CONFIG_REG_INT1,
    O14,
    O15,
    O16,
    O17,
    O18,
    O19,
    O20,
    O21,
    O22,
    O23,
    O24,
    O25,
    O26,
    SRESET,
    userclk2,
    I1,
    I2,
    RXDISPERR_INT,
    RXNOTINTABLE_INT,
    I3,
    RXEVEN,
    I4,
    Q,
    I5,
    I6,
    I7,
    I8,
    I9,
    XMIT_DATA_INT,
    RXSYNC_STATUS,
    SOP_REG3,
    data_out,
    I10,
    I11,
    MR_LP_ADV_ABILITY,
    I12,
    I13,
    I14,
    status_vector_ch2,
    MR_LINK_STATUS,
    phyad_ch2,
    EOP_REG1,
    I15,
    gmii_rx_dv_ch2_int,
    MR_AN_COMPLETE,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    mdc_ch2,
    mdio_i_ch2);
  output O1;
  output mdio_o_ch2;
  output mdio_t_ch2;
  output AN_ENABLE_INT;
  output LOOPBACK;
  output O2;
  output SOFT_RESET_1;
  output an_interrupt_ch2;
  output RUNDISP_EN;
  output RESTART_AN_REG;
  output CLEAR_STATUS_REG;
  output O3;
  output O4;
  output S0;
  output S2;
  output FALSE_NIT0;
  output RXDISPERR_MOD;
  output RX_RUDI_INVALID;
  output O5;
  output XMIT_DATA;
  output O6;
  output MASK_RUDI_BUFERR_TIMER0;
  output [0:0]SR;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  output TX_CONFIG_REG_INT1;
  output O14;
  output O15;
  output O16;
  output O17;
  output O18;
  output O19;
  output O20;
  output O21;
  output O22;
  output O23;
  output O24;
  output O25;
  output O26;
  input SRESET;
  input userclk2;
  input I1;
  input I2;
  input RXDISPERR_INT;
  input RXNOTINTABLE_INT;
  input I3;
  input RXEVEN;
  input I4;
  input [3:0]Q;
  input I5;
  input I6;
  input I7;
  input I8;
  input I9;
  input XMIT_DATA_INT;
  input RXSYNC_STATUS;
  input SOP_REG3;
  input data_out;
  input [0:0]I10;
  input [15:0]I11;
  input [1:0]MR_LP_ADV_ABILITY;
  input I12;
  input I13;
  input I14;
  input [0:0]status_vector_ch2;
  input MR_LINK_STATUS;
  input [4:0]phyad_ch2;
  input EOP_REG1;
  input I15;
  input gmii_rx_dv_ch2_int;
  input MR_AN_COMPLETE;
  input RXDISPERR_USR;
  input RXNOTINTABLE_USR;
  input mdc_ch2;
  input mdio_i_ch2;

  wire \<const0> ;
  wire \<const1> ;
  wire AN_COMPLETE_REG1;
  wire AN_ENABLE_INT;
  wire AN_INTERRUPT_ENABLE;
  wire CLEAR_STATUS_REG;
  wire EOP_REG1;
  wire FALSE_NIT0;
  wire I1;
  wire [0:0]I10;
  wire [15:0]I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire I9;
  wire LOOPBACK;
  wire LOOPBACK_REG;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MDC_REG3;
  wire MDC_RISING_REG1;
  wire MDIO_IN_REG3;
  wire MDIO_IN__0;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O14;
  wire O15;
  wire O16;
  wire O17;
  wire O18;
  wire O19;
  wire O2;
  wire O20;
  wire O21;
  wire O22;
  wire O23;
  wire O24;
  wire O25;
  wire O26;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [3:0]Q;
  wire RESTART_AN_REG;
  wire RUNDISP_EN;
  wire RXDISPERR_INT;
  wire RXDISPERR_MOD;
  wire RXDISPERR_USR;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXNOTINTABLE_USR;
  wire RXSYNC_STATUS;
  wire RX_RUDI_INVALID;
  wire S0;
  wire S2;
  wire SOFT_RESET_1;
  wire SOP_REG3;
  wire [0:0]SR;
  wire SRESET;
  wire TX_CONFIG_REG_INT1;
  wire XMIT_DATA;
  wire XMIT_DATA_INT;
  wire an_interrupt_ch2;
  wire data_out;
  wire data_out_0;
  wire gmii_rx_dv_ch2_int;
  wire mdc_ch2;
  wire mdio_i_ch2;
  wire mdio_o_ch2;
  wire mdio_t_ch2;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__1 ;
  wire \n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ;
  wire \n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ;
  wire \n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__1 ;
  wire n_0_RX_DV_i_2__1;
  wire n_0_SYNC_MDC;
  wire n_0_SYNC_MDIO_IN;
  wire n_10_MDIO_INTERFACE_1;
  wire n_11_MDIO_INTERFACE_1;
  wire n_12_MDIO_INTERFACE_1;
  wire n_13_MDIO_INTERFACE_1;
  wire n_14_MDIO_INTERFACE_1;
  wire n_15_MDIO_INTERFACE_1;
  wire n_3_MDIO_INTERFACE_1;
  wire n_4_MDIO_INTERFACE_1;
  wire n_5_MDIO_INTERFACE_1;
  wire n_6_MDIO_INTERFACE_1;
  wire n_7_MDIO_INTERFACE_1;
  wire n_8_MDIO_INTERFACE_1;
  wire n_9_MDIO_INTERFACE_1;
  wire [4:0]phyad_ch2;
  wire [0:0]status_vector_ch2;
  wire userclk2;

LUT2 #(
    .INIT(4'hE)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__1 
       (.I0(SRESET),
        .I1(O26),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair345" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__1 
       (.I0(SRESET),
        .I1(O16),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair344" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__1 
       (.I0(SRESET),
        .I1(O15),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair344" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__1 
       (.I0(SRESET),
        .I1(O14),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair343" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__1 
       (.I0(SRESET),
        .I1(TX_CONFIG_REG_INT1),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair349" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__1 
       (.I0(SRESET),
        .I1(O25),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair349" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__1 
       (.I0(SRESET),
        .I1(O24),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair348" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__1 
       (.I0(SRESET),
        .I1(O23),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair348" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__1 
       (.I0(SRESET),
        .I1(O22),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair347" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__1 
       (.I0(SRESET),
        .I1(O21),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair347" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__1 
       (.I0(SRESET),
        .I1(O20),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair346" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__1 
       (.I0(SRESET),
        .I1(O19),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair346" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__1 
       (.I0(SRESET),
        .I1(O18),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair345" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__1 
       (.I0(SRESET),
        .I1(O17),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__1 ),
        .Q(O26),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__1 ),
        .Q(O16),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__1 ),
        .Q(O15),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__1 ),
        .Q(O14),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__1 ),
        .Q(TX_CONFIG_REG_INT1),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__1 ),
        .Q(O25),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__1 ),
        .Q(O24),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__1 ),
        .Q(O23),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__1 ),
        .Q(O22),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__1 ),
        .Q(O21),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__1 ),
        .Q(O20),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__1 ),
        .Q(O19),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__1 ),
        .Q(O18),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__1 ),
        .Q(O17),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair341" *) 
   LUT4 #(
    .INIT(16'hFFF8)) 
     CGBAD_i_1__1
       (.I0(RXDISPERR_INT),
        .I1(RUNDISP_EN),
        .I2(RXNOTINTABLE_INT),
        .I3(I3),
        .O(S2));
FDRE CLEAR_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_10_MDIO_INTERFACE_1),
        .Q(CLEAR_STATUS_REG),
        .R(SRESET));
LUT2 #(
    .INIT(4'hE)) 
     CODE_GRPISK_i_3__1
       (.I0(O1),
        .I1(I1),
        .O(O3));
FDSE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.AN_ENABLE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_14_MDIO_INTERFACE_1),
        .Q(AN_ENABLE_INT),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_3_MDIO_INTERFACE_1),
        .Q(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .R(\<const0> ));
FDSE #(
    .INIT(1'b1)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_13_MDIO_INTERFACE_1),
        .Q(O1),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.LOOPBACK_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_15_MDIO_INTERFACE_1),
        .Q(LOOPBACK),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.POWERDOWN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_8_MDIO_INTERFACE_1),
        .Q(O2),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.RESET_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_9_MDIO_INTERFACE_1),
        .Q(SOFT_RESET_1),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.RESTART_AN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_7_MDIO_INTERFACE_1),
        .Q(RESTART_AN_REG),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_12_MDIO_INTERFACE_1),
        .Q(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair341" *) 
   LUT2 #(
    .INIT(4'h8)) 
     DELAY_RXDISPERR_i_1__1
       (.I0(RUNDISP_EN),
        .I1(RXDISPERR_INT),
        .O(RXDISPERR_MOD));
LUT6 #(
    .INIT(64'hA8A220A2A8802080)) 
     FALSE_NIT_i_1__1
       (.I0(RXNOTINTABLE_INT),
        .I1(RXDISPERR_MOD),
        .I2(I6),
        .I3(Q[3]),
        .I4(I7),
        .I5(I8),
        .O(FALSE_NIT0));
LUT6 #(
    .INIT(64'h000000150000003F)) 
     \FSM_onehot_STATE[12]_i_6__1 
       (.I0(I2),
        .I1(RXDISPERR_INT),
        .I2(RUNDISP_EN),
        .I3(RXNOTINTABLE_INT),
        .I4(I3),
        .I5(RXEVEN),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair338" *) 
   LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[2]_i_2__1 
       (.I0(I2),
        .I1(I3),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(O12));
(* SOFT_HLUTNM = "soft_lutpair338" *) 
   LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[4]_i_2__1 
       (.I0(I2),
        .I1(I3),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(O13));
LUT2 #(
    .INIT(4'hB)) 
     \FSM_onehot_STATE[4]_i_3__1 
       (.I0(I5),
        .I1(O4),
        .O(O11));
FDRE \GEN_INTERRUPT_LOGIC.AN_COMPLETE_REG1_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_11_MDIO_INTERFACE_1),
        .Q(AN_COMPLETE_REG1),
        .R(SRESET));
FDRE \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_ENABLE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_4_MDIO_INTERFACE_1),
        .Q(AN_INTERRUPT_ENABLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair343" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__1 
       (.I0(AN_INTERRUPT_ENABLE),
        .I1(SRESET),
        .O(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__1 ));
FDRE \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_5_MDIO_INTERFACE_1),
        .Q(an_interrupt_ch2),
        .R(\<const0> ));
GND GND
       (.G(\<const0> ));
LUT3 #(
    .INIT(8'h20)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_2__1 
       (.I0(I3),
        .I1(O2),
        .I2(data_out),
        .O(MASK_RUDI_BUFERR_TIMER0));
FDRE MDC_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(data_out_0),
        .Q(MDC_REG3),
        .R(SRESET));
FDRE MDC_RISING_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_MDC),
        .Q(MDC_RISING_REG1),
        .R(SRESET));
quadsgmiiMDIO_INTERFACE_29 MDIO_INTERFACE_1
       (.AN_COMPLETE_REG1(AN_COMPLETE_REG1),
        .AN_INTERRUPT_ENABLE(AN_INTERRUPT_ENABLE),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .I1(LOOPBACK),
        .I11(I11),
        .I12(I12),
        .I13(I13),
        .I14(I14),
        .I2(AN_ENABLE_INT),
        .I3(O2),
        .I4(O1),
        .I5(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I6(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__1 ),
        .I7(RUNDISP_EN),
        .I8(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .LOOPBACK_REG(LOOPBACK_REG),
        .MDC_RISING_REG1(MDC_RISING_REG1),
        .MDIO_IN__0(MDIO_IN__0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY(MR_LP_ADV_ABILITY),
        .O1(n_3_MDIO_INTERFACE_1),
        .O10(n_12_MDIO_INTERFACE_1),
        .O11(n_13_MDIO_INTERFACE_1),
        .O12(n_14_MDIO_INTERFACE_1),
        .O13(n_15_MDIO_INTERFACE_1),
        .O2(n_4_MDIO_INTERFACE_1),
        .O3(n_5_MDIO_INTERFACE_1),
        .O4(n_6_MDIO_INTERFACE_1),
        .O5(n_7_MDIO_INTERFACE_1),
        .O6(n_8_MDIO_INTERFACE_1),
        .O7(n_9_MDIO_INTERFACE_1),
        .O8(n_10_MDIO_INTERFACE_1),
        .O9(n_11_MDIO_INTERFACE_1),
        .RESTART_AN_REG(RESTART_AN_REG),
        .SOFT_RESET_1(SOFT_RESET_1),
        .SRESET(SRESET),
        .an_interrupt_ch2(an_interrupt_ch2),
        .mdio_o_ch2(mdio_o_ch2),
        .mdio_t_ch2(mdio_t_ch2),
        .phyad_ch2(phyad_ch2),
        .status_vector_ch2(status_vector_ch2),
        .userclk2(userclk2));
FDSE MDIO_IN_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_MDIO_IN),
        .Q(MDIO_IN_REG3),
        .S(SRESET));
FDSE MDIO_IN_REG4_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDIO_IN_REG3),
        .Q(MDIO_IN__0),
        .S(SRESET));
FDRE \QSGMII_SPEC.RUNDISP_EN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_6_MDIO_INTERFACE_1),
        .Q(RUNDISP_EN),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0A0B0A0A0A0A0A0A)) 
     RX_DV_i_1__1
       (.I0(n_0_RX_DV_i_2__1),
        .I1(EOP_REG1),
        .I2(I10),
        .I3(I15),
        .I4(XMIT_DATA),
        .I5(gmii_rx_dv_ch2_int),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair340" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     RX_DV_i_2__1
       (.I0(O5),
        .I1(SOP_REG3),
        .I2(O1),
        .I3(O2),
        .O(n_0_RX_DV_i_2__1));
(* SOFT_HLUTNM = "soft_lutpair339" *) 
   LUT4 #(
    .INIT(16'hBAAA)) 
     RX_ER_i_2__1
       (.I0(XMIT_DATA_INT),
        .I1(AN_ENABLE_INT),
        .I2(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I3(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .O(XMIT_DATA));
(* SOFT_HLUTNM = "soft_lutpair340" *) 
   LUT2 #(
    .INIT(4'hE)) 
     RX_ER_i_3__1
       (.I0(O1),
        .I1(O2),
        .O(O7));
LUT6 #(
    .INIT(64'hABABAAABABABABAB)) 
     \RX_RUDI_INVALID_DELAY[0]_i_2__1 
       (.I0(I9),
        .I1(XMIT_DATA_INT),
        .I2(RXSYNC_STATUS),
        .I3(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I4(AN_ENABLE_INT),
        .I5(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .O(RX_RUDI_INVALID));
(* SOFT_HLUTNM = "soft_lutpair339" *) 
   LUT5 #(
    .INIT(32'hFF080000)) 
     STATUS_VECTOR_0_PRE_i_1__1
       (.I0(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I1(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I2(AN_ENABLE_INT),
        .I3(XMIT_DATA_INT),
        .I4(RXSYNC_STATUS),
        .O(O5));
quadsgmiisync_block__parameterized0_31 SYNC_MDC
       (.MDC_REG3(MDC_REG3),
        .O1(n_0_SYNC_MDC),
        .data_out(data_out_0),
        .mdc_ch2(mdc_ch2),
        .userclk2(userclk2));
quadsgmiisync_block__parameterized0_30 SYNC_MDIO_IN
       (.data_out(n_0_SYNC_MDIO_IN),
        .mdio_i_ch2(mdio_i_ch2),
        .userclk2(userclk2));
LUT6 #(
    .INIT(64'h0000000000800000)) 
     S_i_1__3
       (.I0(I4),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(I5),
        .I5(S2),
        .O(S0));
(* SOFT_HLUTNM = "soft_lutpair342" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT[2]_i_1__1 
       (.I0(LOOPBACK),
        .I1(I10),
        .O(SR));
LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.NO_1588.RXDISPERR_INT_i_1__1 
       (.I0(RXDISPERR_USR),
        .I1(I10),
        .I2(LOOPBACK),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair342" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.NO_1588.RXNOTINTABLE_INT_i_1__1 
       (.I0(RXNOTINTABLE_USR),
        .I1(I10),
        .I2(LOOPBACK),
        .O(O10));
VCC VCC
       (.P(\<const1> ));
LUT3 #(
    .INIT(8'h08)) 
     XMIT_CONFIG_INT_i_2__1
       (.I0(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I1(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I2(AN_ENABLE_INT),
        .O(O6));
endmodule

(* ORIG_REF_NAME = "MANAGEMENT" *) 
module quadsgmiiMANAGEMENT__parameterized0_34
   (O1,
    mdio_o_ch1,
    mdio_t_ch1,
    AN_ENABLE_INT,
    LOOPBACK,
    O2,
    SOFT_RESET_0,
    an_interrupt_ch1,
    RUNDISP_EN,
    RESTART_AN_REG,
    CLEAR_STATUS_REG,
    O3,
    O4,
    S0,
    S2,
    FALSE_NIT0,
    RXDISPERR_MOD,
    RX_RUDI_INVALID,
    O5,
    XMIT_DATA,
    O6,
    MASK_RUDI_BUFERR_TIMER0,
    SR,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    POWERDOWN0,
    O14,
    TX_CONFIG_REG_INT1,
    O15,
    O16,
    O17,
    O18,
    O19,
    O20,
    O21,
    O22,
    O23,
    O24,
    O25,
    O26,
    O27,
    SRESET,
    userclk2,
    I1,
    I2,
    RXDISPERR_INT,
    RXNOTINTABLE_INT,
    I3,
    RXEVEN,
    I4,
    Q,
    I5,
    I6,
    I7,
    I8,
    I9,
    XMIT_DATA_INT,
    RXSYNC_STATUS,
    SOP_REG3,
    data_out,
    I10,
    I11,
    MR_LP_ADV_ABILITY,
    I12,
    I13,
    I14,
    status_vector_ch1,
    MR_LINK_STATUS,
    phyad_ch1,
    EOP_REG1,
    I15,
    gmii_rx_dv_ch1_int,
    MR_AN_COMPLETE,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    I16,
    I17,
    I18,
    mdc_ch1,
    mdio_i_ch1);
  output O1;
  output mdio_o_ch1;
  output mdio_t_ch1;
  output AN_ENABLE_INT;
  output LOOPBACK;
  output O2;
  output SOFT_RESET_0;
  output an_interrupt_ch1;
  output RUNDISP_EN;
  output RESTART_AN_REG;
  output CLEAR_STATUS_REG;
  output O3;
  output O4;
  output S0;
  output S2;
  output FALSE_NIT0;
  output RXDISPERR_MOD;
  output RX_RUDI_INVALID;
  output O5;
  output XMIT_DATA;
  output O6;
  output MASK_RUDI_BUFERR_TIMER0;
  output [0:0]SR;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  output POWERDOWN0;
  output O14;
  output TX_CONFIG_REG_INT1;
  output O15;
  output O16;
  output O17;
  output O18;
  output O19;
  output O20;
  output O21;
  output O22;
  output O23;
  output O24;
  output O25;
  output O26;
  output O27;
  input SRESET;
  input userclk2;
  input I1;
  input I2;
  input RXDISPERR_INT;
  input RXNOTINTABLE_INT;
  input I3;
  input RXEVEN;
  input I4;
  input [3:0]Q;
  input I5;
  input I6;
  input I7;
  input I8;
  input I9;
  input XMIT_DATA_INT;
  input RXSYNC_STATUS;
  input SOP_REG3;
  input data_out;
  input [0:0]I10;
  input [15:0]I11;
  input [1:0]MR_LP_ADV_ABILITY;
  input I12;
  input I13;
  input I14;
  input [0:0]status_vector_ch1;
  input MR_LINK_STATUS;
  input [4:0]phyad_ch1;
  input EOP_REG1;
  input I15;
  input gmii_rx_dv_ch1_int;
  input MR_AN_COMPLETE;
  input RXDISPERR_USR;
  input RXNOTINTABLE_USR;
  input I16;
  input I17;
  input I18;
  input mdc_ch1;
  input mdio_i_ch1;

  wire \<const0> ;
  wire \<const1> ;
  wire AN_COMPLETE_REG1;
  wire AN_ENABLE_INT;
  wire AN_INTERRUPT_ENABLE;
  wire CLEAR_STATUS_REG;
  wire EOP_REG1;
  wire FALSE_NIT0;
  wire I1;
  wire [0:0]I10;
  wire [15:0]I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I16;
  wire I17;
  wire I18;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire I9;
  wire LOOPBACK;
  wire LOOPBACK_REG;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MDC_REG3;
  wire MDC_RISING_REG1;
  wire MDIO_IN_REG3;
  wire MDIO_IN__0;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O14;
  wire O15;
  wire O16;
  wire O17;
  wire O18;
  wire O19;
  wire O2;
  wire O20;
  wire O21;
  wire O22;
  wire O23;
  wire O24;
  wire O25;
  wire O26;
  wire O27;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire POWERDOWN0;
  wire [3:0]Q;
  wire RESTART_AN_REG;
  wire RUNDISP_EN;
  wire RXDISPERR_INT;
  wire RXDISPERR_MOD;
  wire RXDISPERR_USR;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXNOTINTABLE_USR;
  wire RXSYNC_STATUS;
  wire RX_RUDI_INVALID;
  wire S0;
  wire S2;
  wire SOFT_RESET_0;
  wire SOP_REG3;
  wire [0:0]SR;
  wire SRESET;
  wire TX_CONFIG_REG_INT1;
  wire XMIT_DATA;
  wire XMIT_DATA_INT;
  wire an_interrupt_ch1;
  wire data_out;
  wire data_out_0;
  wire gmii_rx_dv_ch1_int;
  wire mdc_ch1;
  wire mdio_i_ch1;
  wire mdio_o_ch1;
  wire mdio_t_ch1;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__0 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__0 ;
  wire \n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ;
  wire \n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ;
  wire \n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__0 ;
  wire n_0_RX_DV_i_2__0;
  wire n_0_SYNC_MDC;
  wire n_0_SYNC_MDIO_IN;
  wire n_10_MDIO_INTERFACE_1;
  wire n_11_MDIO_INTERFACE_1;
  wire n_12_MDIO_INTERFACE_1;
  wire n_13_MDIO_INTERFACE_1;
  wire n_14_MDIO_INTERFACE_1;
  wire n_15_MDIO_INTERFACE_1;
  wire n_3_MDIO_INTERFACE_1;
  wire n_4_MDIO_INTERFACE_1;
  wire n_5_MDIO_INTERFACE_1;
  wire n_6_MDIO_INTERFACE_1;
  wire n_7_MDIO_INTERFACE_1;
  wire n_8_MDIO_INTERFACE_1;
  wire n_9_MDIO_INTERFACE_1;
  wire [4:0]phyad_ch1;
  wire [0:0]status_vector_ch1;
  wire userclk2;

LUT2 #(
    .INIT(4'hE)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__0 
       (.I0(SRESET),
        .I1(O27),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair216" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__0 
       (.I0(SRESET),
        .I1(O17),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair215" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__0 
       (.I0(SRESET),
        .I1(O16),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair215" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__0 
       (.I0(SRESET),
        .I1(O15),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair214" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__0 
       (.I0(SRESET),
        .I1(TX_CONFIG_REG_INT1),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair220" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__0 
       (.I0(SRESET),
        .I1(O26),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair220" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__0 
       (.I0(SRESET),
        .I1(O25),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair219" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__0 
       (.I0(SRESET),
        .I1(O24),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair219" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__0 
       (.I0(SRESET),
        .I1(O23),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair218" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__0 
       (.I0(SRESET),
        .I1(O22),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair218" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__0 
       (.I0(SRESET),
        .I1(O21),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair217" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__0 
       (.I0(SRESET),
        .I1(O20),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair217" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__0 
       (.I0(SRESET),
        .I1(O19),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair216" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__0 
       (.I0(SRESET),
        .I1(O18),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1__0 ),
        .Q(O27),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1__0 ),
        .Q(O17),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1__0 ),
        .Q(O16),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1__0 ),
        .Q(O15),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1__0 ),
        .Q(TX_CONFIG_REG_INT1),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1__0 ),
        .Q(O26),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1__0 ),
        .Q(O25),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1__0 ),
        .Q(O24),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1__0 ),
        .Q(O23),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1__0 ),
        .Q(O22),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1__0 ),
        .Q(O21),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1__0 ),
        .Q(O20),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1__0 ),
        .Q(O19),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1__0 ),
        .Q(O18),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair211" *) 
   LUT4 #(
    .INIT(16'hFFF8)) 
     CGBAD_i_1__0
       (.I0(RXDISPERR_INT),
        .I1(RUNDISP_EN),
        .I2(RXNOTINTABLE_INT),
        .I3(I3),
        .O(S2));
FDRE CLEAR_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_10_MDIO_INTERFACE_1),
        .Q(CLEAR_STATUS_REG),
        .R(SRESET));
LUT2 #(
    .INIT(4'hE)) 
     CODE_GRPISK_i_3__0
       (.I0(O1),
        .I1(I1),
        .O(O3));
FDSE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.AN_ENABLE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_14_MDIO_INTERFACE_1),
        .Q(AN_ENABLE_INT),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_3_MDIO_INTERFACE_1),
        .Q(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .R(\<const0> ));
FDSE #(
    .INIT(1'b1)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_13_MDIO_INTERFACE_1),
        .Q(O1),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.LOOPBACK_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_15_MDIO_INTERFACE_1),
        .Q(LOOPBACK),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.POWERDOWN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_8_MDIO_INTERFACE_1),
        .Q(O2),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.RESET_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_9_MDIO_INTERFACE_1),
        .Q(SOFT_RESET_0),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.RESTART_AN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_7_MDIO_INTERFACE_1),
        .Q(RESTART_AN_REG),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_12_MDIO_INTERFACE_1),
        .Q(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair211" *) 
   LUT2 #(
    .INIT(4'h8)) 
     DELAY_RXDISPERR_i_1__0
       (.I0(RUNDISP_EN),
        .I1(RXDISPERR_INT),
        .O(RXDISPERR_MOD));
LUT6 #(
    .INIT(64'hA8A220A2A8802080)) 
     FALSE_NIT_i_1__0
       (.I0(RXNOTINTABLE_INT),
        .I1(RXDISPERR_MOD),
        .I2(I6),
        .I3(Q[3]),
        .I4(I7),
        .I5(I8),
        .O(FALSE_NIT0));
LUT6 #(
    .INIT(64'h000000150000003F)) 
     \FSM_onehot_STATE[12]_i_6__0 
       (.I0(I2),
        .I1(RXDISPERR_INT),
        .I2(RUNDISP_EN),
        .I3(RXNOTINTABLE_INT),
        .I4(I3),
        .I5(RXEVEN),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair209" *) 
   LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[2]_i_2__0 
       (.I0(I2),
        .I1(I3),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(O12));
(* SOFT_HLUTNM = "soft_lutpair209" *) 
   LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[4]_i_2__0 
       (.I0(I2),
        .I1(I3),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(O13));
LUT2 #(
    .INIT(4'hB)) 
     \FSM_onehot_STATE[4]_i_3__0 
       (.I0(I5),
        .I1(O4),
        .O(O11));
FDRE \GEN_INTERRUPT_LOGIC.AN_COMPLETE_REG1_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_11_MDIO_INTERFACE_1),
        .Q(AN_COMPLETE_REG1),
        .R(SRESET));
FDRE \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_ENABLE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_4_MDIO_INTERFACE_1),
        .Q(AN_INTERRUPT_ENABLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair214" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__0 
       (.I0(AN_INTERRUPT_ENABLE),
        .I1(SRESET),
        .O(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__0 ));
FDRE \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_5_MDIO_INTERFACE_1),
        .Q(an_interrupt_ch1),
        .R(\<const0> ));
GND GND
       (.G(\<const0> ));
LUT3 #(
    .INIT(8'h20)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_2__0 
       (.I0(I3),
        .I1(O2),
        .I2(data_out),
        .O(MASK_RUDI_BUFERR_TIMER0));
FDRE MDC_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(data_out_0),
        .Q(MDC_REG3),
        .R(SRESET));
FDRE MDC_RISING_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_MDC),
        .Q(MDC_RISING_REG1),
        .R(SRESET));
quadsgmiiMDIO_INTERFACE_38 MDIO_INTERFACE_1
       (.AN_COMPLETE_REG1(AN_COMPLETE_REG1),
        .AN_INTERRUPT_ENABLE(AN_INTERRUPT_ENABLE),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .I1(LOOPBACK),
        .I11(I11),
        .I12(I12),
        .I13(I13),
        .I14(I14),
        .I2(AN_ENABLE_INT),
        .I3(O2),
        .I4(O1),
        .I5(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I6(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3__0 ),
        .I7(RUNDISP_EN),
        .I8(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .LOOPBACK_REG(LOOPBACK_REG),
        .MDC_RISING_REG1(MDC_RISING_REG1),
        .MDIO_IN__0(MDIO_IN__0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY(MR_LP_ADV_ABILITY),
        .O1(n_3_MDIO_INTERFACE_1),
        .O10(n_12_MDIO_INTERFACE_1),
        .O11(n_13_MDIO_INTERFACE_1),
        .O12(n_14_MDIO_INTERFACE_1),
        .O13(n_15_MDIO_INTERFACE_1),
        .O2(n_4_MDIO_INTERFACE_1),
        .O3(n_5_MDIO_INTERFACE_1),
        .O4(n_6_MDIO_INTERFACE_1),
        .O5(n_7_MDIO_INTERFACE_1),
        .O6(n_8_MDIO_INTERFACE_1),
        .O7(n_9_MDIO_INTERFACE_1),
        .O8(n_10_MDIO_INTERFACE_1),
        .O9(n_11_MDIO_INTERFACE_1),
        .RESTART_AN_REG(RESTART_AN_REG),
        .SOFT_RESET_0(SOFT_RESET_0),
        .SRESET(SRESET),
        .an_interrupt_ch1(an_interrupt_ch1),
        .mdio_o_ch1(mdio_o_ch1),
        .mdio_t_ch1(mdio_t_ch1),
        .phyad_ch1(phyad_ch1),
        .status_vector_ch1(status_vector_ch1),
        .userclk2(userclk2));
FDSE MDIO_IN_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_MDIO_IN),
        .Q(MDIO_IN_REG3),
        .S(SRESET));
FDSE MDIO_IN_REG4_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDIO_IN_REG3),
        .Q(MDIO_IN__0),
        .S(SRESET));
(* SOFT_HLUTNM = "soft_lutpair212" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     POWERDOWN_i_1
       (.I0(O2),
        .I1(I16),
        .I2(I17),
        .I3(I18),
        .O(POWERDOWN0));
(* SOFT_HLUTNM = "soft_lutpair212" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     POWERDOWN_rep_i_1
       (.I0(O2),
        .I1(I16),
        .I2(I17),
        .I3(I18),
        .O(O14));
FDRE \QSGMII_SPEC.RUNDISP_EN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_6_MDIO_INTERFACE_1),
        .Q(RUNDISP_EN),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0A0B0A0A0A0A0A0A)) 
     RX_DV_i_1__0
       (.I0(n_0_RX_DV_i_2__0),
        .I1(EOP_REG1),
        .I2(I10),
        .I3(I15),
        .I4(XMIT_DATA),
        .I5(gmii_rx_dv_ch1_int),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair210" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     RX_DV_i_2__0
       (.I0(O5),
        .I1(SOP_REG3),
        .I2(O1),
        .I3(O2),
        .O(n_0_RX_DV_i_2__0));
(* SOFT_HLUTNM = "soft_lutpair208" *) 
   LUT4 #(
    .INIT(16'hBAAA)) 
     RX_ER_i_2__0
       (.I0(XMIT_DATA_INT),
        .I1(AN_ENABLE_INT),
        .I2(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I3(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .O(XMIT_DATA));
(* SOFT_HLUTNM = "soft_lutpair210" *) 
   LUT2 #(
    .INIT(4'hE)) 
     RX_ER_i_3__0
       (.I0(O1),
        .I1(O2),
        .O(O7));
LUT6 #(
    .INIT(64'hABABAAABABABABAB)) 
     \RX_RUDI_INVALID_DELAY[0]_i_2__0 
       (.I0(I9),
        .I1(XMIT_DATA_INT),
        .I2(RXSYNC_STATUS),
        .I3(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I4(AN_ENABLE_INT),
        .I5(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .O(RX_RUDI_INVALID));
(* SOFT_HLUTNM = "soft_lutpair208" *) 
   LUT5 #(
    .INIT(32'hFF080000)) 
     STATUS_VECTOR_0_PRE_i_1__0
       (.I0(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I1(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I2(AN_ENABLE_INT),
        .I3(XMIT_DATA_INT),
        .I4(RXSYNC_STATUS),
        .O(O5));
quadsgmiisync_block__parameterized0_40 SYNC_MDC
       (.MDC_REG3(MDC_REG3),
        .O1(n_0_SYNC_MDC),
        .data_out(data_out_0),
        .mdc_ch1(mdc_ch1),
        .userclk2(userclk2));
quadsgmiisync_block__parameterized0_39 SYNC_MDIO_IN
       (.data_out(n_0_SYNC_MDIO_IN),
        .mdio_i_ch1(mdio_i_ch1),
        .userclk2(userclk2));
LUT6 #(
    .INIT(64'h0000000000800000)) 
     S_i_1__1
       (.I0(I4),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(I5),
        .I5(S2),
        .O(S0));
(* SOFT_HLUTNM = "soft_lutpair213" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT[2]_i_1__0 
       (.I0(LOOPBACK),
        .I1(I10),
        .O(SR));
(* SOFT_HLUTNM = "soft_lutpair213" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.NO_1588.RXDISPERR_INT_i_1__0 
       (.I0(RXDISPERR_USR),
        .I1(I10),
        .I2(LOOPBACK),
        .O(O9));
LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.NO_1588.RXNOTINTABLE_INT_i_1__0 
       (.I0(RXNOTINTABLE_USR),
        .I1(I10),
        .I2(LOOPBACK),
        .O(O10));
VCC VCC
       (.P(\<const1> ));
LUT3 #(
    .INIT(8'h08)) 
     XMIT_CONFIG_INT_i_2__0
       (.I0(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I1(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I2(AN_ENABLE_INT),
        .O(O6));
endmodule

(* ORIG_REF_NAME = "MANAGEMENT" *) 
module quadsgmiiMANAGEMENT__parameterized0_43
   (O1,
    mdio_o_ch0,
    mdio_t_ch0,
    AN_ENABLE_INT,
    LOOPBACK,
    O2,
    SOFT_RESET,
    an_interrupt_ch0,
    RUNDISP_EN,
    RESTART_AN_REG,
    CLEAR_STATUS_REG,
    O3,
    O4,
    S0,
    S2,
    FALSE_NIT0,
    RXDISPERR_MOD,
    RX_RUDI_INVALID,
    O5,
    XMIT_DATA,
    O6,
    MASK_RUDI_BUFERR_TIMER0,
    SR,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    TX_CONFIG_REG_INT1,
    O14,
    O15,
    O16,
    O17,
    O18,
    O19,
    O20,
    O21,
    O22,
    O23,
    O24,
    O25,
    O26,
    SRESET,
    userclk2,
    I1,
    I2,
    RXDISPERR_INT,
    RXNOTINTABLE_INT,
    I3,
    RXEVEN,
    I4,
    Q,
    I5,
    I6,
    I7,
    I8,
    I9,
    XMIT_DATA_INT,
    RXSYNC_STATUS,
    SOP_REG3,
    data_out,
    I10,
    I11,
    MR_LP_ADV_ABILITY,
    I12,
    I13,
    I14,
    status_vector_ch0,
    MR_LINK_STATUS,
    phyad_ch0,
    EOP_REG1,
    I15,
    gmii_rx_dv_ch0_int,
    MR_AN_COMPLETE,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    mdc_ch0,
    mdio_i_ch0);
  output O1;
  output mdio_o_ch0;
  output mdio_t_ch0;
  output AN_ENABLE_INT;
  output LOOPBACK;
  output O2;
  output SOFT_RESET;
  output an_interrupt_ch0;
  output RUNDISP_EN;
  output RESTART_AN_REG;
  output CLEAR_STATUS_REG;
  output O3;
  output O4;
  output S0;
  output S2;
  output FALSE_NIT0;
  output RXDISPERR_MOD;
  output RX_RUDI_INVALID;
  output O5;
  output XMIT_DATA;
  output O6;
  output MASK_RUDI_BUFERR_TIMER0;
  output [0:0]SR;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  output TX_CONFIG_REG_INT1;
  output O14;
  output O15;
  output O16;
  output O17;
  output O18;
  output O19;
  output O20;
  output O21;
  output O22;
  output O23;
  output O24;
  output O25;
  output O26;
  input SRESET;
  input userclk2;
  input I1;
  input I2;
  input RXDISPERR_INT;
  input RXNOTINTABLE_INT;
  input I3;
  input RXEVEN;
  input I4;
  input [3:0]Q;
  input I5;
  input I6;
  input I7;
  input I8;
  input I9;
  input XMIT_DATA_INT;
  input RXSYNC_STATUS;
  input SOP_REG3;
  input data_out;
  input [0:0]I10;
  input [15:0]I11;
  input [1:0]MR_LP_ADV_ABILITY;
  input I12;
  input I13;
  input I14;
  input [0:0]status_vector_ch0;
  input MR_LINK_STATUS;
  input [4:0]phyad_ch0;
  input EOP_REG1;
  input I15;
  input gmii_rx_dv_ch0_int;
  input MR_AN_COMPLETE;
  input RXDISPERR_USR;
  input RXNOTINTABLE_USR;
  input mdc_ch0;
  input mdio_i_ch0;

  wire \<const0> ;
  wire \<const1> ;
  wire AN_COMPLETE_REG1;
  wire AN_ENABLE_INT;
  wire AN_INTERRUPT_ENABLE;
  wire CLEAR_STATUS_REG;
  wire EOP_REG1;
  wire FALSE_NIT0;
  wire I1;
  wire [0:0]I10;
  wire [15:0]I11;
  wire I12;
  wire I13;
  wire I14;
  wire I15;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire I9;
  wire LOOPBACK;
  wire LOOPBACK_REG;
  wire MASK_RUDI_BUFERR_TIMER0;
  wire MDC_REG3;
  wire MDC_RISING_REG1;
  wire MDIO_IN_REG3;
  wire MDIO_IN__0;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O14;
  wire O15;
  wire O16;
  wire O17;
  wire O18;
  wire O19;
  wire O2;
  wire O20;
  wire O21;
  wire O22;
  wire O23;
  wire O24;
  wire O25;
  wire O26;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [3:0]Q;
  wire RESTART_AN_REG;
  wire RUNDISP_EN;
  wire RXDISPERR_INT;
  wire RXDISPERR_MOD;
  wire RXDISPERR_USR;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXNOTINTABLE_USR;
  wire RXSYNC_STATUS;
  wire RX_RUDI_INVALID;
  wire S0;
  wire S2;
  wire SOFT_RESET;
  wire SOP_REG3;
  wire [0:0]SR;
  wire SRESET;
  wire TX_CONFIG_REG_INT1;
  wire XMIT_DATA;
  wire XMIT_DATA_INT;
  wire an_interrupt_ch0;
  wire data_out;
  wire data_out_0;
  wire gmii_rx_dv_ch0_int;
  wire mdc_ch0;
  wire mdio_i_ch0;
  wire mdio_o_ch0;
  wire mdio_t_ch0;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1 ;
  wire \n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1 ;
  wire \n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ;
  wire \n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ;
  wire \n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3 ;
  wire n_0_RX_DV_i_2;
  wire n_0_SYNC_MDC;
  wire n_0_SYNC_MDIO_IN;
  wire n_10_MDIO_INTERFACE_1;
  wire n_11_MDIO_INTERFACE_1;
  wire n_12_MDIO_INTERFACE_1;
  wire n_13_MDIO_INTERFACE_1;
  wire n_14_MDIO_INTERFACE_1;
  wire n_15_MDIO_INTERFACE_1;
  wire n_3_MDIO_INTERFACE_1;
  wire n_4_MDIO_INTERFACE_1;
  wire n_5_MDIO_INTERFACE_1;
  wire n_6_MDIO_INTERFACE_1;
  wire n_7_MDIO_INTERFACE_1;
  wire n_8_MDIO_INTERFACE_1;
  wire n_9_MDIO_INTERFACE_1;
  wire [4:0]phyad_ch0;
  wire [0:0]status_vector_ch0;
  wire userclk2;

LUT2 #(
    .INIT(4'hE)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1 
       (.I0(SRESET),
        .I1(O26),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair84" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1 
       (.I0(SRESET),
        .I1(O16),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair83" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1 
       (.I0(SRESET),
        .I1(O15),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair83" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1 
       (.I0(SRESET),
        .I1(O14),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair82" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1 
       (.I0(SRESET),
        .I1(TX_CONFIG_REG_INT1),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair88" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1 
       (.I0(SRESET),
        .I1(O25),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair88" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1 
       (.I0(SRESET),
        .I1(O24),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair87" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1 
       (.I0(SRESET),
        .I1(O23),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair87" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1 
       (.I0(SRESET),
        .I1(O22),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair86" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1 
       (.I0(SRESET),
        .I1(O21),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair86" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1 
       (.I0(SRESET),
        .I1(O20),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair85" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1 
       (.I0(SRESET),
        .I1(O19),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair85" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1 
       (.I0(SRESET),
        .I1(O18),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair84" *) 
   LUT2 #(
    .INIT(4'h4)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1 
       (.I0(SRESET),
        .I1(O17),
        .O(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[0]_i_1 ),
        .Q(O26),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[10]_i_1 ),
        .Q(O16),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[12]_i_1 ),
        .Q(O15),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[13]_i_1 ),
        .Q(O14),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[15]_i_1 ),
        .Q(TX_CONFIG_REG_INT1),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[1]_i_1 ),
        .Q(O25),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[2]_i_1 ),
        .Q(O24),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[3]_i_1 ),
        .Q(O23),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[4]_i_1 ),
        .Q(O22),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[5]_i_1 ),
        .Q(O21),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[6]_i_1 ),
        .Q(O20),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[7]_i_1 ),
        .Q(O19),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[8]_i_1 ),
        .Q(O18),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_AN_NP_TX_REG_WITH_AN.AN_NP_TX_REG[9]_i_1 ),
        .Q(O17),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair80" *) 
   LUT4 #(
    .INIT(16'hFFF8)) 
     CGBAD_i_1
       (.I0(RXDISPERR_INT),
        .I1(RUNDISP_EN),
        .I2(RXNOTINTABLE_INT),
        .I3(I3),
        .O(S2));
FDRE CLEAR_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_10_MDIO_INTERFACE_1),
        .Q(CLEAR_STATUS_REG),
        .R(SRESET));
LUT2 #(
    .INIT(4'hE)) 
     CODE_GRPISK_i_3
       (.I0(O1),
        .I1(I1),
        .O(O3));
FDSE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.AN_ENABLE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_14_MDIO_INTERFACE_1),
        .Q(AN_ENABLE_INT),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_3_MDIO_INTERFACE_1),
        .Q(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .R(\<const0> ));
FDSE #(
    .INIT(1'b1)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_13_MDIO_INTERFACE_1),
        .Q(O1),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.LOOPBACK_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_15_MDIO_INTERFACE_1),
        .Q(LOOPBACK),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.POWERDOWN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_8_MDIO_INTERFACE_1),
        .Q(O2),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.RESET_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_9_MDIO_INTERFACE_1),
        .Q(SOFT_RESET),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.RESTART_AN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_7_MDIO_INTERFACE_1),
        .Q(RESTART_AN_REG),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg 
       (.C(userclk2),
        .CE(LOOPBACK_REG),
        .D(n_12_MDIO_INTERFACE_1),
        .Q(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .R(SRESET));
(* SOFT_HLUTNM = "soft_lutpair80" *) 
   LUT2 #(
    .INIT(4'h8)) 
     DELAY_RXDISPERR_i_1
       (.I0(RUNDISP_EN),
        .I1(RXDISPERR_INT),
        .O(RXDISPERR_MOD));
LUT6 #(
    .INIT(64'hA8A220A2A8802080)) 
     FALSE_NIT_i_1
       (.I0(RXNOTINTABLE_INT),
        .I1(RXDISPERR_MOD),
        .I2(I6),
        .I3(Q[3]),
        .I4(I7),
        .I5(I8),
        .O(FALSE_NIT0));
LUT6 #(
    .INIT(64'h000000150000003F)) 
     \FSM_onehot_STATE[12]_i_6 
       (.I0(I2),
        .I1(RXDISPERR_INT),
        .I2(RUNDISP_EN),
        .I3(RXNOTINTABLE_INT),
        .I4(I3),
        .I5(RXEVEN),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair77" *) 
   LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[2]_i_2 
       (.I0(I2),
        .I1(I3),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(O12));
(* SOFT_HLUTNM = "soft_lutpair77" *) 
   LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[4]_i_2 
       (.I0(I2),
        .I1(I3),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(O13));
LUT2 #(
    .INIT(4'hB)) 
     \FSM_onehot_STATE[4]_i_3 
       (.I0(I5),
        .I1(O4),
        .O(O11));
FDRE \GEN_INTERRUPT_LOGIC.AN_COMPLETE_REG1_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_11_MDIO_INTERFACE_1),
        .Q(AN_COMPLETE_REG1),
        .R(SRESET));
FDRE \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_ENABLE_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_4_MDIO_INTERFACE_1),
        .Q(AN_INTERRUPT_ENABLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair82" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3 
       (.I0(AN_INTERRUPT_ENABLE),
        .I1(SRESET),
        .O(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3 ));
FDRE \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_5_MDIO_INTERFACE_1),
        .Q(an_interrupt_ch0),
        .R(\<const0> ));
GND GND
       (.G(\<const0> ));
LUT3 #(
    .INIT(8'h20)) 
     \MASK_RUDI_BUFERR_TIMER[8]_i_2 
       (.I0(I3),
        .I1(O2),
        .I2(data_out),
        .O(MASK_RUDI_BUFERR_TIMER0));
FDRE MDC_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(data_out_0),
        .Q(MDC_REG3),
        .R(SRESET));
FDRE MDC_RISING_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_MDC),
        .Q(MDC_RISING_REG1),
        .R(SRESET));
quadsgmiiMDIO_INTERFACE_47 MDIO_INTERFACE_1
       (.AN_COMPLETE_REG1(AN_COMPLETE_REG1),
        .AN_INTERRUPT_ENABLE(AN_INTERRUPT_ENABLE),
        .CLEAR_STATUS_REG(CLEAR_STATUS_REG),
        .I1(LOOPBACK),
        .I11(I11),
        .I12(I12),
        .I13(I13),
        .I14(I14),
        .I2(AN_ENABLE_INT),
        .I3(O2),
        .I4(O1),
        .I5(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I6(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_3 ),
        .I7(RUNDISP_EN),
        .I8(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .LOOPBACK_REG(LOOPBACK_REG),
        .MDC_RISING_REG1(MDC_RISING_REG1),
        .MDIO_IN__0(MDIO_IN__0),
        .MR_AN_COMPLETE(MR_AN_COMPLETE),
        .MR_LINK_STATUS(MR_LINK_STATUS),
        .MR_LP_ADV_ABILITY(MR_LP_ADV_ABILITY),
        .O1(n_3_MDIO_INTERFACE_1),
        .O10(n_12_MDIO_INTERFACE_1),
        .O11(n_13_MDIO_INTERFACE_1),
        .O12(n_14_MDIO_INTERFACE_1),
        .O13(n_15_MDIO_INTERFACE_1),
        .O2(n_4_MDIO_INTERFACE_1),
        .O3(n_5_MDIO_INTERFACE_1),
        .O4(n_6_MDIO_INTERFACE_1),
        .O5(n_7_MDIO_INTERFACE_1),
        .O6(n_8_MDIO_INTERFACE_1),
        .O7(n_9_MDIO_INTERFACE_1),
        .O8(n_10_MDIO_INTERFACE_1),
        .O9(n_11_MDIO_INTERFACE_1),
        .RESTART_AN_REG(RESTART_AN_REG),
        .SOFT_RESET(SOFT_RESET),
        .SRESET(SRESET),
        .an_interrupt_ch0(an_interrupt_ch0),
        .mdio_o_ch0(mdio_o_ch0),
        .mdio_t_ch0(mdio_t_ch0),
        .phyad_ch0(phyad_ch0),
        .status_vector_ch0(status_vector_ch0),
        .userclk2(userclk2));
FDSE MDIO_IN_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_MDIO_IN),
        .Q(MDIO_IN_REG3),
        .S(SRESET));
FDSE MDIO_IN_REG4_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDIO_IN_REG3),
        .Q(MDIO_IN__0),
        .S(SRESET));
FDRE \QSGMII_SPEC.RUNDISP_EN_REG_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_6_MDIO_INTERFACE_1),
        .Q(RUNDISP_EN),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0A0B0A0A0A0A0A0A)) 
     RX_DV_i_1
       (.I0(n_0_RX_DV_i_2),
        .I1(EOP_REG1),
        .I2(I10),
        .I3(I15),
        .I4(XMIT_DATA),
        .I5(gmii_rx_dv_ch0_int),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair79" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     RX_DV_i_2
       (.I0(O5),
        .I1(SOP_REG3),
        .I2(O1),
        .I3(O2),
        .O(n_0_RX_DV_i_2));
(* SOFT_HLUTNM = "soft_lutpair78" *) 
   LUT4 #(
    .INIT(16'hBAAA)) 
     RX_ER_i_2
       (.I0(XMIT_DATA_INT),
        .I1(AN_ENABLE_INT),
        .I2(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I3(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .O(XMIT_DATA));
(* SOFT_HLUTNM = "soft_lutpair79" *) 
   LUT2 #(
    .INIT(4'hE)) 
     RX_ER_i_3
       (.I0(O1),
        .I1(O2),
        .O(O7));
LUT6 #(
    .INIT(64'hABABAAABABABABAB)) 
     \RX_RUDI_INVALID_DELAY[0]_i_2 
       (.I0(I9),
        .I1(XMIT_DATA_INT),
        .I2(RXSYNC_STATUS),
        .I3(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I4(AN_ENABLE_INT),
        .I5(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .O(RX_RUDI_INVALID));
(* SOFT_HLUTNM = "soft_lutpair78" *) 
   LUT5 #(
    .INIT(32'hFF080000)) 
     STATUS_VECTOR_0_PRE_i_1
       (.I0(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I1(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I2(AN_ENABLE_INT),
        .I3(XMIT_DATA_INT),
        .I4(RXSYNC_STATUS),
        .O(O5));
quadsgmiisync_block__parameterized0_49 SYNC_MDC
       (.MDC_REG3(MDC_REG3),
        .O1(n_0_SYNC_MDC),
        .data_out(data_out_0),
        .mdc_ch0(mdc_ch0),
        .userclk2(userclk2));
quadsgmiisync_block__parameterized0_48 SYNC_MDIO_IN
       (.data_out(n_0_SYNC_MDIO_IN),
        .mdio_i_ch0(mdio_i_ch0),
        .userclk2(userclk2));
LUT6 #(
    .INIT(64'h0000000000800000)) 
     S_i_1
       (.I0(I4),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(I5),
        .I5(S2),
        .O(S0));
(* SOFT_HLUTNM = "soft_lutpair81" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \USE_ROCKET_IO.NO_1588.RXCLKCORCNT_INT[2]_i_1 
       (.I0(LOOPBACK),
        .I1(I10),
        .O(SR));
LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.NO_1588.RXDISPERR_INT_i_1 
       (.I0(RXDISPERR_USR),
        .I1(I10),
        .I2(LOOPBACK),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair81" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.NO_1588.RXNOTINTABLE_INT_i_1 
       (.I0(RXNOTINTABLE_USR),
        .I1(I10),
        .I2(LOOPBACK),
        .O(O10));
VCC VCC
       (.P(\<const1> ));
LUT3 #(
    .INIT(8'h08)) 
     XMIT_CONFIG_INT_i_2
       (.I0(\n_0_CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_reg ),
        .I1(\n_0_CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_reg ),
        .I2(AN_ENABLE_INT),
        .O(O6));
endmodule

module quadsgmiiMDIO_INTERFACE
   (mdio_o_ch3,
    mdio_t_ch3,
    LOOPBACK_REG,
    O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    SRESET,
    MDC_RISING_REG1,
    userclk2,
    MDIO_IN__0,
    I11,
    SOFT_RESET_2,
    MR_LP_ADV_ABILITY,
    I1,
    I12,
    I2,
    I3,
    I13,
    I4,
    I14,
    RESTART_AN_REG,
    status_vector_ch3,
    MR_LINK_STATUS,
    phyad_ch3,
    I5,
    AN_INTERRUPT_ENABLE,
    I6,
    MR_AN_COMPLETE,
    AN_COMPLETE_REG1,
    an_interrupt_ch3,
    I7,
    CLEAR_STATUS_REG,
    I8);
  output mdio_o_ch3;
  output mdio_t_ch3;
  output LOOPBACK_REG;
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  input SRESET;
  input MDC_RISING_REG1;
  input userclk2;
  input MDIO_IN__0;
  input [15:0]I11;
  input SOFT_RESET_2;
  input [1:0]MR_LP_ADV_ABILITY;
  input I1;
  input I12;
  input I2;
  input I3;
  input I13;
  input I4;
  input I14;
  input RESTART_AN_REG;
  input [0:0]status_vector_ch3;
  input MR_LINK_STATUS;
  input [4:0]phyad_ch3;
  input I5;
  input AN_INTERRUPT_ENABLE;
  input I6;
  input MR_AN_COMPLETE;
  input AN_COMPLETE_REG1;
  input an_interrupt_ch3;
  input I7;
  input CLEAR_STATUS_REG;
  input I8;

  wire \<const0> ;
  wire \<const1> ;
  wire ADDRESS_MATCH_COMB;
  wire [0:0]ADDR_RD;
  wire [4:0]ADDR_WR;
  wire AN_COMPLETE_REG1;
  wire AN_INTERRUPT_ENABLE;
  wire AN_INTERRUPT_ENABLE7_out;
  wire [3:0]BIT_COUNT_reg__0;
  wire CLEAR_STATUS_REG;
  wire CLEAR_STATUS_REG_COMB;
  wire [15:0]DATA_OUT;
  wire I1;
  wire [15:0]I11;
  wire I12;
  wire I13;
  wire I14;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire LAST_DATA_SHIFT;
  wire LAST_DATA_SHIFT0;
  wire LOOPBACK_REG;
  wire MDC_RISING_OUT;
  wire MDC_RISING_REG1;
  wire MDC_RISING_REG1_0;
  wire MDC_RISING_REG2;
  wire MDIO_IN__0;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire OPCODE;
  wire RD;
  wire RESTART_AN_REG;
  wire RUNDISP_EN_REG;
  wire SHIFT_REG0;
  wire SOFT_RESET_2;
  wire SRESET;
  wire WE;
  wire an_interrupt_ch3;
  wire mdio_o_ch3;
  wire mdio_t_ch3;
  wire n_0_ADDRESS_MATCH_i_1__2;
  wire n_0_ADDRESS_MATCH_i_2__2;
  wire n_0_ADDRESS_MATCH_i_3__2;
  wire n_0_ADDRESS_MATCH_i_4__2;
  wire n_0_ADDRESS_MATCH_i_6__2;
  wire n_0_ADDRESS_MATCH_i_7__2;
  wire n_0_ADDRESS_MATCH_reg;
  wire \n_0_ADDR_WR[4]_i_1__2 ;
  wire \n_0_BIT_COUNT[3]_i_1__2 ;
  wire \n_0_BIT_COUNT[3]_i_3__2 ;
  wire \n_0_BIT_COUNT[3]_i_4__2 ;
  wire \n_0_BIT_COUNT[3]_i_5__2 ;
  wire \n_0_BIT_COUNT[3]_i_6__2 ;
  wire \n_0_BIT_COUNT[3]_i_7__2 ;
  wire \n_0_BIT_COUNT[3]_i_8__2 ;
  wire \n_0_BIT_COUNT[3]_i_9__2 ;
  wire \n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ;
  wire \n_0_FSM_onehot_STATE[0]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[10]_i_10__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_11__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_12__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_13__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[10]_i_2__6 ;
  wire \n_0_FSM_onehot_STATE[10]_i_3__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_4__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_5__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_6__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_7__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_8__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_9__2 ;
  wire \n_0_FSM_onehot_STATE[1]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[2]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[3]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[4]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[5]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[5]_i_2__2 ;
  wire \n_0_FSM_onehot_STATE[6]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[7]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[7]_i_2__2 ;
  wire \n_0_FSM_onehot_STATE[8]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[8]_i_2__6 ;
  wire \n_0_FSM_onehot_STATE[8]_i_3__6 ;
  wire \n_0_FSM_onehot_STATE[9]_i_1__6 ;
  wire \n_0_FSM_onehot_STATE[9]_i_2__5 ;
  wire \n_0_FSM_onehot_STATE_reg[0] ;
  wire \n_0_FSM_onehot_STATE_reg[10] ;
  wire \n_0_FSM_onehot_STATE_reg[1] ;
  wire \n_0_FSM_onehot_STATE_reg[2] ;
  wire \n_0_FSM_onehot_STATE_reg[3] ;
  wire \n_0_FSM_onehot_STATE_reg[4] ;
  wire \n_0_FSM_onehot_STATE_reg[5] ;
  wire \n_0_FSM_onehot_STATE_reg[6] ;
  wire \n_0_FSM_onehot_STATE_reg[7] ;
  wire \n_0_FSM_onehot_STATE_reg[8] ;
  wire \n_0_FSM_onehot_STATE_reg[9] ;
  wire \n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__2 ;
  wire n_0_LAST_DATA_SHIFT_i_2__2;
  wire n_0_LAST_DATA_SHIFT_i_3__2;
  wire n_0_MDIO_OUT_i_1__2;
  wire n_0_MDIO_OUT_i_2__2;
  wire n_0_MDIO_OUT_i_3__2;
  wire n_0_MDIO_OUT_i_4__2;
  wire n_0_MDIO_TRI_i_1__2;
  wire n_0_MDIO_TRI_i_2__2;
  wire n_0_MDIO_TRI_i_3__2;
  wire \n_0_OPCODE[0]_i_1__2 ;
  wire \n_0_OPCODE[1]_i_1__2 ;
  wire \n_0_OPCODE_reg[0] ;
  wire \n_0_OPCODE_reg[1] ;
  wire n_0_RD_i_1__2;
  wire \n_0_SHIFT_REG[0]_i_1__2 ;
  wire \n_0_SHIFT_REG[0]_i_2__2 ;
  wire \n_0_SHIFT_REG[0]_i_3__2 ;
  wire \n_0_SHIFT_REG[10]_i_1__2 ;
  wire \n_0_SHIFT_REG[10]_i_2__2 ;
  wire \n_0_SHIFT_REG[10]_i_3__2 ;
  wire \n_0_SHIFT_REG[11]_i_1__2 ;
  wire \n_0_SHIFT_REG[11]_i_2__2 ;
  wire \n_0_SHIFT_REG[11]_i_3__2 ;
  wire \n_0_SHIFT_REG[12]_i_1__2 ;
  wire \n_0_SHIFT_REG[12]_i_2__2 ;
  wire \n_0_SHIFT_REG[12]_i_3__2 ;
  wire \n_0_SHIFT_REG[13]_i_1__2 ;
  wire \n_0_SHIFT_REG[13]_i_2__2 ;
  wire \n_0_SHIFT_REG[14]_i_1__2 ;
  wire \n_0_SHIFT_REG[14]_i_2__2 ;
  wire \n_0_SHIFT_REG[14]_i_3__2 ;
  wire \n_0_SHIFT_REG[15]_i_2__2 ;
  wire \n_0_SHIFT_REG[15]_i_3__2 ;
  wire \n_0_SHIFT_REG[15]_i_4__2 ;
  wire \n_0_SHIFT_REG[15]_i_5__2 ;
  wire \n_0_SHIFT_REG[15]_i_6__2 ;
  wire \n_0_SHIFT_REG[1]_i_1__2 ;
  wire \n_0_SHIFT_REG[1]_i_2__2 ;
  wire \n_0_SHIFT_REG[1]_i_3__2 ;
  wire \n_0_SHIFT_REG[2]_i_1__2 ;
  wire \n_0_SHIFT_REG[2]_i_2__2 ;
  wire \n_0_SHIFT_REG[3]_i_1__2 ;
  wire \n_0_SHIFT_REG[3]_i_2__2 ;
  wire \n_0_SHIFT_REG[4]_i_1__2 ;
  wire \n_0_SHIFT_REG[4]_i_2__2 ;
  wire \n_0_SHIFT_REG[4]_i_3__2 ;
  wire \n_0_SHIFT_REG[5]_i_1__2 ;
  wire \n_0_SHIFT_REG[5]_i_2__2 ;
  wire \n_0_SHIFT_REG[5]_i_3__2 ;
  wire \n_0_SHIFT_REG[6]_i_1__2 ;
  wire \n_0_SHIFT_REG[6]_i_2__2 ;
  wire \n_0_SHIFT_REG[7]_i_1__2 ;
  wire \n_0_SHIFT_REG[7]_i_2__2 ;
  wire \n_0_SHIFT_REG[8]_i_1__2 ;
  wire \n_0_SHIFT_REG[8]_i_2__2 ;
  wire \n_0_SHIFT_REG[9]_i_1__2 ;
  wire \n_0_SHIFT_REG[9]_i_2__2 ;
  wire \n_0_SHIFT_REG_reg[13] ;
  wire \n_0_SHIFT_REG_reg[4] ;
  wire \n_0_SHIFT_REG_reg[6] ;
  wire \n_0_SHIFT_REG_reg[7] ;
  wire n_0_WE_i_1__2;
  wire n_0_WE_i_2__2;
  wire n_0_WE_i_3__2;
  wire [3:0]p_0_in;
  wire [4:0]phyad_ch3;
  wire [0:0]status_vector_ch3;
  wire userclk2;

LUT6 #(
    .INIT(64'h00000000AAABAAA8)) 
     ADDRESS_MATCH_i_1__2
       (.I0(n_0_ADDRESS_MATCH_reg),
        .I1(n_0_ADDRESS_MATCH_i_2__2),
        .I2(n_0_ADDRESS_MATCH_i_3__2),
        .I3(n_0_ADDRESS_MATCH_i_4__2),
        .I4(ADDRESS_MATCH_COMB),
        .I5(SRESET),
        .O(n_0_ADDRESS_MATCH_i_1__2));
(* SOFT_HLUTNM = "soft_lutpair448" *) 
   LUT5 #(
    .INIT(32'hFEFFFFFF)) 
     ADDRESS_MATCH_i_2__2
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(MDC_RISING_REG1),
        .O(n_0_ADDRESS_MATCH_i_2__2));
(* SOFT_HLUTNM = "soft_lutpair456" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     ADDRESS_MATCH_i_3__2
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[0] ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(n_0_ADDRESS_MATCH_i_3__2));
(* SOFT_HLUTNM = "soft_lutpair446" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     ADDRESS_MATCH_i_4__2
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .O(n_0_ADDRESS_MATCH_i_4__2));
LUT6 #(
    .INIT(64'hFFFFFFFF41000041)) 
     ADDRESS_MATCH_i_5__2
       (.I0(n_0_ADDRESS_MATCH_i_6__2),
        .I1(phyad_ch3[1]),
        .I2(DATA_OUT[0]),
        .I3(phyad_ch3[3]),
        .I4(DATA_OUT[2]),
        .I5(n_0_ADDRESS_MATCH_i_7__2),
        .O(ADDRESS_MATCH_COMB));
LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
     ADDRESS_MATCH_i_6__2
       (.I0(phyad_ch3[4]),
        .I1(DATA_OUT[3]),
        .I2(ADDR_RD),
        .I3(phyad_ch3[0]),
        .I4(DATA_OUT[1]),
        .I5(phyad_ch3[2]),
        .O(n_0_ADDRESS_MATCH_i_6__2));
LUT5 #(
    .INIT(32'h00000001)) 
     ADDRESS_MATCH_i_7__2
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[3]),
        .I4(DATA_OUT[2]),
        .O(n_0_ADDRESS_MATCH_i_7__2));
FDRE #(
    .INIT(1'b0)) 
     ADDRESS_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ADDRESS_MATCH_i_1__2),
        .Q(n_0_ADDRESS_MATCH_reg),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h2)) 
     \ADDR_WR[4]_i_1__2 
       (.I0(MDC_RISING_REG1),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .O(\n_0_ADDR_WR[4]_i_1__2 ));
FDRE \ADDR_WR_reg[0] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__2 ),
        .D(ADDR_RD),
        .Q(ADDR_WR[0]),
        .R(SRESET));
FDRE \ADDR_WR_reg[1] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__2 ),
        .D(DATA_OUT[0]),
        .Q(ADDR_WR[1]),
        .R(SRESET));
FDRE \ADDR_WR_reg[2] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__2 ),
        .D(DATA_OUT[1]),
        .Q(ADDR_WR[2]),
        .R(SRESET));
FDRE \ADDR_WR_reg[3] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__2 ),
        .D(DATA_OUT[2]),
        .Q(ADDR_WR[3]),
        .R(SRESET));
FDRE \ADDR_WR_reg[4] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__2 ),
        .D(DATA_OUT[3]),
        .Q(ADDR_WR[4]),
        .R(SRESET));
LUT3 #(
    .INIT(8'hBA)) 
     \BIT_COUNT[0]_i_1__2 
       (.I0(\n_0_BIT_COUNT[3]_i_4__2 ),
        .I1(BIT_COUNT_reg__0[0]),
        .I2(\n_0_BIT_COUNT[3]_i_3__2 ),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair465" *) 
   LUT3 #(
    .INIT(8'h82)) 
     \BIT_COUNT[1]_i_1__2 
       (.I0(\n_0_BIT_COUNT[3]_i_3__2 ),
        .I1(BIT_COUNT_reg__0[1]),
        .I2(BIT_COUNT_reg__0[0]),
        .O(p_0_in[1]));
(* SOFT_HLUTNM = "soft_lutpair458" *) 
   LUT4 #(
    .INIT(16'hE1FF)) 
     \BIT_COUNT[2]_i_1__2 
       (.I0(BIT_COUNT_reg__0[0]),
        .I1(BIT_COUNT_reg__0[1]),
        .I2(BIT_COUNT_reg__0[2]),
        .I3(\n_0_BIT_COUNT[3]_i_3__2 ),
        .O(p_0_in[2]));
LUT6 #(
    .INIT(64'hAAAAAAA8AAAAAAAA)) 
     \BIT_COUNT[3]_i_1__2 
       (.I0(MDC_RISING_REG1),
        .I1(BIT_COUNT_reg__0[2]),
        .I2(BIT_COUNT_reg__0[0]),
        .I3(BIT_COUNT_reg__0[1]),
        .I4(BIT_COUNT_reg__0[3]),
        .I5(\n_0_BIT_COUNT[3]_i_3__2 ),
        .O(\n_0_BIT_COUNT[3]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFAAA90000)) 
     \BIT_COUNT[3]_i_2__2 
       (.I0(BIT_COUNT_reg__0[3]),
        .I1(BIT_COUNT_reg__0[0]),
        .I2(BIT_COUNT_reg__0[1]),
        .I3(BIT_COUNT_reg__0[2]),
        .I4(\n_0_BIT_COUNT[3]_i_3__2 ),
        .I5(\n_0_BIT_COUNT[3]_i_4__2 ),
        .O(p_0_in[3]));
LUT5 #(
    .INIT(32'hFFF7F33F)) 
     \BIT_COUNT[3]_i_3__2 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_3__6 ),
        .I1(\n_0_BIT_COUNT[3]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_BIT_COUNT[3]_i_3__2 ));
LUT6 #(
    .INIT(64'h0008000808800080)) 
     \BIT_COUNT[3]_i_4__2 
       (.I0(\n_0_BIT_COUNT[3]_i_6__2 ),
        .I1(\n_0_BIT_COUNT[3]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE[8]_i_3__6 ),
        .I5(\n_0_FSM_onehot_STATE_reg[3] ),
        .O(\n_0_BIT_COUNT[3]_i_4__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \BIT_COUNT[3]_i_5__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_BIT_COUNT[3]_i_7__2 ),
        .I5(\n_0_BIT_COUNT[3]_i_8__2 ),
        .O(\n_0_BIT_COUNT[3]_i_5__2 ));
LUT6 #(
    .INIT(64'h0000000000000002)) 
     \BIT_COUNT[3]_i_6__2 
       (.I0(\n_0_BIT_COUNT[3]_i_9__2 ),
        .I1(n_0_ADDRESS_MATCH_i_4__2),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_BIT_COUNT[3]_i_6__2 ));
LUT2 #(
    .INIT(4'hE)) 
     \BIT_COUNT[3]_i_7__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[0] ),
        .I1(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_BIT_COUNT[3]_i_7__2 ));
(* SOFT_HLUTNM = "soft_lutpair464" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \BIT_COUNT[3]_i_8__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_BIT_COUNT[3]_i_8__2 ));
(* SOFT_HLUTNM = "soft_lutpair456" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     \BIT_COUNT[3]_i_9__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_BIT_COUNT[3]_i_9__2 ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[0] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__2 ),
        .D(p_0_in[0]),
        .Q(BIT_COUNT_reg__0[0]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[1] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__2 ),
        .D(p_0_in[1]),
        .Q(BIT_COUNT_reg__0[1]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[2] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__2 ),
        .D(p_0_in[2]),
        .Q(BIT_COUNT_reg__0[2]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[3] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__2 ),
        .D(p_0_in[3]),
        .Q(BIT_COUNT_reg__0[3]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair466" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     CLEAR_STATUS_REG_i_1__2
       (.I0(CLEAR_STATUS_REG_COMB),
        .I1(MDC_RISING_OUT),
        .I2(CLEAR_STATUS_REG),
        .O(O8));
LUT6 #(
    .INIT(64'h0000000400000000)) 
     CLEAR_STATUS_REG_i_2__2
       (.I0(ADDR_WR[3]),
        .I1(RD),
        .I2(ADDR_WR[2]),
        .I3(ADDR_WR[1]),
        .I4(ADDR_WR[4]),
        .I5(ADDR_WR[0]),
        .O(CLEAR_STATUS_REG_COMB));
(* SOFT_HLUTNM = "soft_lutpair462" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.AN_ENABLE_REG_i_1__2 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ),
        .I1(DATA_OUT[12]),
        .O(O12));
(* SOFT_HLUTNM = "soft_lutpair451" *) 
   LUT5 #(
    .INIT(32'h23332000)) 
     \CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_i_1__2 
       (.I0(DATA_OUT[8]),
        .I1(SRESET),
        .I2(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ),
        .I3(MDC_RISING_OUT),
        .I4(I5),
        .O(O1));
(* SOFT_HLUTNM = "soft_lutpair451" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_1__2 
       (.I0(MDC_RISING_OUT),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ),
        .O(LOOPBACK_REG));
(* SOFT_HLUTNM = "soft_lutpair460" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_2__2 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ),
        .I1(DATA_OUT[10]),
        .O(O11));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 
       (.I0(ADDR_WR[3]),
        .I1(WE),
        .I2(ADDR_WR[0]),
        .I3(ADDR_WR[4]),
        .I4(ADDR_WR[2]),
        .I5(ADDR_WR[1]),
        .O(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair455" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.LOOPBACK_REG_i_1__2 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ),
        .I1(DATA_OUT[14]),
        .O(O13));
(* SOFT_HLUTNM = "soft_lutpair459" *) 
   LUT4 #(
    .INIT(16'hFF80)) 
     \CONFIG_REG_WITH_AN.POWERDOWN_REG_i_1__2 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ),
        .I1(DATA_OUT[11]),
        .I2(MDC_RISING_OUT),
        .I3(I3),
        .O(O6));
(* SOFT_HLUTNM = "soft_lutpair460" *) 
   LUT4 #(
    .INIT(16'hFF80)) 
     \CONFIG_REG_WITH_AN.RESET_REG_i_1__2 
       (.I0(DATA_OUT[15]),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ),
        .I2(MDC_RISING_OUT),
        .I3(SOFT_RESET_2),
        .O(O7));
LUT5 #(
    .INIT(32'h080F0800)) 
     \CONFIG_REG_WITH_AN.RESTART_AN_REG_i_1__2 
       (.I0(DATA_OUT[9]),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ),
        .I2(SRESET),
        .I3(MDC_RISING_OUT),
        .I4(RESTART_AN_REG),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair459" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_i_1__2 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__2 ),
        .I1(DATA_OUT[5]),
        .O(O10));
LUT6 #(
    .INIT(64'h0020FFFF0020FF00)) 
     \FSM_onehot_STATE[0]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[7]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .I2(ADDR_RD),
        .I3(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_3__2 ),
        .O(\n_0_FSM_onehot_STATE[0]_i_1__6 ));
LUT6 #(
    .INIT(64'h0000000333373337)) 
     \FSM_onehot_STATE[10]_i_10__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_10__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_STATE[10]_i_11__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[2] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[4] ),
        .I3(\n_0_FSM_onehot_STATE_reg[0] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_11__2 ));
(* SOFT_HLUTNM = "soft_lutpair448" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_STATE[10]_i_12__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_12__2 ));
(* SOFT_HLUTNM = "soft_lutpair445" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[10]_i_13__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[6] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_13__2 ));
(* SOFT_HLUTNM = "soft_lutpair454" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \FSM_onehot_STATE[10]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_3__2 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_1__6 ));
LUT6 #(
    .INIT(64'h0000000100010110)) 
     \FSM_onehot_STATE[10]_i_2__6 
       (.I0(n_0_ADDRESS_MATCH_i_4__2),
        .I1(n_0_ADDRESS_MATCH_i_3__2),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[5] ),
        .I5(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_2__6 ));
LUT5 #(
    .INIT(32'h02000000)) 
     \FSM_onehot_STATE[10]_i_3__2 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_6__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_7__2 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_8__2 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_9__2 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_10__2 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_3__2 ));
LUT6 #(
    .INIT(64'h0000000100010114)) 
     \FSM_onehot_STATE[10]_i_4__2 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_11__2 ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_4__2 ));
(* SOFT_HLUTNM = "soft_lutpair447" *) 
   LUT5 #(
    .INIT(32'hFFFFFFE9)) 
     \FSM_onehot_STATE[10]_i_5__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .I3(n_0_ADDRESS_MATCH_i_3__2),
        .I4(\n_0_FSM_onehot_STATE[10]_i_12__2 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_5__2 ));
LUT6 #(
    .INIT(64'h0000001010101000)) 
     \FSM_onehot_STATE[10]_i_6__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_13__2 ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[9] ),
        .I5(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_6__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_STATE[10]_i_7__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[4] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[0] ),
        .I5(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_7__2 ));
(* SOFT_HLUTNM = "soft_lutpair445" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_STATE[10]_i_8__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_8__2 ));
LUT5 #(
    .INIT(32'h00000177)) 
     \FSM_onehot_STATE[10]_i_9__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[7] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(n_0_ADDRESS_MATCH_i_3__2),
        .O(\n_0_FSM_onehot_STATE[10]_i_9__2 ));
(* SOFT_HLUTNM = "soft_lutpair449" *) 
   LUT4 #(
    .INIT(16'h0040)) 
     \FSM_onehot_STATE[1]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__2 ),
        .I3(ADDR_RD),
        .O(\n_0_FSM_onehot_STATE[1]_i_1__6 ));
(* SOFT_HLUTNM = "soft_lutpair449" *) 
   LUT5 #(
    .INIT(32'h40000000)) 
     \FSM_onehot_STATE[2]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__2 ),
        .I3(ADDR_RD),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .O(\n_0_FSM_onehot_STATE[2]_i_1__6 ));
(* SOFT_HLUTNM = "soft_lutpair454" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     \FSM_onehot_STATE[3]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__2 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .O(\n_0_FSM_onehot_STATE[3]_i_1__6 ));
(* SOFT_HLUTNM = "soft_lutpair450" *) 
   LUT5 #(
    .INIT(32'h00084040)) 
     \FSM_onehot_STATE[4]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .I3(\n_0_FSM_onehot_STATE[8]_i_3__6 ),
        .I4(\n_0_FSM_onehot_STATE[7]_i_2__2 ),
        .O(\n_0_FSM_onehot_STATE[4]_i_1__6 ));
LUT5 #(
    .INIT(32'h00080800)) 
     \FSM_onehot_STATE[5]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[5]_i_2__2 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .I4(\n_0_FSM_onehot_STATE[8]_i_3__6 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_1__6 ));
LUT6 #(
    .INIT(64'h0000000000010116)) 
     \FSM_onehot_STATE[5]_i_2__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[7] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[2] ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_7__2 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_2__2 ));
(* SOFT_HLUTNM = "soft_lutpair450" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \FSM_onehot_STATE[6]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__2 ),
        .I3(\n_0_FSM_onehot_STATE[8]_i_3__6 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_1__6 ));
(* SOFT_HLUTNM = "soft_lutpair452" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     \FSM_onehot_STATE[7]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__2 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_1__6 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
     \FSM_onehot_STATE[7]_i_2__2 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_7__2 ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[7]_i_2__2 ));
LUT6 #(
    .INIT(64'h888888888888888B)) 
     \FSM_onehot_STATE[8]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[8]_i_3__6 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_3__2 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_1__6 ));
(* SOFT_HLUTNM = "soft_lutpair452" *) 
   LUT5 #(
    .INIT(32'h00F20000)) 
     \FSM_onehot_STATE[8]_i_2__6 
       (.I0(\n_0_FSM_onehot_STATE[5]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I3(\n_0_FSM_onehot_STATE[7]_i_2__2 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_2__6 ));
(* SOFT_HLUTNM = "soft_lutpair458" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \FSM_onehot_STATE[8]_i_3__6 
       (.I0(BIT_COUNT_reg__0[2]),
        .I1(BIT_COUNT_reg__0[0]),
        .I2(BIT_COUNT_reg__0[1]),
        .I3(BIT_COUNT_reg__0[3]),
        .O(\n_0_FSM_onehot_STATE[8]_i_3__6 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_STATE[9]_i_1__6 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_3__2 ),
        .I2(\n_0_FSM_onehot_STATE[9]_i_2__5 ),
        .I3(BIT_COUNT_reg__0[2]),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__2 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_5__2 ),
        .O(\n_0_FSM_onehot_STATE[9]_i_1__6 ));
(* SOFT_HLUTNM = "soft_lutpair465" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_STATE[9]_i_2__5 
       (.I0(BIT_COUNT_reg__0[3]),
        .I1(BIT_COUNT_reg__0[1]),
        .I2(BIT_COUNT_reg__0[0]),
        .O(\n_0_FSM_onehot_STATE[9]_i_2__5 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_STATE_reg[0] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[0]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[0] ),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[10] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[10]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[10] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[1] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[1]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[1] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[2] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[2]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[2] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[3] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[3]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[3] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[4] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[4]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[4] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[5] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[5]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[5] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[6] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[6]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[6] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[7] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[7]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[7] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[8] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[8]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[8] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[9] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[9]_i_1__6 ),
        .Q(\n_0_FSM_onehot_STATE_reg[9] ),
        .R(SRESET));
LUT3 #(
    .INIT(8'hB8)) 
     \GEN_INTERRUPT_LOGIC.AN_COMPLETE_REG1_i_1__2 
       (.I0(MR_AN_COMPLETE),
        .I1(MDC_RISING_OUT),
        .I2(AN_COMPLETE_REG1),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair457" *) 
   LUT4 #(
    .INIT(16'hFFE2)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_ENABLE_i_1__2 
       (.I0(AN_INTERRUPT_ENABLE),
        .I1(AN_INTERRUPT_ENABLE7_out),
        .I2(DATA_OUT[0]),
        .I3(SRESET),
        .O(O2));
LUT6 #(
    .INIT(64'hB0B0F0B00000F000)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_1__2 
       (.I0(DATA_OUT[1]),
        .I1(AN_INTERRUPT_ENABLE7_out),
        .I2(I6),
        .I3(MR_AN_COMPLETE),
        .I4(AN_COMPLETE_REG1),
        .I5(an_interrupt_ch3),
        .O(O3));
LUT6 #(
    .INIT(64'h0000000000000010)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_2__2 
       (.I0(ADDR_WR[2]),
        .I1(ADDR_WR[0]),
        .I2(ADDR_WR[4]),
        .I3(ADDR_WR[1]),
        .I4(ADDR_WR[3]),
        .I5(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__2 ),
        .O(AN_INTERRUPT_ENABLE7_out));
(* SOFT_HLUTNM = "soft_lutpair466" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__2 
       (.I0(WE),
        .I1(MDC_RISING_OUT),
        .O(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__2 ));
GND GND
       (.G(\<const0> ));
LUT2 #(
    .INIT(4'h2)) 
     LAST_DATA_SHIFT_i_1__2
       (.I0(MDC_RISING_REG1_0),
        .I1(n_0_LAST_DATA_SHIFT_i_2__2),
        .O(LAST_DATA_SHIFT0));
LUT6 #(
    .INIT(64'hFFFFFF01FFFFFFFF)) 
     LAST_DATA_SHIFT_i_2__2
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_12__2 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_8__2 ),
        .I5(n_0_LAST_DATA_SHIFT_i_3__2),
        .O(n_0_LAST_DATA_SHIFT_i_2__2));
LUT5 #(
    .INIT(32'h00000001)) 
     LAST_DATA_SHIFT_i_3__2
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(n_0_LAST_DATA_SHIFT_i_3__2));
FDRE #(
    .INIT(1'b0)) 
     LAST_DATA_SHIFT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(LAST_DATA_SHIFT0),
        .Q(LAST_DATA_SHIFT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG1),
        .Q(MDC_RISING_REG1_0),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG1_0),
        .Q(MDC_RISING_REG2),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG2),
        .Q(MDC_RISING_OUT),
        .R(SRESET));
FDSE #(
    .INIT(1'b0)) 
     MDIO_IN_REG_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(MDIO_IN__0),
        .Q(ADDR_RD),
        .S(SRESET));
LUT6 #(
    .INIT(64'hFFFFFFFFFFBF3B3B)) 
     MDIO_OUT_i_1__2
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(n_0_MDIO_OUT_i_2__2),
        .I2(n_0_MDIO_OUT_i_3__2),
        .I3(DATA_OUT[15]),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(n_0_MDIO_OUT_i_4__2),
        .O(n_0_MDIO_OUT_i_1__2));
(* SOFT_HLUTNM = "soft_lutpair447" *) 
   LUT2 #(
    .INIT(4'h1)) 
     MDIO_OUT_i_2__2
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(n_0_MDIO_OUT_i_2__2));
LUT3 #(
    .INIT(8'h40)) 
     MDIO_OUT_i_3__2
       (.I0(\n_0_OPCODE_reg[0] ),
        .I1(\n_0_OPCODE_reg[1] ),
        .I2(n_0_ADDRESS_MATCH_reg),
        .O(n_0_MDIO_OUT_i_3__2));
LUT6 #(
    .INIT(64'hFFEAFEEAFFEAFFEA)) 
     MDIO_OUT_i_4__2
       (.I0(n_0_MDIO_TRI_i_2__2),
        .I1(DATA_OUT[15]),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(n_0_MDIO_OUT_i_3__2),
        .O(n_0_MDIO_OUT_i_4__2));
FDSE MDIO_OUT_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(n_0_MDIO_OUT_i_1__2),
        .Q(mdio_o_ch3),
        .S(SRESET));
LUT6 #(
    .INIT(64'hFFFBFBBAFFFFFFFF)) 
     MDIO_TRI_i_1__2
       (.I0(n_0_MDIO_TRI_i_2__2),
        .I1(n_0_MDIO_OUT_i_3__2),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[8] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(n_0_MDIO_OUT_i_2__2),
        .O(n_0_MDIO_TRI_i_1__2));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FF0)) 
     MDIO_TRI_i_2__2
       (.I0(\n_0_FSM_onehot_STATE[8]_i_3__6 ),
        .I1(n_0_MDIO_OUT_i_3__2),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(n_0_MDIO_TRI_i_3__2),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .I5(n_0_ADDRESS_MATCH_i_3__2),
        .O(n_0_MDIO_TRI_i_2__2));
(* SOFT_HLUTNM = "soft_lutpair464" *) 
   LUT3 #(
    .INIT(8'h01)) 
     MDIO_TRI_i_3__2
       (.I0(\n_0_FSM_onehot_STATE_reg[6] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(n_0_MDIO_TRI_i_3__2));
FDSE MDIO_TRI_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(n_0_MDIO_TRI_i_1__2),
        .Q(mdio_t_ch3),
        .S(SRESET));
(* SOFT_HLUTNM = "soft_lutpair467" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \OPCODE[0]_i_1__2 
       (.I0(DATA_OUT[0]),
        .I1(OPCODE),
        .I2(\n_0_OPCODE_reg[0] ),
        .O(\n_0_OPCODE[0]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair467" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \OPCODE[1]_i_1__2 
       (.I0(DATA_OUT[1]),
        .I1(OPCODE),
        .I2(\n_0_OPCODE_reg[1] ),
        .O(\n_0_OPCODE[1]_i_1__2 ));
LUT5 #(
    .INIT(32'h00002000)) 
     \OPCODE[1]_i_2__2 
       (.I0(n_0_LAST_DATA_SHIFT_i_3__2),
        .I1(\n_0_FSM_onehot_STATE[9]_i_2__5 ),
        .I2(BIT_COUNT_reg__0[2]),
        .I3(MDC_RISING_REG1),
        .I4(\n_0_SHIFT_REG[15]_i_5__2 ),
        .O(OPCODE));
FDRE #(
    .INIT(1'b0)) 
     \OPCODE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_OPCODE[0]_i_1__2 ),
        .Q(\n_0_OPCODE_reg[0] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \OPCODE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_OPCODE[1]_i_1__2 ),
        .Q(\n_0_OPCODE_reg[1] ),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h00E2)) 
     \QSGMII_SPEC.RUNDISP_EN_REG_i_1__2 
       (.I0(I7),
        .I1(RUNDISP_EN_REG),
        .I2(DATA_OUT[0]),
        .I3(SRESET),
        .O(O4));
LUT6 #(
    .INIT(64'h0000000000020000)) 
     \QSGMII_SPEC.RUNDISP_EN_REG_i_2__2 
       (.I0(ADDR_WR[4]),
        .I1(ADDR_WR[0]),
        .I2(ADDR_WR[3]),
        .I3(ADDR_WR[2]),
        .I4(ADDR_WR[1]),
        .I5(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__2 ),
        .O(RUNDISP_EN_REG));
(* SOFT_HLUTNM = "soft_lutpair453" *) 
   LUT5 #(
    .INIT(32'h002F0020)) 
     RD_i_1__2
       (.I0(n_0_MDIO_OUT_i_3__2),
        .I1(n_0_LAST_DATA_SHIFT_i_2__2),
        .I2(MDC_RISING_REG2),
        .I3(SRESET),
        .I4(RD),
        .O(n_0_RD_i_1__2));
FDRE RD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RD_i_1__2),
        .Q(RD),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \SHIFT_REG[0]_i_1__2 
       (.I0(ADDR_RD),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[0]_i_2__2 ),
        .I3(DATA_OUT[3]),
        .I4(\n_0_SHIFT_REG[0]_i_3__2 ),
        .O(\n_0_SHIFT_REG[0]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000005450540)) 
     \SHIFT_REG[0]_i_2__2 
       (.I0(DATA_OUT[1]),
        .I1(I7),
        .I2(DATA_OUT[0]),
        .I3(ADDR_RD),
        .I4(AN_INTERRUPT_ENABLE),
        .I5(DATA_OUT[2]),
        .O(\n_0_SHIFT_REG[0]_i_2__2 ));
LUT5 #(
    .INIT(32'h00003308)) 
     \SHIFT_REG[0]_i_3__2 
       (.I0(I11[0]),
        .I1(DATA_OUT[2]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[0]),
        .O(\n_0_SHIFT_REG[0]_i_3__2 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[10]_i_1__2 
       (.I0(DATA_OUT[9]),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[10]_i_2__2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[10]_i_1__2 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[10]_i_2__2 
       (.I0(DATA_OUT[0]),
        .I1(I11[10]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[10]_i_3__2 ),
        .O(\n_0_SHIFT_REG[10]_i_2__2 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[10]_i_3__2 
       (.I0(I4),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I14),
        .O(\n_0_SHIFT_REG[10]_i_3__2 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[11]_i_1__2 
       (.I0(DATA_OUT[10]),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[11]_i_2__2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[11]_i_1__2 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[11]_i_2__2 
       (.I0(DATA_OUT[0]),
        .I1(I11[11]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[11]_i_3__2 ),
        .O(\n_0_SHIFT_REG[11]_i_2__2 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[11]_i_3__2 
       (.I0(I3),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I13),
        .O(\n_0_SHIFT_REG[11]_i_3__2 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[12]_i_1__2 
       (.I0(DATA_OUT[11]),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[12]_i_2__2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[12]_i_1__2 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[12]_i_2__2 
       (.I0(DATA_OUT[0]),
        .I1(I11[12]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[12]_i_3__2 ),
        .O(\n_0_SHIFT_REG[12]_i_2__2 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[12]_i_3__2 
       (.I0(I2),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(MR_LP_ADV_ABILITY[0]),
        .O(\n_0_SHIFT_REG[12]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair462" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[13]_i_1__2 
       (.I0(DATA_OUT[12]),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[13]_i_2__2 ),
        .O(\n_0_SHIFT_REG[13]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000000040000)) 
     \SHIFT_REG[13]_i_2__2 
       (.I0(DATA_OUT[0]),
        .I1(I11[13]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[13]_i_2__2 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[14]_i_1__2 
       (.I0(\n_0_SHIFT_REG_reg[13] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[14]_i_2__2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[14]_i_1__2 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[14]_i_2__2 
       (.I0(DATA_OUT[0]),
        .I1(I11[14]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[14]_i_3__2 ),
        .O(\n_0_SHIFT_REG[14]_i_2__2 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[14]_i_3__2 
       (.I0(I1),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I12),
        .O(\n_0_SHIFT_REG[14]_i_3__2 ));
LUT2 #(
    .INIT(4'hE)) 
     \SHIFT_REG[15]_i_1__2 
       (.I0(MDC_RISING_REG1),
        .I1(LAST_DATA_SHIFT),
        .O(SHIFT_REG0));
(* SOFT_HLUTNM = "soft_lutpair455" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[15]_i_2__2 
       (.I0(DATA_OUT[14]),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[15]_i_4__2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[15]_i_2__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \SHIFT_REG[15]_i_3__2 
       (.I0(\n_0_SHIFT_REG[15]_i_5__2 ),
        .I1(BIT_COUNT_reg__0[2]),
        .I2(BIT_COUNT_reg__0[0]),
        .I3(BIT_COUNT_reg__0[1]),
        .I4(BIT_COUNT_reg__0[3]),
        .I5(n_0_LAST_DATA_SHIFT_i_3__2),
        .O(\n_0_SHIFT_REG[15]_i_3__2 ));
LUT6 #(
    .INIT(64'h8810FFFF88100000)) 
     \SHIFT_REG[15]_i_4__2 
       (.I0(DATA_OUT[1]),
        .I1(ADDR_RD),
        .I2(I11[15]),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[15]_i_6__2 ),
        .O(\n_0_SHIFT_REG[15]_i_4__2 ));
(* SOFT_HLUTNM = "soft_lutpair446" *) 
   LUT5 #(
    .INIT(32'hFFFFFFF7)) 
     \SHIFT_REG[15]_i_5__2 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_8__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_12__2 ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_SHIFT_REG[15]_i_5__2 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[15]_i_6__2 
       (.I0(SOFT_RESET_2),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(MR_LP_ADV_ABILITY[1]),
        .O(\n_0_SHIFT_REG[15]_i_6__2 ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \SHIFT_REG[1]_i_1__2 
       (.I0(DATA_OUT[0]),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[1]_i_2__2 ),
        .I3(DATA_OUT[3]),
        .I4(\n_0_SHIFT_REG[1]_i_3__2 ),
        .O(\n_0_SHIFT_REG[1]_i_1__2 ));
LUT5 #(
    .INIT(32'h00000010)) 
     \SHIFT_REG[1]_i_2__2 
       (.I0(DATA_OUT[1]),
        .I1(ADDR_RD),
        .I2(an_interrupt_ch3),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[2]),
        .O(\n_0_SHIFT_REG[1]_i_2__2 ));
LUT5 #(
    .INIT(32'h00000200)) 
     \SHIFT_REG[1]_i_3__2 
       (.I0(DATA_OUT[2]),
        .I1(DATA_OUT[1]),
        .I2(ADDR_RD),
        .I3(I11[1]),
        .I4(DATA_OUT[0]),
        .O(\n_0_SHIFT_REG[1]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair461" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[2]_i_1__2 
       (.I0(DATA_OUT[1]),
        .I1(\n_0_SHIFT_REG[4]_i_2__2 ),
        .I2(\n_0_SHIFT_REG[2]_i_2__2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[2]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000003033000088)) 
     \SHIFT_REG[2]_i_2__2 
       (.I0(I11[2]),
        .I1(DATA_OUT[2]),
        .I2(MR_LINK_STATUS),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[1]),
        .I5(ADDR_RD),
        .O(\n_0_SHIFT_REG[2]_i_2__2 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[3]_i_1__2 
       (.I0(DATA_OUT[2]),
        .I1(\n_0_SHIFT_REG[4]_i_2__2 ),
        .I2(\n_0_SHIFT_REG[3]_i_2__2 ),
        .O(\n_0_SHIFT_REG[3]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000001100010)) 
     \SHIFT_REG[3]_i_2__2 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[2]),
        .I4(I11[3]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[3]_i_2__2 ));
(* SOFT_HLUTNM = "soft_lutpair461" *) 
   LUT3 #(
    .INIT(8'hA4)) 
     \SHIFT_REG[4]_i_1__2 
       (.I0(\n_0_SHIFT_REG[4]_i_2__2 ),
        .I1(\n_0_SHIFT_REG[4]_i_3__2 ),
        .I2(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[4]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \SHIFT_REG[4]_i_2__2 
       (.I0(\n_0_SHIFT_REG[15]_i_5__2 ),
        .I1(n_0_LAST_DATA_SHIFT_i_3__2),
        .I2(BIT_COUNT_reg__0[3]),
        .I3(BIT_COUNT_reg__0[1]),
        .I4(BIT_COUNT_reg__0[0]),
        .I5(BIT_COUNT_reg__0[2]),
        .O(\n_0_SHIFT_REG[4]_i_2__2 ));
LUT6 #(
    .INIT(64'h0000003000000088)) 
     \SHIFT_REG[4]_i_3__2 
       (.I0(I11[4]),
        .I1(DATA_OUT[2]),
        .I2(status_vector_ch3),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[0]),
        .I5(ADDR_RD),
        .O(\n_0_SHIFT_REG[4]_i_3__2 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[5]_i_1__2 
       (.I0(\n_0_SHIFT_REG_reg[4] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[5]_i_2__2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[5]_i_1__2 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[5]_i_2__2 
       (.I0(DATA_OUT[0]),
        .I1(I11[5]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[5]_i_3__2 ),
        .O(\n_0_SHIFT_REG[5]_i_2__2 ));
LUT5 #(
    .INIT(32'h000E0002)) 
     \SHIFT_REG[5]_i_3__2 
       (.I0(I8),
        .I1(ADDR_RD),
        .I2(DATA_OUT[0]),
        .I3(DATA_OUT[1]),
        .I4(MR_AN_COMPLETE),
        .O(\n_0_SHIFT_REG[5]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair463" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[6]_i_1__2 
       (.I0(DATA_OUT[5]),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[6]_i_2__2 ),
        .O(\n_0_SHIFT_REG[6]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000001110101)) 
     \SHIFT_REG[6]_i_2__2 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[2]),
        .I3(ADDR_RD),
        .I4(I11[6]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[6]_i_2__2 ));
(* SOFT_HLUTNM = "soft_lutpair463" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[7]_i_1__2 
       (.I0(\n_0_SHIFT_REG_reg[6] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[7]_i_2__2 ),
        .O(\n_0_SHIFT_REG[7]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000001100010)) 
     \SHIFT_REG[7]_i_2__2 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[2]),
        .I4(I11[7]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[7]_i_2__2 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[8]_i_1__2 
       (.I0(\n_0_SHIFT_REG_reg[7] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[8]_i_2__2 ),
        .O(\n_0_SHIFT_REG[8]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000001110101)) 
     \SHIFT_REG[8]_i_2__2 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[2]),
        .I3(ADDR_RD),
        .I4(I11[8]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[8]_i_2__2 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[9]_i_1__2 
       (.I0(DATA_OUT[8]),
        .I1(\n_0_SHIFT_REG[15]_i_3__2 ),
        .I2(\n_0_SHIFT_REG[9]_i_2__2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[9]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000B00000008)) 
     \SHIFT_REG[9]_i_2__2 
       (.I0(I11[9]),
        .I1(DATA_OUT[2]),
        .I2(DATA_OUT[1]),
        .I3(DATA_OUT[0]),
        .I4(ADDR_RD),
        .I5(RESTART_AN_REG),
        .O(\n_0_SHIFT_REG[9]_i_2__2 ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[0] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[0]_i_1__2 ),
        .Q(DATA_OUT[0]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[10] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[10]_i_1__2 ),
        .Q(DATA_OUT[10]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[11] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[11]_i_1__2 ),
        .Q(DATA_OUT[11]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[12] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[12]_i_1__2 ),
        .Q(DATA_OUT[12]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[13] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[13]_i_1__2 ),
        .Q(\n_0_SHIFT_REG_reg[13] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[14] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[14]_i_1__2 ),
        .Q(DATA_OUT[14]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[15] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[15]_i_2__2 ),
        .Q(DATA_OUT[15]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[1] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[1]_i_1__2 ),
        .Q(DATA_OUT[1]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[2] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[2]_i_1__2 ),
        .Q(DATA_OUT[2]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[3] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[3]_i_1__2 ),
        .Q(DATA_OUT[3]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[4] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[4]_i_1__2 ),
        .Q(\n_0_SHIFT_REG_reg[4] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[5] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[5]_i_1__2 ),
        .Q(DATA_OUT[5]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[6] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[6]_i_1__2 ),
        .Q(\n_0_SHIFT_REG_reg[6] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[7] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[7]_i_1__2 ),
        .Q(\n_0_SHIFT_REG_reg[7] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[8] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[8]_i_1__2 ),
        .Q(DATA_OUT[8]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[9] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[9]_i_1__2 ),
        .Q(DATA_OUT[9]),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'h0800FFFF08000000)) 
     WE_i_1__2
       (.I0(n_0_WE_i_2__2),
        .I1(\n_0_OPCODE_reg[0] ),
        .I2(\n_0_OPCODE_reg[1] ),
        .I3(n_0_ADDRESS_MATCH_reg),
        .I4(n_0_WE_i_3__2),
        .I5(WE),
        .O(n_0_WE_i_1__2));
(* SOFT_HLUTNM = "soft_lutpair457" *) 
   LUT2 #(
    .INIT(4'h1)) 
     WE_i_2__2
       (.I0(SRESET),
        .I1(n_0_LAST_DATA_SHIFT_i_2__2),
        .O(n_0_WE_i_2__2));
(* SOFT_HLUTNM = "soft_lutpair453" *) 
   LUT2 #(
    .INIT(4'hE)) 
     WE_i_3__2
       (.I0(MDC_RISING_REG2),
        .I1(SRESET),
        .O(n_0_WE_i_3__2));
FDRE WE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_WE_i_1__2),
        .Q(WE),
        .R(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MDIO_INTERFACE" *) 
module quadsgmiiMDIO_INTERFACE_29
   (mdio_o_ch2,
    mdio_t_ch2,
    LOOPBACK_REG,
    O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    SRESET,
    MDC_RISING_REG1,
    userclk2,
    MDIO_IN__0,
    I11,
    SOFT_RESET_1,
    MR_LP_ADV_ABILITY,
    I1,
    I12,
    I2,
    I3,
    I13,
    I4,
    I14,
    RESTART_AN_REG,
    status_vector_ch2,
    MR_LINK_STATUS,
    phyad_ch2,
    I5,
    AN_INTERRUPT_ENABLE,
    I6,
    MR_AN_COMPLETE,
    AN_COMPLETE_REG1,
    an_interrupt_ch2,
    I7,
    CLEAR_STATUS_REG,
    I8);
  output mdio_o_ch2;
  output mdio_t_ch2;
  output LOOPBACK_REG;
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  input SRESET;
  input MDC_RISING_REG1;
  input userclk2;
  input MDIO_IN__0;
  input [15:0]I11;
  input SOFT_RESET_1;
  input [1:0]MR_LP_ADV_ABILITY;
  input I1;
  input I12;
  input I2;
  input I3;
  input I13;
  input I4;
  input I14;
  input RESTART_AN_REG;
  input [0:0]status_vector_ch2;
  input MR_LINK_STATUS;
  input [4:0]phyad_ch2;
  input I5;
  input AN_INTERRUPT_ENABLE;
  input I6;
  input MR_AN_COMPLETE;
  input AN_COMPLETE_REG1;
  input an_interrupt_ch2;
  input I7;
  input CLEAR_STATUS_REG;
  input I8;

  wire \<const0> ;
  wire \<const1> ;
  wire ADDRESS_MATCH_COMB;
  wire [0:0]ADDR_RD;
  wire [4:0]ADDR_WR;
  wire AN_COMPLETE_REG1;
  wire AN_INTERRUPT_ENABLE;
  wire AN_INTERRUPT_ENABLE7_out;
  wire [3:0]BIT_COUNT_reg__0;
  wire CLEAR_STATUS_REG;
  wire CLEAR_STATUS_REG_COMB;
  wire [15:0]DATA_OUT;
  wire I1;
  wire [15:0]I11;
  wire I12;
  wire I13;
  wire I14;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire LAST_DATA_SHIFT;
  wire LAST_DATA_SHIFT0;
  wire LOOPBACK_REG;
  wire MDC_RISING_OUT;
  wire MDC_RISING_REG1;
  wire MDC_RISING_REG1_0;
  wire MDC_RISING_REG2;
  wire MDIO_IN__0;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire OPCODE;
  wire RD;
  wire RESTART_AN_REG;
  wire RUNDISP_EN_REG;
  wire SHIFT_REG0;
  wire SOFT_RESET_1;
  wire SRESET;
  wire WE;
  wire an_interrupt_ch2;
  wire mdio_o_ch2;
  wire mdio_t_ch2;
  wire n_0_ADDRESS_MATCH_i_1__1;
  wire n_0_ADDRESS_MATCH_i_2__1;
  wire n_0_ADDRESS_MATCH_i_3__1;
  wire n_0_ADDRESS_MATCH_i_4__1;
  wire n_0_ADDRESS_MATCH_i_6__1;
  wire n_0_ADDRESS_MATCH_i_7__1;
  wire n_0_ADDRESS_MATCH_reg;
  wire \n_0_ADDR_WR[4]_i_1__1 ;
  wire \n_0_BIT_COUNT[3]_i_1__1 ;
  wire \n_0_BIT_COUNT[3]_i_3__1 ;
  wire \n_0_BIT_COUNT[3]_i_4__1 ;
  wire \n_0_BIT_COUNT[3]_i_5__1 ;
  wire \n_0_BIT_COUNT[3]_i_6__1 ;
  wire \n_0_BIT_COUNT[3]_i_7__1 ;
  wire \n_0_BIT_COUNT[3]_i_8__1 ;
  wire \n_0_BIT_COUNT[3]_i_9__1 ;
  wire \n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ;
  wire \n_0_FSM_onehot_STATE[0]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[10]_i_10__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_11__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_12__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_13__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[10]_i_2__4 ;
  wire \n_0_FSM_onehot_STATE[10]_i_3__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_4__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_5__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_6__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_7__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_8__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_9__1 ;
  wire \n_0_FSM_onehot_STATE[1]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[2]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[3]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[4]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[5]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[5]_i_2__1 ;
  wire \n_0_FSM_onehot_STATE[6]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[7]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[7]_i_2__1 ;
  wire \n_0_FSM_onehot_STATE[8]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[8]_i_2__5 ;
  wire \n_0_FSM_onehot_STATE[8]_i_3__4 ;
  wire \n_0_FSM_onehot_STATE[9]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[9]_i_2__3 ;
  wire \n_0_FSM_onehot_STATE_reg[0] ;
  wire \n_0_FSM_onehot_STATE_reg[10] ;
  wire \n_0_FSM_onehot_STATE_reg[1] ;
  wire \n_0_FSM_onehot_STATE_reg[2] ;
  wire \n_0_FSM_onehot_STATE_reg[3] ;
  wire \n_0_FSM_onehot_STATE_reg[4] ;
  wire \n_0_FSM_onehot_STATE_reg[5] ;
  wire \n_0_FSM_onehot_STATE_reg[6] ;
  wire \n_0_FSM_onehot_STATE_reg[7] ;
  wire \n_0_FSM_onehot_STATE_reg[8] ;
  wire \n_0_FSM_onehot_STATE_reg[9] ;
  wire \n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__1 ;
  wire n_0_LAST_DATA_SHIFT_i_2__1;
  wire n_0_LAST_DATA_SHIFT_i_3__1;
  wire n_0_MDIO_OUT_i_1__1;
  wire n_0_MDIO_OUT_i_2__1;
  wire n_0_MDIO_OUT_i_3__1;
  wire n_0_MDIO_OUT_i_4__1;
  wire n_0_MDIO_TRI_i_1__1;
  wire n_0_MDIO_TRI_i_2__1;
  wire n_0_MDIO_TRI_i_3__1;
  wire \n_0_OPCODE[0]_i_1__1 ;
  wire \n_0_OPCODE[1]_i_1__1 ;
  wire \n_0_OPCODE_reg[0] ;
  wire \n_0_OPCODE_reg[1] ;
  wire n_0_RD_i_1__1;
  wire \n_0_SHIFT_REG[0]_i_1__1 ;
  wire \n_0_SHIFT_REG[0]_i_2__1 ;
  wire \n_0_SHIFT_REG[0]_i_3__1 ;
  wire \n_0_SHIFT_REG[10]_i_1__1 ;
  wire \n_0_SHIFT_REG[10]_i_2__1 ;
  wire \n_0_SHIFT_REG[10]_i_3__1 ;
  wire \n_0_SHIFT_REG[11]_i_1__1 ;
  wire \n_0_SHIFT_REG[11]_i_2__1 ;
  wire \n_0_SHIFT_REG[11]_i_3__1 ;
  wire \n_0_SHIFT_REG[12]_i_1__1 ;
  wire \n_0_SHIFT_REG[12]_i_2__1 ;
  wire \n_0_SHIFT_REG[12]_i_3__1 ;
  wire \n_0_SHIFT_REG[13]_i_1__1 ;
  wire \n_0_SHIFT_REG[13]_i_2__1 ;
  wire \n_0_SHIFT_REG[14]_i_1__1 ;
  wire \n_0_SHIFT_REG[14]_i_2__1 ;
  wire \n_0_SHIFT_REG[14]_i_3__1 ;
  wire \n_0_SHIFT_REG[15]_i_2__1 ;
  wire \n_0_SHIFT_REG[15]_i_3__1 ;
  wire \n_0_SHIFT_REG[15]_i_4__1 ;
  wire \n_0_SHIFT_REG[15]_i_5__1 ;
  wire \n_0_SHIFT_REG[15]_i_6__1 ;
  wire \n_0_SHIFT_REG[1]_i_1__1 ;
  wire \n_0_SHIFT_REG[1]_i_2__1 ;
  wire \n_0_SHIFT_REG[1]_i_3__1 ;
  wire \n_0_SHIFT_REG[2]_i_1__1 ;
  wire \n_0_SHIFT_REG[2]_i_2__1 ;
  wire \n_0_SHIFT_REG[3]_i_1__1 ;
  wire \n_0_SHIFT_REG[3]_i_2__1 ;
  wire \n_0_SHIFT_REG[4]_i_1__1 ;
  wire \n_0_SHIFT_REG[4]_i_2__1 ;
  wire \n_0_SHIFT_REG[4]_i_3__1 ;
  wire \n_0_SHIFT_REG[5]_i_1__1 ;
  wire \n_0_SHIFT_REG[5]_i_2__1 ;
  wire \n_0_SHIFT_REG[5]_i_3__1 ;
  wire \n_0_SHIFT_REG[6]_i_1__1 ;
  wire \n_0_SHIFT_REG[6]_i_2__1 ;
  wire \n_0_SHIFT_REG[7]_i_1__1 ;
  wire \n_0_SHIFT_REG[7]_i_2__1 ;
  wire \n_0_SHIFT_REG[8]_i_1__1 ;
  wire \n_0_SHIFT_REG[8]_i_2__1 ;
  wire \n_0_SHIFT_REG[9]_i_1__1 ;
  wire \n_0_SHIFT_REG[9]_i_2__1 ;
  wire \n_0_SHIFT_REG_reg[13] ;
  wire \n_0_SHIFT_REG_reg[4] ;
  wire \n_0_SHIFT_REG_reg[6] ;
  wire \n_0_SHIFT_REG_reg[7] ;
  wire n_0_WE_i_1__1;
  wire n_0_WE_i_2__1;
  wire n_0_WE_i_3__1;
  wire [3:0]p_0_in;
  wire [4:0]phyad_ch2;
  wire [0:0]status_vector_ch2;
  wire userclk2;

LUT6 #(
    .INIT(64'h00000000AAABAAA8)) 
     ADDRESS_MATCH_i_1__1
       (.I0(n_0_ADDRESS_MATCH_reg),
        .I1(n_0_ADDRESS_MATCH_i_2__1),
        .I2(n_0_ADDRESS_MATCH_i_3__1),
        .I3(n_0_ADDRESS_MATCH_i_4__1),
        .I4(ADDRESS_MATCH_COMB),
        .I5(SRESET),
        .O(n_0_ADDRESS_MATCH_i_1__1));
(* SOFT_HLUTNM = "soft_lutpair318" *) 
   LUT5 #(
    .INIT(32'hFEFFFFFF)) 
     ADDRESS_MATCH_i_2__1
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(MDC_RISING_REG1),
        .O(n_0_ADDRESS_MATCH_i_2__1));
(* SOFT_HLUTNM = "soft_lutpair326" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     ADDRESS_MATCH_i_3__1
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[0] ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(n_0_ADDRESS_MATCH_i_3__1));
(* SOFT_HLUTNM = "soft_lutpair316" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     ADDRESS_MATCH_i_4__1
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .O(n_0_ADDRESS_MATCH_i_4__1));
LUT6 #(
    .INIT(64'hFFFFFFFF41000041)) 
     ADDRESS_MATCH_i_5__1
       (.I0(n_0_ADDRESS_MATCH_i_6__1),
        .I1(phyad_ch2[1]),
        .I2(DATA_OUT[0]),
        .I3(phyad_ch2[3]),
        .I4(DATA_OUT[2]),
        .I5(n_0_ADDRESS_MATCH_i_7__1),
        .O(ADDRESS_MATCH_COMB));
LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
     ADDRESS_MATCH_i_6__1
       (.I0(phyad_ch2[4]),
        .I1(DATA_OUT[3]),
        .I2(ADDR_RD),
        .I3(phyad_ch2[0]),
        .I4(DATA_OUT[1]),
        .I5(phyad_ch2[2]),
        .O(n_0_ADDRESS_MATCH_i_6__1));
LUT5 #(
    .INIT(32'h00000001)) 
     ADDRESS_MATCH_i_7__1
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[3]),
        .I4(DATA_OUT[2]),
        .O(n_0_ADDRESS_MATCH_i_7__1));
FDRE #(
    .INIT(1'b0)) 
     ADDRESS_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ADDRESS_MATCH_i_1__1),
        .Q(n_0_ADDRESS_MATCH_reg),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h2)) 
     \ADDR_WR[4]_i_1__1 
       (.I0(MDC_RISING_REG1),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .O(\n_0_ADDR_WR[4]_i_1__1 ));
FDRE \ADDR_WR_reg[0] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__1 ),
        .D(ADDR_RD),
        .Q(ADDR_WR[0]),
        .R(SRESET));
FDRE \ADDR_WR_reg[1] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__1 ),
        .D(DATA_OUT[0]),
        .Q(ADDR_WR[1]),
        .R(SRESET));
FDRE \ADDR_WR_reg[2] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__1 ),
        .D(DATA_OUT[1]),
        .Q(ADDR_WR[2]),
        .R(SRESET));
FDRE \ADDR_WR_reg[3] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__1 ),
        .D(DATA_OUT[2]),
        .Q(ADDR_WR[3]),
        .R(SRESET));
FDRE \ADDR_WR_reg[4] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__1 ),
        .D(DATA_OUT[3]),
        .Q(ADDR_WR[4]),
        .R(SRESET));
LUT3 #(
    .INIT(8'hBA)) 
     \BIT_COUNT[0]_i_1__1 
       (.I0(\n_0_BIT_COUNT[3]_i_4__1 ),
        .I1(BIT_COUNT_reg__0[0]),
        .I2(\n_0_BIT_COUNT[3]_i_3__1 ),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair335" *) 
   LUT3 #(
    .INIT(8'h82)) 
     \BIT_COUNT[1]_i_1__1 
       (.I0(\n_0_BIT_COUNT[3]_i_3__1 ),
        .I1(BIT_COUNT_reg__0[1]),
        .I2(BIT_COUNT_reg__0[0]),
        .O(p_0_in[1]));
(* SOFT_HLUTNM = "soft_lutpair328" *) 
   LUT4 #(
    .INIT(16'hE1FF)) 
     \BIT_COUNT[2]_i_1__1 
       (.I0(BIT_COUNT_reg__0[0]),
        .I1(BIT_COUNT_reg__0[1]),
        .I2(BIT_COUNT_reg__0[2]),
        .I3(\n_0_BIT_COUNT[3]_i_3__1 ),
        .O(p_0_in[2]));
LUT6 #(
    .INIT(64'hAAAAAAA8AAAAAAAA)) 
     \BIT_COUNT[3]_i_1__1 
       (.I0(MDC_RISING_REG1),
        .I1(BIT_COUNT_reg__0[2]),
        .I2(BIT_COUNT_reg__0[0]),
        .I3(BIT_COUNT_reg__0[1]),
        .I4(BIT_COUNT_reg__0[3]),
        .I5(\n_0_BIT_COUNT[3]_i_3__1 ),
        .O(\n_0_BIT_COUNT[3]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFAAA90000)) 
     \BIT_COUNT[3]_i_2__1 
       (.I0(BIT_COUNT_reg__0[3]),
        .I1(BIT_COUNT_reg__0[0]),
        .I2(BIT_COUNT_reg__0[1]),
        .I3(BIT_COUNT_reg__0[2]),
        .I4(\n_0_BIT_COUNT[3]_i_3__1 ),
        .I5(\n_0_BIT_COUNT[3]_i_4__1 ),
        .O(p_0_in[3]));
LUT5 #(
    .INIT(32'hFFF7F33F)) 
     \BIT_COUNT[3]_i_3__1 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_3__4 ),
        .I1(\n_0_BIT_COUNT[3]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_BIT_COUNT[3]_i_3__1 ));
LUT6 #(
    .INIT(64'h0008000808800080)) 
     \BIT_COUNT[3]_i_4__1 
       (.I0(\n_0_BIT_COUNT[3]_i_6__1 ),
        .I1(\n_0_BIT_COUNT[3]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE[8]_i_3__4 ),
        .I5(\n_0_FSM_onehot_STATE_reg[3] ),
        .O(\n_0_BIT_COUNT[3]_i_4__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \BIT_COUNT[3]_i_5__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_BIT_COUNT[3]_i_7__1 ),
        .I5(\n_0_BIT_COUNT[3]_i_8__1 ),
        .O(\n_0_BIT_COUNT[3]_i_5__1 ));
LUT6 #(
    .INIT(64'h0000000000000002)) 
     \BIT_COUNT[3]_i_6__1 
       (.I0(\n_0_BIT_COUNT[3]_i_9__1 ),
        .I1(n_0_ADDRESS_MATCH_i_4__1),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_BIT_COUNT[3]_i_6__1 ));
LUT2 #(
    .INIT(4'hE)) 
     \BIT_COUNT[3]_i_7__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[0] ),
        .I1(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_BIT_COUNT[3]_i_7__1 ));
(* SOFT_HLUTNM = "soft_lutpair334" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \BIT_COUNT[3]_i_8__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_BIT_COUNT[3]_i_8__1 ));
(* SOFT_HLUTNM = "soft_lutpair326" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     \BIT_COUNT[3]_i_9__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_BIT_COUNT[3]_i_9__1 ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[0] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__1 ),
        .D(p_0_in[0]),
        .Q(BIT_COUNT_reg__0[0]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[1] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__1 ),
        .D(p_0_in[1]),
        .Q(BIT_COUNT_reg__0[1]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[2] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__1 ),
        .D(p_0_in[2]),
        .Q(BIT_COUNT_reg__0[2]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[3] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__1 ),
        .D(p_0_in[3]),
        .Q(BIT_COUNT_reg__0[3]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair336" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     CLEAR_STATUS_REG_i_1__1
       (.I0(CLEAR_STATUS_REG_COMB),
        .I1(MDC_RISING_OUT),
        .I2(CLEAR_STATUS_REG),
        .O(O8));
LUT6 #(
    .INIT(64'h0000000400000000)) 
     CLEAR_STATUS_REG_i_2__1
       (.I0(ADDR_WR[3]),
        .I1(RD),
        .I2(ADDR_WR[2]),
        .I3(ADDR_WR[1]),
        .I4(ADDR_WR[4]),
        .I5(ADDR_WR[0]),
        .O(CLEAR_STATUS_REG_COMB));
(* SOFT_HLUTNM = "soft_lutpair332" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.AN_ENABLE_REG_i_1__1 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ),
        .I1(DATA_OUT[12]),
        .O(O12));
(* SOFT_HLUTNM = "soft_lutpair321" *) 
   LUT5 #(
    .INIT(32'h23332000)) 
     \CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_i_1__1 
       (.I0(DATA_OUT[8]),
        .I1(SRESET),
        .I2(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ),
        .I3(MDC_RISING_OUT),
        .I4(I5),
        .O(O1));
(* SOFT_HLUTNM = "soft_lutpair321" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_1__1 
       (.I0(MDC_RISING_OUT),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ),
        .O(LOOPBACK_REG));
(* SOFT_HLUTNM = "soft_lutpair330" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_2__1 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ),
        .I1(DATA_OUT[10]),
        .O(O11));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 
       (.I0(ADDR_WR[3]),
        .I1(WE),
        .I2(ADDR_WR[0]),
        .I3(ADDR_WR[4]),
        .I4(ADDR_WR[2]),
        .I5(ADDR_WR[1]),
        .O(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair325" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.LOOPBACK_REG_i_1__1 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ),
        .I1(DATA_OUT[14]),
        .O(O13));
(* SOFT_HLUTNM = "soft_lutpair329" *) 
   LUT4 #(
    .INIT(16'hFF80)) 
     \CONFIG_REG_WITH_AN.POWERDOWN_REG_i_1__1 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ),
        .I1(DATA_OUT[11]),
        .I2(MDC_RISING_OUT),
        .I3(I3),
        .O(O6));
(* SOFT_HLUTNM = "soft_lutpair330" *) 
   LUT4 #(
    .INIT(16'hFF80)) 
     \CONFIG_REG_WITH_AN.RESET_REG_i_1__1 
       (.I0(DATA_OUT[15]),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ),
        .I2(MDC_RISING_OUT),
        .I3(SOFT_RESET_1),
        .O(O7));
LUT5 #(
    .INIT(32'h080F0800)) 
     \CONFIG_REG_WITH_AN.RESTART_AN_REG_i_1__1 
       (.I0(DATA_OUT[9]),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ),
        .I2(SRESET),
        .I3(MDC_RISING_OUT),
        .I4(RESTART_AN_REG),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair329" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_i_1__1 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__1 ),
        .I1(DATA_OUT[5]),
        .O(O10));
LUT6 #(
    .INIT(64'h0020FFFF0020FF00)) 
     \FSM_onehot_STATE[0]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[7]_i_2__1 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .I2(ADDR_RD),
        .I3(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_3__1 ),
        .O(\n_0_FSM_onehot_STATE[0]_i_1__5 ));
LUT6 #(
    .INIT(64'h0000000333373337)) 
     \FSM_onehot_STATE[10]_i_10__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_10__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_STATE[10]_i_11__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[2] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[4] ),
        .I3(\n_0_FSM_onehot_STATE_reg[0] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_11__1 ));
(* SOFT_HLUTNM = "soft_lutpair318" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_STATE[10]_i_12__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_12__1 ));
(* SOFT_HLUTNM = "soft_lutpair315" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[10]_i_13__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[6] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_13__1 ));
(* SOFT_HLUTNM = "soft_lutpair324" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \FSM_onehot_STATE[10]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_3__1 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_1__4 ));
LUT6 #(
    .INIT(64'h0000000100010110)) 
     \FSM_onehot_STATE[10]_i_2__4 
       (.I0(n_0_ADDRESS_MATCH_i_4__1),
        .I1(n_0_ADDRESS_MATCH_i_3__1),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[5] ),
        .I5(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_2__4 ));
LUT5 #(
    .INIT(32'h02000000)) 
     \FSM_onehot_STATE[10]_i_3__1 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_6__1 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_7__1 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_8__1 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_9__1 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_10__1 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_3__1 ));
LUT6 #(
    .INIT(64'h0000000100010114)) 
     \FSM_onehot_STATE[10]_i_4__1 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_11__1 ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_4__1 ));
(* SOFT_HLUTNM = "soft_lutpair317" *) 
   LUT5 #(
    .INIT(32'hFFFFFFE9)) 
     \FSM_onehot_STATE[10]_i_5__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .I3(n_0_ADDRESS_MATCH_i_3__1),
        .I4(\n_0_FSM_onehot_STATE[10]_i_12__1 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_5__1 ));
LUT6 #(
    .INIT(64'h0000001010101000)) 
     \FSM_onehot_STATE[10]_i_6__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_13__1 ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[9] ),
        .I5(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_6__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_STATE[10]_i_7__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[4] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[0] ),
        .I5(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_7__1 ));
(* SOFT_HLUTNM = "soft_lutpair315" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_STATE[10]_i_8__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_8__1 ));
LUT5 #(
    .INIT(32'h00000177)) 
     \FSM_onehot_STATE[10]_i_9__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[7] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(n_0_ADDRESS_MATCH_i_3__1),
        .O(\n_0_FSM_onehot_STATE[10]_i_9__1 ));
(* SOFT_HLUTNM = "soft_lutpair319" *) 
   LUT4 #(
    .INIT(16'h0040)) 
     \FSM_onehot_STATE[1]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__1 ),
        .I3(ADDR_RD),
        .O(\n_0_FSM_onehot_STATE[1]_i_1__5 ));
(* SOFT_HLUTNM = "soft_lutpair319" *) 
   LUT5 #(
    .INIT(32'h40000000)) 
     \FSM_onehot_STATE[2]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__1 ),
        .I3(ADDR_RD),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .O(\n_0_FSM_onehot_STATE[2]_i_1__5 ));
(* SOFT_HLUTNM = "soft_lutpair324" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     \FSM_onehot_STATE[3]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__1 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .O(\n_0_FSM_onehot_STATE[3]_i_1__5 ));
(* SOFT_HLUTNM = "soft_lutpair320" *) 
   LUT5 #(
    .INIT(32'h00084040)) 
     \FSM_onehot_STATE[4]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .I3(\n_0_FSM_onehot_STATE[8]_i_3__4 ),
        .I4(\n_0_FSM_onehot_STATE[7]_i_2__1 ),
        .O(\n_0_FSM_onehot_STATE[4]_i_1__5 ));
LUT5 #(
    .INIT(32'h00080800)) 
     \FSM_onehot_STATE[5]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[5]_i_2__1 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .I4(\n_0_FSM_onehot_STATE[8]_i_3__4 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_1__4 ));
LUT6 #(
    .INIT(64'h0000000000010116)) 
     \FSM_onehot_STATE[5]_i_2__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[7] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[2] ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_7__1 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_2__1 ));
(* SOFT_HLUTNM = "soft_lutpair320" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \FSM_onehot_STATE[6]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__1 ),
        .I3(\n_0_FSM_onehot_STATE[8]_i_3__4 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_1__5 ));
(* SOFT_HLUTNM = "soft_lutpair322" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     \FSM_onehot_STATE[7]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__1 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_1__5 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
     \FSM_onehot_STATE[7]_i_2__1 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_7__1 ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[7]_i_2__1 ));
LUT6 #(
    .INIT(64'h888888888888888B)) 
     \FSM_onehot_STATE[8]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_2__5 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[8]_i_3__4 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_3__1 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_1__4 ));
(* SOFT_HLUTNM = "soft_lutpair322" *) 
   LUT5 #(
    .INIT(32'h00F20000)) 
     \FSM_onehot_STATE[8]_i_2__5 
       (.I0(\n_0_FSM_onehot_STATE[5]_i_2__1 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I3(\n_0_FSM_onehot_STATE[7]_i_2__1 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_2__5 ));
(* SOFT_HLUTNM = "soft_lutpair328" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \FSM_onehot_STATE[8]_i_3__4 
       (.I0(BIT_COUNT_reg__0[2]),
        .I1(BIT_COUNT_reg__0[0]),
        .I2(BIT_COUNT_reg__0[1]),
        .I3(BIT_COUNT_reg__0[3]),
        .O(\n_0_FSM_onehot_STATE[8]_i_3__4 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_STATE[9]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_3__1 ),
        .I2(\n_0_FSM_onehot_STATE[9]_i_2__3 ),
        .I3(BIT_COUNT_reg__0[2]),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__1 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_5__1 ),
        .O(\n_0_FSM_onehot_STATE[9]_i_1__5 ));
(* SOFT_HLUTNM = "soft_lutpair335" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_STATE[9]_i_2__3 
       (.I0(BIT_COUNT_reg__0[3]),
        .I1(BIT_COUNT_reg__0[1]),
        .I2(BIT_COUNT_reg__0[0]),
        .O(\n_0_FSM_onehot_STATE[9]_i_2__3 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_STATE_reg[0] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[0]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[0] ),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[10] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[10]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[10] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[1] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[1]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[1] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[2] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[2]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[2] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[3] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[3]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[3] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[4] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[4]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[4] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[5] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[5]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[5] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[6] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[6]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[6] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[7] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[7]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[7] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[8] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[8]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[8] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[9] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[9]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[9] ),
        .R(SRESET));
LUT3 #(
    .INIT(8'hB8)) 
     \GEN_INTERRUPT_LOGIC.AN_COMPLETE_REG1_i_1__1 
       (.I0(MR_AN_COMPLETE),
        .I1(MDC_RISING_OUT),
        .I2(AN_COMPLETE_REG1),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair327" *) 
   LUT4 #(
    .INIT(16'hFFE2)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_ENABLE_i_1__1 
       (.I0(AN_INTERRUPT_ENABLE),
        .I1(AN_INTERRUPT_ENABLE7_out),
        .I2(DATA_OUT[0]),
        .I3(SRESET),
        .O(O2));
LUT6 #(
    .INIT(64'hB0B0F0B00000F000)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_1__1 
       (.I0(DATA_OUT[1]),
        .I1(AN_INTERRUPT_ENABLE7_out),
        .I2(I6),
        .I3(MR_AN_COMPLETE),
        .I4(AN_COMPLETE_REG1),
        .I5(an_interrupt_ch2),
        .O(O3));
LUT6 #(
    .INIT(64'h0000000000000010)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_2__1 
       (.I0(ADDR_WR[2]),
        .I1(ADDR_WR[0]),
        .I2(ADDR_WR[4]),
        .I3(ADDR_WR[1]),
        .I4(ADDR_WR[3]),
        .I5(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__1 ),
        .O(AN_INTERRUPT_ENABLE7_out));
(* SOFT_HLUTNM = "soft_lutpair336" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__1 
       (.I0(WE),
        .I1(MDC_RISING_OUT),
        .O(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__1 ));
GND GND
       (.G(\<const0> ));
LUT2 #(
    .INIT(4'h2)) 
     LAST_DATA_SHIFT_i_1__1
       (.I0(MDC_RISING_REG1_0),
        .I1(n_0_LAST_DATA_SHIFT_i_2__1),
        .O(LAST_DATA_SHIFT0));
LUT6 #(
    .INIT(64'hFFFFFF01FFFFFFFF)) 
     LAST_DATA_SHIFT_i_2__1
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_12__1 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_8__1 ),
        .I5(n_0_LAST_DATA_SHIFT_i_3__1),
        .O(n_0_LAST_DATA_SHIFT_i_2__1));
LUT5 #(
    .INIT(32'h00000001)) 
     LAST_DATA_SHIFT_i_3__1
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(n_0_LAST_DATA_SHIFT_i_3__1));
FDRE #(
    .INIT(1'b0)) 
     LAST_DATA_SHIFT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(LAST_DATA_SHIFT0),
        .Q(LAST_DATA_SHIFT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG1),
        .Q(MDC_RISING_REG1_0),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG1_0),
        .Q(MDC_RISING_REG2),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG2),
        .Q(MDC_RISING_OUT),
        .R(SRESET));
FDSE #(
    .INIT(1'b0)) 
     MDIO_IN_REG_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(MDIO_IN__0),
        .Q(ADDR_RD),
        .S(SRESET));
LUT6 #(
    .INIT(64'hFFFFFFFFFFBF3B3B)) 
     MDIO_OUT_i_1__1
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(n_0_MDIO_OUT_i_2__1),
        .I2(n_0_MDIO_OUT_i_3__1),
        .I3(DATA_OUT[15]),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(n_0_MDIO_OUT_i_4__1),
        .O(n_0_MDIO_OUT_i_1__1));
(* SOFT_HLUTNM = "soft_lutpair317" *) 
   LUT2 #(
    .INIT(4'h1)) 
     MDIO_OUT_i_2__1
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(n_0_MDIO_OUT_i_2__1));
LUT3 #(
    .INIT(8'h40)) 
     MDIO_OUT_i_3__1
       (.I0(\n_0_OPCODE_reg[0] ),
        .I1(\n_0_OPCODE_reg[1] ),
        .I2(n_0_ADDRESS_MATCH_reg),
        .O(n_0_MDIO_OUT_i_3__1));
LUT6 #(
    .INIT(64'hFFEAFEEAFFEAFFEA)) 
     MDIO_OUT_i_4__1
       (.I0(n_0_MDIO_TRI_i_2__1),
        .I1(DATA_OUT[15]),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(n_0_MDIO_OUT_i_3__1),
        .O(n_0_MDIO_OUT_i_4__1));
FDSE MDIO_OUT_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(n_0_MDIO_OUT_i_1__1),
        .Q(mdio_o_ch2),
        .S(SRESET));
LUT6 #(
    .INIT(64'hFFFBFBBAFFFFFFFF)) 
     MDIO_TRI_i_1__1
       (.I0(n_0_MDIO_TRI_i_2__1),
        .I1(n_0_MDIO_OUT_i_3__1),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[8] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(n_0_MDIO_OUT_i_2__1),
        .O(n_0_MDIO_TRI_i_1__1));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FF0)) 
     MDIO_TRI_i_2__1
       (.I0(\n_0_FSM_onehot_STATE[8]_i_3__4 ),
        .I1(n_0_MDIO_OUT_i_3__1),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(n_0_MDIO_TRI_i_3__1),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .I5(n_0_ADDRESS_MATCH_i_3__1),
        .O(n_0_MDIO_TRI_i_2__1));
(* SOFT_HLUTNM = "soft_lutpair334" *) 
   LUT3 #(
    .INIT(8'h01)) 
     MDIO_TRI_i_3__1
       (.I0(\n_0_FSM_onehot_STATE_reg[6] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(n_0_MDIO_TRI_i_3__1));
FDSE MDIO_TRI_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(n_0_MDIO_TRI_i_1__1),
        .Q(mdio_t_ch2),
        .S(SRESET));
(* SOFT_HLUTNM = "soft_lutpair337" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \OPCODE[0]_i_1__1 
       (.I0(DATA_OUT[0]),
        .I1(OPCODE),
        .I2(\n_0_OPCODE_reg[0] ),
        .O(\n_0_OPCODE[0]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair337" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \OPCODE[1]_i_1__1 
       (.I0(DATA_OUT[1]),
        .I1(OPCODE),
        .I2(\n_0_OPCODE_reg[1] ),
        .O(\n_0_OPCODE[1]_i_1__1 ));
LUT5 #(
    .INIT(32'h00002000)) 
     \OPCODE[1]_i_2__1 
       (.I0(n_0_LAST_DATA_SHIFT_i_3__1),
        .I1(\n_0_FSM_onehot_STATE[9]_i_2__3 ),
        .I2(BIT_COUNT_reg__0[2]),
        .I3(MDC_RISING_REG1),
        .I4(\n_0_SHIFT_REG[15]_i_5__1 ),
        .O(OPCODE));
FDRE #(
    .INIT(1'b0)) 
     \OPCODE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_OPCODE[0]_i_1__1 ),
        .Q(\n_0_OPCODE_reg[0] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \OPCODE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_OPCODE[1]_i_1__1 ),
        .Q(\n_0_OPCODE_reg[1] ),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h00E2)) 
     \QSGMII_SPEC.RUNDISP_EN_REG_i_1__1 
       (.I0(I7),
        .I1(RUNDISP_EN_REG),
        .I2(DATA_OUT[0]),
        .I3(SRESET),
        .O(O4));
LUT6 #(
    .INIT(64'h0000000000020000)) 
     \QSGMII_SPEC.RUNDISP_EN_REG_i_2__1 
       (.I0(ADDR_WR[4]),
        .I1(ADDR_WR[0]),
        .I2(ADDR_WR[3]),
        .I3(ADDR_WR[2]),
        .I4(ADDR_WR[1]),
        .I5(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__1 ),
        .O(RUNDISP_EN_REG));
(* SOFT_HLUTNM = "soft_lutpair323" *) 
   LUT5 #(
    .INIT(32'h002F0020)) 
     RD_i_1__1
       (.I0(n_0_MDIO_OUT_i_3__1),
        .I1(n_0_LAST_DATA_SHIFT_i_2__1),
        .I2(MDC_RISING_REG2),
        .I3(SRESET),
        .I4(RD),
        .O(n_0_RD_i_1__1));
FDRE RD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RD_i_1__1),
        .Q(RD),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \SHIFT_REG[0]_i_1__1 
       (.I0(ADDR_RD),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[0]_i_2__1 ),
        .I3(DATA_OUT[3]),
        .I4(\n_0_SHIFT_REG[0]_i_3__1 ),
        .O(\n_0_SHIFT_REG[0]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000005450540)) 
     \SHIFT_REG[0]_i_2__1 
       (.I0(DATA_OUT[1]),
        .I1(I7),
        .I2(DATA_OUT[0]),
        .I3(ADDR_RD),
        .I4(AN_INTERRUPT_ENABLE),
        .I5(DATA_OUT[2]),
        .O(\n_0_SHIFT_REG[0]_i_2__1 ));
LUT5 #(
    .INIT(32'h00003308)) 
     \SHIFT_REG[0]_i_3__1 
       (.I0(I11[0]),
        .I1(DATA_OUT[2]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[0]),
        .O(\n_0_SHIFT_REG[0]_i_3__1 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[10]_i_1__1 
       (.I0(DATA_OUT[9]),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[10]_i_2__1 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[10]_i_1__1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[10]_i_2__1 
       (.I0(DATA_OUT[0]),
        .I1(I11[10]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[10]_i_3__1 ),
        .O(\n_0_SHIFT_REG[10]_i_2__1 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[10]_i_3__1 
       (.I0(I4),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I14),
        .O(\n_0_SHIFT_REG[10]_i_3__1 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[11]_i_1__1 
       (.I0(DATA_OUT[10]),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[11]_i_2__1 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[11]_i_1__1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[11]_i_2__1 
       (.I0(DATA_OUT[0]),
        .I1(I11[11]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[11]_i_3__1 ),
        .O(\n_0_SHIFT_REG[11]_i_2__1 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[11]_i_3__1 
       (.I0(I3),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I13),
        .O(\n_0_SHIFT_REG[11]_i_3__1 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[12]_i_1__1 
       (.I0(DATA_OUT[11]),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[12]_i_2__1 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[12]_i_1__1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[12]_i_2__1 
       (.I0(DATA_OUT[0]),
        .I1(I11[12]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[12]_i_3__1 ),
        .O(\n_0_SHIFT_REG[12]_i_2__1 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[12]_i_3__1 
       (.I0(I2),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(MR_LP_ADV_ABILITY[0]),
        .O(\n_0_SHIFT_REG[12]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair332" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[13]_i_1__1 
       (.I0(DATA_OUT[12]),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[13]_i_2__1 ),
        .O(\n_0_SHIFT_REG[13]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000000040000)) 
     \SHIFT_REG[13]_i_2__1 
       (.I0(DATA_OUT[0]),
        .I1(I11[13]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[13]_i_2__1 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[14]_i_1__1 
       (.I0(\n_0_SHIFT_REG_reg[13] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[14]_i_2__1 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[14]_i_1__1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[14]_i_2__1 
       (.I0(DATA_OUT[0]),
        .I1(I11[14]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[14]_i_3__1 ),
        .O(\n_0_SHIFT_REG[14]_i_2__1 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[14]_i_3__1 
       (.I0(I1),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I12),
        .O(\n_0_SHIFT_REG[14]_i_3__1 ));
LUT2 #(
    .INIT(4'hE)) 
     \SHIFT_REG[15]_i_1__1 
       (.I0(MDC_RISING_REG1),
        .I1(LAST_DATA_SHIFT),
        .O(SHIFT_REG0));
(* SOFT_HLUTNM = "soft_lutpair325" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[15]_i_2__1 
       (.I0(DATA_OUT[14]),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[15]_i_4__1 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[15]_i_2__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \SHIFT_REG[15]_i_3__1 
       (.I0(\n_0_SHIFT_REG[15]_i_5__1 ),
        .I1(BIT_COUNT_reg__0[2]),
        .I2(BIT_COUNT_reg__0[0]),
        .I3(BIT_COUNT_reg__0[1]),
        .I4(BIT_COUNT_reg__0[3]),
        .I5(n_0_LAST_DATA_SHIFT_i_3__1),
        .O(\n_0_SHIFT_REG[15]_i_3__1 ));
LUT6 #(
    .INIT(64'h8810FFFF88100000)) 
     \SHIFT_REG[15]_i_4__1 
       (.I0(DATA_OUT[1]),
        .I1(ADDR_RD),
        .I2(I11[15]),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[15]_i_6__1 ),
        .O(\n_0_SHIFT_REG[15]_i_4__1 ));
(* SOFT_HLUTNM = "soft_lutpair316" *) 
   LUT5 #(
    .INIT(32'hFFFFFFF7)) 
     \SHIFT_REG[15]_i_5__1 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_8__1 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_12__1 ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_SHIFT_REG[15]_i_5__1 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[15]_i_6__1 
       (.I0(SOFT_RESET_1),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(MR_LP_ADV_ABILITY[1]),
        .O(\n_0_SHIFT_REG[15]_i_6__1 ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \SHIFT_REG[1]_i_1__1 
       (.I0(DATA_OUT[0]),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[1]_i_2__1 ),
        .I3(DATA_OUT[3]),
        .I4(\n_0_SHIFT_REG[1]_i_3__1 ),
        .O(\n_0_SHIFT_REG[1]_i_1__1 ));
LUT5 #(
    .INIT(32'h00000010)) 
     \SHIFT_REG[1]_i_2__1 
       (.I0(DATA_OUT[1]),
        .I1(ADDR_RD),
        .I2(an_interrupt_ch2),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[2]),
        .O(\n_0_SHIFT_REG[1]_i_2__1 ));
LUT5 #(
    .INIT(32'h00000200)) 
     \SHIFT_REG[1]_i_3__1 
       (.I0(DATA_OUT[2]),
        .I1(DATA_OUT[1]),
        .I2(ADDR_RD),
        .I3(I11[1]),
        .I4(DATA_OUT[0]),
        .O(\n_0_SHIFT_REG[1]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair331" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[2]_i_1__1 
       (.I0(DATA_OUT[1]),
        .I1(\n_0_SHIFT_REG[4]_i_2__1 ),
        .I2(\n_0_SHIFT_REG[2]_i_2__1 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[2]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000003033000088)) 
     \SHIFT_REG[2]_i_2__1 
       (.I0(I11[2]),
        .I1(DATA_OUT[2]),
        .I2(MR_LINK_STATUS),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[1]),
        .I5(ADDR_RD),
        .O(\n_0_SHIFT_REG[2]_i_2__1 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[3]_i_1__1 
       (.I0(DATA_OUT[2]),
        .I1(\n_0_SHIFT_REG[4]_i_2__1 ),
        .I2(\n_0_SHIFT_REG[3]_i_2__1 ),
        .O(\n_0_SHIFT_REG[3]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000001100010)) 
     \SHIFT_REG[3]_i_2__1 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[2]),
        .I4(I11[3]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[3]_i_2__1 ));
(* SOFT_HLUTNM = "soft_lutpair331" *) 
   LUT3 #(
    .INIT(8'hA4)) 
     \SHIFT_REG[4]_i_1__1 
       (.I0(\n_0_SHIFT_REG[4]_i_2__1 ),
        .I1(\n_0_SHIFT_REG[4]_i_3__1 ),
        .I2(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[4]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \SHIFT_REG[4]_i_2__1 
       (.I0(\n_0_SHIFT_REG[15]_i_5__1 ),
        .I1(n_0_LAST_DATA_SHIFT_i_3__1),
        .I2(BIT_COUNT_reg__0[3]),
        .I3(BIT_COUNT_reg__0[1]),
        .I4(BIT_COUNT_reg__0[0]),
        .I5(BIT_COUNT_reg__0[2]),
        .O(\n_0_SHIFT_REG[4]_i_2__1 ));
LUT6 #(
    .INIT(64'h0000003000000088)) 
     \SHIFT_REG[4]_i_3__1 
       (.I0(I11[4]),
        .I1(DATA_OUT[2]),
        .I2(status_vector_ch2),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[0]),
        .I5(ADDR_RD),
        .O(\n_0_SHIFT_REG[4]_i_3__1 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[5]_i_1__1 
       (.I0(\n_0_SHIFT_REG_reg[4] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[5]_i_2__1 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[5]_i_1__1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[5]_i_2__1 
       (.I0(DATA_OUT[0]),
        .I1(I11[5]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[5]_i_3__1 ),
        .O(\n_0_SHIFT_REG[5]_i_2__1 ));
LUT5 #(
    .INIT(32'h000E0002)) 
     \SHIFT_REG[5]_i_3__1 
       (.I0(I8),
        .I1(ADDR_RD),
        .I2(DATA_OUT[0]),
        .I3(DATA_OUT[1]),
        .I4(MR_AN_COMPLETE),
        .O(\n_0_SHIFT_REG[5]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair333" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[6]_i_1__1 
       (.I0(DATA_OUT[5]),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[6]_i_2__1 ),
        .O(\n_0_SHIFT_REG[6]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000001110101)) 
     \SHIFT_REG[6]_i_2__1 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[2]),
        .I3(ADDR_RD),
        .I4(I11[6]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[6]_i_2__1 ));
(* SOFT_HLUTNM = "soft_lutpair333" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[7]_i_1__1 
       (.I0(\n_0_SHIFT_REG_reg[6] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[7]_i_2__1 ),
        .O(\n_0_SHIFT_REG[7]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000001100010)) 
     \SHIFT_REG[7]_i_2__1 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[2]),
        .I4(I11[7]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[7]_i_2__1 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[8]_i_1__1 
       (.I0(\n_0_SHIFT_REG_reg[7] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[8]_i_2__1 ),
        .O(\n_0_SHIFT_REG[8]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000001110101)) 
     \SHIFT_REG[8]_i_2__1 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[2]),
        .I3(ADDR_RD),
        .I4(I11[8]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[8]_i_2__1 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[9]_i_1__1 
       (.I0(DATA_OUT[8]),
        .I1(\n_0_SHIFT_REG[15]_i_3__1 ),
        .I2(\n_0_SHIFT_REG[9]_i_2__1 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[9]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000B00000008)) 
     \SHIFT_REG[9]_i_2__1 
       (.I0(I11[9]),
        .I1(DATA_OUT[2]),
        .I2(DATA_OUT[1]),
        .I3(DATA_OUT[0]),
        .I4(ADDR_RD),
        .I5(RESTART_AN_REG),
        .O(\n_0_SHIFT_REG[9]_i_2__1 ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[0] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[0]_i_1__1 ),
        .Q(DATA_OUT[0]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[10] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[10]_i_1__1 ),
        .Q(DATA_OUT[10]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[11] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[11]_i_1__1 ),
        .Q(DATA_OUT[11]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[12] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[12]_i_1__1 ),
        .Q(DATA_OUT[12]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[13] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[13]_i_1__1 ),
        .Q(\n_0_SHIFT_REG_reg[13] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[14] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[14]_i_1__1 ),
        .Q(DATA_OUT[14]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[15] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[15]_i_2__1 ),
        .Q(DATA_OUT[15]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[1] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[1]_i_1__1 ),
        .Q(DATA_OUT[1]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[2] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[2]_i_1__1 ),
        .Q(DATA_OUT[2]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[3] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[3]_i_1__1 ),
        .Q(DATA_OUT[3]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[4] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[4]_i_1__1 ),
        .Q(\n_0_SHIFT_REG_reg[4] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[5] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[5]_i_1__1 ),
        .Q(DATA_OUT[5]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[6] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[6]_i_1__1 ),
        .Q(\n_0_SHIFT_REG_reg[6] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[7] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[7]_i_1__1 ),
        .Q(\n_0_SHIFT_REG_reg[7] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[8] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[8]_i_1__1 ),
        .Q(DATA_OUT[8]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[9] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[9]_i_1__1 ),
        .Q(DATA_OUT[9]),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'h0800FFFF08000000)) 
     WE_i_1__1
       (.I0(n_0_WE_i_2__1),
        .I1(\n_0_OPCODE_reg[0] ),
        .I2(\n_0_OPCODE_reg[1] ),
        .I3(n_0_ADDRESS_MATCH_reg),
        .I4(n_0_WE_i_3__1),
        .I5(WE),
        .O(n_0_WE_i_1__1));
(* SOFT_HLUTNM = "soft_lutpair327" *) 
   LUT2 #(
    .INIT(4'h1)) 
     WE_i_2__1
       (.I0(SRESET),
        .I1(n_0_LAST_DATA_SHIFT_i_2__1),
        .O(n_0_WE_i_2__1));
(* SOFT_HLUTNM = "soft_lutpair323" *) 
   LUT2 #(
    .INIT(4'hE)) 
     WE_i_3__1
       (.I0(MDC_RISING_REG2),
        .I1(SRESET),
        .O(n_0_WE_i_3__1));
FDRE WE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_WE_i_1__1),
        .Q(WE),
        .R(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MDIO_INTERFACE" *) 
module quadsgmiiMDIO_INTERFACE_38
   (mdio_o_ch1,
    mdio_t_ch1,
    LOOPBACK_REG,
    O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    SRESET,
    MDC_RISING_REG1,
    userclk2,
    MDIO_IN__0,
    I11,
    SOFT_RESET_0,
    MR_LP_ADV_ABILITY,
    I1,
    I12,
    I2,
    I3,
    I13,
    I4,
    I14,
    RESTART_AN_REG,
    status_vector_ch1,
    MR_LINK_STATUS,
    phyad_ch1,
    I5,
    AN_INTERRUPT_ENABLE,
    I6,
    MR_AN_COMPLETE,
    AN_COMPLETE_REG1,
    an_interrupt_ch1,
    I7,
    CLEAR_STATUS_REG,
    I8);
  output mdio_o_ch1;
  output mdio_t_ch1;
  output LOOPBACK_REG;
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  input SRESET;
  input MDC_RISING_REG1;
  input userclk2;
  input MDIO_IN__0;
  input [15:0]I11;
  input SOFT_RESET_0;
  input [1:0]MR_LP_ADV_ABILITY;
  input I1;
  input I12;
  input I2;
  input I3;
  input I13;
  input I4;
  input I14;
  input RESTART_AN_REG;
  input [0:0]status_vector_ch1;
  input MR_LINK_STATUS;
  input [4:0]phyad_ch1;
  input I5;
  input AN_INTERRUPT_ENABLE;
  input I6;
  input MR_AN_COMPLETE;
  input AN_COMPLETE_REG1;
  input an_interrupt_ch1;
  input I7;
  input CLEAR_STATUS_REG;
  input I8;

  wire \<const0> ;
  wire \<const1> ;
  wire ADDRESS_MATCH_COMB;
  wire [0:0]ADDR_RD;
  wire [4:0]ADDR_WR;
  wire AN_COMPLETE_REG1;
  wire AN_INTERRUPT_ENABLE;
  wire AN_INTERRUPT_ENABLE7_out;
  wire [3:0]BIT_COUNT_reg__0__0;
  wire CLEAR_STATUS_REG;
  wire CLEAR_STATUS_REG_COMB;
  wire [15:0]DATA_OUT;
  wire I1;
  wire [15:0]I11;
  wire I12;
  wire I13;
  wire I14;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire LAST_DATA_SHIFT;
  wire LAST_DATA_SHIFT0;
  wire LOOPBACK_REG;
  wire MDC_RISING_OUT;
  wire MDC_RISING_REG1;
  wire MDC_RISING_REG1_0;
  wire MDC_RISING_REG2;
  wire MDIO_IN__0;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire OPCODE;
  wire RD;
  wire RESTART_AN_REG;
  wire RUNDISP_EN_REG;
  wire SHIFT_REG0;
  wire SOFT_RESET_0;
  wire SRESET;
  wire WE;
  wire an_interrupt_ch1;
  wire mdio_o_ch1;
  wire mdio_t_ch1;
  wire n_0_ADDRESS_MATCH_i_1__0;
  wire n_0_ADDRESS_MATCH_i_2__0;
  wire n_0_ADDRESS_MATCH_i_3__0;
  wire n_0_ADDRESS_MATCH_i_4__0;
  wire n_0_ADDRESS_MATCH_i_6__0;
  wire n_0_ADDRESS_MATCH_i_7__0;
  wire n_0_ADDRESS_MATCH_reg;
  wire \n_0_ADDR_WR[4]_i_1__0 ;
  wire \n_0_BIT_COUNT[3]_i_1__0 ;
  wire \n_0_BIT_COUNT[3]_i_3__0 ;
  wire \n_0_BIT_COUNT[3]_i_4__0 ;
  wire \n_0_BIT_COUNT[3]_i_5__0 ;
  wire \n_0_BIT_COUNT[3]_i_6__0 ;
  wire \n_0_BIT_COUNT[3]_i_7__0 ;
  wire \n_0_BIT_COUNT[3]_i_8__0 ;
  wire \n_0_BIT_COUNT[3]_i_9__0 ;
  wire \n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ;
  wire \n_0_FSM_onehot_STATE[0]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[10]_i_10__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_11__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_12__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_13__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_2__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_3__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_4__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_5__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_6__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_7__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_8__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_9__0 ;
  wire \n_0_FSM_onehot_STATE[1]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[2]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[3]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[4]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[5]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[5]_i_2__0 ;
  wire \n_0_FSM_onehot_STATE[6]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[7]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[7]_i_2__0 ;
  wire \n_0_FSM_onehot_STATE[8]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[8]_i_2__4 ;
  wire \n_0_FSM_onehot_STATE[8]_i_3__2 ;
  wire \n_0_FSM_onehot_STATE[9]_i_1__4 ;
  wire \n_0_FSM_onehot_STATE[9]_i_2__1 ;
  wire \n_0_FSM_onehot_STATE_reg[0] ;
  wire \n_0_FSM_onehot_STATE_reg[10] ;
  wire \n_0_FSM_onehot_STATE_reg[1] ;
  wire \n_0_FSM_onehot_STATE_reg[2] ;
  wire \n_0_FSM_onehot_STATE_reg[3] ;
  wire \n_0_FSM_onehot_STATE_reg[4] ;
  wire \n_0_FSM_onehot_STATE_reg[5] ;
  wire \n_0_FSM_onehot_STATE_reg[6] ;
  wire \n_0_FSM_onehot_STATE_reg[7] ;
  wire \n_0_FSM_onehot_STATE_reg[8] ;
  wire \n_0_FSM_onehot_STATE_reg[9] ;
  wire \n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__0 ;
  wire n_0_LAST_DATA_SHIFT_i_2__0;
  wire n_0_LAST_DATA_SHIFT_i_3__0;
  wire n_0_MDIO_OUT_i_1__0;
  wire n_0_MDIO_OUT_i_2__0;
  wire n_0_MDIO_OUT_i_3__0;
  wire n_0_MDIO_OUT_i_4__0;
  wire n_0_MDIO_TRI_i_1__0;
  wire n_0_MDIO_TRI_i_2__0;
  wire n_0_MDIO_TRI_i_3__0;
  wire \n_0_OPCODE[0]_i_1__0 ;
  wire \n_0_OPCODE[1]_i_1__0 ;
  wire \n_0_OPCODE_reg[0] ;
  wire \n_0_OPCODE_reg[1] ;
  wire n_0_RD_i_1__0;
  wire \n_0_SHIFT_REG[0]_i_1__0 ;
  wire \n_0_SHIFT_REG[0]_i_2__0 ;
  wire \n_0_SHIFT_REG[0]_i_3__0 ;
  wire \n_0_SHIFT_REG[10]_i_1__0 ;
  wire \n_0_SHIFT_REG[10]_i_2__0 ;
  wire \n_0_SHIFT_REG[10]_i_3__0 ;
  wire \n_0_SHIFT_REG[11]_i_1__0 ;
  wire \n_0_SHIFT_REG[11]_i_2__0 ;
  wire \n_0_SHIFT_REG[11]_i_3__0 ;
  wire \n_0_SHIFT_REG[12]_i_1__0 ;
  wire \n_0_SHIFT_REG[12]_i_2__0 ;
  wire \n_0_SHIFT_REG[12]_i_3__0 ;
  wire \n_0_SHIFT_REG[13]_i_1__0 ;
  wire \n_0_SHIFT_REG[13]_i_2__0 ;
  wire \n_0_SHIFT_REG[14]_i_1__0 ;
  wire \n_0_SHIFT_REG[14]_i_2__0 ;
  wire \n_0_SHIFT_REG[14]_i_3__0 ;
  wire \n_0_SHIFT_REG[15]_i_2__0 ;
  wire \n_0_SHIFT_REG[15]_i_3__0 ;
  wire \n_0_SHIFT_REG[15]_i_4__0 ;
  wire \n_0_SHIFT_REG[15]_i_5__0 ;
  wire \n_0_SHIFT_REG[15]_i_6__0 ;
  wire \n_0_SHIFT_REG[1]_i_1__0 ;
  wire \n_0_SHIFT_REG[1]_i_2__0 ;
  wire \n_0_SHIFT_REG[1]_i_3__0 ;
  wire \n_0_SHIFT_REG[2]_i_1__0 ;
  wire \n_0_SHIFT_REG[2]_i_2__0 ;
  wire \n_0_SHIFT_REG[3]_i_1__0 ;
  wire \n_0_SHIFT_REG[3]_i_2__0 ;
  wire \n_0_SHIFT_REG[4]_i_1__0 ;
  wire \n_0_SHIFT_REG[4]_i_2__0 ;
  wire \n_0_SHIFT_REG[4]_i_3__0 ;
  wire \n_0_SHIFT_REG[5]_i_1__0 ;
  wire \n_0_SHIFT_REG[5]_i_2__0 ;
  wire \n_0_SHIFT_REG[5]_i_3__0 ;
  wire \n_0_SHIFT_REG[6]_i_1__0 ;
  wire \n_0_SHIFT_REG[6]_i_2__0 ;
  wire \n_0_SHIFT_REG[7]_i_1__0 ;
  wire \n_0_SHIFT_REG[7]_i_2__0 ;
  wire \n_0_SHIFT_REG[8]_i_1__0 ;
  wire \n_0_SHIFT_REG[8]_i_2__0 ;
  wire \n_0_SHIFT_REG[9]_i_1__0 ;
  wire \n_0_SHIFT_REG[9]_i_2__0 ;
  wire \n_0_SHIFT_REG_reg[13] ;
  wire \n_0_SHIFT_REG_reg[4] ;
  wire \n_0_SHIFT_REG_reg[6] ;
  wire \n_0_SHIFT_REG_reg[7] ;
  wire n_0_WE_i_1__0;
  wire n_0_WE_i_2__0;
  wire n_0_WE_i_3__0;
  wire [3:0]p_0_in;
  wire [4:0]phyad_ch1;
  wire [0:0]status_vector_ch1;
  wire userclk2;

LUT6 #(
    .INIT(64'h00000000AAABAAA8)) 
     ADDRESS_MATCH_i_1__0
       (.I0(n_0_ADDRESS_MATCH_reg),
        .I1(n_0_ADDRESS_MATCH_i_2__0),
        .I2(n_0_ADDRESS_MATCH_i_3__0),
        .I3(n_0_ADDRESS_MATCH_i_4__0),
        .I4(ADDRESS_MATCH_COMB),
        .I5(SRESET),
        .O(n_0_ADDRESS_MATCH_i_1__0));
(* SOFT_HLUTNM = "soft_lutpair188" *) 
   LUT5 #(
    .INIT(32'hFEFFFFFF)) 
     ADDRESS_MATCH_i_2__0
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(MDC_RISING_REG1),
        .O(n_0_ADDRESS_MATCH_i_2__0));
(* SOFT_HLUTNM = "soft_lutpair196" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     ADDRESS_MATCH_i_3__0
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[0] ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(n_0_ADDRESS_MATCH_i_3__0));
(* SOFT_HLUTNM = "soft_lutpair186" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     ADDRESS_MATCH_i_4__0
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .O(n_0_ADDRESS_MATCH_i_4__0));
LUT6 #(
    .INIT(64'hFFFFFFFF41000041)) 
     ADDRESS_MATCH_i_5__0
       (.I0(n_0_ADDRESS_MATCH_i_6__0),
        .I1(phyad_ch1[1]),
        .I2(DATA_OUT[0]),
        .I3(phyad_ch1[3]),
        .I4(DATA_OUT[2]),
        .I5(n_0_ADDRESS_MATCH_i_7__0),
        .O(ADDRESS_MATCH_COMB));
LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
     ADDRESS_MATCH_i_6__0
       (.I0(phyad_ch1[4]),
        .I1(DATA_OUT[3]),
        .I2(ADDR_RD),
        .I3(phyad_ch1[0]),
        .I4(DATA_OUT[1]),
        .I5(phyad_ch1[2]),
        .O(n_0_ADDRESS_MATCH_i_6__0));
LUT5 #(
    .INIT(32'h00000001)) 
     ADDRESS_MATCH_i_7__0
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[3]),
        .I4(DATA_OUT[2]),
        .O(n_0_ADDRESS_MATCH_i_7__0));
FDRE #(
    .INIT(1'b0)) 
     ADDRESS_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ADDRESS_MATCH_i_1__0),
        .Q(n_0_ADDRESS_MATCH_reg),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h2)) 
     \ADDR_WR[4]_i_1__0 
       (.I0(MDC_RISING_REG1),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .O(\n_0_ADDR_WR[4]_i_1__0 ));
FDRE \ADDR_WR_reg[0] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__0 ),
        .D(ADDR_RD),
        .Q(ADDR_WR[0]),
        .R(SRESET));
FDRE \ADDR_WR_reg[1] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__0 ),
        .D(DATA_OUT[0]),
        .Q(ADDR_WR[1]),
        .R(SRESET));
FDRE \ADDR_WR_reg[2] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__0 ),
        .D(DATA_OUT[1]),
        .Q(ADDR_WR[2]),
        .R(SRESET));
FDRE \ADDR_WR_reg[3] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__0 ),
        .D(DATA_OUT[2]),
        .Q(ADDR_WR[3]),
        .R(SRESET));
FDRE \ADDR_WR_reg[4] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1__0 ),
        .D(DATA_OUT[3]),
        .Q(ADDR_WR[4]),
        .R(SRESET));
LUT3 #(
    .INIT(8'hBA)) 
     \BIT_COUNT[0]_i_1__0 
       (.I0(\n_0_BIT_COUNT[3]_i_4__0 ),
        .I1(BIT_COUNT_reg__0__0[0]),
        .I2(\n_0_BIT_COUNT[3]_i_3__0 ),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair205" *) 
   LUT3 #(
    .INIT(8'h82)) 
     \BIT_COUNT[1]_i_1__0 
       (.I0(\n_0_BIT_COUNT[3]_i_3__0 ),
        .I1(BIT_COUNT_reg__0__0[1]),
        .I2(BIT_COUNT_reg__0__0[0]),
        .O(p_0_in[1]));
(* SOFT_HLUTNM = "soft_lutpair198" *) 
   LUT4 #(
    .INIT(16'hE1FF)) 
     \BIT_COUNT[2]_i_1__0 
       (.I0(BIT_COUNT_reg__0__0[0]),
        .I1(BIT_COUNT_reg__0__0[1]),
        .I2(BIT_COUNT_reg__0__0[2]),
        .I3(\n_0_BIT_COUNT[3]_i_3__0 ),
        .O(p_0_in[2]));
LUT6 #(
    .INIT(64'hAAAAAAA8AAAAAAAA)) 
     \BIT_COUNT[3]_i_1__0 
       (.I0(MDC_RISING_REG1),
        .I1(BIT_COUNT_reg__0__0[2]),
        .I2(BIT_COUNT_reg__0__0[0]),
        .I3(BIT_COUNT_reg__0__0[1]),
        .I4(BIT_COUNT_reg__0__0[3]),
        .I5(\n_0_BIT_COUNT[3]_i_3__0 ),
        .O(\n_0_BIT_COUNT[3]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFAAA90000)) 
     \BIT_COUNT[3]_i_2__0 
       (.I0(BIT_COUNT_reg__0__0[3]),
        .I1(BIT_COUNT_reg__0__0[0]),
        .I2(BIT_COUNT_reg__0__0[1]),
        .I3(BIT_COUNT_reg__0__0[2]),
        .I4(\n_0_BIT_COUNT[3]_i_3__0 ),
        .I5(\n_0_BIT_COUNT[3]_i_4__0 ),
        .O(p_0_in[3]));
LUT5 #(
    .INIT(32'hFFF7F33F)) 
     \BIT_COUNT[3]_i_3__0 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_3__2 ),
        .I1(\n_0_BIT_COUNT[3]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_BIT_COUNT[3]_i_3__0 ));
LUT6 #(
    .INIT(64'h0008000808800080)) 
     \BIT_COUNT[3]_i_4__0 
       (.I0(\n_0_BIT_COUNT[3]_i_6__0 ),
        .I1(\n_0_BIT_COUNT[3]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE[8]_i_3__2 ),
        .I5(\n_0_FSM_onehot_STATE_reg[3] ),
        .O(\n_0_BIT_COUNT[3]_i_4__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \BIT_COUNT[3]_i_5__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_BIT_COUNT[3]_i_7__0 ),
        .I5(\n_0_BIT_COUNT[3]_i_8__0 ),
        .O(\n_0_BIT_COUNT[3]_i_5__0 ));
LUT6 #(
    .INIT(64'h0000000000000002)) 
     \BIT_COUNT[3]_i_6__0 
       (.I0(\n_0_BIT_COUNT[3]_i_9__0 ),
        .I1(n_0_ADDRESS_MATCH_i_4__0),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_BIT_COUNT[3]_i_6__0 ));
LUT2 #(
    .INIT(4'hE)) 
     \BIT_COUNT[3]_i_7__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[0] ),
        .I1(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_BIT_COUNT[3]_i_7__0 ));
(* SOFT_HLUTNM = "soft_lutpair204" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \BIT_COUNT[3]_i_8__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_BIT_COUNT[3]_i_8__0 ));
(* SOFT_HLUTNM = "soft_lutpair196" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     \BIT_COUNT[3]_i_9__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_BIT_COUNT[3]_i_9__0 ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[0] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__0 ),
        .D(p_0_in[0]),
        .Q(BIT_COUNT_reg__0__0[0]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[1] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__0 ),
        .D(p_0_in[1]),
        .Q(BIT_COUNT_reg__0__0[1]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[2] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__0 ),
        .D(p_0_in[2]),
        .Q(BIT_COUNT_reg__0__0[2]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[3] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1__0 ),
        .D(p_0_in[3]),
        .Q(BIT_COUNT_reg__0__0[3]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair206" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     CLEAR_STATUS_REG_i_1__0
       (.I0(CLEAR_STATUS_REG_COMB),
        .I1(MDC_RISING_OUT),
        .I2(CLEAR_STATUS_REG),
        .O(O8));
LUT6 #(
    .INIT(64'h0000000400000000)) 
     CLEAR_STATUS_REG_i_2__0
       (.I0(ADDR_WR[3]),
        .I1(RD),
        .I2(ADDR_WR[2]),
        .I3(ADDR_WR[1]),
        .I4(ADDR_WR[4]),
        .I5(ADDR_WR[0]),
        .O(CLEAR_STATUS_REG_COMB));
(* SOFT_HLUTNM = "soft_lutpair202" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.AN_ENABLE_REG_i_1__0 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ),
        .I1(DATA_OUT[12]),
        .O(O12));
(* SOFT_HLUTNM = "soft_lutpair191" *) 
   LUT5 #(
    .INIT(32'h23332000)) 
     \CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_i_1__0 
       (.I0(DATA_OUT[8]),
        .I1(SRESET),
        .I2(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ),
        .I3(MDC_RISING_OUT),
        .I4(I5),
        .O(O1));
(* SOFT_HLUTNM = "soft_lutpair191" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_1__0 
       (.I0(MDC_RISING_OUT),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ),
        .O(LOOPBACK_REG));
(* SOFT_HLUTNM = "soft_lutpair200" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_2__0 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ),
        .I1(DATA_OUT[10]),
        .O(O11));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 
       (.I0(ADDR_WR[3]),
        .I1(WE),
        .I2(ADDR_WR[0]),
        .I3(ADDR_WR[4]),
        .I4(ADDR_WR[2]),
        .I5(ADDR_WR[1]),
        .O(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair195" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.LOOPBACK_REG_i_1__0 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ),
        .I1(DATA_OUT[14]),
        .O(O13));
(* SOFT_HLUTNM = "soft_lutpair199" *) 
   LUT4 #(
    .INIT(16'hFF80)) 
     \CONFIG_REG_WITH_AN.POWERDOWN_REG_i_1__0 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ),
        .I1(DATA_OUT[11]),
        .I2(MDC_RISING_OUT),
        .I3(I3),
        .O(O6));
(* SOFT_HLUTNM = "soft_lutpair200" *) 
   LUT4 #(
    .INIT(16'hFF80)) 
     \CONFIG_REG_WITH_AN.RESET_REG_i_1__0 
       (.I0(DATA_OUT[15]),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ),
        .I2(MDC_RISING_OUT),
        .I3(SOFT_RESET_0),
        .O(O7));
LUT5 #(
    .INIT(32'h080F0800)) 
     \CONFIG_REG_WITH_AN.RESTART_AN_REG_i_1__0 
       (.I0(DATA_OUT[9]),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ),
        .I2(SRESET),
        .I3(MDC_RISING_OUT),
        .I4(RESTART_AN_REG),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair199" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_i_1__0 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3__0 ),
        .I1(DATA_OUT[5]),
        .O(O10));
LUT6 #(
    .INIT(64'h0020FFFF0020FF00)) 
     \FSM_onehot_STATE[0]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[7]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .I2(ADDR_RD),
        .I3(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_3__0 ),
        .O(\n_0_FSM_onehot_STATE[0]_i_1__4 ));
LUT6 #(
    .INIT(64'h0000000333373337)) 
     \FSM_onehot_STATE[10]_i_10__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_10__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_STATE[10]_i_11__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[2] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[4] ),
        .I3(\n_0_FSM_onehot_STATE_reg[0] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_11__0 ));
(* SOFT_HLUTNM = "soft_lutpair188" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_STATE[10]_i_12__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_12__0 ));
(* SOFT_HLUTNM = "soft_lutpair185" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[10]_i_13__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[6] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_13__0 ));
(* SOFT_HLUTNM = "soft_lutpair194" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \FSM_onehot_STATE[10]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_3__0 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000100010110)) 
     \FSM_onehot_STATE[10]_i_2__2 
       (.I0(n_0_ADDRESS_MATCH_i_4__0),
        .I1(n_0_ADDRESS_MATCH_i_3__0),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[5] ),
        .I5(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_2__2 ));
LUT5 #(
    .INIT(32'h02000000)) 
     \FSM_onehot_STATE[10]_i_3__0 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_6__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_7__0 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_8__0 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_9__0 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_10__0 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_3__0 ));
LUT6 #(
    .INIT(64'h0000000100010114)) 
     \FSM_onehot_STATE[10]_i_4__0 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_11__0 ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_4__0 ));
(* SOFT_HLUTNM = "soft_lutpair187" *) 
   LUT5 #(
    .INIT(32'hFFFFFFE9)) 
     \FSM_onehot_STATE[10]_i_5__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .I3(n_0_ADDRESS_MATCH_i_3__0),
        .I4(\n_0_FSM_onehot_STATE[10]_i_12__0 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_5__0 ));
LUT6 #(
    .INIT(64'h0000001010101000)) 
     \FSM_onehot_STATE[10]_i_6__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_13__0 ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[9] ),
        .I5(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_6__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_STATE[10]_i_7__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[4] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[0] ),
        .I5(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_7__0 ));
(* SOFT_HLUTNM = "soft_lutpair185" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_STATE[10]_i_8__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_8__0 ));
LUT5 #(
    .INIT(32'h00000177)) 
     \FSM_onehot_STATE[10]_i_9__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[7] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(n_0_ADDRESS_MATCH_i_3__0),
        .O(\n_0_FSM_onehot_STATE[10]_i_9__0 ));
(* SOFT_HLUTNM = "soft_lutpair189" *) 
   LUT4 #(
    .INIT(16'h0040)) 
     \FSM_onehot_STATE[1]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__0 ),
        .I3(ADDR_RD),
        .O(\n_0_FSM_onehot_STATE[1]_i_1__4 ));
(* SOFT_HLUTNM = "soft_lutpair189" *) 
   LUT5 #(
    .INIT(32'h40000000)) 
     \FSM_onehot_STATE[2]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__0 ),
        .I3(ADDR_RD),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .O(\n_0_FSM_onehot_STATE[2]_i_1__4 ));
(* SOFT_HLUTNM = "soft_lutpair194" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     \FSM_onehot_STATE[3]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__0 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .O(\n_0_FSM_onehot_STATE[3]_i_1__4 ));
(* SOFT_HLUTNM = "soft_lutpair190" *) 
   LUT5 #(
    .INIT(32'h00084040)) 
     \FSM_onehot_STATE[4]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .I3(\n_0_FSM_onehot_STATE[8]_i_3__2 ),
        .I4(\n_0_FSM_onehot_STATE[7]_i_2__0 ),
        .O(\n_0_FSM_onehot_STATE[4]_i_1__4 ));
LUT5 #(
    .INIT(32'h00080800)) 
     \FSM_onehot_STATE[5]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[5]_i_2__0 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .I4(\n_0_FSM_onehot_STATE[8]_i_3__2 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000000010116)) 
     \FSM_onehot_STATE[5]_i_2__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[7] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[2] ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_7__0 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair190" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \FSM_onehot_STATE[6]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__0 ),
        .I3(\n_0_FSM_onehot_STATE[8]_i_3__2 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_1__4 ));
(* SOFT_HLUTNM = "soft_lutpair192" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     \FSM_onehot_STATE[7]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2__0 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_1__4 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
     \FSM_onehot_STATE[7]_i_2__0 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_7__0 ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[7]_i_2__0 ));
LUT6 #(
    .INIT(64'h888888888888888B)) 
     \FSM_onehot_STATE[8]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[8]_i_3__2 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_3__0 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair192" *) 
   LUT5 #(
    .INIT(32'h00F20000)) 
     \FSM_onehot_STATE[8]_i_2__4 
       (.I0(\n_0_FSM_onehot_STATE[5]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I3(\n_0_FSM_onehot_STATE[7]_i_2__0 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_2__4 ));
(* SOFT_HLUTNM = "soft_lutpair198" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \FSM_onehot_STATE[8]_i_3__2 
       (.I0(BIT_COUNT_reg__0__0[2]),
        .I1(BIT_COUNT_reg__0__0[0]),
        .I2(BIT_COUNT_reg__0__0[1]),
        .I3(BIT_COUNT_reg__0__0[3]),
        .O(\n_0_FSM_onehot_STATE[8]_i_3__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_STATE[9]_i_1__4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_3__0 ),
        .I2(\n_0_FSM_onehot_STATE[9]_i_2__1 ),
        .I3(BIT_COUNT_reg__0__0[2]),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4__0 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_5__0 ),
        .O(\n_0_FSM_onehot_STATE[9]_i_1__4 ));
(* SOFT_HLUTNM = "soft_lutpair205" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_STATE[9]_i_2__1 
       (.I0(BIT_COUNT_reg__0__0[3]),
        .I1(BIT_COUNT_reg__0__0[1]),
        .I2(BIT_COUNT_reg__0__0[0]),
        .O(\n_0_FSM_onehot_STATE[9]_i_2__1 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_STATE_reg[0] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[0]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[0] ),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[10] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[10]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[10] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[1] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[1]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[1] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[2] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[2]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[2] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[3] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[3]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[3] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[4] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[4]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[4] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[5] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[5]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[5] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[6] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[6]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[6] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[7] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[7]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[7] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[8] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[8]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[8] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[9] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[9]_i_1__4 ),
        .Q(\n_0_FSM_onehot_STATE_reg[9] ),
        .R(SRESET));
LUT3 #(
    .INIT(8'hB8)) 
     \GEN_INTERRUPT_LOGIC.AN_COMPLETE_REG1_i_1__0 
       (.I0(MR_AN_COMPLETE),
        .I1(MDC_RISING_OUT),
        .I2(AN_COMPLETE_REG1),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair197" *) 
   LUT4 #(
    .INIT(16'hFFE2)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_ENABLE_i_1__0 
       (.I0(AN_INTERRUPT_ENABLE),
        .I1(AN_INTERRUPT_ENABLE7_out),
        .I2(DATA_OUT[0]),
        .I3(SRESET),
        .O(O2));
LUT6 #(
    .INIT(64'hB0B0F0B00000F000)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_1__0 
       (.I0(DATA_OUT[1]),
        .I1(AN_INTERRUPT_ENABLE7_out),
        .I2(I6),
        .I3(MR_AN_COMPLETE),
        .I4(AN_COMPLETE_REG1),
        .I5(an_interrupt_ch1),
        .O(O3));
LUT6 #(
    .INIT(64'h0000000000000010)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_2__0 
       (.I0(ADDR_WR[2]),
        .I1(ADDR_WR[0]),
        .I2(ADDR_WR[4]),
        .I3(ADDR_WR[1]),
        .I4(ADDR_WR[3]),
        .I5(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__0 ),
        .O(AN_INTERRUPT_ENABLE7_out));
(* SOFT_HLUTNM = "soft_lutpair206" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__0 
       (.I0(WE),
        .I1(MDC_RISING_OUT),
        .O(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__0 ));
GND GND
       (.G(\<const0> ));
LUT2 #(
    .INIT(4'h2)) 
     LAST_DATA_SHIFT_i_1__0
       (.I0(MDC_RISING_REG1_0),
        .I1(n_0_LAST_DATA_SHIFT_i_2__0),
        .O(LAST_DATA_SHIFT0));
LUT6 #(
    .INIT(64'hFFFFFF01FFFFFFFF)) 
     LAST_DATA_SHIFT_i_2__0
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_12__0 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_8__0 ),
        .I5(n_0_LAST_DATA_SHIFT_i_3__0),
        .O(n_0_LAST_DATA_SHIFT_i_2__0));
LUT5 #(
    .INIT(32'h00000001)) 
     LAST_DATA_SHIFT_i_3__0
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(n_0_LAST_DATA_SHIFT_i_3__0));
FDRE #(
    .INIT(1'b0)) 
     LAST_DATA_SHIFT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(LAST_DATA_SHIFT0),
        .Q(LAST_DATA_SHIFT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG1),
        .Q(MDC_RISING_REG1_0),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG1_0),
        .Q(MDC_RISING_REG2),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG2),
        .Q(MDC_RISING_OUT),
        .R(SRESET));
FDSE #(
    .INIT(1'b0)) 
     MDIO_IN_REG_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(MDIO_IN__0),
        .Q(ADDR_RD),
        .S(SRESET));
LUT6 #(
    .INIT(64'hFFFFFFFFFFBF3B3B)) 
     MDIO_OUT_i_1__0
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(n_0_MDIO_OUT_i_2__0),
        .I2(n_0_MDIO_OUT_i_3__0),
        .I3(DATA_OUT[15]),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(n_0_MDIO_OUT_i_4__0),
        .O(n_0_MDIO_OUT_i_1__0));
(* SOFT_HLUTNM = "soft_lutpair187" *) 
   LUT2 #(
    .INIT(4'h1)) 
     MDIO_OUT_i_2__0
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(n_0_MDIO_OUT_i_2__0));
LUT3 #(
    .INIT(8'h40)) 
     MDIO_OUT_i_3__0
       (.I0(\n_0_OPCODE_reg[0] ),
        .I1(\n_0_OPCODE_reg[1] ),
        .I2(n_0_ADDRESS_MATCH_reg),
        .O(n_0_MDIO_OUT_i_3__0));
LUT6 #(
    .INIT(64'hFFEAFEEAFFEAFFEA)) 
     MDIO_OUT_i_4__0
       (.I0(n_0_MDIO_TRI_i_2__0),
        .I1(DATA_OUT[15]),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(n_0_MDIO_OUT_i_3__0),
        .O(n_0_MDIO_OUT_i_4__0));
FDSE MDIO_OUT_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(n_0_MDIO_OUT_i_1__0),
        .Q(mdio_o_ch1),
        .S(SRESET));
LUT6 #(
    .INIT(64'hFFFBFBBAFFFFFFFF)) 
     MDIO_TRI_i_1__0
       (.I0(n_0_MDIO_TRI_i_2__0),
        .I1(n_0_MDIO_OUT_i_3__0),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[8] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(n_0_MDIO_OUT_i_2__0),
        .O(n_0_MDIO_TRI_i_1__0));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FF0)) 
     MDIO_TRI_i_2__0
       (.I0(\n_0_FSM_onehot_STATE[8]_i_3__2 ),
        .I1(n_0_MDIO_OUT_i_3__0),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(n_0_MDIO_TRI_i_3__0),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .I5(n_0_ADDRESS_MATCH_i_3__0),
        .O(n_0_MDIO_TRI_i_2__0));
(* SOFT_HLUTNM = "soft_lutpair204" *) 
   LUT3 #(
    .INIT(8'h01)) 
     MDIO_TRI_i_3__0
       (.I0(\n_0_FSM_onehot_STATE_reg[6] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(n_0_MDIO_TRI_i_3__0));
FDSE MDIO_TRI_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(n_0_MDIO_TRI_i_1__0),
        .Q(mdio_t_ch1),
        .S(SRESET));
(* SOFT_HLUTNM = "soft_lutpair207" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \OPCODE[0]_i_1__0 
       (.I0(DATA_OUT[0]),
        .I1(OPCODE),
        .I2(\n_0_OPCODE_reg[0] ),
        .O(\n_0_OPCODE[0]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair207" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \OPCODE[1]_i_1__0 
       (.I0(DATA_OUT[1]),
        .I1(OPCODE),
        .I2(\n_0_OPCODE_reg[1] ),
        .O(\n_0_OPCODE[1]_i_1__0 ));
LUT5 #(
    .INIT(32'h00002000)) 
     \OPCODE[1]_i_2__0 
       (.I0(n_0_LAST_DATA_SHIFT_i_3__0),
        .I1(\n_0_FSM_onehot_STATE[9]_i_2__1 ),
        .I2(BIT_COUNT_reg__0__0[2]),
        .I3(MDC_RISING_REG1),
        .I4(\n_0_SHIFT_REG[15]_i_5__0 ),
        .O(OPCODE));
FDRE #(
    .INIT(1'b0)) 
     \OPCODE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_OPCODE[0]_i_1__0 ),
        .Q(\n_0_OPCODE_reg[0] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \OPCODE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_OPCODE[1]_i_1__0 ),
        .Q(\n_0_OPCODE_reg[1] ),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h00E2)) 
     \QSGMII_SPEC.RUNDISP_EN_REG_i_1__0 
       (.I0(I7),
        .I1(RUNDISP_EN_REG),
        .I2(DATA_OUT[0]),
        .I3(SRESET),
        .O(O4));
LUT6 #(
    .INIT(64'h0000000000020000)) 
     \QSGMII_SPEC.RUNDISP_EN_REG_i_2__0 
       (.I0(ADDR_WR[4]),
        .I1(ADDR_WR[0]),
        .I2(ADDR_WR[3]),
        .I3(ADDR_WR[2]),
        .I4(ADDR_WR[1]),
        .I5(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4__0 ),
        .O(RUNDISP_EN_REG));
(* SOFT_HLUTNM = "soft_lutpair193" *) 
   LUT5 #(
    .INIT(32'h002F0020)) 
     RD_i_1__0
       (.I0(n_0_MDIO_OUT_i_3__0),
        .I1(n_0_LAST_DATA_SHIFT_i_2__0),
        .I2(MDC_RISING_REG2),
        .I3(SRESET),
        .I4(RD),
        .O(n_0_RD_i_1__0));
FDRE RD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RD_i_1__0),
        .Q(RD),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \SHIFT_REG[0]_i_1__0 
       (.I0(ADDR_RD),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[0]_i_2__0 ),
        .I3(DATA_OUT[3]),
        .I4(\n_0_SHIFT_REG[0]_i_3__0 ),
        .O(\n_0_SHIFT_REG[0]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000005450540)) 
     \SHIFT_REG[0]_i_2__0 
       (.I0(DATA_OUT[1]),
        .I1(I7),
        .I2(DATA_OUT[0]),
        .I3(ADDR_RD),
        .I4(AN_INTERRUPT_ENABLE),
        .I5(DATA_OUT[2]),
        .O(\n_0_SHIFT_REG[0]_i_2__0 ));
LUT5 #(
    .INIT(32'h00003308)) 
     \SHIFT_REG[0]_i_3__0 
       (.I0(I11[0]),
        .I1(DATA_OUT[2]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[0]),
        .O(\n_0_SHIFT_REG[0]_i_3__0 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[10]_i_1__0 
       (.I0(DATA_OUT[9]),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[10]_i_2__0 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[10]_i_1__0 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[10]_i_2__0 
       (.I0(DATA_OUT[0]),
        .I1(I11[10]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[10]_i_3__0 ),
        .O(\n_0_SHIFT_REG[10]_i_2__0 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[10]_i_3__0 
       (.I0(I4),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I14),
        .O(\n_0_SHIFT_REG[10]_i_3__0 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[11]_i_1__0 
       (.I0(DATA_OUT[10]),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[11]_i_2__0 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[11]_i_1__0 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[11]_i_2__0 
       (.I0(DATA_OUT[0]),
        .I1(I11[11]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[11]_i_3__0 ),
        .O(\n_0_SHIFT_REG[11]_i_2__0 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[11]_i_3__0 
       (.I0(I3),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I13),
        .O(\n_0_SHIFT_REG[11]_i_3__0 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[12]_i_1__0 
       (.I0(DATA_OUT[11]),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[12]_i_2__0 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[12]_i_1__0 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[12]_i_2__0 
       (.I0(DATA_OUT[0]),
        .I1(I11[12]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[12]_i_3__0 ),
        .O(\n_0_SHIFT_REG[12]_i_2__0 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[12]_i_3__0 
       (.I0(I2),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(MR_LP_ADV_ABILITY[0]),
        .O(\n_0_SHIFT_REG[12]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair202" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[13]_i_1__0 
       (.I0(DATA_OUT[12]),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[13]_i_2__0 ),
        .O(\n_0_SHIFT_REG[13]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000000040000)) 
     \SHIFT_REG[13]_i_2__0 
       (.I0(DATA_OUT[0]),
        .I1(I11[13]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[13]_i_2__0 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[14]_i_1__0 
       (.I0(\n_0_SHIFT_REG_reg[13] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[14]_i_2__0 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[14]_i_1__0 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[14]_i_2__0 
       (.I0(DATA_OUT[0]),
        .I1(I11[14]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[14]_i_3__0 ),
        .O(\n_0_SHIFT_REG[14]_i_2__0 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[14]_i_3__0 
       (.I0(I1),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I12),
        .O(\n_0_SHIFT_REG[14]_i_3__0 ));
LUT2 #(
    .INIT(4'hE)) 
     \SHIFT_REG[15]_i_1__0 
       (.I0(MDC_RISING_REG1),
        .I1(LAST_DATA_SHIFT),
        .O(SHIFT_REG0));
(* SOFT_HLUTNM = "soft_lutpair195" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[15]_i_2__0 
       (.I0(DATA_OUT[14]),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[15]_i_4__0 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[15]_i_2__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \SHIFT_REG[15]_i_3__0 
       (.I0(\n_0_SHIFT_REG[15]_i_5__0 ),
        .I1(BIT_COUNT_reg__0__0[2]),
        .I2(BIT_COUNT_reg__0__0[0]),
        .I3(BIT_COUNT_reg__0__0[1]),
        .I4(BIT_COUNT_reg__0__0[3]),
        .I5(n_0_LAST_DATA_SHIFT_i_3__0),
        .O(\n_0_SHIFT_REG[15]_i_3__0 ));
LUT6 #(
    .INIT(64'h8810FFFF88100000)) 
     \SHIFT_REG[15]_i_4__0 
       (.I0(DATA_OUT[1]),
        .I1(ADDR_RD),
        .I2(I11[15]),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[15]_i_6__0 ),
        .O(\n_0_SHIFT_REG[15]_i_4__0 ));
(* SOFT_HLUTNM = "soft_lutpair186" *) 
   LUT5 #(
    .INIT(32'hFFFFFFF7)) 
     \SHIFT_REG[15]_i_5__0 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_8__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_12__0 ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_SHIFT_REG[15]_i_5__0 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[15]_i_6__0 
       (.I0(SOFT_RESET_0),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(MR_LP_ADV_ABILITY[1]),
        .O(\n_0_SHIFT_REG[15]_i_6__0 ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \SHIFT_REG[1]_i_1__0 
       (.I0(DATA_OUT[0]),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[1]_i_2__0 ),
        .I3(DATA_OUT[3]),
        .I4(\n_0_SHIFT_REG[1]_i_3__0 ),
        .O(\n_0_SHIFT_REG[1]_i_1__0 ));
LUT5 #(
    .INIT(32'h00000010)) 
     \SHIFT_REG[1]_i_2__0 
       (.I0(DATA_OUT[1]),
        .I1(ADDR_RD),
        .I2(an_interrupt_ch1),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[2]),
        .O(\n_0_SHIFT_REG[1]_i_2__0 ));
LUT5 #(
    .INIT(32'h00000200)) 
     \SHIFT_REG[1]_i_3__0 
       (.I0(DATA_OUT[2]),
        .I1(DATA_OUT[1]),
        .I2(ADDR_RD),
        .I3(I11[1]),
        .I4(DATA_OUT[0]),
        .O(\n_0_SHIFT_REG[1]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair201" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[2]_i_1__0 
       (.I0(DATA_OUT[1]),
        .I1(\n_0_SHIFT_REG[4]_i_2__0 ),
        .I2(\n_0_SHIFT_REG[2]_i_2__0 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[2]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000003033000088)) 
     \SHIFT_REG[2]_i_2__0 
       (.I0(I11[2]),
        .I1(DATA_OUT[2]),
        .I2(MR_LINK_STATUS),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[1]),
        .I5(ADDR_RD),
        .O(\n_0_SHIFT_REG[2]_i_2__0 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[3]_i_1__0 
       (.I0(DATA_OUT[2]),
        .I1(\n_0_SHIFT_REG[4]_i_2__0 ),
        .I2(\n_0_SHIFT_REG[3]_i_2__0 ),
        .O(\n_0_SHIFT_REG[3]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000001100010)) 
     \SHIFT_REG[3]_i_2__0 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[2]),
        .I4(I11[3]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[3]_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair201" *) 
   LUT3 #(
    .INIT(8'hA4)) 
     \SHIFT_REG[4]_i_1__0 
       (.I0(\n_0_SHIFT_REG[4]_i_2__0 ),
        .I1(\n_0_SHIFT_REG[4]_i_3__0 ),
        .I2(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[4]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \SHIFT_REG[4]_i_2__0 
       (.I0(\n_0_SHIFT_REG[15]_i_5__0 ),
        .I1(n_0_LAST_DATA_SHIFT_i_3__0),
        .I2(BIT_COUNT_reg__0__0[3]),
        .I3(BIT_COUNT_reg__0__0[1]),
        .I4(BIT_COUNT_reg__0__0[0]),
        .I5(BIT_COUNT_reg__0__0[2]),
        .O(\n_0_SHIFT_REG[4]_i_2__0 ));
LUT6 #(
    .INIT(64'h0000003000000088)) 
     \SHIFT_REG[4]_i_3__0 
       (.I0(I11[4]),
        .I1(DATA_OUT[2]),
        .I2(status_vector_ch1),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[0]),
        .I5(ADDR_RD),
        .O(\n_0_SHIFT_REG[4]_i_3__0 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[5]_i_1__0 
       (.I0(\n_0_SHIFT_REG_reg[4] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[5]_i_2__0 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[5]_i_1__0 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[5]_i_2__0 
       (.I0(DATA_OUT[0]),
        .I1(I11[5]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[5]_i_3__0 ),
        .O(\n_0_SHIFT_REG[5]_i_2__0 ));
LUT5 #(
    .INIT(32'h000E0002)) 
     \SHIFT_REG[5]_i_3__0 
       (.I0(I8),
        .I1(ADDR_RD),
        .I2(DATA_OUT[0]),
        .I3(DATA_OUT[1]),
        .I4(MR_AN_COMPLETE),
        .O(\n_0_SHIFT_REG[5]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair203" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[6]_i_1__0 
       (.I0(DATA_OUT[5]),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[6]_i_2__0 ),
        .O(\n_0_SHIFT_REG[6]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000001110101)) 
     \SHIFT_REG[6]_i_2__0 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[2]),
        .I3(ADDR_RD),
        .I4(I11[6]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[6]_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair203" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[7]_i_1__0 
       (.I0(\n_0_SHIFT_REG_reg[6] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[7]_i_2__0 ),
        .O(\n_0_SHIFT_REG[7]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000001100010)) 
     \SHIFT_REG[7]_i_2__0 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[2]),
        .I4(I11[7]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[7]_i_2__0 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[8]_i_1__0 
       (.I0(\n_0_SHIFT_REG_reg[7] ),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[8]_i_2__0 ),
        .O(\n_0_SHIFT_REG[8]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000001110101)) 
     \SHIFT_REG[8]_i_2__0 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[2]),
        .I3(ADDR_RD),
        .I4(I11[8]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[8]_i_2__0 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[9]_i_1__0 
       (.I0(DATA_OUT[8]),
        .I1(\n_0_SHIFT_REG[15]_i_3__0 ),
        .I2(\n_0_SHIFT_REG[9]_i_2__0 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[9]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000B00000008)) 
     \SHIFT_REG[9]_i_2__0 
       (.I0(I11[9]),
        .I1(DATA_OUT[2]),
        .I2(DATA_OUT[1]),
        .I3(DATA_OUT[0]),
        .I4(ADDR_RD),
        .I5(RESTART_AN_REG),
        .O(\n_0_SHIFT_REG[9]_i_2__0 ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[0] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[0]_i_1__0 ),
        .Q(DATA_OUT[0]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[10] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[10]_i_1__0 ),
        .Q(DATA_OUT[10]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[11] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[11]_i_1__0 ),
        .Q(DATA_OUT[11]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[12] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[12]_i_1__0 ),
        .Q(DATA_OUT[12]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[13] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[13]_i_1__0 ),
        .Q(\n_0_SHIFT_REG_reg[13] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[14] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[14]_i_1__0 ),
        .Q(DATA_OUT[14]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[15] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[15]_i_2__0 ),
        .Q(DATA_OUT[15]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[1] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[1]_i_1__0 ),
        .Q(DATA_OUT[1]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[2] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[2]_i_1__0 ),
        .Q(DATA_OUT[2]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[3] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[3]_i_1__0 ),
        .Q(DATA_OUT[3]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[4] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[4]_i_1__0 ),
        .Q(\n_0_SHIFT_REG_reg[4] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[5] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[5]_i_1__0 ),
        .Q(DATA_OUT[5]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[6] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[6]_i_1__0 ),
        .Q(\n_0_SHIFT_REG_reg[6] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[7] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[7]_i_1__0 ),
        .Q(\n_0_SHIFT_REG_reg[7] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[8] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[8]_i_1__0 ),
        .Q(DATA_OUT[8]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[9] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[9]_i_1__0 ),
        .Q(DATA_OUT[9]),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'h0800FFFF08000000)) 
     WE_i_1__0
       (.I0(n_0_WE_i_2__0),
        .I1(\n_0_OPCODE_reg[0] ),
        .I2(\n_0_OPCODE_reg[1] ),
        .I3(n_0_ADDRESS_MATCH_reg),
        .I4(n_0_WE_i_3__0),
        .I5(WE),
        .O(n_0_WE_i_1__0));
(* SOFT_HLUTNM = "soft_lutpair197" *) 
   LUT2 #(
    .INIT(4'h1)) 
     WE_i_2__0
       (.I0(SRESET),
        .I1(n_0_LAST_DATA_SHIFT_i_2__0),
        .O(n_0_WE_i_2__0));
(* SOFT_HLUTNM = "soft_lutpair193" *) 
   LUT2 #(
    .INIT(4'hE)) 
     WE_i_3__0
       (.I0(MDC_RISING_REG2),
        .I1(SRESET),
        .O(n_0_WE_i_3__0));
FDRE WE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_WE_i_1__0),
        .Q(WE),
        .R(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MDIO_INTERFACE" *) 
module quadsgmiiMDIO_INTERFACE_47
   (mdio_o_ch0,
    mdio_t_ch0,
    LOOPBACK_REG,
    O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    O7,
    O8,
    O9,
    O10,
    O11,
    O12,
    O13,
    SRESET,
    MDC_RISING_REG1,
    userclk2,
    MDIO_IN__0,
    I11,
    SOFT_RESET,
    MR_LP_ADV_ABILITY,
    I1,
    I12,
    I2,
    I3,
    I13,
    I4,
    I14,
    RESTART_AN_REG,
    status_vector_ch0,
    MR_LINK_STATUS,
    phyad_ch0,
    I5,
    AN_INTERRUPT_ENABLE,
    I6,
    MR_AN_COMPLETE,
    AN_COMPLETE_REG1,
    an_interrupt_ch0,
    I7,
    CLEAR_STATUS_REG,
    I8);
  output mdio_o_ch0;
  output mdio_t_ch0;
  output LOOPBACK_REG;
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output O7;
  output O8;
  output O9;
  output O10;
  output O11;
  output O12;
  output O13;
  input SRESET;
  input MDC_RISING_REG1;
  input userclk2;
  input MDIO_IN__0;
  input [15:0]I11;
  input SOFT_RESET;
  input [1:0]MR_LP_ADV_ABILITY;
  input I1;
  input I12;
  input I2;
  input I3;
  input I13;
  input I4;
  input I14;
  input RESTART_AN_REG;
  input [0:0]status_vector_ch0;
  input MR_LINK_STATUS;
  input [4:0]phyad_ch0;
  input I5;
  input AN_INTERRUPT_ENABLE;
  input I6;
  input MR_AN_COMPLETE;
  input AN_COMPLETE_REG1;
  input an_interrupt_ch0;
  input I7;
  input CLEAR_STATUS_REG;
  input I8;

  wire \<const0> ;
  wire \<const1> ;
  wire ADDRESS_MATCH_COMB;
  wire [0:0]ADDR_RD;
  wire [4:0]ADDR_WR;
  wire AN_COMPLETE_REG1;
  wire AN_INTERRUPT_ENABLE;
  wire AN_INTERRUPT_ENABLE7_out;
  wire [3:0]BIT_COUNT_reg__0;
  wire CLEAR_STATUS_REG;
  wire CLEAR_STATUS_REG_COMB;
  wire [15:0]DATA_OUT;
  wire I1;
  wire [15:0]I11;
  wire I12;
  wire I13;
  wire I14;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire LAST_DATA_SHIFT;
  wire LAST_DATA_SHIFT0;
  wire LOOPBACK_REG;
  wire MDC_RISING_OUT;
  wire MDC_RISING_REG1;
  wire MDC_RISING_REG1_0;
  wire MDC_RISING_REG2;
  wire MDIO_IN__0;
  wire MR_AN_COMPLETE;
  wire MR_LINK_STATUS;
  wire [1:0]MR_LP_ADV_ABILITY;
  wire O1;
  wire O10;
  wire O11;
  wire O12;
  wire O13;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire OPCODE;
  wire RD;
  wire RESTART_AN_REG;
  wire RUNDISP_EN_REG;
  wire SHIFT_REG0;
  wire SOFT_RESET;
  wire SRESET;
  wire WE;
  wire an_interrupt_ch0;
  wire mdio_o_ch0;
  wire mdio_t_ch0;
  wire n_0_ADDRESS_MATCH_i_1;
  wire n_0_ADDRESS_MATCH_i_2;
  wire n_0_ADDRESS_MATCH_i_3;
  wire n_0_ADDRESS_MATCH_i_4;
  wire n_0_ADDRESS_MATCH_i_6;
  wire n_0_ADDRESS_MATCH_i_7;
  wire n_0_ADDRESS_MATCH_reg;
  wire \n_0_ADDR_WR[4]_i_1 ;
  wire \n_0_BIT_COUNT[3]_i_1 ;
  wire \n_0_BIT_COUNT[3]_i_3 ;
  wire \n_0_BIT_COUNT[3]_i_4 ;
  wire \n_0_BIT_COUNT[3]_i_5 ;
  wire \n_0_BIT_COUNT[3]_i_6 ;
  wire \n_0_BIT_COUNT[3]_i_7 ;
  wire \n_0_BIT_COUNT[3]_i_8 ;
  wire \n_0_BIT_COUNT[3]_i_9 ;
  wire \n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ;
  wire \n_0_FSM_onehot_STATE[0]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[10]_i_10 ;
  wire \n_0_FSM_onehot_STATE[10]_i_11 ;
  wire \n_0_FSM_onehot_STATE[10]_i_12 ;
  wire \n_0_FSM_onehot_STATE[10]_i_13 ;
  wire \n_0_FSM_onehot_STATE[10]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_2__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_3 ;
  wire \n_0_FSM_onehot_STATE[10]_i_4 ;
  wire \n_0_FSM_onehot_STATE[10]_i_5 ;
  wire \n_0_FSM_onehot_STATE[10]_i_6 ;
  wire \n_0_FSM_onehot_STATE[10]_i_7 ;
  wire \n_0_FSM_onehot_STATE[10]_i_8 ;
  wire \n_0_FSM_onehot_STATE[10]_i_9 ;
  wire \n_0_FSM_onehot_STATE[1]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[2]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[3]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[4]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[5]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[5]_i_2 ;
  wire \n_0_FSM_onehot_STATE[6]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[7]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[7]_i_2 ;
  wire \n_0_FSM_onehot_STATE[8]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[8]_i_2__3 ;
  wire \n_0_FSM_onehot_STATE[8]_i_3__0 ;
  wire \n_0_FSM_onehot_STATE[9]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[9]_i_2 ;
  wire \n_0_FSM_onehot_STATE_reg[0] ;
  wire \n_0_FSM_onehot_STATE_reg[10] ;
  wire \n_0_FSM_onehot_STATE_reg[1] ;
  wire \n_0_FSM_onehot_STATE_reg[2] ;
  wire \n_0_FSM_onehot_STATE_reg[3] ;
  wire \n_0_FSM_onehot_STATE_reg[4] ;
  wire \n_0_FSM_onehot_STATE_reg[5] ;
  wire \n_0_FSM_onehot_STATE_reg[6] ;
  wire \n_0_FSM_onehot_STATE_reg[7] ;
  wire \n_0_FSM_onehot_STATE_reg[8] ;
  wire \n_0_FSM_onehot_STATE_reg[9] ;
  wire \n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4 ;
  wire n_0_LAST_DATA_SHIFT_i_2;
  wire n_0_LAST_DATA_SHIFT_i_3;
  wire n_0_MDIO_OUT_i_1;
  wire n_0_MDIO_OUT_i_2;
  wire n_0_MDIO_OUT_i_3;
  wire n_0_MDIO_OUT_i_4;
  wire n_0_MDIO_TRI_i_1;
  wire n_0_MDIO_TRI_i_2;
  wire n_0_MDIO_TRI_i_3;
  wire \n_0_OPCODE[0]_i_1 ;
  wire \n_0_OPCODE[1]_i_1 ;
  wire \n_0_OPCODE_reg[0] ;
  wire \n_0_OPCODE_reg[1] ;
  wire n_0_RD_i_1;
  wire \n_0_SHIFT_REG[0]_i_1 ;
  wire \n_0_SHIFT_REG[0]_i_2 ;
  wire \n_0_SHIFT_REG[0]_i_3 ;
  wire \n_0_SHIFT_REG[10]_i_1 ;
  wire \n_0_SHIFT_REG[10]_i_2 ;
  wire \n_0_SHIFT_REG[10]_i_3 ;
  wire \n_0_SHIFT_REG[11]_i_1 ;
  wire \n_0_SHIFT_REG[11]_i_2 ;
  wire \n_0_SHIFT_REG[11]_i_3 ;
  wire \n_0_SHIFT_REG[12]_i_1 ;
  wire \n_0_SHIFT_REG[12]_i_2 ;
  wire \n_0_SHIFT_REG[12]_i_3 ;
  wire \n_0_SHIFT_REG[13]_i_1 ;
  wire \n_0_SHIFT_REG[13]_i_2 ;
  wire \n_0_SHIFT_REG[14]_i_1 ;
  wire \n_0_SHIFT_REG[14]_i_2 ;
  wire \n_0_SHIFT_REG[14]_i_3 ;
  wire \n_0_SHIFT_REG[15]_i_2 ;
  wire \n_0_SHIFT_REG[15]_i_3 ;
  wire \n_0_SHIFT_REG[15]_i_4 ;
  wire \n_0_SHIFT_REG[15]_i_5 ;
  wire \n_0_SHIFT_REG[15]_i_6 ;
  wire \n_0_SHIFT_REG[1]_i_1 ;
  wire \n_0_SHIFT_REG[1]_i_2 ;
  wire \n_0_SHIFT_REG[1]_i_3 ;
  wire \n_0_SHIFT_REG[2]_i_1 ;
  wire \n_0_SHIFT_REG[2]_i_2 ;
  wire \n_0_SHIFT_REG[3]_i_1 ;
  wire \n_0_SHIFT_REG[3]_i_2 ;
  wire \n_0_SHIFT_REG[4]_i_1 ;
  wire \n_0_SHIFT_REG[4]_i_2 ;
  wire \n_0_SHIFT_REG[4]_i_3 ;
  wire \n_0_SHIFT_REG[5]_i_1 ;
  wire \n_0_SHIFT_REG[5]_i_2 ;
  wire \n_0_SHIFT_REG[5]_i_3 ;
  wire \n_0_SHIFT_REG[6]_i_1 ;
  wire \n_0_SHIFT_REG[6]_i_2 ;
  wire \n_0_SHIFT_REG[7]_i_1 ;
  wire \n_0_SHIFT_REG[7]_i_2 ;
  wire \n_0_SHIFT_REG[8]_i_1 ;
  wire \n_0_SHIFT_REG[8]_i_2 ;
  wire \n_0_SHIFT_REG[9]_i_1 ;
  wire \n_0_SHIFT_REG[9]_i_2 ;
  wire \n_0_SHIFT_REG_reg[13] ;
  wire \n_0_SHIFT_REG_reg[4] ;
  wire \n_0_SHIFT_REG_reg[6] ;
  wire \n_0_SHIFT_REG_reg[7] ;
  wire n_0_WE_i_1;
  wire n_0_WE_i_2;
  wire n_0_WE_i_3;
  wire [3:0]p_0_in;
  wire [4:0]phyad_ch0;
  wire [0:0]status_vector_ch0;
  wire userclk2;

LUT6 #(
    .INIT(64'h00000000AAABAAA8)) 
     ADDRESS_MATCH_i_1
       (.I0(n_0_ADDRESS_MATCH_reg),
        .I1(n_0_ADDRESS_MATCH_i_2),
        .I2(n_0_ADDRESS_MATCH_i_3),
        .I3(n_0_ADDRESS_MATCH_i_4),
        .I4(ADDRESS_MATCH_COMB),
        .I5(SRESET),
        .O(n_0_ADDRESS_MATCH_i_1));
(* SOFT_HLUTNM = "soft_lutpair57" *) 
   LUT5 #(
    .INIT(32'hFEFFFFFF)) 
     ADDRESS_MATCH_i_2
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(MDC_RISING_REG1),
        .O(n_0_ADDRESS_MATCH_i_2));
(* SOFT_HLUTNM = "soft_lutpair65" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     ADDRESS_MATCH_i_3
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[0] ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(n_0_ADDRESS_MATCH_i_3));
(* SOFT_HLUTNM = "soft_lutpair55" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     ADDRESS_MATCH_i_4
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .O(n_0_ADDRESS_MATCH_i_4));
LUT6 #(
    .INIT(64'hFFFFFFFF41000041)) 
     ADDRESS_MATCH_i_5
       (.I0(n_0_ADDRESS_MATCH_i_6),
        .I1(phyad_ch0[1]),
        .I2(DATA_OUT[0]),
        .I3(phyad_ch0[3]),
        .I4(DATA_OUT[2]),
        .I5(n_0_ADDRESS_MATCH_i_7),
        .O(ADDRESS_MATCH_COMB));
LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
     ADDRESS_MATCH_i_6
       (.I0(phyad_ch0[4]),
        .I1(DATA_OUT[3]),
        .I2(ADDR_RD),
        .I3(phyad_ch0[0]),
        .I4(DATA_OUT[1]),
        .I5(phyad_ch0[2]),
        .O(n_0_ADDRESS_MATCH_i_6));
LUT5 #(
    .INIT(32'h00000001)) 
     ADDRESS_MATCH_i_7
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[3]),
        .I4(DATA_OUT[2]),
        .O(n_0_ADDRESS_MATCH_i_7));
FDRE #(
    .INIT(1'b0)) 
     ADDRESS_MATCH_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ADDRESS_MATCH_i_1),
        .Q(n_0_ADDRESS_MATCH_reg),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h2)) 
     \ADDR_WR[4]_i_1 
       (.I0(MDC_RISING_REG1),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .O(\n_0_ADDR_WR[4]_i_1 ));
FDRE \ADDR_WR_reg[0] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1 ),
        .D(ADDR_RD),
        .Q(ADDR_WR[0]),
        .R(SRESET));
FDRE \ADDR_WR_reg[1] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1 ),
        .D(DATA_OUT[0]),
        .Q(ADDR_WR[1]),
        .R(SRESET));
FDRE \ADDR_WR_reg[2] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1 ),
        .D(DATA_OUT[1]),
        .Q(ADDR_WR[2]),
        .R(SRESET));
FDRE \ADDR_WR_reg[3] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1 ),
        .D(DATA_OUT[2]),
        .Q(ADDR_WR[3]),
        .R(SRESET));
FDRE \ADDR_WR_reg[4] 
       (.C(userclk2),
        .CE(\n_0_ADDR_WR[4]_i_1 ),
        .D(DATA_OUT[3]),
        .Q(ADDR_WR[4]),
        .R(SRESET));
LUT3 #(
    .INIT(8'hBA)) 
     \BIT_COUNT[0]_i_1 
       (.I0(\n_0_BIT_COUNT[3]_i_4 ),
        .I1(BIT_COUNT_reg__0[0]),
        .I2(\n_0_BIT_COUNT[3]_i_3 ),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair74" *) 
   LUT3 #(
    .INIT(8'h82)) 
     \BIT_COUNT[1]_i_1 
       (.I0(\n_0_BIT_COUNT[3]_i_3 ),
        .I1(BIT_COUNT_reg__0[1]),
        .I2(BIT_COUNT_reg__0[0]),
        .O(p_0_in[1]));
(* SOFT_HLUTNM = "soft_lutpair67" *) 
   LUT4 #(
    .INIT(16'hE1FF)) 
     \BIT_COUNT[2]_i_1 
       (.I0(BIT_COUNT_reg__0[0]),
        .I1(BIT_COUNT_reg__0[1]),
        .I2(BIT_COUNT_reg__0[2]),
        .I3(\n_0_BIT_COUNT[3]_i_3 ),
        .O(p_0_in[2]));
LUT6 #(
    .INIT(64'hAAAAAAA8AAAAAAAA)) 
     \BIT_COUNT[3]_i_1 
       (.I0(MDC_RISING_REG1),
        .I1(BIT_COUNT_reg__0[2]),
        .I2(BIT_COUNT_reg__0[0]),
        .I3(BIT_COUNT_reg__0[1]),
        .I4(BIT_COUNT_reg__0[3]),
        .I5(\n_0_BIT_COUNT[3]_i_3 ),
        .O(\n_0_BIT_COUNT[3]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFAAA90000)) 
     \BIT_COUNT[3]_i_2 
       (.I0(BIT_COUNT_reg__0[3]),
        .I1(BIT_COUNT_reg__0[0]),
        .I2(BIT_COUNT_reg__0[1]),
        .I3(BIT_COUNT_reg__0[2]),
        .I4(\n_0_BIT_COUNT[3]_i_3 ),
        .I5(\n_0_BIT_COUNT[3]_i_4 ),
        .O(p_0_in[3]));
LUT5 #(
    .INIT(32'hFFF7F33F)) 
     \BIT_COUNT[3]_i_3 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_3__0 ),
        .I1(\n_0_BIT_COUNT[3]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_BIT_COUNT[3]_i_3 ));
LUT6 #(
    .INIT(64'h0008000808800080)) 
     \BIT_COUNT[3]_i_4 
       (.I0(\n_0_BIT_COUNT[3]_i_6 ),
        .I1(\n_0_BIT_COUNT[3]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE[8]_i_3__0 ),
        .I5(\n_0_FSM_onehot_STATE_reg[3] ),
        .O(\n_0_BIT_COUNT[3]_i_4 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \BIT_COUNT[3]_i_5 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_BIT_COUNT[3]_i_7 ),
        .I5(\n_0_BIT_COUNT[3]_i_8 ),
        .O(\n_0_BIT_COUNT[3]_i_5 ));
LUT6 #(
    .INIT(64'h0000000000000002)) 
     \BIT_COUNT[3]_i_6 
       (.I0(\n_0_BIT_COUNT[3]_i_9 ),
        .I1(n_0_ADDRESS_MATCH_i_4),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_BIT_COUNT[3]_i_6 ));
LUT2 #(
    .INIT(4'hE)) 
     \BIT_COUNT[3]_i_7 
       (.I0(\n_0_FSM_onehot_STATE_reg[0] ),
        .I1(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_BIT_COUNT[3]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair73" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \BIT_COUNT[3]_i_8 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_BIT_COUNT[3]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair65" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     \BIT_COUNT[3]_i_9 
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[3] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_BIT_COUNT[3]_i_9 ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[0] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1 ),
        .D(p_0_in[0]),
        .Q(BIT_COUNT_reg__0[0]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[1] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1 ),
        .D(p_0_in[1]),
        .Q(BIT_COUNT_reg__0[1]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[2] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1 ),
        .D(p_0_in[2]),
        .Q(BIT_COUNT_reg__0[2]),
        .R(\<const0> ));
(* counter = "33" *) 
   FDRE #(
    .INIT(1'b0)) 
     \BIT_COUNT_reg[3] 
       (.C(userclk2),
        .CE(\n_0_BIT_COUNT[3]_i_1 ),
        .D(p_0_in[3]),
        .Q(BIT_COUNT_reg__0[3]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair75" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     CLEAR_STATUS_REG_i_1
       (.I0(CLEAR_STATUS_REG_COMB),
        .I1(MDC_RISING_OUT),
        .I2(CLEAR_STATUS_REG),
        .O(O8));
LUT6 #(
    .INIT(64'h0000000400000000)) 
     CLEAR_STATUS_REG_i_2
       (.I0(ADDR_WR[3]),
        .I1(RD),
        .I2(ADDR_WR[2]),
        .I3(ADDR_WR[1]),
        .I4(ADDR_WR[4]),
        .I5(ADDR_WR[0]),
        .O(CLEAR_STATUS_REG_COMB));
(* SOFT_HLUTNM = "soft_lutpair71" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.AN_ENABLE_REG_i_1 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ),
        .I1(DATA_OUT[12]),
        .O(O12));
(* SOFT_HLUTNM = "soft_lutpair60" *) 
   LUT5 #(
    .INIT(32'h23332000)) 
     \CONFIG_REG_WITH_AN.DUPLEX_MODE_REG_i_1 
       (.I0(DATA_OUT[8]),
        .I1(SRESET),
        .I2(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ),
        .I3(MDC_RISING_OUT),
        .I4(I5),
        .O(O1));
(* SOFT_HLUTNM = "soft_lutpair60" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_1 
       (.I0(MDC_RISING_OUT),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ),
        .O(LOOPBACK_REG));
(* SOFT_HLUTNM = "soft_lutpair69" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_2 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ),
        .I1(DATA_OUT[10]),
        .O(O11));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     \CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 
       (.I0(ADDR_WR[3]),
        .I1(WE),
        .I2(ADDR_WR[0]),
        .I3(ADDR_WR[4]),
        .I4(ADDR_WR[2]),
        .I5(ADDR_WR[1]),
        .O(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair64" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.LOOPBACK_REG_i_1 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ),
        .I1(DATA_OUT[14]),
        .O(O13));
(* SOFT_HLUTNM = "soft_lutpair68" *) 
   LUT4 #(
    .INIT(16'hFF80)) 
     \CONFIG_REG_WITH_AN.POWERDOWN_REG_i_1 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ),
        .I1(DATA_OUT[11]),
        .I2(MDC_RISING_OUT),
        .I3(I3),
        .O(O6));
(* SOFT_HLUTNM = "soft_lutpair69" *) 
   LUT4 #(
    .INIT(16'hFF80)) 
     \CONFIG_REG_WITH_AN.RESET_REG_i_1 
       (.I0(DATA_OUT[15]),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ),
        .I2(MDC_RISING_OUT),
        .I3(SOFT_RESET),
        .O(O7));
LUT5 #(
    .INIT(32'h080F0800)) 
     \CONFIG_REG_WITH_AN.RESTART_AN_REG_i_1 
       (.I0(DATA_OUT[9]),
        .I1(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ),
        .I2(SRESET),
        .I3(MDC_RISING_OUT),
        .I4(RESTART_AN_REG),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair68" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \CONFIG_REG_WITH_AN.UNIDIRECTIONAL_ENABLE_REG_i_1 
       (.I0(\n_0_CONFIG_REG_WITH_AN.ISOLATE_REG_i_3 ),
        .I1(DATA_OUT[5]),
        .O(O10));
LUT6 #(
    .INIT(64'h0020FFFF0020FF00)) 
     \FSM_onehot_STATE[0]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[7]_i_2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .I2(ADDR_RD),
        .I3(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_3 ),
        .O(\n_0_FSM_onehot_STATE[0]_i_1__3 ));
LUT6 #(
    .INIT(64'h0000000333373337)) 
     \FSM_onehot_STATE[10]_i_10 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_10 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_STATE[10]_i_11 
       (.I0(\n_0_FSM_onehot_STATE_reg[2] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[4] ),
        .I3(\n_0_FSM_onehot_STATE_reg[0] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_11 ));
(* SOFT_HLUTNM = "soft_lutpair57" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_STATE[10]_i_12 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_12 ));
(* SOFT_HLUTNM = "soft_lutpair54" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[10]_i_13 
       (.I0(\n_0_FSM_onehot_STATE_reg[6] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_13 ));
(* SOFT_HLUTNM = "soft_lutpair63" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \FSM_onehot_STATE[10]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_3 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000100010110)) 
     \FSM_onehot_STATE[10]_i_2__0 
       (.I0(n_0_ADDRESS_MATCH_i_4),
        .I1(n_0_ADDRESS_MATCH_i_3),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[5] ),
        .I5(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_2__0 ));
LUT5 #(
    .INIT(32'h02000000)) 
     \FSM_onehot_STATE[10]_i_3 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_6 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_7 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_8 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_9 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_10 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_3 ));
LUT6 #(
    .INIT(64'h0000000100010114)) 
     \FSM_onehot_STATE[10]_i_4 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_11 ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair56" *) 
   LUT5 #(
    .INIT(32'hFFFFFFE9)) 
     \FSM_onehot_STATE[10]_i_5 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .I3(n_0_ADDRESS_MATCH_i_3),
        .I4(\n_0_FSM_onehot_STATE[10]_i_12 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_5 ));
LUT6 #(
    .INIT(64'h0000001010101000)) 
     \FSM_onehot_STATE[10]_i_6 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_13 ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[9] ),
        .I5(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_STATE[10]_i_7 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[4] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[0] ),
        .I5(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair54" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_STATE[10]_i_8 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[10]_i_8 ));
LUT5 #(
    .INIT(32'h00000177)) 
     \FSM_onehot_STATE[10]_i_9 
       (.I0(\n_0_FSM_onehot_STATE_reg[7] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(n_0_ADDRESS_MATCH_i_3),
        .O(\n_0_FSM_onehot_STATE[10]_i_9 ));
(* SOFT_HLUTNM = "soft_lutpair58" *) 
   LUT4 #(
    .INIT(16'h0040)) 
     \FSM_onehot_STATE[1]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2 ),
        .I3(ADDR_RD),
        .O(\n_0_FSM_onehot_STATE[1]_i_1__3 ));
(* SOFT_HLUTNM = "soft_lutpair58" *) 
   LUT5 #(
    .INIT(32'h40000000)) 
     \FSM_onehot_STATE[2]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2 ),
        .I3(ADDR_RD),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .O(\n_0_FSM_onehot_STATE[2]_i_1__3 ));
(* SOFT_HLUTNM = "soft_lutpair63" *) 
   LUT4 #(
    .INIT(16'h0004)) 
     \FSM_onehot_STATE[3]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .O(\n_0_FSM_onehot_STATE[3]_i_1__3 ));
(* SOFT_HLUTNM = "soft_lutpair59" *) 
   LUT5 #(
    .INIT(32'h00084040)) 
     \FSM_onehot_STATE[4]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .I3(\n_0_FSM_onehot_STATE[8]_i_3__0 ),
        .I4(\n_0_FSM_onehot_STATE[7]_i_2 ),
        .O(\n_0_FSM_onehot_STATE[4]_i_1__3 ));
LUT5 #(
    .INIT(32'h00080800)) 
     \FSM_onehot_STATE[5]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[5]_i_2 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .I4(\n_0_FSM_onehot_STATE[8]_i_3__0 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000000010116)) 
     \FSM_onehot_STATE[5]_i_2 
       (.I0(\n_0_FSM_onehot_STATE_reg[7] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[2] ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_7 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair59" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \FSM_onehot_STATE[6]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2 ),
        .I3(\n_0_FSM_onehot_STATE[8]_i_3__0 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_1__3 ));
(* SOFT_HLUTNM = "soft_lutpair61" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     \FSM_onehot_STATE[7]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[7]_i_2 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_1__3 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
     \FSM_onehot_STATE[7]_i_2 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_7 ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[3] ),
        .I5(\n_0_FSM_onehot_STATE_reg[2] ),
        .O(\n_0_FSM_onehot_STATE[7]_i_2 ));
LUT6 #(
    .INIT(64'h888888888888888B)) 
     \FSM_onehot_STATE[8]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_2__3 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[8]_i_3__0 ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_3 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair61" *) 
   LUT5 #(
    .INIT(32'h00F20000)) 
     \FSM_onehot_STATE[8]_i_2__3 
       (.I0(\n_0_FSM_onehot_STATE[5]_i_2 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I3(\n_0_FSM_onehot_STATE[7]_i_2 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_2__3 ));
(* SOFT_HLUTNM = "soft_lutpair67" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \FSM_onehot_STATE[8]_i_3__0 
       (.I0(BIT_COUNT_reg__0[2]),
        .I1(BIT_COUNT_reg__0[0]),
        .I2(BIT_COUNT_reg__0[1]),
        .I3(BIT_COUNT_reg__0[3]),
        .O(\n_0_FSM_onehot_STATE[8]_i_3__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_STATE[9]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_3 ),
        .I2(\n_0_FSM_onehot_STATE[9]_i_2 ),
        .I3(BIT_COUNT_reg__0[2]),
        .I4(\n_0_FSM_onehot_STATE[10]_i_4 ),
        .I5(\n_0_FSM_onehot_STATE[10]_i_5 ),
        .O(\n_0_FSM_onehot_STATE[9]_i_1__3 ));
(* SOFT_HLUTNM = "soft_lutpair74" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_STATE[9]_i_2 
       (.I0(BIT_COUNT_reg__0[3]),
        .I1(BIT_COUNT_reg__0[1]),
        .I2(BIT_COUNT_reg__0[0]),
        .O(\n_0_FSM_onehot_STATE[9]_i_2 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_STATE_reg[0] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[0]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[0] ),
        .S(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[10] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[10]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[10] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[1] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[1]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[1] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[2] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[2]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[2] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[3] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[3]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[3] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[4] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[4]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[4] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[5] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[5]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[5] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[6] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[6]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[6] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[7] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[7]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[7] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[8] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[8]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[8] ),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[9] 
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(\n_0_FSM_onehot_STATE[9]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[9] ),
        .R(SRESET));
LUT3 #(
    .INIT(8'hB8)) 
     \GEN_INTERRUPT_LOGIC.AN_COMPLETE_REG1_i_1 
       (.I0(MR_AN_COMPLETE),
        .I1(MDC_RISING_OUT),
        .I2(AN_COMPLETE_REG1),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair66" *) 
   LUT4 #(
    .INIT(16'hFFE2)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_ENABLE_i_1 
       (.I0(AN_INTERRUPT_ENABLE),
        .I1(AN_INTERRUPT_ENABLE7_out),
        .I2(DATA_OUT[0]),
        .I3(SRESET),
        .O(O2));
LUT6 #(
    .INIT(64'hB0B0F0B00000F000)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_1 
       (.I0(DATA_OUT[1]),
        .I1(AN_INTERRUPT_ENABLE7_out),
        .I2(I6),
        .I3(MR_AN_COMPLETE),
        .I4(AN_COMPLETE_REG1),
        .I5(an_interrupt_ch0),
        .O(O3));
LUT6 #(
    .INIT(64'h0000000000000010)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_2 
       (.I0(ADDR_WR[2]),
        .I1(ADDR_WR[0]),
        .I2(ADDR_WR[4]),
        .I3(ADDR_WR[1]),
        .I4(ADDR_WR[3]),
        .I5(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4 ),
        .O(AN_INTERRUPT_ENABLE7_out));
(* SOFT_HLUTNM = "soft_lutpair75" *) 
   LUT2 #(
    .INIT(4'h7)) 
     \GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4 
       (.I0(WE),
        .I1(MDC_RISING_OUT),
        .O(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4 ));
GND GND
       (.G(\<const0> ));
LUT2 #(
    .INIT(4'h2)) 
     LAST_DATA_SHIFT_i_1
       (.I0(MDC_RISING_REG1_0),
        .I1(n_0_LAST_DATA_SHIFT_i_2),
        .O(LAST_DATA_SHIFT0));
LUT6 #(
    .INIT(64'hFFFFFF01FFFFFFFF)) 
     LAST_DATA_SHIFT_i_2
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE[10]_i_12 ),
        .I4(\n_0_FSM_onehot_STATE[10]_i_8 ),
        .I5(n_0_LAST_DATA_SHIFT_i_3),
        .O(n_0_LAST_DATA_SHIFT_i_2));
LUT5 #(
    .INIT(32'h00000001)) 
     LAST_DATA_SHIFT_i_3
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[3] ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .O(n_0_LAST_DATA_SHIFT_i_3));
FDRE #(
    .INIT(1'b0)) 
     LAST_DATA_SHIFT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(LAST_DATA_SHIFT0),
        .Q(LAST_DATA_SHIFT),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG1),
        .Q(MDC_RISING_REG1_0),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG1_0),
        .Q(MDC_RISING_REG2),
        .R(SRESET));
FDRE #(
    .INIT(1'b0)) 
     MDC_RISING_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(MDC_RISING_REG2),
        .Q(MDC_RISING_OUT),
        .R(SRESET));
FDSE #(
    .INIT(1'b0)) 
     MDIO_IN_REG_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(MDIO_IN__0),
        .Q(ADDR_RD),
        .S(SRESET));
LUT6 #(
    .INIT(64'hFFFFFFFFFFBF3B3B)) 
     MDIO_OUT_i_1
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(n_0_MDIO_OUT_i_2),
        .I2(n_0_MDIO_OUT_i_3),
        .I3(DATA_OUT[15]),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(n_0_MDIO_OUT_i_4),
        .O(n_0_MDIO_OUT_i_1));
(* SOFT_HLUTNM = "soft_lutpair56" *) 
   LUT2 #(
    .INIT(4'h1)) 
     MDIO_OUT_i_2
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(n_0_MDIO_OUT_i_2));
LUT3 #(
    .INIT(8'h40)) 
     MDIO_OUT_i_3
       (.I0(\n_0_OPCODE_reg[0] ),
        .I1(\n_0_OPCODE_reg[1] ),
        .I2(n_0_ADDRESS_MATCH_reg),
        .O(n_0_MDIO_OUT_i_3));
LUT6 #(
    .INIT(64'hFFEAFEEAFFEAFFEA)) 
     MDIO_OUT_i_4
       (.I0(n_0_MDIO_TRI_i_2),
        .I1(DATA_OUT[15]),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(n_0_MDIO_OUT_i_3),
        .O(n_0_MDIO_OUT_i_4));
FDSE MDIO_OUT_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(n_0_MDIO_OUT_i_1),
        .Q(mdio_o_ch0),
        .S(SRESET));
LUT6 #(
    .INIT(64'hFFFBFBBAFFFFFFFF)) 
     MDIO_TRI_i_1
       (.I0(n_0_MDIO_TRI_i_2),
        .I1(n_0_MDIO_OUT_i_3),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[8] ),
        .I4(\n_0_FSM_onehot_STATE_reg[6] ),
        .I5(n_0_MDIO_OUT_i_2),
        .O(n_0_MDIO_TRI_i_1));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FF0)) 
     MDIO_TRI_i_2
       (.I0(\n_0_FSM_onehot_STATE[8]_i_3__0 ),
        .I1(n_0_MDIO_OUT_i_3),
        .I2(\n_0_FSM_onehot_STATE_reg[5] ),
        .I3(n_0_MDIO_TRI_i_3),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .I5(n_0_ADDRESS_MATCH_i_3),
        .O(n_0_MDIO_TRI_i_2));
(* SOFT_HLUTNM = "soft_lutpair73" *) 
   LUT3 #(
    .INIT(8'h01)) 
     MDIO_TRI_i_3
       (.I0(\n_0_FSM_onehot_STATE_reg[6] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(n_0_MDIO_TRI_i_3));
FDSE MDIO_TRI_reg
       (.C(userclk2),
        .CE(MDC_RISING_REG1),
        .D(n_0_MDIO_TRI_i_1),
        .Q(mdio_t_ch0),
        .S(SRESET));
(* SOFT_HLUTNM = "soft_lutpair76" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \OPCODE[0]_i_1 
       (.I0(DATA_OUT[0]),
        .I1(OPCODE),
        .I2(\n_0_OPCODE_reg[0] ),
        .O(\n_0_OPCODE[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair76" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \OPCODE[1]_i_1 
       (.I0(DATA_OUT[1]),
        .I1(OPCODE),
        .I2(\n_0_OPCODE_reg[1] ),
        .O(\n_0_OPCODE[1]_i_1 ));
LUT5 #(
    .INIT(32'h00002000)) 
     \OPCODE[1]_i_2 
       (.I0(n_0_LAST_DATA_SHIFT_i_3),
        .I1(\n_0_FSM_onehot_STATE[9]_i_2 ),
        .I2(BIT_COUNT_reg__0[2]),
        .I3(MDC_RISING_REG1),
        .I4(\n_0_SHIFT_REG[15]_i_5 ),
        .O(OPCODE));
FDRE #(
    .INIT(1'b0)) 
     \OPCODE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_OPCODE[0]_i_1 ),
        .Q(\n_0_OPCODE_reg[0] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \OPCODE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_OPCODE[1]_i_1 ),
        .Q(\n_0_OPCODE_reg[1] ),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h00E2)) 
     \QSGMII_SPEC.RUNDISP_EN_REG_i_1 
       (.I0(I7),
        .I1(RUNDISP_EN_REG),
        .I2(DATA_OUT[0]),
        .I3(SRESET),
        .O(O4));
LUT6 #(
    .INIT(64'h0000000000020000)) 
     \QSGMII_SPEC.RUNDISP_EN_REG_i_2 
       (.I0(ADDR_WR[4]),
        .I1(ADDR_WR[0]),
        .I2(ADDR_WR[3]),
        .I3(ADDR_WR[2]),
        .I4(ADDR_WR[1]),
        .I5(\n_0_GEN_INTERRUPT_LOGIC.AN_INTERRUPT_INT_i_4 ),
        .O(RUNDISP_EN_REG));
(* SOFT_HLUTNM = "soft_lutpair62" *) 
   LUT5 #(
    .INIT(32'h002F0020)) 
     RD_i_1
       (.I0(n_0_MDIO_OUT_i_3),
        .I1(n_0_LAST_DATA_SHIFT_i_2),
        .I2(MDC_RISING_REG2),
        .I3(SRESET),
        .I4(RD),
        .O(n_0_RD_i_1));
FDRE RD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RD_i_1),
        .Q(RD),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \SHIFT_REG[0]_i_1 
       (.I0(ADDR_RD),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[0]_i_2 ),
        .I3(DATA_OUT[3]),
        .I4(\n_0_SHIFT_REG[0]_i_3 ),
        .O(\n_0_SHIFT_REG[0]_i_1 ));
LUT6 #(
    .INIT(64'h0000000005450540)) 
     \SHIFT_REG[0]_i_2 
       (.I0(DATA_OUT[1]),
        .I1(I7),
        .I2(DATA_OUT[0]),
        .I3(ADDR_RD),
        .I4(AN_INTERRUPT_ENABLE),
        .I5(DATA_OUT[2]),
        .O(\n_0_SHIFT_REG[0]_i_2 ));
LUT5 #(
    .INIT(32'h00003308)) 
     \SHIFT_REG[0]_i_3 
       (.I0(I11[0]),
        .I1(DATA_OUT[2]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[0]),
        .O(\n_0_SHIFT_REG[0]_i_3 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[10]_i_1 
       (.I0(DATA_OUT[9]),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[10]_i_2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[10]_i_1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[10]_i_2 
       (.I0(DATA_OUT[0]),
        .I1(I11[10]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[10]_i_3 ),
        .O(\n_0_SHIFT_REG[10]_i_2 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[10]_i_3 
       (.I0(I4),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I14),
        .O(\n_0_SHIFT_REG[10]_i_3 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[11]_i_1 
       (.I0(DATA_OUT[10]),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[11]_i_2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[11]_i_1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[11]_i_2 
       (.I0(DATA_OUT[0]),
        .I1(I11[11]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[11]_i_3 ),
        .O(\n_0_SHIFT_REG[11]_i_2 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[11]_i_3 
       (.I0(I3),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I13),
        .O(\n_0_SHIFT_REG[11]_i_3 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[12]_i_1 
       (.I0(DATA_OUT[11]),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[12]_i_2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[12]_i_1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[12]_i_2 
       (.I0(DATA_OUT[0]),
        .I1(I11[12]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[12]_i_3 ),
        .O(\n_0_SHIFT_REG[12]_i_2 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[12]_i_3 
       (.I0(I2),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(MR_LP_ADV_ABILITY[0]),
        .O(\n_0_SHIFT_REG[12]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair71" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[13]_i_1 
       (.I0(DATA_OUT[12]),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[13]_i_2 ),
        .O(\n_0_SHIFT_REG[13]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000040000)) 
     \SHIFT_REG[13]_i_2 
       (.I0(DATA_OUT[0]),
        .I1(I11[13]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[13]_i_2 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[14]_i_1 
       (.I0(\n_0_SHIFT_REG_reg[13] ),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[14]_i_2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[14]_i_1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[14]_i_2 
       (.I0(DATA_OUT[0]),
        .I1(I11[14]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[14]_i_3 ),
        .O(\n_0_SHIFT_REG[14]_i_2 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[14]_i_3 
       (.I0(I1),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(I12),
        .O(\n_0_SHIFT_REG[14]_i_3 ));
LUT2 #(
    .INIT(4'hE)) 
     \SHIFT_REG[15]_i_1 
       (.I0(MDC_RISING_REG1),
        .I1(LAST_DATA_SHIFT),
        .O(SHIFT_REG0));
(* SOFT_HLUTNM = "soft_lutpair64" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[15]_i_2 
       (.I0(DATA_OUT[14]),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[15]_i_4 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[15]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \SHIFT_REG[15]_i_3 
       (.I0(\n_0_SHIFT_REG[15]_i_5 ),
        .I1(BIT_COUNT_reg__0[2]),
        .I2(BIT_COUNT_reg__0[0]),
        .I3(BIT_COUNT_reg__0[1]),
        .I4(BIT_COUNT_reg__0[3]),
        .I5(n_0_LAST_DATA_SHIFT_i_3),
        .O(\n_0_SHIFT_REG[15]_i_3 ));
LUT6 #(
    .INIT(64'h8810FFFF88100000)) 
     \SHIFT_REG[15]_i_4 
       (.I0(DATA_OUT[1]),
        .I1(ADDR_RD),
        .I2(I11[15]),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[15]_i_6 ),
        .O(\n_0_SHIFT_REG[15]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair55" *) 
   LUT5 #(
    .INIT(32'hFFFFFFF7)) 
     \SHIFT_REG[15]_i_5 
       (.I0(\n_0_FSM_onehot_STATE[10]_i_8 ),
        .I1(\n_0_FSM_onehot_STATE[10]_i_12 ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_SHIFT_REG[15]_i_5 ));
LUT5 #(
    .INIT(32'h30020002)) 
     \SHIFT_REG[15]_i_6 
       (.I0(SOFT_RESET),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[1]),
        .I3(ADDR_RD),
        .I4(MR_LP_ADV_ABILITY[1]),
        .O(\n_0_SHIFT_REG[15]_i_6 ));
LUT5 #(
    .INIT(32'hB8BBB888)) 
     \SHIFT_REG[1]_i_1 
       (.I0(DATA_OUT[0]),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[1]_i_2 ),
        .I3(DATA_OUT[3]),
        .I4(\n_0_SHIFT_REG[1]_i_3 ),
        .O(\n_0_SHIFT_REG[1]_i_1 ));
LUT5 #(
    .INIT(32'h00000010)) 
     \SHIFT_REG[1]_i_2 
       (.I0(DATA_OUT[1]),
        .I1(ADDR_RD),
        .I2(an_interrupt_ch0),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[2]),
        .O(\n_0_SHIFT_REG[1]_i_2 ));
LUT5 #(
    .INIT(32'h00000200)) 
     \SHIFT_REG[1]_i_3 
       (.I0(DATA_OUT[2]),
        .I1(DATA_OUT[1]),
        .I2(ADDR_RD),
        .I3(I11[1]),
        .I4(DATA_OUT[0]),
        .O(\n_0_SHIFT_REG[1]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair70" *) 
   LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[2]_i_1 
       (.I0(DATA_OUT[1]),
        .I1(\n_0_SHIFT_REG[4]_i_2 ),
        .I2(\n_0_SHIFT_REG[2]_i_2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[2]_i_1 ));
LUT6 #(
    .INIT(64'h0000003033000088)) 
     \SHIFT_REG[2]_i_2 
       (.I0(I11[2]),
        .I1(DATA_OUT[2]),
        .I2(MR_LINK_STATUS),
        .I3(DATA_OUT[0]),
        .I4(DATA_OUT[1]),
        .I5(ADDR_RD),
        .O(\n_0_SHIFT_REG[2]_i_2 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[3]_i_1 
       (.I0(DATA_OUT[2]),
        .I1(\n_0_SHIFT_REG[4]_i_2 ),
        .I2(\n_0_SHIFT_REG[3]_i_2 ),
        .O(\n_0_SHIFT_REG[3]_i_1 ));
LUT6 #(
    .INIT(64'h0000000001100010)) 
     \SHIFT_REG[3]_i_2 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[2]),
        .I4(I11[3]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[3]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair70" *) 
   LUT3 #(
    .INIT(8'hA4)) 
     \SHIFT_REG[4]_i_1 
       (.I0(\n_0_SHIFT_REG[4]_i_2 ),
        .I1(\n_0_SHIFT_REG[4]_i_3 ),
        .I2(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[4]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \SHIFT_REG[4]_i_2 
       (.I0(\n_0_SHIFT_REG[15]_i_5 ),
        .I1(n_0_LAST_DATA_SHIFT_i_3),
        .I2(BIT_COUNT_reg__0[3]),
        .I3(BIT_COUNT_reg__0[1]),
        .I4(BIT_COUNT_reg__0[0]),
        .I5(BIT_COUNT_reg__0[2]),
        .O(\n_0_SHIFT_REG[4]_i_2 ));
LUT6 #(
    .INIT(64'h0000003000000088)) 
     \SHIFT_REG[4]_i_3 
       (.I0(I11[4]),
        .I1(DATA_OUT[2]),
        .I2(status_vector_ch0),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[0]),
        .I5(ADDR_RD),
        .O(\n_0_SHIFT_REG[4]_i_3 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[5]_i_1 
       (.I0(\n_0_SHIFT_REG_reg[4] ),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[5]_i_2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[5]_i_1 ));
LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
     \SHIFT_REG[5]_i_2 
       (.I0(DATA_OUT[0]),
        .I1(I11[5]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[1]),
        .I4(DATA_OUT[2]),
        .I5(\n_0_SHIFT_REG[5]_i_3 ),
        .O(\n_0_SHIFT_REG[5]_i_2 ));
LUT5 #(
    .INIT(32'h000E0002)) 
     \SHIFT_REG[5]_i_3 
       (.I0(I8),
        .I1(ADDR_RD),
        .I2(DATA_OUT[0]),
        .I3(DATA_OUT[1]),
        .I4(MR_AN_COMPLETE),
        .O(\n_0_SHIFT_REG[5]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair72" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[6]_i_1 
       (.I0(DATA_OUT[5]),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[6]_i_2 ),
        .O(\n_0_SHIFT_REG[6]_i_1 ));
LUT6 #(
    .INIT(64'h0000000001110101)) 
     \SHIFT_REG[6]_i_2 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[2]),
        .I3(ADDR_RD),
        .I4(I11[6]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[6]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair72" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[7]_i_1 
       (.I0(\n_0_SHIFT_REG_reg[6] ),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[7]_i_2 ),
        .O(\n_0_SHIFT_REG[7]_i_1 ));
LUT6 #(
    .INIT(64'h0000000001100010)) 
     \SHIFT_REG[7]_i_2 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(ADDR_RD),
        .I3(DATA_OUT[2]),
        .I4(I11[7]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[7]_i_2 ));
LUT3 #(
    .INIT(8'hB8)) 
     \SHIFT_REG[8]_i_1 
       (.I0(\n_0_SHIFT_REG_reg[7] ),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[8]_i_2 ),
        .O(\n_0_SHIFT_REG[8]_i_1 ));
LUT6 #(
    .INIT(64'h0000000001110101)) 
     \SHIFT_REG[8]_i_2 
       (.I0(DATA_OUT[1]),
        .I1(DATA_OUT[0]),
        .I2(DATA_OUT[2]),
        .I3(ADDR_RD),
        .I4(I11[8]),
        .I5(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[8]_i_2 ));
LUT4 #(
    .INIT(16'h88B8)) 
     \SHIFT_REG[9]_i_1 
       (.I0(DATA_OUT[8]),
        .I1(\n_0_SHIFT_REG[15]_i_3 ),
        .I2(\n_0_SHIFT_REG[9]_i_2 ),
        .I3(DATA_OUT[3]),
        .O(\n_0_SHIFT_REG[9]_i_1 ));
LUT6 #(
    .INIT(64'h0000000B00000008)) 
     \SHIFT_REG[9]_i_2 
       (.I0(I11[9]),
        .I1(DATA_OUT[2]),
        .I2(DATA_OUT[1]),
        .I3(DATA_OUT[0]),
        .I4(ADDR_RD),
        .I5(RESTART_AN_REG),
        .O(\n_0_SHIFT_REG[9]_i_2 ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[0] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[0]_i_1 ),
        .Q(DATA_OUT[0]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[10] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[10]_i_1 ),
        .Q(DATA_OUT[10]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[11] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[11]_i_1 ),
        .Q(DATA_OUT[11]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[12] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[12]_i_1 ),
        .Q(DATA_OUT[12]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[13] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[13]_i_1 ),
        .Q(\n_0_SHIFT_REG_reg[13] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[14] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[14]_i_1 ),
        .Q(DATA_OUT[14]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[15] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[15]_i_2 ),
        .Q(DATA_OUT[15]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[1] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[1]_i_1 ),
        .Q(DATA_OUT[1]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[2] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[2]_i_1 ),
        .Q(DATA_OUT[2]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[3] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[3]_i_1 ),
        .Q(DATA_OUT[3]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[4] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[4]_i_1 ),
        .Q(\n_0_SHIFT_REG_reg[4] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[5] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[5]_i_1 ),
        .Q(DATA_OUT[5]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[6] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[6]_i_1 ),
        .Q(\n_0_SHIFT_REG_reg[6] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[7] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[7]_i_1 ),
        .Q(\n_0_SHIFT_REG_reg[7] ),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[8] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[8]_i_1 ),
        .Q(DATA_OUT[8]),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     \SHIFT_REG_reg[9] 
       (.C(userclk2),
        .CE(SHIFT_REG0),
        .D(\n_0_SHIFT_REG[9]_i_1 ),
        .Q(DATA_OUT[9]),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'h0800FFFF08000000)) 
     WE_i_1
       (.I0(n_0_WE_i_2),
        .I1(\n_0_OPCODE_reg[0] ),
        .I2(\n_0_OPCODE_reg[1] ),
        .I3(n_0_ADDRESS_MATCH_reg),
        .I4(n_0_WE_i_3),
        .I5(WE),
        .O(n_0_WE_i_1));
(* SOFT_HLUTNM = "soft_lutpair66" *) 
   LUT2 #(
    .INIT(4'h1)) 
     WE_i_2
       (.I0(SRESET),
        .I1(n_0_LAST_DATA_SHIFT_i_2),
        .O(n_0_WE_i_2));
(* SOFT_HLUTNM = "soft_lutpair62" *) 
   LUT2 #(
    .INIT(4'hE)) 
     WE_i_3
       (.I0(MDC_RISING_REG2),
        .I1(SRESET),
        .O(n_0_WE_i_3));
FDRE WE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_WE_i_1),
        .Q(WE),
        .R(\<const0> ));
endmodule

module quadsgmiiQSGMII_GEN
   (SR,
    O1,
    gmii_rx_er_ch0_int,
    status_vector_ch0,
    mdio_o_ch0,
    mdio_t_ch0,
    O2,
    gmii_rx_dv_ch0_int,
    SOFT_RESET,
    an_interrupt_ch0,
    gmii_rx_er_ch1_int,
    status_vector_ch1,
    mdio_o_ch1,
    mdio_t_ch1,
    O3,
    gmii_rx_dv_ch1_int,
    SOFT_RESET_0,
    an_interrupt_ch1,
    gmii_rx_er_ch2_int,
    status_vector_ch2,
    mdio_o_ch2,
    mdio_t_ch2,
    O4,
    gmii_rx_dv_ch2_int,
    SOFT_RESET_1,
    an_interrupt_ch2,
    gmii_rx_er_ch3_int,
    status_vector_ch3,
    mdio_o_ch3,
    mdio_t_ch3,
    O5,
    gmii_rx_dv_ch3_int,
    SOFT_RESET_2,
    an_interrupt_ch3,
    data_valid,
    Q,
    O6,
    O7,
    O8,
    TXPD,
    TXCHARISK,
    txdata,
    ENABLEALIGN,
    rxuserclk2,
    userclk2,
    gmii_tx_er_out_ch0,
    gmii_tx_en_out_ch0,
    p_3_out,
    txbuferr,
    gmii_tx_er_out_ch1,
    gmii_tx_en_out_ch1,
    p_3_out_3,
    gmii_tx_er_out_ch2,
    gmii_tx_en_out_ch2,
    p_3_out_4,
    gmii_tx_er_out_ch3,
    gmii_tx_en_out_ch3,
    p_3_out_5,
    I1,
    link_timer_value_ch0,
    phyad_ch0,
    I2,
    link_timer_value_ch1,
    phyad_ch1,
    I3,
    link_timer_value_ch2,
    phyad_ch2,
    I4,
    link_timer_value_ch3,
    phyad_ch3,
    gt0_rxcharisk_out,
    gt0_rxnotintable_out,
    gt0_rxdisperr_out,
    gt0_rxchariscomma_out,
    signal_detect,
    mdc_ch0,
    mdio_i_ch0,
    I5,
    mdc_ch1,
    mdio_i_ch1,
    I6,
    mdc_ch2,
    mdio_i_ch2,
    I7,
    mdc_ch3,
    mdio_i_ch3,
    I8,
    rxdata);
  output [0:0]SR;
  output [0:0]O1;
  output gmii_rx_er_ch0_int;
  output [12:0]status_vector_ch0;
  output mdio_o_ch0;
  output mdio_t_ch0;
  output O2;
  output gmii_rx_dv_ch0_int;
  output SOFT_RESET;
  output an_interrupt_ch0;
  output gmii_rx_er_ch1_int;
  output [12:0]status_vector_ch1;
  output mdio_o_ch1;
  output mdio_t_ch1;
  output O3;
  output gmii_rx_dv_ch1_int;
  output SOFT_RESET_0;
  output an_interrupt_ch1;
  output gmii_rx_er_ch2_int;
  output [12:0]status_vector_ch2;
  output mdio_o_ch2;
  output mdio_t_ch2;
  output O4;
  output gmii_rx_dv_ch2_int;
  output SOFT_RESET_1;
  output an_interrupt_ch2;
  output gmii_rx_er_ch3_int;
  output [12:0]status_vector_ch3;
  output mdio_o_ch3;
  output mdio_t_ch3;
  output O5;
  output gmii_rx_dv_ch3_int;
  output SOFT_RESET_2;
  output an_interrupt_ch3;
  output data_valid;
  output [7:0]Q;
  output [7:0]O6;
  output [7:0]O7;
  output [7:0]O8;
  output [1:0]TXPD;
  output [3:0]TXCHARISK;
  output [31:0]txdata;
  output ENABLEALIGN;
  input rxuserclk2;
  input userclk2;
  input gmii_tx_er_out_ch0;
  input gmii_tx_en_out_ch0;
  input p_3_out;
  input txbuferr;
  input gmii_tx_er_out_ch1;
  input gmii_tx_en_out_ch1;
  input p_3_out_3;
  input gmii_tx_er_out_ch2;
  input gmii_tx_en_out_ch2;
  input p_3_out_4;
  input gmii_tx_er_out_ch3;
  input gmii_tx_en_out_ch3;
  input p_3_out_5;
  input I1;
  input [8:0]link_timer_value_ch0;
  input [4:0]phyad_ch0;
  input I2;
  input [8:0]link_timer_value_ch1;
  input [4:0]phyad_ch1;
  input I3;
  input [8:0]link_timer_value_ch2;
  input [4:0]phyad_ch2;
  input I4;
  input [8:0]link_timer_value_ch3;
  input [4:0]phyad_ch3;
  input [3:0]gt0_rxcharisk_out;
  input [3:0]gt0_rxnotintable_out;
  input [3:0]gt0_rxdisperr_out;
  input [3:0]gt0_rxchariscomma_out;
  input signal_detect;
  input mdc_ch0;
  input mdio_i_ch0;
  input [7:0]I5;
  input mdc_ch1;
  input mdio_i_ch1;
  input [7:0]I6;
  input mdc_ch2;
  input mdio_i_ch2;
  input [7:0]I7;
  input mdc_ch3;
  input mdio_i_ch3;
  input [7:0]I8;
  input [31:0]rxdata;

  wire ENABLEALIGN;
  wire ENABLEALIGN0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire [7:0]I5;
  wire [7:0]I6;
  wire [7:0]I7;
  wire [7:0]I8;
  wire MGT_RX_RESET1_in;
  wire MGT_RX_RESET3_in;
  wire [0:0]O1;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire [7:0]O6;
  wire [7:0]O7;
  wire [7:0]O8;
  wire POWERDOWN0;
  wire [7:0]Q;
  wire RXBUFERR;
  wire RXCHARISCOMMA_CH0;
  wire RXCHARISCOMMA_CH1;
  wire RXCHARISCOMMA_CH2;
  wire RXCHARISCOMMA_CH3;
  wire RXCHARISCOMMA_REC;
  wire RXCHARISK_CH0;
  wire RXCHARISK_CH1;
  wire RXCHARISK_CH2;
  wire RXCHARISK_CH3;
  wire RXCHARISK_REC;
  wire [7:0]RXDATA_REC;
  wire RXDISPERR_CH0;
  wire RXDISPERR_CH1;
  wire RXDISPERR_CH2;
  wire RXDISPERR_CH3;
  wire RXDISPERR_REC;
  wire RXNOTINTABLE_CH0;
  wire RXNOTINTABLE_CH1;
  wire RXNOTINTABLE_CH2;
  wire RXNOTINTABLE_CH3;
  wire RXNOTINTABLE_REC;
  wire RXRECRESET;
  wire SOFT_RESET;
  wire SOFT_RESET_0;
  wire SOFT_RESET_1;
  wire SOFT_RESET_2;
  wire [0:0]SR;
  wire [3:0]TXCHARISK;
  wire [1:0]TXPD;
  wire an_interrupt_ch0;
  wire an_interrupt_ch1;
  wire an_interrupt_ch2;
  wire an_interrupt_ch3;
  wire data_valid;
  wire gmii_rx_dv_ch0_int;
  wire gmii_rx_dv_ch1_int;
  wire gmii_rx_dv_ch2_int;
  wire gmii_rx_dv_ch3_int;
  wire gmii_rx_er_ch0_int;
  wire gmii_rx_er_ch1_int;
  wire gmii_rx_er_ch2_int;
  wire gmii_rx_er_ch3_int;
  wire gmii_tx_en_out_ch0;
  wire gmii_tx_en_out_ch1;
  wire gmii_tx_en_out_ch2;
  wire gmii_tx_en_out_ch3;
  wire gmii_tx_er_out_ch0;
  wire gmii_tx_er_out_ch1;
  wire gmii_tx_er_out_ch2;
  wire gmii_tx_er_out_ch3;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire [3:0]gt0_rxdisperr_out;
  wire [3:0]gt0_rxnotintable_out;
  wire [8:0]link_timer_value_ch0;
  wire [8:0]link_timer_value_ch1;
  wire [8:0]link_timer_value_ch2;
  wire [8:0]link_timer_value_ch3;
  wire mdc_ch0;
  wire mdc_ch1;
  wire mdc_ch2;
  wire mdc_ch3;
  wire mdio_i_ch0;
  wire mdio_i_ch1;
  wire mdio_i_ch2;
  wire mdio_i_ch3;
  wire mdio_o_ch0;
  wire mdio_o_ch1;
  wire mdio_o_ch2;
  wire mdio_o_ch3;
  wire mdio_t_ch0;
  wire mdio_t_ch1;
  wire mdio_t_ch2;
  wire mdio_t_ch3;
  wire n_0_ALIGNER_I;
  wire n_0_GPCS_PMA_GEN_i3;
  wire n_0_reclock_rxreset0;
  wire n_0_reclock_rxreset2;
  wire n_0_reclock_rxreset3;
  wire n_10_ALIGNER_I;
  wire n_10_RX_ELASTIC_BUFFER_I0;
  wire n_10_RX_ELASTIC_BUFFER_I1;
  wire n_10_RX_ELASTIC_BUFFER_I2;
  wire n_10_RX_ELASTIC_BUFFER_I3;
  wire n_11_RX_ELASTIC_BUFFER_I0;
  wire n_11_RX_ELASTIC_BUFFER_I1;
  wire n_11_RX_ELASTIC_BUFFER_I2;
  wire n_11_RX_ELASTIC_BUFFER_I3;
  wire n_12_ALIGNER_I;
  wire n_12_RX_ELASTIC_BUFFER_I0;
  wire n_12_RX_ELASTIC_BUFFER_I1;
  wire n_12_RX_ELASTIC_BUFFER_I2;
  wire n_12_RX_ELASTIC_BUFFER_I3;
  wire n_13_ALIGNER_I;
  wire n_13_RX_ELASTIC_BUFFER_I0;
  wire n_13_RX_ELASTIC_BUFFER_I1;
  wire n_13_RX_ELASTIC_BUFFER_I2;
  wire n_13_RX_ELASTIC_BUFFER_I3;
  wire n_14_ALIGNER_I;
  wire n_14_RX_ELASTIC_BUFFER_I0;
  wire n_14_RX_ELASTIC_BUFFER_I1;
  wire n_14_RX_ELASTIC_BUFFER_I2;
  wire n_14_RX_ELASTIC_BUFFER_I3;
  wire n_15_RX_ELASTIC_BUFFER_I1;
  wire n_15_RX_ELASTIC_BUFFER_I2;
  wire n_15_RX_ELASTIC_BUFFER_I3;
  wire n_16_ALIGNER_I;
  wire n_17_ALIGNER_I;
  wire n_17_GPCS_PMA_GEN_i1;
  wire n_17_GPCS_PMA_GEN_i2;
  wire n_17_GPCS_PMA_GEN_i3;
  wire n_18_ALIGNER_I;
  wire n_18_GPCS_PMA_GEN_i0;
  wire n_19_ALIGNER_I;
  wire n_19_GPCS_PMA_GEN_i2;
  wire n_19_GPCS_PMA_GEN_i3;
  wire n_1_ALIGNER_I;
  wire n_20_ALIGNER_I;
  wire n_20_GPCS_PMA_GEN_i0;
  wire n_21_ALIGNER_I;
  wire n_21_GPCS_PMA_GEN_i2;
  wire n_21_GPCS_PMA_GEN_i3;
  wire n_22_ALIGNER_I;
  wire n_22_GPCS_PMA_GEN_i0;
  wire n_23_ALIGNER_I;
  wire n_24_ALIGNER_I;
  wire n_25_ALIGNER_I;
  wire n_25_GPCS_PMA_GEN_i0;
  wire n_25_GPCS_PMA_GEN_i1;
  wire n_26_ALIGNER_I;
  wire n_26_GPCS_PMA_GEN_i0;
  wire n_27_ALIGNER_I;
  wire n_27_GPCS_PMA_GEN_i0;
  wire n_28_ALIGNER_I;
  wire n_28_GPCS_PMA_GEN_i0;
  wire n_29_ALIGNER_I;
  wire n_29_GPCS_PMA_GEN_i0;
  wire n_2_ALIGNER_I;
  wire n_30_ALIGNER_I;
  wire n_30_GPCS_PMA_GEN_i0;
  wire n_31_ALIGNER_I;
  wire n_31_GPCS_PMA_GEN_i0;
  wire n_32_ALIGNER_I;
  wire n_32_GPCS_PMA_GEN_i0;
  wire n_32_GPCS_PMA_GEN_i2;
  wire n_32_GPCS_PMA_GEN_i3;
  wire n_33_ALIGNER_I;
  wire n_33_GPCS_PMA_GEN_i2;
  wire n_33_GPCS_PMA_GEN_i3;
  wire n_34_ALIGNER_I;
  wire n_34_GPCS_PMA_GEN_i1;
  wire n_34_GPCS_PMA_GEN_i2;
  wire n_34_GPCS_PMA_GEN_i3;
  wire n_35_ALIGNER_I;
  wire n_35_GPCS_PMA_GEN_i1;
  wire n_35_GPCS_PMA_GEN_i2;
  wire n_35_GPCS_PMA_GEN_i3;
  wire n_36_ALIGNER_I;
  wire n_36_GPCS_PMA_GEN_i1;
  wire n_36_GPCS_PMA_GEN_i2;
  wire n_36_GPCS_PMA_GEN_i3;
  wire n_37_ALIGNER_I;
  wire n_37_GPCS_PMA_GEN_i1;
  wire n_37_GPCS_PMA_GEN_i2;
  wire n_37_GPCS_PMA_GEN_i3;
  wire n_38_ALIGNER_I;
  wire n_38_GPCS_PMA_GEN_i1;
  wire n_38_GPCS_PMA_GEN_i2;
  wire n_38_GPCS_PMA_GEN_i3;
  wire n_39_ALIGNER_I;
  wire n_39_GPCS_PMA_GEN_i1;
  wire n_39_GPCS_PMA_GEN_i2;
  wire n_39_GPCS_PMA_GEN_i3;
  wire n_40_GPCS_PMA_GEN_i1;
  wire n_41_GPCS_PMA_GEN_i1;
  wire n_4_ALIGNER_I;
  wire n_4_RX_ELASTIC_BUFFER_I0;
  wire n_4_RX_ELASTIC_BUFFER_I1;
  wire n_4_RX_ELASTIC_BUFFER_I2;
  wire n_4_RX_ELASTIC_BUFFER_I3;
  wire n_5_ALIGNER_I;
  wire n_5_RX_ELASTIC_BUFFER_I0;
  wire n_5_RX_ELASTIC_BUFFER_I1;
  wire n_5_RX_ELASTIC_BUFFER_I2;
  wire n_5_RX_ELASTIC_BUFFER_I3;
  wire n_6_ALIGNER_I;
  wire n_6_RX_ELASTIC_BUFFER_I0;
  wire n_6_RX_ELASTIC_BUFFER_I1;
  wire n_6_RX_ELASTIC_BUFFER_I2;
  wire n_6_RX_ELASTIC_BUFFER_I3;
  wire n_7_RX_ELASTIC_BUFFER_I0;
  wire n_7_RX_ELASTIC_BUFFER_I1;
  wire n_7_RX_ELASTIC_BUFFER_I2;
  wire n_7_RX_ELASTIC_BUFFER_I3;
  wire n_8_ALIGNER_I;
  wire n_8_RX_ELASTIC_BUFFER_I0;
  wire n_8_RX_ELASTIC_BUFFER_I1;
  wire n_8_RX_ELASTIC_BUFFER_I2;
  wire n_8_RX_ELASTIC_BUFFER_I3;
  wire n_9_ALIGNER_I;
  wire n_9_RX_ELASTIC_BUFFER_I0;
  wire n_9_RX_ELASTIC_BUFFER_I1;
  wire n_9_RX_ELASTIC_BUFFER_I2;
  wire n_9_RX_ELASTIC_BUFFER_I3;
  wire p_3_out;
  wire p_3_out_3;
  wire p_3_out_4;
  wire p_3_out_5;
  wire [4:0]phyad_ch0;
  wire [4:0]phyad_ch1;
  wire [4:0]phyad_ch2;
  wire [4:0]phyad_ch3;
  wire reset_in;
  wire reset_in2_out;
  wire reset_in4_out;
  wire [31:0]rxdata;
  wire rxuserclk2;
  wire signal_detect;
  wire [12:0]status_vector_ch0;
  wire [12:0]status_vector_ch1;
  wire [12:0]status_vector_ch2;
  wire [12:0]status_vector_ch3;
  wire txbuferr;
  wire [31:0]txdata;
  wire userclk2;

quadsgmiiAGGREGATOR AGGREGATOR_I
       (.D({n_17_GPCS_PMA_GEN_i3,n_17_GPCS_PMA_GEN_i2,n_17_GPCS_PMA_GEN_i1,n_18_GPCS_PMA_GEN_i0}),
        .ENABLEALIGN(ENABLEALIGN),
        .ENABLEALIGN0(ENABLEALIGN0),
        .I1(O1),
        .I10(n_36_GPCS_PMA_GEN_i2),
        .I11(n_37_GPCS_PMA_GEN_i2),
        .I12(n_38_GPCS_PMA_GEN_i2),
        .I13(n_39_GPCS_PMA_GEN_i2),
        .I14(n_37_GPCS_PMA_GEN_i1),
        .I15(n_38_GPCS_PMA_GEN_i1),
        .I16(n_39_GPCS_PMA_GEN_i1),
        .I17(n_40_GPCS_PMA_GEN_i1),
        .I18(n_41_GPCS_PMA_GEN_i1),
        .I19(n_31_GPCS_PMA_GEN_i0),
        .I2(n_25_GPCS_PMA_GEN_i1),
        .I20(n_32_GPCS_PMA_GEN_i0),
        .I21(n_25_GPCS_PMA_GEN_i0),
        .I22(n_26_GPCS_PMA_GEN_i0),
        .I3(n_30_GPCS_PMA_GEN_i0),
        .I4(n_35_GPCS_PMA_GEN_i3),
        .I5(n_36_GPCS_PMA_GEN_i3),
        .I6(n_37_GPCS_PMA_GEN_i3),
        .I7(n_38_GPCS_PMA_GEN_i3),
        .I8(n_39_GPCS_PMA_GEN_i3),
        .I9(n_35_GPCS_PMA_GEN_i2),
        .O3({n_34_GPCS_PMA_GEN_i1,n_35_GPCS_PMA_GEN_i1,n_36_GPCS_PMA_GEN_i1}),
        .O4({n_32_GPCS_PMA_GEN_i2,n_33_GPCS_PMA_GEN_i2,n_34_GPCS_PMA_GEN_i2}),
        .O5({n_32_GPCS_PMA_GEN_i3,n_33_GPCS_PMA_GEN_i3,n_34_GPCS_PMA_GEN_i3}),
        .O8({n_27_GPCS_PMA_GEN_i0,n_28_GPCS_PMA_GEN_i0,n_29_GPCS_PMA_GEN_i0}),
        .POWERDOWN0(POWERDOWN0),
        .TXCHARISK(TXCHARISK),
        .TXPD(TXPD),
        .txdata(txdata),
        .userclk2(userclk2));
quadsgmiiALIGNER ALIGNER_I
       (.RESET(n_0_reclock_rxreset0),
        .RXCHARISCOMMA_CH0(RXCHARISCOMMA_REC),
        .RXCHARISCOMMA_CH1(n_2_ALIGNER_I),
        .RXCHARISCOMMA_CH2(n_1_ALIGNER_I),
        .RXCHARISCOMMA_CH3(n_0_ALIGNER_I),
        .RXCHARISK_CH0(RXCHARISK_REC),
        .RXCHARISK_CH1(n_14_ALIGNER_I),
        .RXCHARISK_CH2(n_13_ALIGNER_I),
        .RXCHARISK_CH3(n_12_ALIGNER_I),
        .RXDATA_CH0(RXDATA_REC),
        .RXDATA_CH1({n_32_ALIGNER_I,n_33_ALIGNER_I,n_34_ALIGNER_I,n_35_ALIGNER_I,n_36_ALIGNER_I,n_37_ALIGNER_I,n_38_ALIGNER_I,n_39_ALIGNER_I}),
        .RXDATA_CH2({n_24_ALIGNER_I,n_25_ALIGNER_I,n_26_ALIGNER_I,n_27_ALIGNER_I,n_28_ALIGNER_I,n_29_ALIGNER_I,n_30_ALIGNER_I,n_31_ALIGNER_I}),
        .RXDATA_CH3({n_16_ALIGNER_I,n_17_ALIGNER_I,n_18_ALIGNER_I,n_19_ALIGNER_I,n_20_ALIGNER_I,n_21_ALIGNER_I,n_22_ALIGNER_I,n_23_ALIGNER_I}),
        .RXDISPERR_CH0(RXDISPERR_REC),
        .RXDISPERR_CH1(n_6_ALIGNER_I),
        .RXDISPERR_CH2(n_5_ALIGNER_I),
        .RXDISPERR_CH3(n_4_ALIGNER_I),
        .RXNOTINTABLE_CH0(RXNOTINTABLE_REC),
        .RXNOTINTABLE_CH1(n_10_ALIGNER_I),
        .RXNOTINTABLE_CH2(n_9_ALIGNER_I),
        .RXNOTINTABLE_CH3(n_8_ALIGNER_I),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .rxdata(rxdata),
        .rxuserclk2(rxuserclk2));
quadsgmiiGPCS_PMA_GEN__parameterized0 GPCS_PMA_GEN_i0
       (.D(n_18_GPCS_PMA_GEN_i0),
        .I1(I1),
        .I2({n_4_RX_ELASTIC_BUFFER_I0,n_5_RX_ELASTIC_BUFFER_I0,n_6_RX_ELASTIC_BUFFER_I0}),
        .I3(n_0_GPCS_PMA_GEN_i3),
        .I5(I5),
        .MGT_RX_RESET1_in(MGT_RX_RESET1_in),
        .MGT_RX_RESET3_in(MGT_RX_RESET3_in),
        .O1(O1),
        .O10(n_31_GPCS_PMA_GEN_i0),
        .O11(n_32_GPCS_PMA_GEN_i0),
        .O12(Q),
        .O13(reset_in2_out),
        .O14(reset_in),
        .O2(SR),
        .O3(O2),
        .O4(n_20_GPCS_PMA_GEN_i0),
        .O5(n_22_GPCS_PMA_GEN_i0),
        .O6(n_25_GPCS_PMA_GEN_i0),
        .O7(n_26_GPCS_PMA_GEN_i0),
        .O8({n_27_GPCS_PMA_GEN_i0,n_28_GPCS_PMA_GEN_i0,n_29_GPCS_PMA_GEN_i0}),
        .O9(n_30_GPCS_PMA_GEN_i0),
        .Q({n_7_RX_ELASTIC_BUFFER_I0,n_8_RX_ELASTIC_BUFFER_I0,n_9_RX_ELASTIC_BUFFER_I0,n_10_RX_ELASTIC_BUFFER_I0,n_11_RX_ELASTIC_BUFFER_I0,n_12_RX_ELASTIC_BUFFER_I0,n_13_RX_ELASTIC_BUFFER_I0,n_14_RX_ELASTIC_BUFFER_I0}),
        .RXBUFERR(RXBUFERR),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_CH0),
        .RXCHARISK_USR(RXCHARISK_CH0),
        .RXDISPERR_USR(RXDISPERR_CH0),
        .RXNOTINTABLE_USR(RXNOTINTABLE_CH0),
        .SOFT_RESET(SOFT_RESET),
        .SS(reset_in4_out),
        .an_interrupt_ch0(an_interrupt_ch0),
        .gmii_rx_dv_ch0_int(gmii_rx_dv_ch0_int),
        .gmii_rx_er_ch0_int(gmii_rx_er_ch0_int),
        .gmii_tx_en_out_ch0(gmii_tx_en_out_ch0),
        .gmii_tx_er_out_ch0(gmii_tx_er_out_ch0),
        .link_timer_value_ch0(link_timer_value_ch0),
        .mdc_ch0(mdc_ch0),
        .mdio_i_ch0(mdio_i_ch0),
        .mdio_o_ch0(mdio_o_ch0),
        .mdio_t_ch0(mdio_t_ch0),
        .p_3_out(p_3_out),
        .phyad_ch0(phyad_ch0),
        .signal_detect(signal_detect),
        .status_vector_ch0(status_vector_ch0),
        .txbuferr(txbuferr),
        .userclk2(userclk2));
quadsgmiiGPCS_PMA_GEN__parameterized0_15 GPCS_PMA_GEN_i1
       (.D(n_17_GPCS_PMA_GEN_i1),
        .ENABLEALIGN0(ENABLEALIGN0),
        .I1(n_15_RX_ELASTIC_BUFFER_I1),
        .I10(I6),
        .I2(I2),
        .I3(n_21_GPCS_PMA_GEN_i2),
        .I4(n_22_GPCS_PMA_GEN_i0),
        .I5(n_21_GPCS_PMA_GEN_i3),
        .I6(n_19_GPCS_PMA_GEN_i2),
        .I7(n_20_GPCS_PMA_GEN_i0),
        .I8(n_19_GPCS_PMA_GEN_i3),
        .I9({n_4_RX_ELASTIC_BUFFER_I1,n_5_RX_ELASTIC_BUFFER_I1,n_6_RX_ELASTIC_BUFFER_I1}),
        .MGT_RX_RESET3_in(MGT_RX_RESET3_in),
        .O1(O3),
        .O2(n_25_GPCS_PMA_GEN_i1),
        .O3({n_34_GPCS_PMA_GEN_i1,n_35_GPCS_PMA_GEN_i1,n_36_GPCS_PMA_GEN_i1}),
        .O4(n_37_GPCS_PMA_GEN_i1),
        .O5(n_38_GPCS_PMA_GEN_i1),
        .O6(O6),
        .O7(n_39_GPCS_PMA_GEN_i1),
        .O8(n_40_GPCS_PMA_GEN_i1),
        .O9(n_41_GPCS_PMA_GEN_i1),
        .POWERDOWN0(POWERDOWN0),
        .Q({n_7_RX_ELASTIC_BUFFER_I1,n_8_RX_ELASTIC_BUFFER_I1,n_9_RX_ELASTIC_BUFFER_I1,n_10_RX_ELASTIC_BUFFER_I1,n_11_RX_ELASTIC_BUFFER_I1,n_12_RX_ELASTIC_BUFFER_I1,n_13_RX_ELASTIC_BUFFER_I1,n_14_RX_ELASTIC_BUFFER_I1}),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_CH1),
        .RXCHARISK_USR(RXCHARISK_CH1),
        .RXDISPERR_USR(RXDISPERR_CH1),
        .RXNOTINTABLE_USR(RXNOTINTABLE_CH1),
        .SOFT_RESET_0(SOFT_RESET_0),
        .an_interrupt_ch1(an_interrupt_ch1),
        .data_valid(data_valid),
        .gmii_rx_dv_ch1_int(gmii_rx_dv_ch1_int),
        .gmii_rx_er_ch1_int(gmii_rx_er_ch1_int),
        .gmii_tx_en_out_ch1(gmii_tx_en_out_ch1),
        .gmii_tx_er_out_ch1(gmii_tx_er_out_ch1),
        .link_timer_value_ch1(link_timer_value_ch1),
        .mdc_ch1(mdc_ch1),
        .mdio_i_ch1(mdio_i_ch1),
        .mdio_o_ch1(mdio_o_ch1),
        .mdio_t_ch1(mdio_t_ch1),
        .p_3_out_3(p_3_out_3),
        .phyad_ch1(phyad_ch1),
        .signal_detect(signal_detect),
        .status_vector_ch0(status_vector_ch0[1]),
        .status_vector_ch1(status_vector_ch1),
        .status_vector_ch2(status_vector_ch2[1]),
        .status_vector_ch3(status_vector_ch3[1]),
        .txbuferr(txbuferr),
        .userclk2(userclk2));
quadsgmiiGPCS_PMA_GEN__parameterized0_16 GPCS_PMA_GEN_i2
       (.D(n_17_GPCS_PMA_GEN_i2),
        .I1(n_15_RX_ELASTIC_BUFFER_I2),
        .I2({n_4_RX_ELASTIC_BUFFER_I2,n_5_RX_ELASTIC_BUFFER_I2,n_6_RX_ELASTIC_BUFFER_I2}),
        .I3(I3),
        .I7(I7),
        .MGT_RX_RESET1_in(MGT_RX_RESET1_in),
        .O1(O4),
        .O10(n_39_GPCS_PMA_GEN_i2),
        .O2(n_19_GPCS_PMA_GEN_i2),
        .O3(n_21_GPCS_PMA_GEN_i2),
        .O4({n_32_GPCS_PMA_GEN_i2,n_33_GPCS_PMA_GEN_i2,n_34_GPCS_PMA_GEN_i2}),
        .O5(n_35_GPCS_PMA_GEN_i2),
        .O6(n_36_GPCS_PMA_GEN_i2),
        .O7(O7),
        .O8(n_37_GPCS_PMA_GEN_i2),
        .O9(n_38_GPCS_PMA_GEN_i2),
        .Q({n_7_RX_ELASTIC_BUFFER_I2,n_8_RX_ELASTIC_BUFFER_I2,n_9_RX_ELASTIC_BUFFER_I2,n_10_RX_ELASTIC_BUFFER_I2,n_11_RX_ELASTIC_BUFFER_I2,n_12_RX_ELASTIC_BUFFER_I2,n_13_RX_ELASTIC_BUFFER_I2,n_14_RX_ELASTIC_BUFFER_I2}),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_CH2),
        .RXCHARISK_USR(RXCHARISK_CH2),
        .RXDISPERR_USR(RXDISPERR_CH2),
        .RXNOTINTABLE_USR(RXNOTINTABLE_CH2),
        .SOFT_RESET_1(SOFT_RESET_1),
        .an_interrupt_ch2(an_interrupt_ch2),
        .gmii_rx_dv_ch2_int(gmii_rx_dv_ch2_int),
        .gmii_rx_er_ch2_int(gmii_rx_er_ch2_int),
        .gmii_tx_en_out_ch2(gmii_tx_en_out_ch2),
        .gmii_tx_er_out_ch2(gmii_tx_er_out_ch2),
        .link_timer_value_ch2(link_timer_value_ch2),
        .mdc_ch2(mdc_ch2),
        .mdio_i_ch2(mdio_i_ch2),
        .mdio_o_ch2(mdio_o_ch2),
        .mdio_t_ch2(mdio_t_ch2),
        .p_3_out_4(p_3_out_4),
        .phyad_ch2(phyad_ch2),
        .signal_detect(signal_detect),
        .status_vector_ch2(status_vector_ch2),
        .txbuferr(txbuferr),
        .userclk2(userclk2));
quadsgmiiGPCS_PMA_GEN__parameterized0_17 GPCS_PMA_GEN_i3
       (.D(n_17_GPCS_PMA_GEN_i3),
        .I1(n_15_RX_ELASTIC_BUFFER_I3),
        .I2({n_4_RX_ELASTIC_BUFFER_I3,n_5_RX_ELASTIC_BUFFER_I3,n_6_RX_ELASTIC_BUFFER_I3}),
        .I4(I4),
        .I8(I8),
        .O1(n_0_GPCS_PMA_GEN_i3),
        .O10(n_38_GPCS_PMA_GEN_i3),
        .O11(n_39_GPCS_PMA_GEN_i3),
        .O2(O5),
        .O3(n_19_GPCS_PMA_GEN_i3),
        .O4(n_21_GPCS_PMA_GEN_i3),
        .O5({n_32_GPCS_PMA_GEN_i3,n_33_GPCS_PMA_GEN_i3,n_34_GPCS_PMA_GEN_i3}),
        .O6(n_35_GPCS_PMA_GEN_i3),
        .O7(n_36_GPCS_PMA_GEN_i3),
        .O8(O8),
        .O9(n_37_GPCS_PMA_GEN_i3),
        .Q({n_7_RX_ELASTIC_BUFFER_I3,n_8_RX_ELASTIC_BUFFER_I3,n_9_RX_ELASTIC_BUFFER_I3,n_10_RX_ELASTIC_BUFFER_I3,n_11_RX_ELASTIC_BUFFER_I3,n_12_RX_ELASTIC_BUFFER_I3,n_13_RX_ELASTIC_BUFFER_I3,n_14_RX_ELASTIC_BUFFER_I3}),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_CH3),
        .RXCHARISK_USR(RXCHARISK_CH3),
        .RXDISPERR_USR(RXDISPERR_CH3),
        .RXNOTINTABLE_USR(RXNOTINTABLE_CH3),
        .SOFT_RESET_2(SOFT_RESET_2),
        .an_interrupt_ch3(an_interrupt_ch3),
        .gmii_rx_dv_ch3_int(gmii_rx_dv_ch3_int),
        .gmii_rx_er_ch3_int(gmii_rx_er_ch3_int),
        .gmii_tx_en_out_ch3(gmii_tx_en_out_ch3),
        .gmii_tx_er_out_ch3(gmii_tx_er_out_ch3),
        .link_timer_value_ch3(link_timer_value_ch3),
        .mdc_ch3(mdc_ch3),
        .mdio_i_ch3(mdio_i_ch3),
        .mdio_o_ch3(mdio_o_ch3),
        .mdio_t_ch3(mdio_t_ch3),
        .p_3_out_5(p_3_out_5),
        .phyad_ch3(phyad_ch3),
        .signal_detect(signal_detect),
        .status_vector_ch3(status_vector_ch3),
        .txbuferr(txbuferr),
        .userclk2(userclk2));
quadsgmiiQSGMII_RX_ELASTIC_BUFFER RX_ELASTIC_BUFFER_I0
       (.I1(SR),
        .I2({n_4_RX_ELASTIC_BUFFER_I0,n_5_RX_ELASTIC_BUFFER_I0,n_6_RX_ELASTIC_BUFFER_I0}),
        .I3(RXCHARISK_REC),
        .I4(RXDISPERR_REC),
        .I5(RXNOTINTABLE_REC),
        .I6(RXDATA_REC),
        .Q(RXCHARISCOMMA_REC),
        .RXBUFERR(RXBUFERR),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_CH0),
        .RXCHARISK_USR(RXCHARISK_CH0),
        .RXDATA_USR({n_7_RX_ELASTIC_BUFFER_I0,n_8_RX_ELASTIC_BUFFER_I0,n_9_RX_ELASTIC_BUFFER_I0,n_10_RX_ELASTIC_BUFFER_I0,n_11_RX_ELASTIC_BUFFER_I0,n_12_RX_ELASTIC_BUFFER_I0,n_13_RX_ELASTIC_BUFFER_I0,n_14_RX_ELASTIC_BUFFER_I0}),
        .RXDISPERR_USR(RXDISPERR_CH0),
        .RXNOTINTABLE_USR(RXNOTINTABLE_CH0),
        .SR(n_0_reclock_rxreset0),
        .rxuserclk2(rxuserclk2),
        .userclk2(userclk2));
quadsgmiiQSGMII_RX_ELASTIC_BUFFER_18 RX_ELASTIC_BUFFER_I1
       (.I1(SR),
        .I2(n_14_ALIGNER_I),
        .I3(n_6_ALIGNER_I),
        .I4(n_10_ALIGNER_I),
        .I5({n_32_ALIGNER_I,n_33_ALIGNER_I,n_34_ALIGNER_I,n_35_ALIGNER_I,n_36_ALIGNER_I,n_37_ALIGNER_I,n_38_ALIGNER_I,n_39_ALIGNER_I}),
        .I9({n_4_RX_ELASTIC_BUFFER_I1,n_5_RX_ELASTIC_BUFFER_I1,n_6_RX_ELASTIC_BUFFER_I1}),
        .MGT_RX_RESET3_in(MGT_RX_RESET3_in),
        .O1(n_15_RX_ELASTIC_BUFFER_I1),
        .Q(n_2_ALIGNER_I),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_CH1),
        .RXCHARISK_USR(RXCHARISK_CH1),
        .RXDATA_USR({n_7_RX_ELASTIC_BUFFER_I1,n_8_RX_ELASTIC_BUFFER_I1,n_9_RX_ELASTIC_BUFFER_I1,n_10_RX_ELASTIC_BUFFER_I1,n_11_RX_ELASTIC_BUFFER_I1,n_12_RX_ELASTIC_BUFFER_I1,n_13_RX_ELASTIC_BUFFER_I1,n_14_RX_ELASTIC_BUFFER_I1}),
        .RXDISPERR_USR(RXDISPERR_CH1),
        .RXNOTINTABLE_USR(RXNOTINTABLE_CH1),
        .SR(RXRECRESET),
        .SS(reset_in4_out),
        .rxuserclk2(rxuserclk2),
        .userclk2(userclk2));
quadsgmiiQSGMII_RX_ELASTIC_BUFFER_19 RX_ELASTIC_BUFFER_I2
       (.I1(SR),
        .I2({n_4_RX_ELASTIC_BUFFER_I2,n_5_RX_ELASTIC_BUFFER_I2,n_6_RX_ELASTIC_BUFFER_I2}),
        .I3(n_13_ALIGNER_I),
        .I4(n_5_ALIGNER_I),
        .I5(n_9_ALIGNER_I),
        .I6({n_24_ALIGNER_I,n_25_ALIGNER_I,n_26_ALIGNER_I,n_27_ALIGNER_I,n_28_ALIGNER_I,n_29_ALIGNER_I,n_30_ALIGNER_I,n_31_ALIGNER_I}),
        .MGT_RX_RESET1_in(MGT_RX_RESET1_in),
        .O1(n_15_RX_ELASTIC_BUFFER_I2),
        .Q(n_1_ALIGNER_I),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_CH2),
        .RXCHARISK_USR(RXCHARISK_CH2),
        .RXDATA_USR({n_7_RX_ELASTIC_BUFFER_I2,n_8_RX_ELASTIC_BUFFER_I2,n_9_RX_ELASTIC_BUFFER_I2,n_10_RX_ELASTIC_BUFFER_I2,n_11_RX_ELASTIC_BUFFER_I2,n_12_RX_ELASTIC_BUFFER_I2,n_13_RX_ELASTIC_BUFFER_I2,n_14_RX_ELASTIC_BUFFER_I2}),
        .RXDISPERR_USR(RXDISPERR_CH2),
        .RXNOTINTABLE_USR(RXNOTINTABLE_CH2),
        .SR(n_0_reclock_rxreset2),
        .SS(reset_in2_out),
        .rxuserclk2(rxuserclk2),
        .userclk2(userclk2));
quadsgmiiQSGMII_RX_ELASTIC_BUFFER_20 RX_ELASTIC_BUFFER_I3
       (.I1(SR),
        .I2({n_4_RX_ELASTIC_BUFFER_I3,n_5_RX_ELASTIC_BUFFER_I3,n_6_RX_ELASTIC_BUFFER_I3}),
        .I3(n_0_GPCS_PMA_GEN_i3),
        .I4(n_12_ALIGNER_I),
        .I5(n_4_ALIGNER_I),
        .I6(n_8_ALIGNER_I),
        .I7({n_16_ALIGNER_I,n_17_ALIGNER_I,n_18_ALIGNER_I,n_19_ALIGNER_I,n_20_ALIGNER_I,n_21_ALIGNER_I,n_22_ALIGNER_I,n_23_ALIGNER_I}),
        .O1(n_15_RX_ELASTIC_BUFFER_I3),
        .Q(n_0_ALIGNER_I),
        .RXCHARISCOMMA_USR(RXCHARISCOMMA_CH3),
        .RXCHARISK_USR(RXCHARISK_CH3),
        .RXDATA_USR({n_7_RX_ELASTIC_BUFFER_I3,n_8_RX_ELASTIC_BUFFER_I3,n_9_RX_ELASTIC_BUFFER_I3,n_10_RX_ELASTIC_BUFFER_I3,n_11_RX_ELASTIC_BUFFER_I3,n_12_RX_ELASTIC_BUFFER_I3,n_13_RX_ELASTIC_BUFFER_I3,n_14_RX_ELASTIC_BUFFER_I3}),
        .RXDISPERR_USR(RXDISPERR_CH3),
        .RXNOTINTABLE_USR(RXNOTINTABLE_CH3),
        .SR(n_0_reclock_rxreset3),
        .SS(reset_in),
        .rxuserclk2(rxuserclk2),
        .userclk2(userclk2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b11" *) 
   quadsgmiiqsgmii_reset_sync__4 reclock_rxreset0
       (.CLK(rxuserclk2),
        .RESET_IN(SR),
        .RESET_OUT(n_0_reclock_rxreset0));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b11" *) 
   quadsgmiiqsgmii_reset_sync__5 reclock_rxreset1
       (.CLK(rxuserclk2),
        .RESET_IN(reset_in4_out),
        .RESET_OUT(RXRECRESET));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b11" *) 
   quadsgmiiqsgmii_reset_sync__6 reclock_rxreset2
       (.CLK(rxuserclk2),
        .RESET_IN(reset_in2_out),
        .RESET_OUT(n_0_reclock_rxreset2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b11" *) 
   quadsgmiiqsgmii_reset_sync reclock_rxreset3
       (.CLK(rxuserclk2),
        .RESET_IN(reset_in),
        .RESET_OUT(n_0_reclock_rxreset3));
endmodule

module quadsgmiiQSGMII_RX_ELASTIC_BUFFER
   (RXCHARISCOMMA_USR,
    RXCHARISK_USR,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    I2,
    RXDATA_USR,
    RXBUFERR,
    rxuserclk2,
    userclk2,
    I1,
    SR,
    Q,
    I3,
    I4,
    I5,
    I6);
  output RXCHARISCOMMA_USR;
  output RXCHARISK_USR;
  output RXDISPERR_USR;
  output RXNOTINTABLE_USR;
  output [2:0]I2;
  output [7:0]RXDATA_USR;
  output RXBUFERR;
  input rxuserclk2;
  input userclk2;
  input I1;
  input [0:0]SR;
  input [0:0]Q;
  input [0:0]I3;
  input [0:0]I4;
  input [0:0]I5;
  input [7:0]I6;

  wire \<const0> ;
  wire \<const1> ;
  wire D5P6_WR_REG;
  wire DATA_IN;
  wire DATA_OUT;
  wire DATA_OUT0_out;
  wire DATA_OUT1_out;
  wire DATA_OUT2_out;
  wire DATA_OUT3_out;
  wire DATA_OUT4_out;
  wire DATA_OUT5_out;
  wire EVEN;
  wire \GEN_FIFO[28].RD_DATA_reg ;
  wire I1;
  wire I1_DETECTED_WR;
  wire I1_DETECTED_WR_REG;
  wire [2:0]I2;
  wire [0:0]I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire [7:0]I6;
  wire INSERT_IDLE;
  wire K28P5_WR_REG;
  wire [0:0]Q;
  wire [6:0]RD_ADDR_GRAY;
  wire [6:0]RD_ADDR_PLUS1;
  wire RD_ENABLE;
  wire RD_ENABLE0;
  wire [6:0]RD_OCCUPANCY;
  wire [6:0]RD_OCCUPANCY01_out;
  wire RXBUFERR;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire [7:0]RXDATA_USR;
  wire RXDISPERR_USR;
  wire RXNOTINTABLE_USR;
  wire [0:0]SR;
  wire [6:0]WR_ADDR_PLUS1;
  wire [12:9]WR_DATA_REG1;
  wire [12:0]WR_DATA_REG2;
  wire WR_ENABLE;
  wire WR_ENABLE0;
  wire [6:1]WR_OCCUPANCY;
  wire [6:1]WR_OCCUPANCY00_out;
  wire WR_TOGGLE;
  wire insert_idle_reg;
  wire n_0_D5P6_WR_REG_i_2;
  wire n_0_EVEN_i_1;
  wire \n_0_GEN_FIFO[0].RD_DATA_reg[0] ;
  wire \n_0_GEN_FIFO[10].RD_DATA_reg[10] ;
  wire \n_0_GEN_FIFO[11].RD_DATA_reg[11] ;
  wire \n_0_GEN_FIFO[12].RD_DATA_reg[12] ;
  wire \n_0_GEN_FIFO[13].RD_DATA_reg[13] ;
  wire \n_0_GEN_FIFO[1].RD_DATA_reg[1] ;
  wire \n_0_GEN_FIFO[25].RD_DATA_reg[25] ;
  wire \n_0_GEN_FIFO[26].RD_DATA_reg[26] ;
  wire \n_0_GEN_FIFO[27].RD_DATA_reg[27] ;
  wire \n_0_GEN_FIFO[2].RD_DATA_reg[2] ;
  wire \n_0_GEN_FIFO[3].RD_DATA_reg[3] ;
  wire \n_0_GEN_FIFO[4].RD_DATA_reg[4] ;
  wire \n_0_GEN_FIFO[5].RD_DATA_reg[5] ;
  wire \n_0_GEN_FIFO[6].RD_DATA_reg[6] ;
  wire \n_0_GEN_FIFO[7].RD_DATA_reg[7] ;
  wire \n_0_GEN_FIFO[9].RD_DATA_reg[9] ;
  wire n_0_I1_DETECTED_WR_REG_i_2;
  wire n_0_INSERT_IDLE_i_1;
  wire n_0_K28P5_WR_REG_i_2;
  wire \n_0_RD_ADDR_GRAY[1]_i_1 ;
  wire \n_0_RD_ADDR_GRAY[2]_i_1 ;
  wire \n_0_RD_ADDR_GRAY[3]_i_1 ;
  wire \n_0_RD_ADDR_GRAY[4]_i_1 ;
  wire \n_0_RD_ADDR_GRAY[5]_i_1 ;
  wire \n_0_RD_ADDR_PLUS2[6]_i_2 ;
  wire \n_0_RD_ADDR_PLUS2_reg[0] ;
  wire \n_0_RD_ADDR_PLUS2_reg[1] ;
  wire \n_0_RD_ADDR_PLUS2_reg[2] ;
  wire \n_0_RD_ADDR_PLUS2_reg[6] ;
  wire \n_0_RD_ADDR_reg[0] ;
  wire \n_0_RD_ADDR_reg[1] ;
  wire \n_0_RD_ADDR_reg[2] ;
  wire \n_0_RD_ADDR_reg[3] ;
  wire \n_0_RD_ADDR_reg[4] ;
  wire \n_0_RD_ADDR_reg[5] ;
  wire \n_0_RD_ADDR_reg[6] ;
  wire \n_0_RD_DATA_REG_reg[0] ;
  wire \n_0_RD_DATA_REG_reg[10] ;
  wire \n_0_RD_DATA_REG_reg[11] ;
  wire \n_0_RD_DATA_REG_reg[12] ;
  wire \n_0_RD_DATA_REG_reg[13] ;
  wire \n_0_RD_DATA_REG_reg[16] ;
  wire \n_0_RD_DATA_REG_reg[17] ;
  wire \n_0_RD_DATA_REG_reg[18] ;
  wire \n_0_RD_DATA_REG_reg[19] ;
  wire \n_0_RD_DATA_REG_reg[1] ;
  wire \n_0_RD_DATA_REG_reg[20] ;
  wire \n_0_RD_DATA_REG_reg[21] ;
  wire \n_0_RD_DATA_REG_reg[22] ;
  wire \n_0_RD_DATA_REG_reg[23] ;
  wire \n_0_RD_DATA_REG_reg[25] ;
  wire \n_0_RD_DATA_REG_reg[26] ;
  wire \n_0_RD_DATA_REG_reg[27] ;
  wire \n_0_RD_DATA_REG_reg[28] ;
  wire \n_0_RD_DATA_REG_reg[2] ;
  wire \n_0_RD_DATA_REG_reg[3] ;
  wire \n_0_RD_DATA_REG_reg[4] ;
  wire \n_0_RD_DATA_REG_reg[5] ;
  wire \n_0_RD_DATA_REG_reg[6] ;
  wire \n_0_RD_DATA_REG_reg[7] ;
  wire \n_0_RD_DATA_REG_reg[9] ;
  wire n_0_RD_ENABLE_i_1;
  wire n_0_RD_ENABLE_i_10;
  wire n_0_RD_ENABLE_i_3;
  wire n_0_RD_ENABLE_i_4;
  wire n_0_RD_ENABLE_i_5;
  wire n_0_RD_ENABLE_i_6;
  wire n_0_RD_ENABLE_i_7;
  wire n_0_RD_ENABLE_i_8;
  wire n_0_RD_ENABLE_i_9;
  wire \n_0_RD_OCCUPANCY[0]_i_2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_10 ;
  wire \n_0_RD_OCCUPANCY[3]_i_2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_3 ;
  wire \n_0_RD_OCCUPANCY[3]_i_4 ;
  wire \n_0_RD_OCCUPANCY[3]_i_5 ;
  wire \n_0_RD_OCCUPANCY[3]_i_6 ;
  wire \n_0_RD_OCCUPANCY[3]_i_7 ;
  wire \n_0_RD_OCCUPANCY[3]_i_8 ;
  wire \n_0_RD_OCCUPANCY[3]_i_9 ;
  wire \n_0_RD_OCCUPANCY[6]_i_2 ;
  wire \n_0_RD_OCCUPANCY[6]_i_3 ;
  wire \n_0_RD_OCCUPANCY[6]_i_4 ;
  wire \n_0_RD_OCCUPANCY[6]_i_5 ;
  wire \n_0_RD_OCCUPANCY[6]_i_6 ;
  wire \n_0_RD_OCCUPANCY_reg[3]_i_1 ;
  wire \n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ;
  wire \n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ;
  wire n_0_REMOVE_IDLE_i_1;
  wire n_0_REMOVE_IDLE_reg;
  wire n_0_RXBUFERR_i_1;
  wire n_0_RXBUFERR_i_2;
  wire n_0_RXCHARISCOMMA_USR_i_1;
  wire n_0_RXCHARISK_USR_i_1;
  wire \n_0_RXCLKCORCNT[0]_i_1 ;
  wire \n_0_RXCLKCORCNT[1]_i_1 ;
  wire \n_0_RXCLKCORCNT[2]_i_1 ;
  wire \n_0_RXDATA_USR[0]_i_1 ;
  wire \n_0_RXDATA_USR[1]_i_1 ;
  wire \n_0_RXDATA_USR[2]_i_1 ;
  wire \n_0_RXDATA_USR[3]_i_1 ;
  wire \n_0_RXDATA_USR[4]_i_1 ;
  wire \n_0_RXDATA_USR[5]_i_1 ;
  wire \n_0_RXDATA_USR[6]_i_1 ;
  wire \n_0_RXDATA_USR[7]_i_1 ;
  wire n_0_RXDISPERR_USR_i_1;
  wire n_0_RXNOTINTABLE_USR_i_1;
  wire \n_0_WR_ADDR_GRAY_reg[0] ;
  wire \n_0_WR_ADDR_GRAY_reg[1] ;
  wire \n_0_WR_ADDR_GRAY_reg[2] ;
  wire \n_0_WR_ADDR_GRAY_reg[3] ;
  wire \n_0_WR_ADDR_GRAY_reg[4] ;
  wire \n_0_WR_ADDR_GRAY_reg[5] ;
  wire \n_0_WR_ADDR_PLUS2[6]_i_2 ;
  wire \n_0_WR_ADDR_PLUS2_reg[0] ;
  wire \n_0_WR_ADDR_reg[0] ;
  wire \n_0_WR_ADDR_reg[1] ;
  wire \n_0_WR_ADDR_reg[2] ;
  wire \n_0_WR_ADDR_reg[3] ;
  wire \n_0_WR_ADDR_reg[4] ;
  wire \n_0_WR_ADDR_reg[5] ;
  wire \n_0_WR_ADDR_reg[6] ;
  wire \n_0_WR_DATA_REG1_reg[0] ;
  wire \n_0_WR_DATA_REG1_reg[1] ;
  wire \n_0_WR_DATA_REG1_reg[2] ;
  wire \n_0_WR_DATA_REG1_reg[3] ;
  wire \n_0_WR_DATA_REG1_reg[4] ;
  wire \n_0_WR_DATA_REG1_reg[5] ;
  wire \n_0_WR_DATA_REG1_reg[6] ;
  wire \n_0_WR_DATA_REG1_reg[7] ;
  wire \n_0_WR_DATA_reg[0] ;
  wire \n_0_WR_DATA_reg[10] ;
  wire \n_0_WR_DATA_reg[11] ;
  wire \n_0_WR_DATA_reg[12] ;
  wire \n_0_WR_DATA_reg[13] ;
  wire \n_0_WR_DATA_reg[16] ;
  wire \n_0_WR_DATA_reg[17] ;
  wire \n_0_WR_DATA_reg[18] ;
  wire \n_0_WR_DATA_reg[19] ;
  wire \n_0_WR_DATA_reg[1] ;
  wire \n_0_WR_DATA_reg[20] ;
  wire \n_0_WR_DATA_reg[21] ;
  wire \n_0_WR_DATA_reg[22] ;
  wire \n_0_WR_DATA_reg[23] ;
  wire \n_0_WR_DATA_reg[25] ;
  wire \n_0_WR_DATA_reg[26] ;
  wire \n_0_WR_DATA_reg[27] ;
  wire \n_0_WR_DATA_reg[28] ;
  wire \n_0_WR_DATA_reg[2] ;
  wire \n_0_WR_DATA_reg[3] ;
  wire \n_0_WR_DATA_reg[4] ;
  wire \n_0_WR_DATA_reg[5] ;
  wire \n_0_WR_DATA_reg[6] ;
  wire \n_0_WR_DATA_reg[7] ;
  wire \n_0_WR_DATA_reg[9] ;
  wire n_0_WR_ENABLE_i_2;
  wire n_0_WR_ENABLE_i_3;
  wire \n_0_WR_OCCUPANCY[3]_i_2 ;
  wire \n_0_WR_OCCUPANCY[3]_i_3 ;
  wire \n_0_WR_OCCUPANCY[3]_i_4 ;
  wire \n_0_WR_OCCUPANCY[3]_i_5 ;
  wire \n_0_WR_OCCUPANCY[3]_i_6 ;
  wire \n_0_WR_OCCUPANCY[3]_i_7 ;
  wire \n_0_WR_OCCUPANCY[6]_i_2 ;
  wire \n_0_WR_OCCUPANCY[6]_i_3 ;
  wire \n_0_WR_OCCUPANCY[6]_i_4 ;
  wire \n_0_WR_OCCUPANCY_reg[3]_i_1 ;
  wire n_0_WR_TOGGLE_i_1;
  wire \n_1_GEN_FIFO[0].DIST_RAM ;
  wire \n_1_GEN_FIFO[10].DIST_RAM ;
  wire \n_1_GEN_FIFO[11].DIST_RAM ;
  wire \n_1_GEN_FIFO[12].DIST_RAM ;
  wire \n_1_GEN_FIFO[13].DIST_RAM ;
  wire \n_1_GEN_FIFO[16].DIST_RAM ;
  wire \n_1_GEN_FIFO[17].DIST_RAM ;
  wire \n_1_GEN_FIFO[18].DIST_RAM ;
  wire \n_1_GEN_FIFO[19].DIST_RAM ;
  wire \n_1_GEN_FIFO[1].DIST_RAM ;
  wire \n_1_GEN_FIFO[20].DIST_RAM ;
  wire \n_1_GEN_FIFO[21].DIST_RAM ;
  wire \n_1_GEN_FIFO[22].DIST_RAM ;
  wire \n_1_GEN_FIFO[23].DIST_RAM ;
  wire \n_1_GEN_FIFO[25].DIST_RAM ;
  wire \n_1_GEN_FIFO[26].DIST_RAM ;
  wire \n_1_GEN_FIFO[27].DIST_RAM ;
  wire \n_1_GEN_FIFO[28].DIST_RAM ;
  wire \n_1_GEN_FIFO[2].DIST_RAM ;
  wire \n_1_GEN_FIFO[3].DIST_RAM ;
  wire \n_1_GEN_FIFO[4].DIST_RAM ;
  wire \n_1_GEN_FIFO[5].DIST_RAM ;
  wire \n_1_GEN_FIFO[6].DIST_RAM ;
  wire \n_1_GEN_FIFO[7].DIST_RAM ;
  wire \n_1_GEN_FIFO[9].DIST_RAM ;
  wire \n_1_RD_OCCUPANCY_reg[3]_i_1 ;
  wire \n_1_WR_OCCUPANCY_reg[3]_i_1 ;
  wire \n_2_RD_OCCUPANCY_reg[3]_i_1 ;
  wire \n_2_RD_OCCUPANCY_reg[6]_i_1 ;
  wire \n_2_WR_OCCUPANCY_reg[3]_i_1 ;
  wire \n_2_WR_OCCUPANCY_reg[6]_i_1 ;
  wire \n_3_RD_OCCUPANCY_reg[3]_i_1 ;
  wire \n_3_RD_OCCUPANCY_reg[6]_i_1 ;
  wire \n_3_WR_OCCUPANCY_reg[3]_i_1 ;
  wire \n_3_WR_OCCUPANCY_reg[6]_i_1 ;
  wire p_0_in;
  wire [6:0]p_0_in6_out;
  wire p_0_in9_in;
  wire p_11_in;
  wire p_12_in;
  wire p_1_in21_in;
  wire p_1_in7_in;
  wire [7:0]p_2_in;
  wire p_2_in24_in;
  wire p_2_in9_in;
  wire p_3_in;
  wire p_3_in11_in;
  wire p_3_in27_in;
  wire p_4_in;
  wire p_4_in13_in;
  wire p_4_in30_in;
  wire p_5_in;
  wire p_5_in15_in;
  wire [6:0]plusOp;
  wire [6:0]plusOp__0;
  wire rxuserclk2;
  wire userclk2;
  wire \NLW_GEN_FIFO[0].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[10].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[11].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[12].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[13].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[16].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[17].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[18].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[19].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[1].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[20].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[21].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[22].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[23].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[25].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[26].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[27].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[28].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[2].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[3].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[4].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[5].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[6].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[7].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[9].DIST_RAM_SPO_UNCONNECTED ;
  wire [0:0]\NLW_RD_OCCUPANCY_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:2]\NLW_RD_OCCUPANCY_reg[6]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_RD_OCCUPANCY_reg[6]_i_1_O_UNCONNECTED ;
  wire [0:0]\NLW_WR_OCCUPANCY_reg[3]_i_1_O_UNCONNECTED ;
  wire [3:2]\NLW_WR_OCCUPANCY_reg[6]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_WR_OCCUPANCY_reg[6]_i_1_O_UNCONNECTED ;

LUT5 #(
    .INIT(32'h08000020)) 
     D5P6_WR_REG_i_1
       (.I0(n_0_D5P6_WR_REG_i_2),
        .I1(\n_0_WR_DATA_REG1_reg[7] ),
        .I2(\n_0_WR_DATA_REG1_reg[4] ),
        .I3(\n_0_WR_DATA_REG1_reg[2] ),
        .I4(\n_0_WR_DATA_REG1_reg[0] ),
        .O(p_11_in));
LUT5 #(
    .INIT(32'h00000002)) 
     D5P6_WR_REG_i_2
       (.I0(\n_0_WR_DATA_REG1_reg[6] ),
        .I1(\n_0_WR_DATA_REG1_reg[3] ),
        .I2(\n_0_WR_DATA_REG1_reg[1] ),
        .I3(\n_0_WR_DATA_REG1_reg[5] ),
        .I4(p_0_in9_in),
        .O(n_0_D5P6_WR_REG_i_2));
FDRE D5P6_WR_REG_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_11_in),
        .Q(D5P6_WR_REG),
        .R(SR));
LUT1 #(
    .INIT(2'h1)) 
     EVEN_i_1
       (.I0(EVEN),
        .O(n_0_EVEN_i_1));
FDSE EVEN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EVEN_i_1),
        .Q(EVEN),
        .S(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[0].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[0] ),
        .DPO(\n_1_GEN_FIFO[0].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[0].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[0].RD_DATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[0].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[10].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[10] ),
        .DPO(\n_1_GEN_FIFO[10].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[10].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[10].RD_DATA_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[10].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[10].RD_DATA_reg[10] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[11].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[11] ),
        .DPO(\n_1_GEN_FIFO[11].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[11].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[11].RD_DATA_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[11].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[12].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[12] ),
        .DPO(\n_1_GEN_FIFO[12].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[12].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[12].RD_DATA_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[12].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[12].RD_DATA_reg[12] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[13].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[13] ),
        .DPO(\n_1_GEN_FIFO[13].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[13].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[13].RD_DATA_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[13].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[13].RD_DATA_reg[13] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[16].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[16] ),
        .DPO(\n_1_GEN_FIFO[16].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[16].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[16].RD_DATA_reg[16] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[16].DIST_RAM ),
        .Q(p_2_in[0]),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[17].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[17] ),
        .DPO(\n_1_GEN_FIFO[17].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[17].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[17].RD_DATA_reg[17] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[17].DIST_RAM ),
        .Q(p_2_in[1]),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[18].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[18] ),
        .DPO(\n_1_GEN_FIFO[18].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[18].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[18].RD_DATA_reg[18] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[18].DIST_RAM ),
        .Q(p_2_in[2]),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[19].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[19] ),
        .DPO(\n_1_GEN_FIFO[19].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[19].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[19].RD_DATA_reg[19] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[19].DIST_RAM ),
        .Q(p_2_in[3]),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[1].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[1] ),
        .DPO(\n_1_GEN_FIFO[1].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[1].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[1].RD_DATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[1].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[20].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[20] ),
        .DPO(\n_1_GEN_FIFO[20].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[20].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[20].RD_DATA_reg[20] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[20].DIST_RAM ),
        .Q(p_2_in[4]),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[21].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[21] ),
        .DPO(\n_1_GEN_FIFO[21].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[21].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[21].RD_DATA_reg[21] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[21].DIST_RAM ),
        .Q(p_2_in[5]),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[22].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[22] ),
        .DPO(\n_1_GEN_FIFO[22].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[22].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[22].RD_DATA_reg[22] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[22].DIST_RAM ),
        .Q(p_2_in[6]),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[23].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[23] ),
        .DPO(\n_1_GEN_FIFO[23].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[23].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[23].RD_DATA_reg[23] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[23].DIST_RAM ),
        .Q(p_2_in[7]),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[25].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[25] ),
        .DPO(\n_1_GEN_FIFO[25].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[25].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[25].RD_DATA_reg[25] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[25].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[25].RD_DATA_reg[25] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[26].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[26] ),
        .DPO(\n_1_GEN_FIFO[26].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[26].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[26].RD_DATA_reg[26] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[26].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[26].RD_DATA_reg[26] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[27].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[27] ),
        .DPO(\n_1_GEN_FIFO[27].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[27].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[27].RD_DATA_reg[27] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[27].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[28].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[28] ),
        .DPO(\n_1_GEN_FIFO[28].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[28].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[28].RD_DATA_reg[28] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[28].DIST_RAM ),
        .Q(\GEN_FIFO[28].RD_DATA_reg ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[2].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[2] ),
        .DPO(\n_1_GEN_FIFO[2].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[2].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[2].RD_DATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[2].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[3].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[3] ),
        .DPO(\n_1_GEN_FIFO[3].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[3].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[3].RD_DATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[3].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[4].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[4] ),
        .DPO(\n_1_GEN_FIFO[4].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[4].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[4].RD_DATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[4].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[5].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[5] ),
        .DPO(\n_1_GEN_FIFO[5].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[5].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[5].RD_DATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[5].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[6].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[6] ),
        .DPO(\n_1_GEN_FIFO[6].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[6].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[6].RD_DATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[6].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[7].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[7] ),
        .DPO(\n_1_GEN_FIFO[7].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[7].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[7].RD_DATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[7].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .R(I1));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[9].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[9] ),
        .DPO(\n_1_GEN_FIFO[9].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[9].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[9].RD_DATA_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[9].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[9].RD_DATA_reg[9] ),
        .R(I1));
GND GND
       (.G(\<const0> ));
LUT4 #(
    .INIT(16'hF444)) 
     I1_DETECTED_WR_REG_i_1
       (.I0(n_0_I1_DETECTED_WR_REG_i_2),
        .I1(D5P6_WR_REG),
        .I2(p_11_in),
        .I3(K28P5_WR_REG),
        .O(I1_DETECTED_WR));
(* SOFT_HLUTNM = "soft_lutpair562" *) 
   LUT4 #(
    .INIT(16'hFFFB)) 
     I1_DETECTED_WR_REG_i_2
       (.I0(\n_0_WR_DATA_REG1_reg[6] ),
        .I1(\n_0_WR_DATA_REG1_reg[5] ),
        .I2(\n_0_WR_DATA_REG1_reg[1] ),
        .I3(n_0_K28P5_WR_REG_i_2),
        .O(n_0_I1_DETECTED_WR_REG_i_2));
FDRE I1_DETECTED_WR_REG_reg
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(I1_DETECTED_WR),
        .Q(I1_DETECTED_WR_REG),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair573" *) 
   LUT3 #(
    .INIT(8'h08)) 
     INSERT_IDLE_i_1
       (.I0(EVEN),
        .I1(RD_ENABLE0),
        .I2(I1),
        .O(n_0_INSERT_IDLE_i_1));
FDRE INSERT_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_INSERT_IDLE_i_1),
        .Q(INSERT_IDLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair562" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     K28P5_WR_REG_i_1
       (.I0(n_0_K28P5_WR_REG_i_2),
        .I1(\n_0_WR_DATA_REG1_reg[1] ),
        .I2(\n_0_WR_DATA_REG1_reg[5] ),
        .I3(\n_0_WR_DATA_REG1_reg[6] ),
        .O(p_12_in));
LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
     K28P5_WR_REG_i_2
       (.I0(p_0_in9_in),
        .I1(\n_0_WR_DATA_REG1_reg[7] ),
        .I2(\n_0_WR_DATA_REG1_reg[0] ),
        .I3(\n_0_WR_DATA_REG1_reg[4] ),
        .I4(\n_0_WR_DATA_REG1_reg[3] ),
        .I5(\n_0_WR_DATA_REG1_reg[2] ),
        .O(n_0_K28P5_WR_REG_i_2));
FDRE K28P5_WR_REG_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_12_in),
        .Q(K28P5_WR_REG),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair576" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[0]_i_1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair576" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[1]_i_1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .O(\n_0_RD_ADDR_GRAY[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair575" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[2]_i_1 
       (.I0(p_3_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .O(\n_0_RD_ADDR_GRAY[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair575" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[3]_i_1 
       (.I0(p_4_in),
        .I1(p_3_in),
        .O(\n_0_RD_ADDR_GRAY[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair574" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[4]_i_1 
       (.I0(p_5_in),
        .I1(p_4_in),
        .O(\n_0_RD_ADDR_GRAY[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair574" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[5]_i_1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .I1(p_5_in),
        .O(\n_0_RD_ADDR_GRAY[5]_i_1 ));
FDRE \RD_ADDR_GRAY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp[1]),
        .Q(RD_ADDR_GRAY[0]),
        .R(I1));
FDRE \RD_ADDR_GRAY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[1]_i_1 ),
        .Q(RD_ADDR_GRAY[1]),
        .R(I1));
FDRE \RD_ADDR_GRAY_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[2]_i_1 ),
        .Q(RD_ADDR_GRAY[2]),
        .R(I1));
FDRE \RD_ADDR_GRAY_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[3]_i_1 ),
        .Q(RD_ADDR_GRAY[3]),
        .R(I1));
FDRE \RD_ADDR_GRAY_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[4]_i_1 ),
        .Q(RD_ADDR_GRAY[4]),
        .R(I1));
FDRE \RD_ADDR_GRAY_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[5]_i_1 ),
        .Q(RD_ADDR_GRAY[5]),
        .R(I1));
FDRE \RD_ADDR_GRAY_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .Q(RD_ADDR_GRAY[6]),
        .R(I1));
FDSE \RD_ADDR_PLUS1_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .Q(RD_ADDR_PLUS1[0]),
        .S(I1));
FDRE \RD_ADDR_PLUS1_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .Q(RD_ADDR_PLUS1[1]),
        .R(I1));
FDRE \RD_ADDR_PLUS1_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .Q(RD_ADDR_PLUS1[2]),
        .R(I1));
FDRE \RD_ADDR_PLUS1_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_3_in),
        .Q(RD_ADDR_PLUS1[3]),
        .R(I1));
FDRE \RD_ADDR_PLUS1_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_4_in),
        .Q(RD_ADDR_PLUS1[4]),
        .R(I1));
FDRE \RD_ADDR_PLUS1_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_5_in),
        .Q(RD_ADDR_PLUS1[5]),
        .R(I1));
FDRE \RD_ADDR_PLUS1_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .Q(RD_ADDR_PLUS1[6]),
        .R(I1));
LUT1 #(
    .INIT(2'h1)) 
     \RD_ADDR_PLUS2[0]_i_1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair564" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \RD_ADDR_PLUS2[2]_i_1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair564" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \RD_ADDR_PLUS2[3]_i_1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I3(p_3_in),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair557" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \RD_ADDR_PLUS2[4]_i_1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I3(p_3_in),
        .I4(p_4_in),
        .O(plusOp[4]));
LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
     \RD_ADDR_PLUS2[5]_i_1 
       (.I0(p_3_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I3(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I4(p_4_in),
        .I5(p_5_in),
        .O(plusOp[5]));
LUT3 #(
    .INIT(8'h78)) 
     \RD_ADDR_PLUS2[6]_i_1 
       (.I0(\n_0_RD_ADDR_PLUS2[6]_i_2 ),
        .I1(p_5_in),
        .I2(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .O(plusOp[6]));
(* SOFT_HLUTNM = "soft_lutpair557" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \RD_ADDR_PLUS2[6]_i_2 
       (.I0(p_4_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I3(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I4(p_3_in),
        .O(\n_0_RD_ADDR_PLUS2[6]_i_2 ));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[0]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .R(I1));
(* counter = "31" *) 
   FDSE \RD_ADDR_PLUS2_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[1]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .S(I1));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[2]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .R(I1));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[3]),
        .Q(p_3_in),
        .R(I1));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[4]),
        .Q(p_4_in),
        .R(I1));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[5]),
        .Q(p_5_in),
        .R(I1));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[6]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .R(I1));
FDRE \RD_ADDR_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[0]),
        .Q(\n_0_RD_ADDR_reg[0] ),
        .R(I1));
FDRE \RD_ADDR_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[1]),
        .Q(\n_0_RD_ADDR_reg[1] ),
        .R(I1));
FDRE \RD_ADDR_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[2]),
        .Q(\n_0_RD_ADDR_reg[2] ),
        .R(I1));
FDRE \RD_ADDR_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[3]),
        .Q(\n_0_RD_ADDR_reg[3] ),
        .R(I1));
FDRE \RD_ADDR_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[4]),
        .Q(\n_0_RD_ADDR_reg[4] ),
        .R(I1));
FDRE \RD_ADDR_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[5]),
        .Q(\n_0_RD_ADDR_reg[5] ),
        .R(I1));
FDRE \RD_ADDR_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[6]),
        .Q(\n_0_RD_ADDR_reg[6] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .Q(\n_0_RD_DATA_REG_reg[0] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[10] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[10].RD_DATA_reg[10] ),
        .Q(\n_0_RD_DATA_REG_reg[10] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[11] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .Q(\n_0_RD_DATA_REG_reg[11] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[12] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[12].RD_DATA_reg[12] ),
        .Q(\n_0_RD_DATA_REG_reg[12] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[13] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[13].RD_DATA_reg[13] ),
        .Q(\n_0_RD_DATA_REG_reg[13] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[16] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[0]),
        .Q(\n_0_RD_DATA_REG_reg[16] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[17] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[1]),
        .Q(\n_0_RD_DATA_REG_reg[17] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[18] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[2]),
        .Q(\n_0_RD_DATA_REG_reg[18] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[19] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[3]),
        .Q(\n_0_RD_DATA_REG_reg[19] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .Q(\n_0_RD_DATA_REG_reg[1] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[20] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[4]),
        .Q(\n_0_RD_DATA_REG_reg[20] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[21] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[5]),
        .Q(\n_0_RD_DATA_REG_reg[21] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[22] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[6]),
        .Q(\n_0_RD_DATA_REG_reg[22] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[23] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[7]),
        .Q(\n_0_RD_DATA_REG_reg[23] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[25] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[25].RD_DATA_reg[25] ),
        .Q(\n_0_RD_DATA_REG_reg[25] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[26] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[26].RD_DATA_reg[26] ),
        .Q(\n_0_RD_DATA_REG_reg[26] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[27] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .Q(\n_0_RD_DATA_REG_reg[27] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[28] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\GEN_FIFO[28].RD_DATA_reg ),
        .Q(\n_0_RD_DATA_REG_reg[28] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .Q(\n_0_RD_DATA_REG_reg[2] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .Q(\n_0_RD_DATA_REG_reg[3] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .Q(\n_0_RD_DATA_REG_reg[4] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .Q(\n_0_RD_DATA_REG_reg[5] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .Q(\n_0_RD_DATA_REG_reg[6] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[7] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .Q(\n_0_RD_DATA_REG_reg[7] ),
        .R(I1));
FDRE \RD_DATA_REG_reg[9] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[9].RD_DATA_reg[9] ),
        .Q(\n_0_RD_DATA_REG_reg[9] ),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair573" *) 
   LUT3 #(
    .INIT(8'h02)) 
     RD_ENABLE_i_1
       (.I0(EVEN),
        .I1(RD_ENABLE0),
        .I2(I1),
        .O(n_0_RD_ENABLE_i_1));
(* SOFT_HLUTNM = "soft_lutpair561" *) 
   LUT2 #(
    .INIT(4'hB)) 
     RD_ENABLE_i_10
       (.I0(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .I1(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .O(n_0_RD_ENABLE_i_10));
LUT6 #(
    .INIT(64'h2202000000000000)) 
     RD_ENABLE_i_2
       (.I0(n_0_RD_ENABLE_i_3),
        .I1(n_0_RD_ENABLE_i_4),
        .I2(n_0_RD_ENABLE_i_5),
        .I3(p_2_in[6]),
        .I4(n_0_RD_ENABLE_i_6),
        .I5(n_0_RD_ENABLE_i_7),
        .O(RD_ENABLE0));
LUT6 #(
    .INIT(64'h0000004208400042)) 
     RD_ENABLE_i_3
       (.I0(p_2_in[4]),
        .I1(p_2_in[2]),
        .I2(p_2_in[0]),
        .I3(p_2_in[3]),
        .I4(p_2_in[5]),
        .I5(p_2_in[6]),
        .O(n_0_RD_ENABLE_i_3));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     RD_ENABLE_i_4
       (.I0(RD_OCCUPANCY[4]),
        .I1(RD_OCCUPANCY[5]),
        .I2(RD_OCCUPANCY[2]),
        .I3(RD_OCCUPANCY[1]),
        .I4(RD_OCCUPANCY[0]),
        .I5(RD_OCCUPANCY[3]),
        .O(n_0_RD_ENABLE_i_4));
LUT2 #(
    .INIT(4'h7)) 
     RD_ENABLE_i_5
       (.I0(p_2_in[5]),
        .I1(p_2_in[4]),
        .O(n_0_RD_ENABLE_i_5));
LUT5 #(
    .INIT(32'h20080800)) 
     RD_ENABLE_i_6
       (.I0(n_0_RD_ENABLE_i_8),
        .I1(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .I2(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .I3(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .I4(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .O(n_0_RD_ENABLE_i_6));
LUT6 #(
    .INIT(64'h00000060C0000000)) 
     RD_ENABLE_i_7
       (.I0(p_2_in[4]),
        .I1(p_2_in[7]),
        .I2(n_0_RD_ENABLE_i_9),
        .I3(n_0_RD_ENABLE_i_10),
        .I4(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .I5(p_2_in[6]),
        .O(n_0_RD_ENABLE_i_7));
(* SOFT_HLUTNM = "soft_lutpair561" *) 
   LUT5 #(
    .INIT(32'h05008002)) 
     RD_ENABLE_i_8
       (.I0(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .I1(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .I2(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .I3(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .I4(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .O(n_0_RD_ENABLE_i_8));
LUT5 #(
    .INIT(32'h00010100)) 
     RD_ENABLE_i_9
       (.I0(p_2_in[1]),
        .I1(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .I2(RD_OCCUPANCY[6]),
        .I3(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .I4(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .O(n_0_RD_ENABLE_i_9));
FDRE RD_ENABLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RD_ENABLE_i_1),
        .Q(RD_ENABLE),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'h96)) 
     \RD_OCCUPANCY[0]_i_1 
       (.I0(\n_0_RD_ADDR_reg[0] ),
        .I1(\n_0_RD_OCCUPANCY[0]_i_2 ),
        .I2(DATA_OUT),
        .O(RD_OCCUPANCY01_out[0]));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \RD_OCCUPANCY[0]_i_2 
       (.I0(DATA_OUT1_out),
        .I1(DATA_OUT0_out),
        .I2(DATA_OUT3_out),
        .I3(DATA_OUT2_out),
        .I4(DATA_OUT5_out),
        .I5(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[0]_i_2 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[3]_i_10 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_10 ));
LUT4 #(
    .INIT(16'h6996)) 
     \RD_OCCUPANCY[3]_i_2 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(DATA_OUT2_out),
        .I3(DATA_OUT3_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_2 ));
LUT5 #(
    .INIT(32'h96696996)) 
     \RD_OCCUPANCY[3]_i_3 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT4_out),
        .I4(DATA_OUT3_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_3 ));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \RD_OCCUPANCY[3]_i_4 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT0_out),
        .I4(DATA_OUT3_out),
        .I5(DATA_OUT2_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_4 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[3]_i_5 
       (.I0(\n_0_RD_OCCUPANCY[0]_i_2 ),
        .I1(DATA_OUT),
        .O(\n_0_RD_OCCUPANCY[3]_i_5 ));
LUT5 #(
    .INIT(32'h69969669)) 
     \RD_OCCUPANCY[3]_i_6 
       (.I0(DATA_OUT3_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT5_out),
        .I3(DATA_OUT4_out),
        .I4(\n_0_RD_ADDR_reg[3] ),
        .O(\n_0_RD_OCCUPANCY[3]_i_6 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \RD_OCCUPANCY[3]_i_7 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT3_out),
        .I2(DATA_OUT2_out),
        .I3(DATA_OUT1_out),
        .I4(\n_0_RD_ADDR_reg[2] ),
        .I5(DATA_OUT5_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_7 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \RD_OCCUPANCY[3]_i_8 
       (.I0(DATA_OUT3_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT0_out),
        .I4(\n_0_RD_ADDR_reg[1] ),
        .I5(\n_0_RD_OCCUPANCY[3]_i_10 ),
        .O(\n_0_RD_OCCUPANCY[3]_i_8 ));
LUT3 #(
    .INIT(8'h69)) 
     \RD_OCCUPANCY[3]_i_9 
       (.I0(DATA_OUT),
        .I1(\n_0_RD_OCCUPANCY[0]_i_2 ),
        .I2(\n_0_RD_ADDR_reg[0] ),
        .O(\n_0_RD_OCCUPANCY[3]_i_9 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[6]_i_2 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_2 ));
LUT3 #(
    .INIT(8'h96)) 
     \RD_OCCUPANCY[6]_i_3 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT3_out),
        .I2(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_3 ));
LUT2 #(
    .INIT(4'h9)) 
     \RD_OCCUPANCY[6]_i_4 
       (.I0(DATA_OUT5_out),
        .I1(\n_0_RD_ADDR_reg[6] ),
        .O(\n_0_RD_OCCUPANCY[6]_i_4 ));
LUT3 #(
    .INIT(8'h69)) 
     \RD_OCCUPANCY[6]_i_5 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(\n_0_RD_ADDR_reg[5] ),
        .O(\n_0_RD_OCCUPANCY[6]_i_5 ));
LUT4 #(
    .INIT(16'h9669)) 
     \RD_OCCUPANCY[6]_i_6 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT3_out),
        .I2(\n_0_RD_ADDR_reg[4] ),
        .I3(DATA_OUT5_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_6 ));
FDRE \RD_OCCUPANCY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[0]),
        .Q(RD_OCCUPANCY[0]),
        .R(I1));
FDRE \RD_OCCUPANCY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[1]),
        .Q(RD_OCCUPANCY[1]),
        .R(I1));
FDRE \RD_OCCUPANCY_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[2]),
        .Q(RD_OCCUPANCY[2]),
        .R(I1));
FDRE \RD_OCCUPANCY_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[3]),
        .Q(RD_OCCUPANCY[3]),
        .R(I1));
CARRY4 \RD_OCCUPANCY_reg[3]_i_1 
       (.CI(\<const0> ),
        .CO({\n_0_RD_OCCUPANCY_reg[3]_i_1 ,\n_1_RD_OCCUPANCY_reg[3]_i_1 ,\n_2_RD_OCCUPANCY_reg[3]_i_1 ,\n_3_RD_OCCUPANCY_reg[3]_i_1 }),
        .CYINIT(\<const1> ),
        .DI({\n_0_RD_OCCUPANCY[3]_i_2 ,\n_0_RD_OCCUPANCY[3]_i_3 ,\n_0_RD_OCCUPANCY[3]_i_4 ,\n_0_RD_OCCUPANCY[3]_i_5 }),
        .O({RD_OCCUPANCY01_out[3:1],\NLW_RD_OCCUPANCY_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({\n_0_RD_OCCUPANCY[3]_i_6 ,\n_0_RD_OCCUPANCY[3]_i_7 ,\n_0_RD_OCCUPANCY[3]_i_8 ,\n_0_RD_OCCUPANCY[3]_i_9 }));
FDRE \RD_OCCUPANCY_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[4]),
        .Q(RD_OCCUPANCY[4]),
        .R(I1));
FDRE \RD_OCCUPANCY_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[5]),
        .Q(RD_OCCUPANCY[5]),
        .R(I1));
FDSE \RD_OCCUPANCY_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[6]),
        .Q(RD_OCCUPANCY[6]),
        .S(I1));
CARRY4 \RD_OCCUPANCY_reg[6]_i_1 
       (.CI(\n_0_RD_OCCUPANCY_reg[3]_i_1 ),
        .CO({\NLW_RD_OCCUPANCY_reg[6]_i_1_CO_UNCONNECTED [3:2],\n_2_RD_OCCUPANCY_reg[6]_i_1 ,\n_3_RD_OCCUPANCY_reg[6]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\n_0_RD_OCCUPANCY[6]_i_2 ,\n_0_RD_OCCUPANCY[6]_i_3 }),
        .O({\NLW_RD_OCCUPANCY_reg[6]_i_1_O_UNCONNECTED [3],RD_OCCUPANCY01_out[6:4]}),
        .S({\<const0> ,\n_0_RD_OCCUPANCY[6]_i_4 ,\n_0_RD_OCCUPANCY[6]_i_5 ,\n_0_RD_OCCUPANCY[6]_i_6 }));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__69 \RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[0]),
        .data_out(\n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__70 \RECLOCK_RD_ADDRGRAY[1].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[1]),
        .data_out(p_4_in30_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__71 \RECLOCK_RD_ADDRGRAY[2].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[2]),
        .data_out(p_3_in27_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__72 \RECLOCK_RD_ADDRGRAY[3].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[3]),
        .data_out(p_2_in24_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__73 \RECLOCK_RD_ADDRGRAY[4].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[4]),
        .data_out(p_1_in21_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__74 \RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[5]),
        .data_out(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__75 \RECLOCK_RD_ADDRGRAY[6].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[6]),
        .data_out(p_0_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__76 \RECLOCK_WR_ADDRGRAY[0].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[0] ),
        .data_out(DATA_OUT));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__77 \RECLOCK_WR_ADDRGRAY[1].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[1] ),
        .data_out(DATA_OUT0_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__78 \RECLOCK_WR_ADDRGRAY[2].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[2] ),
        .data_out(DATA_OUT1_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__79 \RECLOCK_WR_ADDRGRAY[3].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[3] ),
        .data_out(DATA_OUT2_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__80 \RECLOCK_WR_ADDRGRAY[4].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[4] ),
        .data_out(DATA_OUT3_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__81 \RECLOCK_WR_ADDRGRAY[5].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[5] ),
        .data_out(DATA_OUT4_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__82 \RECLOCK_WR_ADDRGRAY[6].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(DATA_IN),
        .data_out(DATA_OUT5_out));
(* SOFT_HLUTNM = "soft_lutpair558" *) 
   LUT5 #(
    .INIT(32'h080F0800)) 
     REMOVE_IDLE_i_1
       (.I0(n_0_WR_ENABLE_i_2),
        .I1(I1_DETECTED_WR),
        .I2(SR),
        .I3(WR_TOGGLE),
        .I4(n_0_REMOVE_IDLE_reg),
        .O(n_0_REMOVE_IDLE_i_1));
FDRE REMOVE_IDLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(n_0_REMOVE_IDLE_i_1),
        .Q(n_0_REMOVE_IDLE_reg),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hFFFF8002)) 
     RXBUFERR_i_1
       (.I0(n_0_RXBUFERR_i_2),
        .I1(RD_OCCUPANCY[2]),
        .I2(RD_OCCUPANCY[3]),
        .I3(RD_OCCUPANCY[4]),
        .I4(RXBUFERR),
        .O(n_0_RXBUFERR_i_1));
LUT6 #(
    .INIT(64'hBD000000000000BD)) 
     RXBUFERR_i_2
       (.I0(RD_OCCUPANCY[2]),
        .I1(RD_OCCUPANCY[1]),
        .I2(RD_OCCUPANCY[0]),
        .I3(RD_OCCUPANCY[4]),
        .I4(RD_OCCUPANCY[5]),
        .I5(RD_OCCUPANCY[6]),
        .O(n_0_RXBUFERR_i_2));
FDRE RXBUFERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXBUFERR_i_1),
        .Q(RXBUFERR),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair567" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXCHARISCOMMA_USR_i_1
       (.I0(\n_0_RD_DATA_REG_reg[28] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[12] ),
        .O(n_0_RXCHARISCOMMA_USR_i_1));
FDRE RXCHARISCOMMA_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXCHARISCOMMA_USR_i_1),
        .Q(RXCHARISCOMMA_USR),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair568" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXCHARISK_USR_i_1
       (.I0(\n_0_RD_DATA_REG_reg[27] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[11] ),
        .O(n_0_RXCHARISK_USR_i_1));
FDRE RXCHARISK_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXCHARISK_USR_i_1),
        .Q(RXCHARISK_USR),
        .R(I1));
LUT3 #(
    .INIT(8'hBA)) 
     \RXCLKCORCNT[0]_i_1 
       (.I0(insert_idle_reg),
        .I1(I2[0]),
        .I2(\n_0_RD_DATA_REG_reg[13] ),
        .O(\n_0_RXCLKCORCNT[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair563" *) 
   LUT4 #(
    .INIT(16'h00A2)) 
     \RXCLKCORCNT[1]_i_1 
       (.I0(insert_idle_reg),
        .I1(\n_0_RD_DATA_REG_reg[13] ),
        .I2(I2[0]),
        .I3(I1),
        .O(\n_0_RXCLKCORCNT[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair563" *) 
   LUT4 #(
    .INIT(16'h00A2)) 
     \RXCLKCORCNT[2]_i_1 
       (.I0(insert_idle_reg),
        .I1(\n_0_RD_DATA_REG_reg[13] ),
        .I2(I2[0]),
        .I3(I1),
        .O(\n_0_RXCLKCORCNT[2]_i_1 ));
FDRE \RXCLKCORCNT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[0]_i_1 ),
        .Q(I2[0]),
        .R(I1));
FDRE \RXCLKCORCNT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[1]_i_1 ),
        .Q(I2[1]),
        .R(\<const0> ));
FDRE \RXCLKCORCNT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[2]_i_1 ),
        .Q(I2[2]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair572" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[0]_i_1 
       (.I0(\n_0_RD_DATA_REG_reg[16] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[0] ),
        .O(\n_0_RXDATA_USR[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair572" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[1]_i_1 
       (.I0(\n_0_RD_DATA_REG_reg[17] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[1] ),
        .O(\n_0_RXDATA_USR[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair571" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[2]_i_1 
       (.I0(\n_0_RD_DATA_REG_reg[18] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[2] ),
        .O(\n_0_RXDATA_USR[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair571" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[3]_i_1 
       (.I0(\n_0_RD_DATA_REG_reg[19] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[3] ),
        .O(\n_0_RXDATA_USR[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair569" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[4]_i_1 
       (.I0(\n_0_RD_DATA_REG_reg[20] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[4] ),
        .O(\n_0_RXDATA_USR[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair570" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[5]_i_1 
       (.I0(\n_0_RD_DATA_REG_reg[21] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[5] ),
        .O(\n_0_RXDATA_USR[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair570" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[6]_i_1 
       (.I0(\n_0_RD_DATA_REG_reg[22] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[6] ),
        .O(\n_0_RXDATA_USR[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair569" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[7]_i_1 
       (.I0(\n_0_RD_DATA_REG_reg[23] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[7] ),
        .O(\n_0_RXDATA_USR[7]_i_1 ));
FDRE \RXDATA_USR_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[0]_i_1 ),
        .Q(RXDATA_USR[0]),
        .R(I1));
FDRE \RXDATA_USR_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[1]_i_1 ),
        .Q(RXDATA_USR[1]),
        .R(I1));
FDRE \RXDATA_USR_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[2]_i_1 ),
        .Q(RXDATA_USR[2]),
        .R(I1));
FDRE \RXDATA_USR_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[3]_i_1 ),
        .Q(RXDATA_USR[3]),
        .R(I1));
FDRE \RXDATA_USR_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[4]_i_1 ),
        .Q(RXDATA_USR[4]),
        .R(I1));
FDRE \RXDATA_USR_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[5]_i_1 ),
        .Q(RXDATA_USR[5]),
        .R(I1));
FDRE \RXDATA_USR_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[6]_i_1 ),
        .Q(RXDATA_USR[6]),
        .R(I1));
FDRE \RXDATA_USR_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[7]_i_1 ),
        .Q(RXDATA_USR[7]),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair567" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXDISPERR_USR_i_1
       (.I0(\n_0_RD_DATA_REG_reg[26] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[10] ),
        .O(n_0_RXDISPERR_USR_i_1));
FDRE RXDISPERR_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXDISPERR_USR_i_1),
        .Q(RXDISPERR_USR),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair568" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXNOTINTABLE_USR_i_1
       (.I0(\n_0_RD_DATA_REG_reg[25] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[9] ),
        .O(n_0_RXNOTINTABLE_USR_i_1));
FDRE RXNOTINTABLE_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXNOTINTABLE_USR_i_1),
        .Q(RXNOTINTABLE_USR),
        .R(I1));
VCC VCC
       (.P(\<const1> ));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[0]_i_1 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I1(p_1_in7_in),
        .O(p_0_in6_out[0]));
(* SOFT_HLUTNM = "soft_lutpair577" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[1]_i_1 
       (.I0(p_1_in7_in),
        .I1(p_2_in9_in),
        .O(p_0_in6_out[1]));
(* SOFT_HLUTNM = "soft_lutpair577" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[2]_i_1 
       (.I0(p_2_in9_in),
        .I1(p_3_in11_in),
        .O(p_0_in6_out[2]));
(* SOFT_HLUTNM = "soft_lutpair578" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[3]_i_1 
       (.I0(p_3_in11_in),
        .I1(p_4_in13_in),
        .O(p_0_in6_out[3]));
(* SOFT_HLUTNM = "soft_lutpair578" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[4]_i_1 
       (.I0(p_4_in13_in),
        .I1(p_5_in15_in),
        .O(p_0_in6_out[4]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[5]_i_1 
       (.I0(p_5_in15_in),
        .I1(p_0_in6_out[6]),
        .O(p_0_in6_out[5]));
FDSE \WR_ADDR_GRAY_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[0]),
        .Q(\n_0_WR_ADDR_GRAY_reg[0] ),
        .S(SR));
FDRE \WR_ADDR_GRAY_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[1]),
        .Q(\n_0_WR_ADDR_GRAY_reg[1] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[2]),
        .Q(\n_0_WR_ADDR_GRAY_reg[2] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[3]),
        .Q(\n_0_WR_ADDR_GRAY_reg[3] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[4]),
        .Q(\n_0_WR_ADDR_GRAY_reg[4] ),
        .R(SR));
FDSE \WR_ADDR_GRAY_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[5]),
        .Q(\n_0_WR_ADDR_GRAY_reg[5] ),
        .S(SR));
FDSE \WR_ADDR_GRAY_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[6]),
        .Q(DATA_IN),
        .S(SR));
FDSE \WR_ADDR_PLUS1_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .Q(WR_ADDR_PLUS1[0]),
        .S(SR));
FDRE \WR_ADDR_PLUS1_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_1_in7_in),
        .Q(WR_ADDR_PLUS1[1]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_2_in9_in),
        .Q(WR_ADDR_PLUS1[2]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_3_in11_in),
        .Q(WR_ADDR_PLUS1[3]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_4_in13_in),
        .Q(WR_ADDR_PLUS1[4]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_5_in15_in),
        .Q(WR_ADDR_PLUS1[5]),
        .R(SR));
FDSE \WR_ADDR_PLUS1_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_0_in6_out[6]),
        .Q(WR_ADDR_PLUS1[6]),
        .S(SR));
LUT1 #(
    .INIT(2'h1)) 
     \WR_ADDR_PLUS2[0]_i_1 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .O(plusOp__0[0]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_PLUS2[1]_i_1 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I1(p_1_in7_in),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair566" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \WR_ADDR_PLUS2[2]_i_1 
       (.I0(p_2_in9_in),
        .I1(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I2(p_1_in7_in),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair566" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \WR_ADDR_PLUS2[3]_i_1 
       (.I0(p_3_in11_in),
        .I1(p_1_in7_in),
        .I2(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I3(p_2_in9_in),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair560" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \WR_ADDR_PLUS2[4]_i_1 
       (.I0(p_2_in9_in),
        .I1(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I2(p_1_in7_in),
        .I3(p_3_in11_in),
        .I4(p_4_in13_in),
        .O(plusOp__0[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \WR_ADDR_PLUS2[5]_i_1 
       (.I0(p_5_in15_in),
        .I1(p_2_in9_in),
        .I2(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I3(p_1_in7_in),
        .I4(p_3_in11_in),
        .I5(p_4_in13_in),
        .O(plusOp__0[5]));
LUT3 #(
    .INIT(8'h6A)) 
     \WR_ADDR_PLUS2[6]_i_1 
       (.I0(p_0_in6_out[6]),
        .I1(\n_0_WR_ADDR_PLUS2[6]_i_2 ),
        .I2(p_5_in15_in),
        .O(plusOp__0[6]));
(* SOFT_HLUTNM = "soft_lutpair560" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \WR_ADDR_PLUS2[6]_i_2 
       (.I0(p_4_in13_in),
        .I1(p_3_in11_in),
        .I2(p_1_in7_in),
        .I3(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I4(p_2_in9_in),
        .O(\n_0_WR_ADDR_PLUS2[6]_i_2 ));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[0]),
        .Q(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .R(SR));
(* counter = "32" *) 
   FDSE \WR_ADDR_PLUS2_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[1]),
        .Q(p_1_in7_in),
        .S(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[2]),
        .Q(p_2_in9_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[3]),
        .Q(p_3_in11_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[4]),
        .Q(p_4_in13_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[5]),
        .Q(p_5_in15_in),
        .R(SR));
(* counter = "32" *) 
   FDSE \WR_ADDR_PLUS2_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[6]),
        .Q(p_0_in6_out[6]),
        .S(SR));
FDRE \WR_ADDR_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[0]),
        .Q(\n_0_WR_ADDR_reg[0] ),
        .R(SR));
FDRE \WR_ADDR_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[1]),
        .Q(\n_0_WR_ADDR_reg[1] ),
        .R(SR));
FDRE \WR_ADDR_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[2]),
        .Q(\n_0_WR_ADDR_reg[2] ),
        .R(SR));
FDRE \WR_ADDR_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[3]),
        .Q(\n_0_WR_ADDR_reg[3] ),
        .R(SR));
FDRE \WR_ADDR_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[4]),
        .Q(\n_0_WR_ADDR_reg[4] ),
        .R(SR));
FDRE \WR_ADDR_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[5]),
        .Q(\n_0_WR_ADDR_reg[5] ),
        .R(SR));
FDSE \WR_ADDR_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[6]),
        .Q(\n_0_WR_ADDR_reg[6] ),
        .S(SR));
FDRE \WR_DATA_REG1_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[0]),
        .Q(\n_0_WR_DATA_REG1_reg[0] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I4),
        .Q(WR_DATA_REG1[10]),
        .R(SR));
FDRE \WR_DATA_REG1_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I3),
        .Q(p_0_in9_in),
        .R(SR));
FDRE \WR_DATA_REG1_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(Q),
        .Q(WR_DATA_REG1[12]),
        .R(SR));
FDRE \WR_DATA_REG1_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[1]),
        .Q(\n_0_WR_DATA_REG1_reg[1] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[2]),
        .Q(\n_0_WR_DATA_REG1_reg[2] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[3]),
        .Q(\n_0_WR_DATA_REG1_reg[3] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[4]),
        .Q(\n_0_WR_DATA_REG1_reg[4] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[5]),
        .Q(\n_0_WR_DATA_REG1_reg[5] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[6]),
        .Q(\n_0_WR_DATA_REG1_reg[6] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[7]),
        .Q(\n_0_WR_DATA_REG1_reg[7] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5),
        .Q(WR_DATA_REG1[9]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[0] ),
        .Q(WR_DATA_REG2[0]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[10]),
        .Q(WR_DATA_REG2[10]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in9_in),
        .Q(WR_DATA_REG2[11]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[12]),
        .Q(WR_DATA_REG2[12]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[1] ),
        .Q(WR_DATA_REG2[1]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[2] ),
        .Q(WR_DATA_REG2[2]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[3] ),
        .Q(WR_DATA_REG2[3]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[4] ),
        .Q(WR_DATA_REG2[4]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[5] ),
        .Q(WR_DATA_REG2[5]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[6] ),
        .Q(WR_DATA_REG2[6]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[7] ),
        .Q(WR_DATA_REG2[7]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[9]),
        .Q(WR_DATA_REG2[9]),
        .R(SR));
FDRE \WR_DATA_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[0] ),
        .Q(\n_0_WR_DATA_reg[0] ),
        .R(SR));
FDRE \WR_DATA_reg[10] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[10]),
        .Q(\n_0_WR_DATA_reg[10] ),
        .R(SR));
FDRE \WR_DATA_reg[11] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(p_0_in9_in),
        .Q(\n_0_WR_DATA_reg[11] ),
        .R(SR));
FDRE \WR_DATA_reg[12] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[12]),
        .Q(\n_0_WR_DATA_reg[12] ),
        .R(SR));
FDRE \WR_DATA_reg[13] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(n_0_REMOVE_IDLE_reg),
        .Q(\n_0_WR_DATA_reg[13] ),
        .R(SR));
FDRE \WR_DATA_reg[16] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[0]),
        .Q(\n_0_WR_DATA_reg[16] ),
        .R(SR));
FDRE \WR_DATA_reg[17] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[1]),
        .Q(\n_0_WR_DATA_reg[17] ),
        .R(SR));
FDRE \WR_DATA_reg[18] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[2]),
        .Q(\n_0_WR_DATA_reg[18] ),
        .R(SR));
FDRE \WR_DATA_reg[19] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[3]),
        .Q(\n_0_WR_DATA_reg[19] ),
        .R(SR));
FDRE \WR_DATA_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[1] ),
        .Q(\n_0_WR_DATA_reg[1] ),
        .R(SR));
FDRE \WR_DATA_reg[20] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[4]),
        .Q(\n_0_WR_DATA_reg[20] ),
        .R(SR));
FDRE \WR_DATA_reg[21] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[5]),
        .Q(\n_0_WR_DATA_reg[21] ),
        .R(SR));
FDRE \WR_DATA_reg[22] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[6]),
        .Q(\n_0_WR_DATA_reg[22] ),
        .R(SR));
FDRE \WR_DATA_reg[23] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[7]),
        .Q(\n_0_WR_DATA_reg[23] ),
        .R(SR));
FDRE \WR_DATA_reg[25] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[9]),
        .Q(\n_0_WR_DATA_reg[25] ),
        .R(SR));
FDRE \WR_DATA_reg[26] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[10]),
        .Q(\n_0_WR_DATA_reg[26] ),
        .R(SR));
FDRE \WR_DATA_reg[27] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[11]),
        .Q(\n_0_WR_DATA_reg[27] ),
        .R(SR));
FDRE \WR_DATA_reg[28] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[12]),
        .Q(\n_0_WR_DATA_reg[28] ),
        .R(SR));
FDRE \WR_DATA_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[2] ),
        .Q(\n_0_WR_DATA_reg[2] ),
        .R(SR));
FDRE \WR_DATA_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[3] ),
        .Q(\n_0_WR_DATA_reg[3] ),
        .R(SR));
FDRE \WR_DATA_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[4] ),
        .Q(\n_0_WR_DATA_reg[4] ),
        .R(SR));
FDRE \WR_DATA_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[5] ),
        .Q(\n_0_WR_DATA_reg[5] ),
        .R(SR));
FDRE \WR_DATA_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[6] ),
        .Q(\n_0_WR_DATA_reg[6] ),
        .R(SR));
FDRE \WR_DATA_reg[7] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[7] ),
        .Q(\n_0_WR_DATA_reg[7] ),
        .R(SR));
FDRE \WR_DATA_reg[9] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[9]),
        .Q(\n_0_WR_DATA_reg[9] ),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair558" *) 
   LUT4 #(
    .INIT(16'h0070)) 
     WR_ENABLE_i_1
       (.I0(n_0_WR_ENABLE_i_2),
        .I1(I1_DETECTED_WR),
        .I2(WR_TOGGLE),
        .I3(SR),
        .O(WR_ENABLE0));
(* SOFT_HLUTNM = "soft_lutpair559" *) 
   LUT5 #(
    .INIT(32'h00400000)) 
     WR_ENABLE_i_2
       (.I0(n_0_WR_ENABLE_i_3),
        .I1(WR_TOGGLE),
        .I2(WR_OCCUPANCY[6]),
        .I3(n_0_REMOVE_IDLE_reg),
        .I4(I1_DETECTED_WR_REG),
        .O(n_0_WR_ENABLE_i_2));
LUT5 #(
    .INIT(32'h00000001)) 
     WR_ENABLE_i_3
       (.I0(WR_OCCUPANCY[4]),
        .I1(WR_OCCUPANCY[1]),
        .I2(WR_OCCUPANCY[3]),
        .I3(WR_OCCUPANCY[5]),
        .I4(WR_OCCUPANCY[2]),
        .O(n_0_WR_ENABLE_i_3));
FDRE WR_ENABLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_ENABLE0),
        .Q(WR_ENABLE),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h69969669)) 
     \WR_OCCUPANCY[3]_i_2 
       (.I0(\n_0_WR_ADDR_reg[3] ),
        .I1(p_1_in21_in),
        .I2(p_2_in24_in),
        .I3(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I4(p_0_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_2 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \WR_OCCUPANCY[3]_i_3 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I1(p_0_in),
        .I2(p_1_in21_in),
        .I3(p_2_in24_in),
        .I4(\n_0_WR_ADDR_reg[2] ),
        .I5(p_3_in27_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_3 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \WR_OCCUPANCY[3]_i_4 
       (.I0(\n_0_WR_ADDR_reg[1] ),
        .I1(p_2_in24_in),
        .I2(p_1_in21_in),
        .I3(\n_0_WR_OCCUPANCY[3]_i_6 ),
        .I4(p_3_in27_in),
        .I5(p_4_in30_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_4 ));
LUT5 #(
    .INIT(32'h96696996)) 
     \WR_OCCUPANCY[3]_i_5 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ),
        .I1(p_4_in30_in),
        .I2(p_3_in27_in),
        .I3(\n_0_WR_OCCUPANCY[3]_i_7 ),
        .I4(\n_0_WR_ADDR_reg[0] ),
        .O(\n_0_WR_OCCUPANCY[3]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair565" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_OCCUPANCY[3]_i_6 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I1(p_0_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair565" *) 
   LUT4 #(
    .INIT(16'h9669)) 
     \WR_OCCUPANCY[3]_i_7 
       (.I0(p_0_in),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(p_2_in24_in),
        .I3(p_1_in21_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_7 ));
LUT2 #(
    .INIT(4'h9)) 
     \WR_OCCUPANCY[6]_i_2 
       (.I0(\n_0_WR_ADDR_reg[6] ),
        .I1(p_0_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_2 ));
LUT3 #(
    .INIT(8'h69)) 
     \WR_OCCUPANCY[6]_i_3 
       (.I0(\n_0_WR_ADDR_reg[5] ),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(p_0_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_3 ));
LUT4 #(
    .INIT(16'h9669)) 
     \WR_OCCUPANCY[6]_i_4 
       (.I0(p_0_in),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(\n_0_WR_ADDR_reg[4] ),
        .I3(p_1_in21_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_4 ));
FDRE \WR_OCCUPANCY_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[1]),
        .Q(WR_OCCUPANCY[1]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[2]),
        .Q(WR_OCCUPANCY[2]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[3]),
        .Q(WR_OCCUPANCY[3]),
        .R(SR));
CARRY4 \WR_OCCUPANCY_reg[3]_i_1 
       (.CI(\<const0> ),
        .CO({\n_0_WR_OCCUPANCY_reg[3]_i_1 ,\n_1_WR_OCCUPANCY_reg[3]_i_1 ,\n_2_WR_OCCUPANCY_reg[3]_i_1 ,\n_3_WR_OCCUPANCY_reg[3]_i_1 }),
        .CYINIT(\<const1> ),
        .DI({\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .O({WR_OCCUPANCY00_out[3:1],\NLW_WR_OCCUPANCY_reg[3]_i_1_O_UNCONNECTED [0]}),
        .S({\n_0_WR_OCCUPANCY[3]_i_2 ,\n_0_WR_OCCUPANCY[3]_i_3 ,\n_0_WR_OCCUPANCY[3]_i_4 ,\n_0_WR_OCCUPANCY[3]_i_5 }));
FDRE \WR_OCCUPANCY_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[4]),
        .Q(WR_OCCUPANCY[4]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[5]),
        .Q(WR_OCCUPANCY[5]),
        .R(SR));
FDSE \WR_OCCUPANCY_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[6]),
        .Q(WR_OCCUPANCY[6]),
        .S(SR));
CARRY4 \WR_OCCUPANCY_reg[6]_i_1 
       (.CI(\n_0_WR_OCCUPANCY_reg[3]_i_1 ),
        .CO({\NLW_WR_OCCUPANCY_reg[6]_i_1_CO_UNCONNECTED [3:2],\n_2_WR_OCCUPANCY_reg[6]_i_1 ,\n_3_WR_OCCUPANCY_reg[6]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] }),
        .O({\NLW_WR_OCCUPANCY_reg[6]_i_1_O_UNCONNECTED [3],WR_OCCUPANCY00_out[6:4]}),
        .S({\<const0> ,\n_0_WR_OCCUPANCY[6]_i_2 ,\n_0_WR_OCCUPANCY[6]_i_3 ,\n_0_WR_OCCUPANCY[6]_i_4 }));
(* RETAIN_INVERTER *) 
   (* SOFT_HLUTNM = "soft_lutpair559" *) 
   LUT1 #(
    .INIT(2'h1)) 
     WR_TOGGLE_i_1
       (.I0(WR_TOGGLE),
        .O(n_0_WR_TOGGLE_i_1));
FDSE WR_TOGGLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(n_0_WR_TOGGLE_i_1),
        .Q(WR_TOGGLE),
        .S(SR));
FDRE insert_idle_reg_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(INSERT_IDLE),
        .Q(insert_idle_reg),
        .R(I1));
endmodule

(* ORIG_REF_NAME = "QSGMII_RX_ELASTIC_BUFFER" *) 
module quadsgmiiQSGMII_RX_ELASTIC_BUFFER_18
   (RXCHARISCOMMA_USR,
    RXCHARISK_USR,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    I9,
    RXDATA_USR,
    O1,
    rxuserclk2,
    userclk2,
    SS,
    I1,
    MGT_RX_RESET3_in,
    SR,
    Q,
    I2,
    I3,
    I4,
    I5);
  output RXCHARISCOMMA_USR;
  output RXCHARISK_USR;
  output RXDISPERR_USR;
  output RXNOTINTABLE_USR;
  output [2:0]I9;
  output [7:0]RXDATA_USR;
  output O1;
  input rxuserclk2;
  input userclk2;
  input [0:0]SS;
  input I1;
  input MGT_RX_RESET3_in;
  input [0:0]SR;
  input [0:0]Q;
  input [0:0]I2;
  input [0:0]I3;
  input [0:0]I4;
  input [7:0]I5;

  wire \<const0> ;
  wire \<const1> ;
  wire D5P6_WR_REG;
  wire DATA_IN;
  wire DATA_OUT;
  wire DATA_OUT0_out;
  wire DATA_OUT1_out;
  wire DATA_OUT2_out;
  wire DATA_OUT3_out;
  wire DATA_OUT4_out;
  wire DATA_OUT5_out;
  wire EVEN;
  wire \GEN_FIFO[28].RD_DATA_reg ;
  wire I1;
  wire I1_DETECTED_WR;
  wire I1_DETECTED_WR_REG;
  wire [0:0]I2;
  wire [0:0]I3;
  wire [0:0]I4;
  wire [7:0]I5;
  wire [2:0]I9;
  wire INSERT_IDLE;
  wire K28P5_WR_REG;
  wire MGT_RX_RESET3_in;
  wire O1;
  wire [0:0]Q;
  wire [6:0]RD_ADDR_GRAY;
  wire [6:0]RD_ADDR_PLUS1;
  wire RD_ENABLE;
  wire RD_ENABLE0;
  wire [6:0]RD_OCCUPANCY;
  wire [6:0]RD_OCCUPANCY01_out;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire [7:0]RXDATA_USR;
  wire RXDISPERR_USR;
  wire RXNOTINTABLE_USR;
  wire [0:0]SR;
  wire [0:0]SS;
  wire [6:0]WR_ADDR_PLUS1;
  wire [12:9]WR_DATA_REG1;
  wire [12:0]WR_DATA_REG2;
  wire WR_ENABLE;
  wire WR_ENABLE0;
  wire [6:1]WR_OCCUPANCY;
  wire [6:1]WR_OCCUPANCY00_out;
  wire WR_TOGGLE;
  wire insert_idle_reg;
  wire n_0_D5P6_WR_REG_i_2__0;
  wire n_0_EVEN_i_1__0;
  wire \n_0_GEN_FIFO[0].RD_DATA_reg[0] ;
  wire \n_0_GEN_FIFO[10].RD_DATA_reg[10] ;
  wire \n_0_GEN_FIFO[11].RD_DATA_reg[11] ;
  wire \n_0_GEN_FIFO[12].RD_DATA_reg[12] ;
  wire \n_0_GEN_FIFO[13].RD_DATA_reg[13] ;
  wire \n_0_GEN_FIFO[1].RD_DATA_reg[1] ;
  wire \n_0_GEN_FIFO[25].RD_DATA_reg[25] ;
  wire \n_0_GEN_FIFO[26].RD_DATA_reg[26] ;
  wire \n_0_GEN_FIFO[27].RD_DATA_reg[27] ;
  wire \n_0_GEN_FIFO[2].RD_DATA_reg[2] ;
  wire \n_0_GEN_FIFO[3].RD_DATA_reg[3] ;
  wire \n_0_GEN_FIFO[4].RD_DATA_reg[4] ;
  wire \n_0_GEN_FIFO[5].RD_DATA_reg[5] ;
  wire \n_0_GEN_FIFO[6].RD_DATA_reg[6] ;
  wire \n_0_GEN_FIFO[7].RD_DATA_reg[7] ;
  wire \n_0_GEN_FIFO[9].RD_DATA_reg[9] ;
  wire n_0_I1_DETECTED_WR_REG_i_2__0;
  wire n_0_INSERT_IDLE_i_1__1;
  wire n_0_K28P5_WR_REG_i_2__0;
  wire \n_0_RD_ADDR_GRAY[1]_i_1__0 ;
  wire \n_0_RD_ADDR_GRAY[2]_i_1__0 ;
  wire \n_0_RD_ADDR_GRAY[3]_i_1__0 ;
  wire \n_0_RD_ADDR_GRAY[4]_i_1__0 ;
  wire \n_0_RD_ADDR_GRAY[5]_i_1__0 ;
  wire \n_0_RD_ADDR_PLUS2[6]_i_2__0 ;
  wire \n_0_RD_ADDR_PLUS2_reg[0] ;
  wire \n_0_RD_ADDR_PLUS2_reg[1] ;
  wire \n_0_RD_ADDR_PLUS2_reg[2] ;
  wire \n_0_RD_ADDR_PLUS2_reg[6] ;
  wire \n_0_RD_ADDR_reg[0] ;
  wire \n_0_RD_ADDR_reg[1] ;
  wire \n_0_RD_ADDR_reg[2] ;
  wire \n_0_RD_ADDR_reg[3] ;
  wire \n_0_RD_ADDR_reg[4] ;
  wire \n_0_RD_ADDR_reg[5] ;
  wire \n_0_RD_ADDR_reg[6] ;
  wire \n_0_RD_DATA_REG_reg[0] ;
  wire \n_0_RD_DATA_REG_reg[10] ;
  wire \n_0_RD_DATA_REG_reg[11] ;
  wire \n_0_RD_DATA_REG_reg[12] ;
  wire \n_0_RD_DATA_REG_reg[13] ;
  wire \n_0_RD_DATA_REG_reg[16] ;
  wire \n_0_RD_DATA_REG_reg[17] ;
  wire \n_0_RD_DATA_REG_reg[18] ;
  wire \n_0_RD_DATA_REG_reg[19] ;
  wire \n_0_RD_DATA_REG_reg[1] ;
  wire \n_0_RD_DATA_REG_reg[20] ;
  wire \n_0_RD_DATA_REG_reg[21] ;
  wire \n_0_RD_DATA_REG_reg[22] ;
  wire \n_0_RD_DATA_REG_reg[23] ;
  wire \n_0_RD_DATA_REG_reg[25] ;
  wire \n_0_RD_DATA_REG_reg[26] ;
  wire \n_0_RD_DATA_REG_reg[27] ;
  wire \n_0_RD_DATA_REG_reg[28] ;
  wire \n_0_RD_DATA_REG_reg[2] ;
  wire \n_0_RD_DATA_REG_reg[3] ;
  wire \n_0_RD_DATA_REG_reg[4] ;
  wire \n_0_RD_DATA_REG_reg[5] ;
  wire \n_0_RD_DATA_REG_reg[6] ;
  wire \n_0_RD_DATA_REG_reg[7] ;
  wire \n_0_RD_DATA_REG_reg[9] ;
  wire n_0_RD_ENABLE_i_10__0;
  wire n_0_RD_ENABLE_i_1__0;
  wire n_0_RD_ENABLE_i_3__0;
  wire n_0_RD_ENABLE_i_4__0;
  wire n_0_RD_ENABLE_i_5__0;
  wire n_0_RD_ENABLE_i_6__0;
  wire n_0_RD_ENABLE_i_7__0;
  wire n_0_RD_ENABLE_i_8__0;
  wire n_0_RD_ENABLE_i_9__0;
  wire \n_0_RD_OCCUPANCY[0]_i_2__0 ;
  wire \n_0_RD_OCCUPANCY[3]_i_10__0 ;
  wire \n_0_RD_OCCUPANCY[3]_i_2__0 ;
  wire \n_0_RD_OCCUPANCY[3]_i_3__0 ;
  wire \n_0_RD_OCCUPANCY[3]_i_4__0 ;
  wire \n_0_RD_OCCUPANCY[3]_i_5__0 ;
  wire \n_0_RD_OCCUPANCY[3]_i_6__0 ;
  wire \n_0_RD_OCCUPANCY[3]_i_7__0 ;
  wire \n_0_RD_OCCUPANCY[3]_i_8__0 ;
  wire \n_0_RD_OCCUPANCY[3]_i_9__0 ;
  wire \n_0_RD_OCCUPANCY[6]_i_2__0 ;
  wire \n_0_RD_OCCUPANCY[6]_i_3__0 ;
  wire \n_0_RD_OCCUPANCY[6]_i_4__0 ;
  wire \n_0_RD_OCCUPANCY[6]_i_5__0 ;
  wire \n_0_RD_OCCUPANCY[6]_i_6__0 ;
  wire \n_0_RD_OCCUPANCY_reg[3]_i_1__0 ;
  wire \n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ;
  wire \n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ;
  wire n_0_REMOVE_IDLE_i_1__0;
  wire n_0_REMOVE_IDLE_reg;
  wire n_0_RXBUFERR_i_1__0;
  wire n_0_RXBUFERR_i_2__0;
  wire n_0_RXCHARISCOMMA_USR_i_1__0;
  wire n_0_RXCHARISK_USR_i_1__0;
  wire \n_0_RXCLKCORCNT[0]_i_1__0 ;
  wire \n_0_RXCLKCORCNT[1]_i_1__0 ;
  wire \n_0_RXCLKCORCNT[2]_i_1__0 ;
  wire \n_0_RXDATA_USR[0]_i_1__0 ;
  wire \n_0_RXDATA_USR[1]_i_1__0 ;
  wire \n_0_RXDATA_USR[2]_i_1__0 ;
  wire \n_0_RXDATA_USR[3]_i_1__0 ;
  wire \n_0_RXDATA_USR[4]_i_1__0 ;
  wire \n_0_RXDATA_USR[5]_i_1__0 ;
  wire \n_0_RXDATA_USR[6]_i_1__0 ;
  wire \n_0_RXDATA_USR[7]_i_1__0 ;
  wire n_0_RXDISPERR_USR_i_1__0;
  wire n_0_RXNOTINTABLE_USR_i_1__0;
  wire \n_0_WR_ADDR_GRAY_reg[0] ;
  wire \n_0_WR_ADDR_GRAY_reg[1] ;
  wire \n_0_WR_ADDR_GRAY_reg[2] ;
  wire \n_0_WR_ADDR_GRAY_reg[3] ;
  wire \n_0_WR_ADDR_GRAY_reg[4] ;
  wire \n_0_WR_ADDR_GRAY_reg[5] ;
  wire \n_0_WR_ADDR_PLUS2[6]_i_2__0 ;
  wire \n_0_WR_ADDR_PLUS2_reg[0] ;
  wire \n_0_WR_ADDR_reg[0] ;
  wire \n_0_WR_ADDR_reg[1] ;
  wire \n_0_WR_ADDR_reg[2] ;
  wire \n_0_WR_ADDR_reg[3] ;
  wire \n_0_WR_ADDR_reg[4] ;
  wire \n_0_WR_ADDR_reg[5] ;
  wire \n_0_WR_ADDR_reg[6] ;
  wire \n_0_WR_DATA_REG1_reg[0] ;
  wire \n_0_WR_DATA_REG1_reg[1] ;
  wire \n_0_WR_DATA_REG1_reg[2] ;
  wire \n_0_WR_DATA_REG1_reg[3] ;
  wire \n_0_WR_DATA_REG1_reg[4] ;
  wire \n_0_WR_DATA_REG1_reg[5] ;
  wire \n_0_WR_DATA_REG1_reg[6] ;
  wire \n_0_WR_DATA_REG1_reg[7] ;
  wire \n_0_WR_DATA_reg[0] ;
  wire \n_0_WR_DATA_reg[10] ;
  wire \n_0_WR_DATA_reg[11] ;
  wire \n_0_WR_DATA_reg[12] ;
  wire \n_0_WR_DATA_reg[13] ;
  wire \n_0_WR_DATA_reg[16] ;
  wire \n_0_WR_DATA_reg[17] ;
  wire \n_0_WR_DATA_reg[18] ;
  wire \n_0_WR_DATA_reg[19] ;
  wire \n_0_WR_DATA_reg[1] ;
  wire \n_0_WR_DATA_reg[20] ;
  wire \n_0_WR_DATA_reg[21] ;
  wire \n_0_WR_DATA_reg[22] ;
  wire \n_0_WR_DATA_reg[23] ;
  wire \n_0_WR_DATA_reg[25] ;
  wire \n_0_WR_DATA_reg[26] ;
  wire \n_0_WR_DATA_reg[27] ;
  wire \n_0_WR_DATA_reg[28] ;
  wire \n_0_WR_DATA_reg[2] ;
  wire \n_0_WR_DATA_reg[3] ;
  wire \n_0_WR_DATA_reg[4] ;
  wire \n_0_WR_DATA_reg[5] ;
  wire \n_0_WR_DATA_reg[6] ;
  wire \n_0_WR_DATA_reg[7] ;
  wire \n_0_WR_DATA_reg[9] ;
  wire n_0_WR_ENABLE_i_2__0;
  wire n_0_WR_ENABLE_i_3__0;
  wire \n_0_WR_OCCUPANCY[3]_i_2__0 ;
  wire \n_0_WR_OCCUPANCY[3]_i_3__0 ;
  wire \n_0_WR_OCCUPANCY[3]_i_4__0 ;
  wire \n_0_WR_OCCUPANCY[3]_i_5__0 ;
  wire \n_0_WR_OCCUPANCY[3]_i_6__0 ;
  wire \n_0_WR_OCCUPANCY[3]_i_7__0 ;
  wire \n_0_WR_OCCUPANCY[6]_i_2__0 ;
  wire \n_0_WR_OCCUPANCY[6]_i_3__0 ;
  wire \n_0_WR_OCCUPANCY[6]_i_4__0 ;
  wire \n_0_WR_OCCUPANCY_reg[3]_i_1__0 ;
  wire n_0_WR_TOGGLE_i_1__0;
  wire \n_1_GEN_FIFO[0].DIST_RAM ;
  wire \n_1_GEN_FIFO[10].DIST_RAM ;
  wire \n_1_GEN_FIFO[11].DIST_RAM ;
  wire \n_1_GEN_FIFO[12].DIST_RAM ;
  wire \n_1_GEN_FIFO[13].DIST_RAM ;
  wire \n_1_GEN_FIFO[16].DIST_RAM ;
  wire \n_1_GEN_FIFO[17].DIST_RAM ;
  wire \n_1_GEN_FIFO[18].DIST_RAM ;
  wire \n_1_GEN_FIFO[19].DIST_RAM ;
  wire \n_1_GEN_FIFO[1].DIST_RAM ;
  wire \n_1_GEN_FIFO[20].DIST_RAM ;
  wire \n_1_GEN_FIFO[21].DIST_RAM ;
  wire \n_1_GEN_FIFO[22].DIST_RAM ;
  wire \n_1_GEN_FIFO[23].DIST_RAM ;
  wire \n_1_GEN_FIFO[25].DIST_RAM ;
  wire \n_1_GEN_FIFO[26].DIST_RAM ;
  wire \n_1_GEN_FIFO[27].DIST_RAM ;
  wire \n_1_GEN_FIFO[28].DIST_RAM ;
  wire \n_1_GEN_FIFO[2].DIST_RAM ;
  wire \n_1_GEN_FIFO[3].DIST_RAM ;
  wire \n_1_GEN_FIFO[4].DIST_RAM ;
  wire \n_1_GEN_FIFO[5].DIST_RAM ;
  wire \n_1_GEN_FIFO[6].DIST_RAM ;
  wire \n_1_GEN_FIFO[7].DIST_RAM ;
  wire \n_1_GEN_FIFO[9].DIST_RAM ;
  wire \n_1_RD_OCCUPANCY_reg[3]_i_1__0 ;
  wire \n_1_WR_OCCUPANCY_reg[3]_i_1__0 ;
  wire \n_2_RD_OCCUPANCY_reg[3]_i_1__0 ;
  wire \n_2_RD_OCCUPANCY_reg[6]_i_1__0 ;
  wire \n_2_WR_OCCUPANCY_reg[3]_i_1__0 ;
  wire \n_2_WR_OCCUPANCY_reg[6]_i_1__0 ;
  wire \n_3_RD_OCCUPANCY_reg[3]_i_1__0 ;
  wire \n_3_RD_OCCUPANCY_reg[6]_i_1__0 ;
  wire \n_3_WR_OCCUPANCY_reg[3]_i_1__0 ;
  wire \n_3_WR_OCCUPANCY_reg[6]_i_1__0 ;
  wire p_0_in;
  wire [6:0]p_0_in6_out;
  wire p_0_in9_in;
  wire p_11_in;
  wire p_12_in;
  wire p_1_in21_in;
  wire p_1_in7_in;
  wire [7:0]p_2_in;
  wire p_2_in24_in;
  wire p_2_in9_in;
  wire p_3_in;
  wire p_3_in11_in;
  wire p_3_in27_in;
  wire p_4_in;
  wire p_4_in13_in;
  wire p_4_in30_in;
  wire p_5_in;
  wire p_5_in15_in;
  wire [6:0]plusOp;
  wire [6:0]plusOp__0;
  wire rxuserclk2;
  wire userclk2;
  wire \NLW_GEN_FIFO[0].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[10].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[11].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[12].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[13].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[16].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[17].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[18].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[19].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[1].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[20].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[21].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[22].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[23].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[25].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[26].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[27].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[28].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[2].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[3].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[4].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[5].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[6].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[7].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[9].DIST_RAM_SPO_UNCONNECTED ;
  wire [0:0]\NLW_RD_OCCUPANCY_reg[3]_i_1__0_O_UNCONNECTED ;
  wire [3:2]\NLW_RD_OCCUPANCY_reg[6]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_RD_OCCUPANCY_reg[6]_i_1__0_O_UNCONNECTED ;
  wire [0:0]\NLW_WR_OCCUPANCY_reg[3]_i_1__0_O_UNCONNECTED ;
  wire [3:2]\NLW_WR_OCCUPANCY_reg[6]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_WR_OCCUPANCY_reg[6]_i_1__0_O_UNCONNECTED ;

LUT5 #(
    .INIT(32'h08000020)) 
     D5P6_WR_REG_i_1__0
       (.I0(n_0_D5P6_WR_REG_i_2__0),
        .I1(\n_0_WR_DATA_REG1_reg[7] ),
        .I2(\n_0_WR_DATA_REG1_reg[4] ),
        .I3(\n_0_WR_DATA_REG1_reg[2] ),
        .I4(\n_0_WR_DATA_REG1_reg[0] ),
        .O(p_11_in));
LUT5 #(
    .INIT(32'h00000002)) 
     D5P6_WR_REG_i_2__0
       (.I0(\n_0_WR_DATA_REG1_reg[6] ),
        .I1(\n_0_WR_DATA_REG1_reg[3] ),
        .I2(\n_0_WR_DATA_REG1_reg[1] ),
        .I3(\n_0_WR_DATA_REG1_reg[5] ),
        .I4(p_0_in9_in),
        .O(n_0_D5P6_WR_REG_i_2__0));
FDRE D5P6_WR_REG_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_11_in),
        .Q(D5P6_WR_REG),
        .R(SR));
LUT1 #(
    .INIT(2'h1)) 
     EVEN_i_1__0
       (.I0(EVEN),
        .O(n_0_EVEN_i_1__0));
FDSE EVEN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EVEN_i_1__0),
        .Q(EVEN),
        .S(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[0].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[0] ),
        .DPO(\n_1_GEN_FIFO[0].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[0].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[0].RD_DATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[0].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[10].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[10] ),
        .DPO(\n_1_GEN_FIFO[10].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[10].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[10].RD_DATA_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[10].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[10].RD_DATA_reg[10] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[11].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[11] ),
        .DPO(\n_1_GEN_FIFO[11].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[11].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[11].RD_DATA_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[11].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[12].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[12] ),
        .DPO(\n_1_GEN_FIFO[12].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[12].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[12].RD_DATA_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[12].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[12].RD_DATA_reg[12] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[13].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[13] ),
        .DPO(\n_1_GEN_FIFO[13].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[13].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[13].RD_DATA_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[13].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[13].RD_DATA_reg[13] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[16].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[16] ),
        .DPO(\n_1_GEN_FIFO[16].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[16].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[16].RD_DATA_reg[16] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[16].DIST_RAM ),
        .Q(p_2_in[0]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[17].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[17] ),
        .DPO(\n_1_GEN_FIFO[17].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[17].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[17].RD_DATA_reg[17] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[17].DIST_RAM ),
        .Q(p_2_in[1]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[18].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[18] ),
        .DPO(\n_1_GEN_FIFO[18].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[18].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[18].RD_DATA_reg[18] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[18].DIST_RAM ),
        .Q(p_2_in[2]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[19].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[19] ),
        .DPO(\n_1_GEN_FIFO[19].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[19].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[19].RD_DATA_reg[19] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[19].DIST_RAM ),
        .Q(p_2_in[3]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[1].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[1] ),
        .DPO(\n_1_GEN_FIFO[1].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[1].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[1].RD_DATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[1].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[20].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[20] ),
        .DPO(\n_1_GEN_FIFO[20].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[20].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[20].RD_DATA_reg[20] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[20].DIST_RAM ),
        .Q(p_2_in[4]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[21].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[21] ),
        .DPO(\n_1_GEN_FIFO[21].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[21].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[21].RD_DATA_reg[21] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[21].DIST_RAM ),
        .Q(p_2_in[5]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[22].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[22] ),
        .DPO(\n_1_GEN_FIFO[22].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[22].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[22].RD_DATA_reg[22] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[22].DIST_RAM ),
        .Q(p_2_in[6]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[23].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[23] ),
        .DPO(\n_1_GEN_FIFO[23].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[23].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[23].RD_DATA_reg[23] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[23].DIST_RAM ),
        .Q(p_2_in[7]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[25].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[25] ),
        .DPO(\n_1_GEN_FIFO[25].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[25].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[25].RD_DATA_reg[25] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[25].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[25].RD_DATA_reg[25] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[26].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[26] ),
        .DPO(\n_1_GEN_FIFO[26].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[26].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[26].RD_DATA_reg[26] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[26].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[26].RD_DATA_reg[26] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[27].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[27] ),
        .DPO(\n_1_GEN_FIFO[27].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[27].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[27].RD_DATA_reg[27] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[27].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[28].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[28] ),
        .DPO(\n_1_GEN_FIFO[28].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[28].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[28].RD_DATA_reg[28] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[28].DIST_RAM ),
        .Q(\GEN_FIFO[28].RD_DATA_reg ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[2].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[2] ),
        .DPO(\n_1_GEN_FIFO[2].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[2].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[2].RD_DATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[2].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[3].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[3] ),
        .DPO(\n_1_GEN_FIFO[3].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[3].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[3].RD_DATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[3].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[4].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[4] ),
        .DPO(\n_1_GEN_FIFO[4].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[4].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[4].RD_DATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[4].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[5].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[5] ),
        .DPO(\n_1_GEN_FIFO[5].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[5].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[5].RD_DATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[5].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[6].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[6] ),
        .DPO(\n_1_GEN_FIFO[6].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[6].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[6].RD_DATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[6].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[7].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[7] ),
        .DPO(\n_1_GEN_FIFO[7].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[7].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[7].RD_DATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[7].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[9].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[9] ),
        .DPO(\n_1_GEN_FIFO[9].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[9].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[9].RD_DATA_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[9].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[9].RD_DATA_reg[9] ),
        .R(SS));
GND GND
       (.G(\<const0> ));
LUT4 #(
    .INIT(16'hF444)) 
     I1_DETECTED_WR_REG_i_1__0
       (.I0(n_0_I1_DETECTED_WR_REG_i_2__0),
        .I1(D5P6_WR_REG),
        .I2(p_11_in),
        .I3(K28P5_WR_REG),
        .O(I1_DETECTED_WR));
(* SOFT_HLUTNM = "soft_lutpair586" *) 
   LUT4 #(
    .INIT(16'hFFFB)) 
     I1_DETECTED_WR_REG_i_2__0
       (.I0(\n_0_WR_DATA_REG1_reg[6] ),
        .I1(\n_0_WR_DATA_REG1_reg[5] ),
        .I2(\n_0_WR_DATA_REG1_reg[1] ),
        .I3(n_0_K28P5_WR_REG_i_2__0),
        .O(n_0_I1_DETECTED_WR_REG_i_2__0));
FDRE I1_DETECTED_WR_REG_reg
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(I1_DETECTED_WR),
        .Q(I1_DETECTED_WR_REG),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair585" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     INSERT_IDLE_i_1__1
       (.I0(EVEN),
        .I1(RD_ENABLE0),
        .I2(I1),
        .I3(MGT_RX_RESET3_in),
        .O(n_0_INSERT_IDLE_i_1__1));
FDRE INSERT_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_INSERT_IDLE_i_1__1),
        .Q(INSERT_IDLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair586" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     K28P5_WR_REG_i_1__0
       (.I0(n_0_K28P5_WR_REG_i_2__0),
        .I1(\n_0_WR_DATA_REG1_reg[1] ),
        .I2(\n_0_WR_DATA_REG1_reg[5] ),
        .I3(\n_0_WR_DATA_REG1_reg[6] ),
        .O(p_12_in));
LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
     K28P5_WR_REG_i_2__0
       (.I0(p_0_in9_in),
        .I1(\n_0_WR_DATA_REG1_reg[7] ),
        .I2(\n_0_WR_DATA_REG1_reg[0] ),
        .I3(\n_0_WR_DATA_REG1_reg[4] ),
        .I4(\n_0_WR_DATA_REG1_reg[3] ),
        .I5(\n_0_WR_DATA_REG1_reg[2] ),
        .O(n_0_K28P5_WR_REG_i_2__0));
FDRE K28P5_WR_REG_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_12_in),
        .Q(K28P5_WR_REG),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair597" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[0]_i_1__0 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair597" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[1]_i_1__0 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .O(\n_0_RD_ADDR_GRAY[1]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair596" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[2]_i_1__0 
       (.I0(p_3_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .O(\n_0_RD_ADDR_GRAY[2]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair596" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[3]_i_1__0 
       (.I0(p_4_in),
        .I1(p_3_in),
        .O(\n_0_RD_ADDR_GRAY[3]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair598" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[4]_i_1__0 
       (.I0(p_5_in),
        .I1(p_4_in),
        .O(\n_0_RD_ADDR_GRAY[4]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair598" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[5]_i_1__0 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .I1(p_5_in),
        .O(\n_0_RD_ADDR_GRAY[5]_i_1__0 ));
FDRE \RD_ADDR_GRAY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp[1]),
        .Q(RD_ADDR_GRAY[0]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[1]_i_1__0 ),
        .Q(RD_ADDR_GRAY[1]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[2]_i_1__0 ),
        .Q(RD_ADDR_GRAY[2]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[3]_i_1__0 ),
        .Q(RD_ADDR_GRAY[3]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[4]_i_1__0 ),
        .Q(RD_ADDR_GRAY[4]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[5]_i_1__0 ),
        .Q(RD_ADDR_GRAY[5]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .Q(RD_ADDR_GRAY[6]),
        .R(SS));
FDSE \RD_ADDR_PLUS1_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .Q(RD_ADDR_PLUS1[0]),
        .S(SS));
FDRE \RD_ADDR_PLUS1_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .Q(RD_ADDR_PLUS1[1]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .Q(RD_ADDR_PLUS1[2]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_3_in),
        .Q(RD_ADDR_PLUS1[3]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_4_in),
        .Q(RD_ADDR_PLUS1[4]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_5_in),
        .Q(RD_ADDR_PLUS1[5]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .Q(RD_ADDR_PLUS1[6]),
        .R(SS));
LUT1 #(
    .INIT(2'h1)) 
     \RD_ADDR_PLUS2[0]_i_1__0 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair587" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \RD_ADDR_PLUS2[2]_i_1__0 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair587" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \RD_ADDR_PLUS2[3]_i_1__0 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I3(p_3_in),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair581" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \RD_ADDR_PLUS2[4]_i_1__0 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I3(p_3_in),
        .I4(p_4_in),
        .O(plusOp[4]));
LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
     \RD_ADDR_PLUS2[5]_i_1__0 
       (.I0(p_3_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I3(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I4(p_4_in),
        .I5(p_5_in),
        .O(plusOp[5]));
LUT3 #(
    .INIT(8'h78)) 
     \RD_ADDR_PLUS2[6]_i_1__0 
       (.I0(\n_0_RD_ADDR_PLUS2[6]_i_2__0 ),
        .I1(p_5_in),
        .I2(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .O(plusOp[6]));
(* SOFT_HLUTNM = "soft_lutpair581" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \RD_ADDR_PLUS2[6]_i_2__0 
       (.I0(p_4_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I3(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I4(p_3_in),
        .O(\n_0_RD_ADDR_PLUS2[6]_i_2__0 ));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[0]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .R(SS));
(* counter = "31" *) 
   FDSE \RD_ADDR_PLUS2_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[1]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .S(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[2]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[3]),
        .Q(p_3_in),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[4]),
        .Q(p_4_in),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[5]),
        .Q(p_5_in),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[6]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .R(SS));
FDRE \RD_ADDR_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[0]),
        .Q(\n_0_RD_ADDR_reg[0] ),
        .R(SS));
FDRE \RD_ADDR_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[1]),
        .Q(\n_0_RD_ADDR_reg[1] ),
        .R(SS));
FDRE \RD_ADDR_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[2]),
        .Q(\n_0_RD_ADDR_reg[2] ),
        .R(SS));
FDRE \RD_ADDR_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[3]),
        .Q(\n_0_RD_ADDR_reg[3] ),
        .R(SS));
FDRE \RD_ADDR_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[4]),
        .Q(\n_0_RD_ADDR_reg[4] ),
        .R(SS));
FDRE \RD_ADDR_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[5]),
        .Q(\n_0_RD_ADDR_reg[5] ),
        .R(SS));
FDRE \RD_ADDR_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[6]),
        .Q(\n_0_RD_ADDR_reg[6] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .Q(\n_0_RD_DATA_REG_reg[0] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[10] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[10].RD_DATA_reg[10] ),
        .Q(\n_0_RD_DATA_REG_reg[10] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[11] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .Q(\n_0_RD_DATA_REG_reg[11] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[12] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[12].RD_DATA_reg[12] ),
        .Q(\n_0_RD_DATA_REG_reg[12] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[13] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[13].RD_DATA_reg[13] ),
        .Q(\n_0_RD_DATA_REG_reg[13] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[16] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[0]),
        .Q(\n_0_RD_DATA_REG_reg[16] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[17] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[1]),
        .Q(\n_0_RD_DATA_REG_reg[17] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[18] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[2]),
        .Q(\n_0_RD_DATA_REG_reg[18] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[19] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[3]),
        .Q(\n_0_RD_DATA_REG_reg[19] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .Q(\n_0_RD_DATA_REG_reg[1] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[20] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[4]),
        .Q(\n_0_RD_DATA_REG_reg[20] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[21] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[5]),
        .Q(\n_0_RD_DATA_REG_reg[21] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[22] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[6]),
        .Q(\n_0_RD_DATA_REG_reg[22] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[23] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[7]),
        .Q(\n_0_RD_DATA_REG_reg[23] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[25] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[25].RD_DATA_reg[25] ),
        .Q(\n_0_RD_DATA_REG_reg[25] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[26] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[26].RD_DATA_reg[26] ),
        .Q(\n_0_RD_DATA_REG_reg[26] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[27] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .Q(\n_0_RD_DATA_REG_reg[27] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[28] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\GEN_FIFO[28].RD_DATA_reg ),
        .Q(\n_0_RD_DATA_REG_reg[28] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .Q(\n_0_RD_DATA_REG_reg[2] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .Q(\n_0_RD_DATA_REG_reg[3] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .Q(\n_0_RD_DATA_REG_reg[4] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .Q(\n_0_RD_DATA_REG_reg[5] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .Q(\n_0_RD_DATA_REG_reg[6] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[7] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .Q(\n_0_RD_DATA_REG_reg[7] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[9] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[9].RD_DATA_reg[9] ),
        .Q(\n_0_RD_DATA_REG_reg[9] ),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair582" *) 
   LUT2 #(
    .INIT(4'hB)) 
     RD_ENABLE_i_10__0
       (.I0(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .I1(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .O(n_0_RD_ENABLE_i_10__0));
(* SOFT_HLUTNM = "soft_lutpair585" *) 
   LUT4 #(
    .INIT(16'h0002)) 
     RD_ENABLE_i_1__0
       (.I0(EVEN),
        .I1(RD_ENABLE0),
        .I2(I1),
        .I3(MGT_RX_RESET3_in),
        .O(n_0_RD_ENABLE_i_1__0));
LUT6 #(
    .INIT(64'h2202000000000000)) 
     RD_ENABLE_i_2__0
       (.I0(n_0_RD_ENABLE_i_3__0),
        .I1(n_0_RD_ENABLE_i_4__0),
        .I2(n_0_RD_ENABLE_i_5__0),
        .I3(p_2_in[6]),
        .I4(n_0_RD_ENABLE_i_6__0),
        .I5(n_0_RD_ENABLE_i_7__0),
        .O(RD_ENABLE0));
LUT6 #(
    .INIT(64'h0000004208400042)) 
     RD_ENABLE_i_3__0
       (.I0(p_2_in[4]),
        .I1(p_2_in[2]),
        .I2(p_2_in[0]),
        .I3(p_2_in[3]),
        .I4(p_2_in[5]),
        .I5(p_2_in[6]),
        .O(n_0_RD_ENABLE_i_3__0));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     RD_ENABLE_i_4__0
       (.I0(RD_OCCUPANCY[4]),
        .I1(RD_OCCUPANCY[5]),
        .I2(RD_OCCUPANCY[2]),
        .I3(RD_OCCUPANCY[1]),
        .I4(RD_OCCUPANCY[0]),
        .I5(RD_OCCUPANCY[3]),
        .O(n_0_RD_ENABLE_i_4__0));
LUT2 #(
    .INIT(4'h7)) 
     RD_ENABLE_i_5__0
       (.I0(p_2_in[5]),
        .I1(p_2_in[4]),
        .O(n_0_RD_ENABLE_i_5__0));
LUT5 #(
    .INIT(32'h20080800)) 
     RD_ENABLE_i_6__0
       (.I0(n_0_RD_ENABLE_i_8__0),
        .I1(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .I2(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .I3(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .I4(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .O(n_0_RD_ENABLE_i_6__0));
LUT6 #(
    .INIT(64'h00000060C0000000)) 
     RD_ENABLE_i_7__0
       (.I0(p_2_in[4]),
        .I1(p_2_in[7]),
        .I2(n_0_RD_ENABLE_i_9__0),
        .I3(n_0_RD_ENABLE_i_10__0),
        .I4(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .I5(p_2_in[6]),
        .O(n_0_RD_ENABLE_i_7__0));
(* SOFT_HLUTNM = "soft_lutpair582" *) 
   LUT5 #(
    .INIT(32'h05008002)) 
     RD_ENABLE_i_8__0
       (.I0(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .I1(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .I2(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .I3(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .I4(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .O(n_0_RD_ENABLE_i_8__0));
LUT5 #(
    .INIT(32'h00010100)) 
     RD_ENABLE_i_9__0
       (.I0(p_2_in[1]),
        .I1(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .I2(RD_OCCUPANCY[6]),
        .I3(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .I4(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .O(n_0_RD_ENABLE_i_9__0));
FDRE RD_ENABLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RD_ENABLE_i_1__0),
        .Q(RD_ENABLE),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'h96)) 
     \RD_OCCUPANCY[0]_i_1__0 
       (.I0(\n_0_RD_ADDR_reg[0] ),
        .I1(\n_0_RD_OCCUPANCY[0]_i_2__0 ),
        .I2(DATA_OUT),
        .O(RD_OCCUPANCY01_out[0]));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \RD_OCCUPANCY[0]_i_2__0 
       (.I0(DATA_OUT1_out),
        .I1(DATA_OUT0_out),
        .I2(DATA_OUT3_out),
        .I3(DATA_OUT2_out),
        .I4(DATA_OUT5_out),
        .I5(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[0]_i_2__0 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[3]_i_10__0 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_10__0 ));
LUT4 #(
    .INIT(16'h6996)) 
     \RD_OCCUPANCY[3]_i_2__0 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(DATA_OUT2_out),
        .I3(DATA_OUT3_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_2__0 ));
LUT5 #(
    .INIT(32'h96696996)) 
     \RD_OCCUPANCY[3]_i_3__0 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT4_out),
        .I4(DATA_OUT3_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_3__0 ));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \RD_OCCUPANCY[3]_i_4__0 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT0_out),
        .I4(DATA_OUT3_out),
        .I5(DATA_OUT2_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_4__0 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[3]_i_5__0 
       (.I0(\n_0_RD_OCCUPANCY[0]_i_2__0 ),
        .I1(DATA_OUT),
        .O(\n_0_RD_OCCUPANCY[3]_i_5__0 ));
LUT5 #(
    .INIT(32'h69969669)) 
     \RD_OCCUPANCY[3]_i_6__0 
       (.I0(DATA_OUT3_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT5_out),
        .I3(DATA_OUT4_out),
        .I4(\n_0_RD_ADDR_reg[3] ),
        .O(\n_0_RD_OCCUPANCY[3]_i_6__0 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \RD_OCCUPANCY[3]_i_7__0 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT3_out),
        .I2(DATA_OUT2_out),
        .I3(DATA_OUT1_out),
        .I4(\n_0_RD_ADDR_reg[2] ),
        .I5(DATA_OUT5_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_7__0 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \RD_OCCUPANCY[3]_i_8__0 
       (.I0(DATA_OUT3_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT0_out),
        .I4(\n_0_RD_ADDR_reg[1] ),
        .I5(\n_0_RD_OCCUPANCY[3]_i_10__0 ),
        .O(\n_0_RD_OCCUPANCY[3]_i_8__0 ));
LUT3 #(
    .INIT(8'h69)) 
     \RD_OCCUPANCY[3]_i_9__0 
       (.I0(DATA_OUT),
        .I1(\n_0_RD_OCCUPANCY[0]_i_2__0 ),
        .I2(\n_0_RD_ADDR_reg[0] ),
        .O(\n_0_RD_OCCUPANCY[3]_i_9__0 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[6]_i_2__0 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_2__0 ));
LUT3 #(
    .INIT(8'h96)) 
     \RD_OCCUPANCY[6]_i_3__0 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT3_out),
        .I2(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_3__0 ));
LUT2 #(
    .INIT(4'h9)) 
     \RD_OCCUPANCY[6]_i_4__0 
       (.I0(DATA_OUT5_out),
        .I1(\n_0_RD_ADDR_reg[6] ),
        .O(\n_0_RD_OCCUPANCY[6]_i_4__0 ));
LUT3 #(
    .INIT(8'h69)) 
     \RD_OCCUPANCY[6]_i_5__0 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(\n_0_RD_ADDR_reg[5] ),
        .O(\n_0_RD_OCCUPANCY[6]_i_5__0 ));
LUT4 #(
    .INIT(16'h9669)) 
     \RD_OCCUPANCY[6]_i_6__0 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT3_out),
        .I2(\n_0_RD_ADDR_reg[4] ),
        .I3(DATA_OUT5_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_6__0 ));
FDRE \RD_OCCUPANCY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[0]),
        .Q(RD_OCCUPANCY[0]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[1]),
        .Q(RD_OCCUPANCY[1]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[2]),
        .Q(RD_OCCUPANCY[2]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[3]),
        .Q(RD_OCCUPANCY[3]),
        .R(SS));
CARRY4 \RD_OCCUPANCY_reg[3]_i_1__0 
       (.CI(\<const0> ),
        .CO({\n_0_RD_OCCUPANCY_reg[3]_i_1__0 ,\n_1_RD_OCCUPANCY_reg[3]_i_1__0 ,\n_2_RD_OCCUPANCY_reg[3]_i_1__0 ,\n_3_RD_OCCUPANCY_reg[3]_i_1__0 }),
        .CYINIT(\<const1> ),
        .DI({\n_0_RD_OCCUPANCY[3]_i_2__0 ,\n_0_RD_OCCUPANCY[3]_i_3__0 ,\n_0_RD_OCCUPANCY[3]_i_4__0 ,\n_0_RD_OCCUPANCY[3]_i_5__0 }),
        .O({RD_OCCUPANCY01_out[3:1],\NLW_RD_OCCUPANCY_reg[3]_i_1__0_O_UNCONNECTED [0]}),
        .S({\n_0_RD_OCCUPANCY[3]_i_6__0 ,\n_0_RD_OCCUPANCY[3]_i_7__0 ,\n_0_RD_OCCUPANCY[3]_i_8__0 ,\n_0_RD_OCCUPANCY[3]_i_9__0 }));
FDRE \RD_OCCUPANCY_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[4]),
        .Q(RD_OCCUPANCY[4]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[5]),
        .Q(RD_OCCUPANCY[5]),
        .R(SS));
FDSE \RD_OCCUPANCY_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[6]),
        .Q(RD_OCCUPANCY[6]),
        .S(SS));
CARRY4 \RD_OCCUPANCY_reg[6]_i_1__0 
       (.CI(\n_0_RD_OCCUPANCY_reg[3]_i_1__0 ),
        .CO({\NLW_RD_OCCUPANCY_reg[6]_i_1__0_CO_UNCONNECTED [3:2],\n_2_RD_OCCUPANCY_reg[6]_i_1__0 ,\n_3_RD_OCCUPANCY_reg[6]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\n_0_RD_OCCUPANCY[6]_i_2__0 ,\n_0_RD_OCCUPANCY[6]_i_3__0 }),
        .O({\NLW_RD_OCCUPANCY_reg[6]_i_1__0_O_UNCONNECTED [3],RD_OCCUPANCY01_out[6:4]}),
        .S({\<const0> ,\n_0_RD_OCCUPANCY[6]_i_4__0 ,\n_0_RD_OCCUPANCY[6]_i_5__0 ,\n_0_RD_OCCUPANCY[6]_i_6__0 }));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__83 \RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[0]),
        .data_out(\n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__84 \RECLOCK_RD_ADDRGRAY[1].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[1]),
        .data_out(p_4_in30_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__85 \RECLOCK_RD_ADDRGRAY[2].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[2]),
        .data_out(p_3_in27_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__86 \RECLOCK_RD_ADDRGRAY[3].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[3]),
        .data_out(p_2_in24_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__87 \RECLOCK_RD_ADDRGRAY[4].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[4]),
        .data_out(p_1_in21_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__88 \RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[5]),
        .data_out(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__89 \RECLOCK_RD_ADDRGRAY[6].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[6]),
        .data_out(p_0_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__90 \RECLOCK_WR_ADDRGRAY[0].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[0] ),
        .data_out(DATA_OUT));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__91 \RECLOCK_WR_ADDRGRAY[1].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[1] ),
        .data_out(DATA_OUT0_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__92 \RECLOCK_WR_ADDRGRAY[2].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[2] ),
        .data_out(DATA_OUT1_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__93 \RECLOCK_WR_ADDRGRAY[3].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[3] ),
        .data_out(DATA_OUT2_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__94 \RECLOCK_WR_ADDRGRAY[4].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[4] ),
        .data_out(DATA_OUT3_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__95 \RECLOCK_WR_ADDRGRAY[5].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[5] ),
        .data_out(DATA_OUT4_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__96 \RECLOCK_WR_ADDRGRAY[6].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(DATA_IN),
        .data_out(DATA_OUT5_out));
(* SOFT_HLUTNM = "soft_lutpair583" *) 
   LUT5 #(
    .INIT(32'h080F0800)) 
     REMOVE_IDLE_i_1__0
       (.I0(n_0_WR_ENABLE_i_2__0),
        .I1(I1_DETECTED_WR),
        .I2(SR),
        .I3(WR_TOGGLE),
        .I4(n_0_REMOVE_IDLE_reg),
        .O(n_0_REMOVE_IDLE_i_1__0));
FDRE REMOVE_IDLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(n_0_REMOVE_IDLE_i_1__0),
        .Q(n_0_REMOVE_IDLE_reg),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hFFFF8002)) 
     RXBUFERR_i_1__0
       (.I0(n_0_RXBUFERR_i_2__0),
        .I1(RD_OCCUPANCY[2]),
        .I2(RD_OCCUPANCY[3]),
        .I3(RD_OCCUPANCY[4]),
        .I4(O1),
        .O(n_0_RXBUFERR_i_1__0));
LUT6 #(
    .INIT(64'hBD000000000000BD)) 
     RXBUFERR_i_2__0
       (.I0(RD_OCCUPANCY[2]),
        .I1(RD_OCCUPANCY[1]),
        .I2(RD_OCCUPANCY[0]),
        .I3(RD_OCCUPANCY[4]),
        .I4(RD_OCCUPANCY[5]),
        .I5(RD_OCCUPANCY[6]),
        .O(n_0_RXBUFERR_i_2__0));
FDRE RXBUFERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXBUFERR_i_1__0),
        .Q(O1),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair590" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXCHARISCOMMA_USR_i_1__0
       (.I0(\n_0_RD_DATA_REG_reg[28] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[12] ),
        .O(n_0_RXCHARISCOMMA_USR_i_1__0));
FDRE RXCHARISCOMMA_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXCHARISCOMMA_USR_i_1__0),
        .Q(RXCHARISCOMMA_USR),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair591" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXCHARISK_USR_i_1__0
       (.I0(\n_0_RD_DATA_REG_reg[27] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[11] ),
        .O(n_0_RXCHARISK_USR_i_1__0));
FDRE RXCHARISK_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXCHARISK_USR_i_1__0),
        .Q(RXCHARISK_USR),
        .R(SS));
LUT3 #(
    .INIT(8'hBA)) 
     \RXCLKCORCNT[0]_i_1__0 
       (.I0(insert_idle_reg),
        .I1(I9[0]),
        .I2(\n_0_RD_DATA_REG_reg[13] ),
        .O(\n_0_RXCLKCORCNT[0]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair579" *) 
   LUT5 #(
    .INIT(32'h000000A2)) 
     \RXCLKCORCNT[1]_i_1__0 
       (.I0(insert_idle_reg),
        .I1(\n_0_RD_DATA_REG_reg[13] ),
        .I2(I9[0]),
        .I3(I1),
        .I4(MGT_RX_RESET3_in),
        .O(\n_0_RXCLKCORCNT[1]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair579" *) 
   LUT5 #(
    .INIT(32'h000000A2)) 
     \RXCLKCORCNT[2]_i_1__0 
       (.I0(insert_idle_reg),
        .I1(\n_0_RD_DATA_REG_reg[13] ),
        .I2(I9[0]),
        .I3(I1),
        .I4(MGT_RX_RESET3_in),
        .O(\n_0_RXCLKCORCNT[2]_i_1__0 ));
FDRE \RXCLKCORCNT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[0]_i_1__0 ),
        .Q(I9[0]),
        .R(SS));
FDRE \RXCLKCORCNT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[1]_i_1__0 ),
        .Q(I9[1]),
        .R(\<const0> ));
FDRE \RXCLKCORCNT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[2]_i_1__0 ),
        .Q(I9[2]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair595" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[0]_i_1__0 
       (.I0(\n_0_RD_DATA_REG_reg[16] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[0] ),
        .O(\n_0_RXDATA_USR[0]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair595" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[1]_i_1__0 
       (.I0(\n_0_RD_DATA_REG_reg[17] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[1] ),
        .O(\n_0_RXDATA_USR[1]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair594" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[2]_i_1__0 
       (.I0(\n_0_RD_DATA_REG_reg[18] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[2] ),
        .O(\n_0_RXDATA_USR[2]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair594" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[3]_i_1__0 
       (.I0(\n_0_RD_DATA_REG_reg[19] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[3] ),
        .O(\n_0_RXDATA_USR[3]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair593" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[4]_i_1__0 
       (.I0(\n_0_RD_DATA_REG_reg[20] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[4] ),
        .O(\n_0_RXDATA_USR[4]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair593" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[5]_i_1__0 
       (.I0(\n_0_RD_DATA_REG_reg[21] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[5] ),
        .O(\n_0_RXDATA_USR[5]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair592" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[6]_i_1__0 
       (.I0(\n_0_RD_DATA_REG_reg[22] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[6] ),
        .O(\n_0_RXDATA_USR[6]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair592" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[7]_i_1__0 
       (.I0(\n_0_RD_DATA_REG_reg[23] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[7] ),
        .O(\n_0_RXDATA_USR[7]_i_1__0 ));
FDRE \RXDATA_USR_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[0]_i_1__0 ),
        .Q(RXDATA_USR[0]),
        .R(SS));
FDRE \RXDATA_USR_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[1]_i_1__0 ),
        .Q(RXDATA_USR[1]),
        .R(SS));
FDRE \RXDATA_USR_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[2]_i_1__0 ),
        .Q(RXDATA_USR[2]),
        .R(SS));
FDRE \RXDATA_USR_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[3]_i_1__0 ),
        .Q(RXDATA_USR[3]),
        .R(SS));
FDRE \RXDATA_USR_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[4]_i_1__0 ),
        .Q(RXDATA_USR[4]),
        .R(SS));
FDRE \RXDATA_USR_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[5]_i_1__0 ),
        .Q(RXDATA_USR[5]),
        .R(SS));
FDRE \RXDATA_USR_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[6]_i_1__0 ),
        .Q(RXDATA_USR[6]),
        .R(SS));
FDRE \RXDATA_USR_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[7]_i_1__0 ),
        .Q(RXDATA_USR[7]),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair591" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXDISPERR_USR_i_1__0
       (.I0(\n_0_RD_DATA_REG_reg[26] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[10] ),
        .O(n_0_RXDISPERR_USR_i_1__0));
FDRE RXDISPERR_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXDISPERR_USR_i_1__0),
        .Q(RXDISPERR_USR),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair590" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXNOTINTABLE_USR_i_1__0
       (.I0(\n_0_RD_DATA_REG_reg[25] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[9] ),
        .O(n_0_RXNOTINTABLE_USR_i_1__0));
FDRE RXNOTINTABLE_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXNOTINTABLE_USR_i_1__0),
        .Q(RXNOTINTABLE_USR),
        .R(SS));
VCC VCC
       (.P(\<const1> ));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[0]_i_1__0 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I1(p_1_in7_in),
        .O(p_0_in6_out[0]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[1]_i_1__0 
       (.I0(p_1_in7_in),
        .I1(p_2_in9_in),
        .O(p_0_in6_out[1]));
(* SOFT_HLUTNM = "soft_lutpair599" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[2]_i_1__0 
       (.I0(p_2_in9_in),
        .I1(p_3_in11_in),
        .O(p_0_in6_out[2]));
(* SOFT_HLUTNM = "soft_lutpair599" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[3]_i_1__0 
       (.I0(p_3_in11_in),
        .I1(p_4_in13_in),
        .O(p_0_in6_out[3]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[4]_i_1__0 
       (.I0(p_4_in13_in),
        .I1(p_5_in15_in),
        .O(p_0_in6_out[4]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[5]_i_1__0 
       (.I0(p_5_in15_in),
        .I1(p_0_in6_out[6]),
        .O(p_0_in6_out[5]));
FDSE \WR_ADDR_GRAY_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[0]),
        .Q(\n_0_WR_ADDR_GRAY_reg[0] ),
        .S(SR));
FDRE \WR_ADDR_GRAY_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[1]),
        .Q(\n_0_WR_ADDR_GRAY_reg[1] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[2]),
        .Q(\n_0_WR_ADDR_GRAY_reg[2] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[3]),
        .Q(\n_0_WR_ADDR_GRAY_reg[3] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[4]),
        .Q(\n_0_WR_ADDR_GRAY_reg[4] ),
        .R(SR));
FDSE \WR_ADDR_GRAY_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[5]),
        .Q(\n_0_WR_ADDR_GRAY_reg[5] ),
        .S(SR));
FDSE \WR_ADDR_GRAY_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[6]),
        .Q(DATA_IN),
        .S(SR));
FDSE \WR_ADDR_PLUS1_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .Q(WR_ADDR_PLUS1[0]),
        .S(SR));
FDRE \WR_ADDR_PLUS1_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_1_in7_in),
        .Q(WR_ADDR_PLUS1[1]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_2_in9_in),
        .Q(WR_ADDR_PLUS1[2]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_3_in11_in),
        .Q(WR_ADDR_PLUS1[3]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_4_in13_in),
        .Q(WR_ADDR_PLUS1[4]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_5_in15_in),
        .Q(WR_ADDR_PLUS1[5]),
        .R(SR));
FDSE \WR_ADDR_PLUS1_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_0_in6_out[6]),
        .Q(WR_ADDR_PLUS1[6]),
        .S(SR));
LUT1 #(
    .INIT(2'h1)) 
     \WR_ADDR_PLUS2[0]_i_1__0 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .O(plusOp__0[0]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_PLUS2[1]_i_1__0 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I1(p_1_in7_in),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair588" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \WR_ADDR_PLUS2[2]_i_1__0 
       (.I0(p_2_in9_in),
        .I1(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I2(p_1_in7_in),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair588" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \WR_ADDR_PLUS2[3]_i_1__0 
       (.I0(p_3_in11_in),
        .I1(p_1_in7_in),
        .I2(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I3(p_2_in9_in),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair580" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \WR_ADDR_PLUS2[4]_i_1__0 
       (.I0(p_2_in9_in),
        .I1(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I2(p_1_in7_in),
        .I3(p_3_in11_in),
        .I4(p_4_in13_in),
        .O(plusOp__0[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \WR_ADDR_PLUS2[5]_i_1__0 
       (.I0(p_5_in15_in),
        .I1(p_2_in9_in),
        .I2(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I3(p_1_in7_in),
        .I4(p_3_in11_in),
        .I5(p_4_in13_in),
        .O(plusOp__0[5]));
LUT3 #(
    .INIT(8'h6A)) 
     \WR_ADDR_PLUS2[6]_i_1__0 
       (.I0(p_0_in6_out[6]),
        .I1(\n_0_WR_ADDR_PLUS2[6]_i_2__0 ),
        .I2(p_5_in15_in),
        .O(plusOp__0[6]));
(* SOFT_HLUTNM = "soft_lutpair580" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \WR_ADDR_PLUS2[6]_i_2__0 
       (.I0(p_4_in13_in),
        .I1(p_3_in11_in),
        .I2(p_1_in7_in),
        .I3(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I4(p_2_in9_in),
        .O(\n_0_WR_ADDR_PLUS2[6]_i_2__0 ));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[0]),
        .Q(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .R(SR));
(* counter = "32" *) 
   FDSE \WR_ADDR_PLUS2_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[1]),
        .Q(p_1_in7_in),
        .S(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[2]),
        .Q(p_2_in9_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[3]),
        .Q(p_3_in11_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[4]),
        .Q(p_4_in13_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[5]),
        .Q(p_5_in15_in),
        .R(SR));
(* counter = "32" *) 
   FDSE \WR_ADDR_PLUS2_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[6]),
        .Q(p_0_in6_out[6]),
        .S(SR));
FDRE \WR_ADDR_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[0]),
        .Q(\n_0_WR_ADDR_reg[0] ),
        .R(SR));
FDRE \WR_ADDR_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[1]),
        .Q(\n_0_WR_ADDR_reg[1] ),
        .R(SR));
FDRE \WR_ADDR_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[2]),
        .Q(\n_0_WR_ADDR_reg[2] ),
        .R(SR));
FDRE \WR_ADDR_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[3]),
        .Q(\n_0_WR_ADDR_reg[3] ),
        .R(SR));
FDRE \WR_ADDR_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[4]),
        .Q(\n_0_WR_ADDR_reg[4] ),
        .R(SR));
FDRE \WR_ADDR_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[5]),
        .Q(\n_0_WR_ADDR_reg[5] ),
        .R(SR));
FDSE \WR_ADDR_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[6]),
        .Q(\n_0_WR_ADDR_reg[6] ),
        .S(SR));
FDRE \WR_DATA_REG1_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5[0]),
        .Q(\n_0_WR_DATA_REG1_reg[0] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I3),
        .Q(WR_DATA_REG1[10]),
        .R(SR));
FDRE \WR_DATA_REG1_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(p_0_in9_in),
        .R(SR));
FDRE \WR_DATA_REG1_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(Q),
        .Q(WR_DATA_REG1[12]),
        .R(SR));
FDRE \WR_DATA_REG1_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5[1]),
        .Q(\n_0_WR_DATA_REG1_reg[1] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5[2]),
        .Q(\n_0_WR_DATA_REG1_reg[2] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5[3]),
        .Q(\n_0_WR_DATA_REG1_reg[3] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5[4]),
        .Q(\n_0_WR_DATA_REG1_reg[4] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5[5]),
        .Q(\n_0_WR_DATA_REG1_reg[5] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5[6]),
        .Q(\n_0_WR_DATA_REG1_reg[6] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5[7]),
        .Q(\n_0_WR_DATA_REG1_reg[7] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I4),
        .Q(WR_DATA_REG1[9]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[0] ),
        .Q(WR_DATA_REG2[0]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[10]),
        .Q(WR_DATA_REG2[10]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in9_in),
        .Q(WR_DATA_REG2[11]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[12]),
        .Q(WR_DATA_REG2[12]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[1] ),
        .Q(WR_DATA_REG2[1]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[2] ),
        .Q(WR_DATA_REG2[2]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[3] ),
        .Q(WR_DATA_REG2[3]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[4] ),
        .Q(WR_DATA_REG2[4]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[5] ),
        .Q(WR_DATA_REG2[5]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[6] ),
        .Q(WR_DATA_REG2[6]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[7] ),
        .Q(WR_DATA_REG2[7]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[9]),
        .Q(WR_DATA_REG2[9]),
        .R(SR));
FDRE \WR_DATA_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[0] ),
        .Q(\n_0_WR_DATA_reg[0] ),
        .R(SR));
FDRE \WR_DATA_reg[10] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[10]),
        .Q(\n_0_WR_DATA_reg[10] ),
        .R(SR));
FDRE \WR_DATA_reg[11] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(p_0_in9_in),
        .Q(\n_0_WR_DATA_reg[11] ),
        .R(SR));
FDRE \WR_DATA_reg[12] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[12]),
        .Q(\n_0_WR_DATA_reg[12] ),
        .R(SR));
FDRE \WR_DATA_reg[13] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(n_0_REMOVE_IDLE_reg),
        .Q(\n_0_WR_DATA_reg[13] ),
        .R(SR));
FDRE \WR_DATA_reg[16] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[0]),
        .Q(\n_0_WR_DATA_reg[16] ),
        .R(SR));
FDRE \WR_DATA_reg[17] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[1]),
        .Q(\n_0_WR_DATA_reg[17] ),
        .R(SR));
FDRE \WR_DATA_reg[18] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[2]),
        .Q(\n_0_WR_DATA_reg[18] ),
        .R(SR));
FDRE \WR_DATA_reg[19] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[3]),
        .Q(\n_0_WR_DATA_reg[19] ),
        .R(SR));
FDRE \WR_DATA_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[1] ),
        .Q(\n_0_WR_DATA_reg[1] ),
        .R(SR));
FDRE \WR_DATA_reg[20] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[4]),
        .Q(\n_0_WR_DATA_reg[20] ),
        .R(SR));
FDRE \WR_DATA_reg[21] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[5]),
        .Q(\n_0_WR_DATA_reg[21] ),
        .R(SR));
FDRE \WR_DATA_reg[22] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[6]),
        .Q(\n_0_WR_DATA_reg[22] ),
        .R(SR));
FDRE \WR_DATA_reg[23] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[7]),
        .Q(\n_0_WR_DATA_reg[23] ),
        .R(SR));
FDRE \WR_DATA_reg[25] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[9]),
        .Q(\n_0_WR_DATA_reg[25] ),
        .R(SR));
FDRE \WR_DATA_reg[26] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[10]),
        .Q(\n_0_WR_DATA_reg[26] ),
        .R(SR));
FDRE \WR_DATA_reg[27] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[11]),
        .Q(\n_0_WR_DATA_reg[27] ),
        .R(SR));
FDRE \WR_DATA_reg[28] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[12]),
        .Q(\n_0_WR_DATA_reg[28] ),
        .R(SR));
FDRE \WR_DATA_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[2] ),
        .Q(\n_0_WR_DATA_reg[2] ),
        .R(SR));
FDRE \WR_DATA_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[3] ),
        .Q(\n_0_WR_DATA_reg[3] ),
        .R(SR));
FDRE \WR_DATA_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[4] ),
        .Q(\n_0_WR_DATA_reg[4] ),
        .R(SR));
FDRE \WR_DATA_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[5] ),
        .Q(\n_0_WR_DATA_reg[5] ),
        .R(SR));
FDRE \WR_DATA_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[6] ),
        .Q(\n_0_WR_DATA_reg[6] ),
        .R(SR));
FDRE \WR_DATA_reg[7] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[7] ),
        .Q(\n_0_WR_DATA_reg[7] ),
        .R(SR));
FDRE \WR_DATA_reg[9] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[9]),
        .Q(\n_0_WR_DATA_reg[9] ),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair583" *) 
   LUT4 #(
    .INIT(16'h0070)) 
     WR_ENABLE_i_1__0
       (.I0(n_0_WR_ENABLE_i_2__0),
        .I1(I1_DETECTED_WR),
        .I2(WR_TOGGLE),
        .I3(SR),
        .O(WR_ENABLE0));
(* SOFT_HLUTNM = "soft_lutpair584" *) 
   LUT5 #(
    .INIT(32'h00400000)) 
     WR_ENABLE_i_2__0
       (.I0(n_0_WR_ENABLE_i_3__0),
        .I1(WR_TOGGLE),
        .I2(WR_OCCUPANCY[6]),
        .I3(n_0_REMOVE_IDLE_reg),
        .I4(I1_DETECTED_WR_REG),
        .O(n_0_WR_ENABLE_i_2__0));
LUT5 #(
    .INIT(32'h00000001)) 
     WR_ENABLE_i_3__0
       (.I0(WR_OCCUPANCY[4]),
        .I1(WR_OCCUPANCY[1]),
        .I2(WR_OCCUPANCY[3]),
        .I3(WR_OCCUPANCY[5]),
        .I4(WR_OCCUPANCY[2]),
        .O(n_0_WR_ENABLE_i_3__0));
FDRE WR_ENABLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_ENABLE0),
        .Q(WR_ENABLE),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h69969669)) 
     \WR_OCCUPANCY[3]_i_2__0 
       (.I0(\n_0_WR_ADDR_reg[3] ),
        .I1(p_1_in21_in),
        .I2(p_2_in24_in),
        .I3(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I4(p_0_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_2__0 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \WR_OCCUPANCY[3]_i_3__0 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I1(p_0_in),
        .I2(p_1_in21_in),
        .I3(p_2_in24_in),
        .I4(\n_0_WR_ADDR_reg[2] ),
        .I5(p_3_in27_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_3__0 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \WR_OCCUPANCY[3]_i_4__0 
       (.I0(\n_0_WR_ADDR_reg[1] ),
        .I1(p_2_in24_in),
        .I2(p_1_in21_in),
        .I3(\n_0_WR_OCCUPANCY[3]_i_6__0 ),
        .I4(p_3_in27_in),
        .I5(p_4_in30_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_4__0 ));
LUT5 #(
    .INIT(32'h96696996)) 
     \WR_OCCUPANCY[3]_i_5__0 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ),
        .I1(p_4_in30_in),
        .I2(p_3_in27_in),
        .I3(\n_0_WR_OCCUPANCY[3]_i_7__0 ),
        .I4(\n_0_WR_ADDR_reg[0] ),
        .O(\n_0_WR_OCCUPANCY[3]_i_5__0 ));
(* SOFT_HLUTNM = "soft_lutpair589" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_OCCUPANCY[3]_i_6__0 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I1(p_0_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_6__0 ));
(* SOFT_HLUTNM = "soft_lutpair589" *) 
   LUT4 #(
    .INIT(16'h9669)) 
     \WR_OCCUPANCY[3]_i_7__0 
       (.I0(p_0_in),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(p_2_in24_in),
        .I3(p_1_in21_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_7__0 ));
LUT2 #(
    .INIT(4'h9)) 
     \WR_OCCUPANCY[6]_i_2__0 
       (.I0(\n_0_WR_ADDR_reg[6] ),
        .I1(p_0_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_2__0 ));
LUT3 #(
    .INIT(8'h69)) 
     \WR_OCCUPANCY[6]_i_3__0 
       (.I0(\n_0_WR_ADDR_reg[5] ),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(p_0_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_3__0 ));
LUT4 #(
    .INIT(16'h9669)) 
     \WR_OCCUPANCY[6]_i_4__0 
       (.I0(p_0_in),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(\n_0_WR_ADDR_reg[4] ),
        .I3(p_1_in21_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_4__0 ));
FDRE \WR_OCCUPANCY_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[1]),
        .Q(WR_OCCUPANCY[1]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[2]),
        .Q(WR_OCCUPANCY[2]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[3]),
        .Q(WR_OCCUPANCY[3]),
        .R(SR));
CARRY4 \WR_OCCUPANCY_reg[3]_i_1__0 
       (.CI(\<const0> ),
        .CO({\n_0_WR_OCCUPANCY_reg[3]_i_1__0 ,\n_1_WR_OCCUPANCY_reg[3]_i_1__0 ,\n_2_WR_OCCUPANCY_reg[3]_i_1__0 ,\n_3_WR_OCCUPANCY_reg[3]_i_1__0 }),
        .CYINIT(\<const1> ),
        .DI({\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .O({WR_OCCUPANCY00_out[3:1],\NLW_WR_OCCUPANCY_reg[3]_i_1__0_O_UNCONNECTED [0]}),
        .S({\n_0_WR_OCCUPANCY[3]_i_2__0 ,\n_0_WR_OCCUPANCY[3]_i_3__0 ,\n_0_WR_OCCUPANCY[3]_i_4__0 ,\n_0_WR_OCCUPANCY[3]_i_5__0 }));
FDRE \WR_OCCUPANCY_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[4]),
        .Q(WR_OCCUPANCY[4]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[5]),
        .Q(WR_OCCUPANCY[5]),
        .R(SR));
FDSE \WR_OCCUPANCY_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[6]),
        .Q(WR_OCCUPANCY[6]),
        .S(SR));
CARRY4 \WR_OCCUPANCY_reg[6]_i_1__0 
       (.CI(\n_0_WR_OCCUPANCY_reg[3]_i_1__0 ),
        .CO({\NLW_WR_OCCUPANCY_reg[6]_i_1__0_CO_UNCONNECTED [3:2],\n_2_WR_OCCUPANCY_reg[6]_i_1__0 ,\n_3_WR_OCCUPANCY_reg[6]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] }),
        .O({\NLW_WR_OCCUPANCY_reg[6]_i_1__0_O_UNCONNECTED [3],WR_OCCUPANCY00_out[6:4]}),
        .S({\<const0> ,\n_0_WR_OCCUPANCY[6]_i_2__0 ,\n_0_WR_OCCUPANCY[6]_i_3__0 ,\n_0_WR_OCCUPANCY[6]_i_4__0 }));
(* RETAIN_INVERTER *) 
   (* SOFT_HLUTNM = "soft_lutpair584" *) 
   LUT1 #(
    .INIT(2'h1)) 
     WR_TOGGLE_i_1__0
       (.I0(WR_TOGGLE),
        .O(n_0_WR_TOGGLE_i_1__0));
FDSE WR_TOGGLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(n_0_WR_TOGGLE_i_1__0),
        .Q(WR_TOGGLE),
        .S(SR));
FDRE insert_idle_reg_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(INSERT_IDLE),
        .Q(insert_idle_reg),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "QSGMII_RX_ELASTIC_BUFFER" *) 
module quadsgmiiQSGMII_RX_ELASTIC_BUFFER_19
   (RXCHARISCOMMA_USR,
    RXCHARISK_USR,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    I2,
    RXDATA_USR,
    O1,
    rxuserclk2,
    userclk2,
    SS,
    I1,
    MGT_RX_RESET1_in,
    SR,
    Q,
    I3,
    I4,
    I5,
    I6);
  output RXCHARISCOMMA_USR;
  output RXCHARISK_USR;
  output RXDISPERR_USR;
  output RXNOTINTABLE_USR;
  output [2:0]I2;
  output [7:0]RXDATA_USR;
  output O1;
  input rxuserclk2;
  input userclk2;
  input [0:0]SS;
  input I1;
  input MGT_RX_RESET1_in;
  input [0:0]SR;
  input [0:0]Q;
  input [0:0]I3;
  input [0:0]I4;
  input [0:0]I5;
  input [7:0]I6;

  wire \<const0> ;
  wire \<const1> ;
  wire D5P6_WR_REG;
  wire DATA_IN;
  wire DATA_OUT;
  wire DATA_OUT0_out;
  wire DATA_OUT1_out;
  wire DATA_OUT2_out;
  wire DATA_OUT3_out;
  wire DATA_OUT4_out;
  wire DATA_OUT5_out;
  wire EVEN;
  wire \GEN_FIFO[28].RD_DATA_reg ;
  wire I1;
  wire I1_DETECTED_WR;
  wire I1_DETECTED_WR_REG;
  wire [2:0]I2;
  wire [0:0]I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire [7:0]I6;
  wire INSERT_IDLE;
  wire K28P5_WR_REG;
  wire MGT_RX_RESET1_in;
  wire O1;
  wire [0:0]Q;
  wire [6:0]RD_ADDR_GRAY;
  wire [6:0]RD_ADDR_PLUS1;
  wire RD_ENABLE;
  wire RD_ENABLE0;
  wire [6:0]RD_OCCUPANCY;
  wire [6:0]RD_OCCUPANCY01_out;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire [7:0]RXDATA_USR;
  wire RXDISPERR_USR;
  wire RXNOTINTABLE_USR;
  wire [0:0]SR;
  wire [0:0]SS;
  wire [6:0]WR_ADDR_PLUS1;
  wire [12:9]WR_DATA_REG1;
  wire [12:0]WR_DATA_REG2;
  wire WR_ENABLE;
  wire WR_ENABLE0;
  wire [6:1]WR_OCCUPANCY;
  wire [6:1]WR_OCCUPANCY00_out;
  wire WR_TOGGLE;
  wire insert_idle_reg;
  wire n_0_D5P6_WR_REG_i_2__1;
  wire n_0_EVEN_i_1__1;
  wire \n_0_GEN_FIFO[0].RD_DATA_reg[0] ;
  wire \n_0_GEN_FIFO[10].RD_DATA_reg[10] ;
  wire \n_0_GEN_FIFO[11].RD_DATA_reg[11] ;
  wire \n_0_GEN_FIFO[12].RD_DATA_reg[12] ;
  wire \n_0_GEN_FIFO[13].RD_DATA_reg[13] ;
  wire \n_0_GEN_FIFO[1].RD_DATA_reg[1] ;
  wire \n_0_GEN_FIFO[25].RD_DATA_reg[25] ;
  wire \n_0_GEN_FIFO[26].RD_DATA_reg[26] ;
  wire \n_0_GEN_FIFO[27].RD_DATA_reg[27] ;
  wire \n_0_GEN_FIFO[2].RD_DATA_reg[2] ;
  wire \n_0_GEN_FIFO[3].RD_DATA_reg[3] ;
  wire \n_0_GEN_FIFO[4].RD_DATA_reg[4] ;
  wire \n_0_GEN_FIFO[5].RD_DATA_reg[5] ;
  wire \n_0_GEN_FIFO[6].RD_DATA_reg[6] ;
  wire \n_0_GEN_FIFO[7].RD_DATA_reg[7] ;
  wire \n_0_GEN_FIFO[9].RD_DATA_reg[9] ;
  wire n_0_I1_DETECTED_WR_REG_i_2__1;
  wire n_0_INSERT_IDLE_i_1__3;
  wire n_0_K28P5_WR_REG_i_2__1;
  wire \n_0_RD_ADDR_GRAY[1]_i_1__1 ;
  wire \n_0_RD_ADDR_GRAY[2]_i_1__1 ;
  wire \n_0_RD_ADDR_GRAY[3]_i_1__1 ;
  wire \n_0_RD_ADDR_GRAY[4]_i_1__1 ;
  wire \n_0_RD_ADDR_GRAY[5]_i_1__1 ;
  wire \n_0_RD_ADDR_PLUS2[6]_i_2__1 ;
  wire \n_0_RD_ADDR_PLUS2_reg[0] ;
  wire \n_0_RD_ADDR_PLUS2_reg[1] ;
  wire \n_0_RD_ADDR_PLUS2_reg[2] ;
  wire \n_0_RD_ADDR_PLUS2_reg[6] ;
  wire \n_0_RD_ADDR_reg[0] ;
  wire \n_0_RD_ADDR_reg[1] ;
  wire \n_0_RD_ADDR_reg[2] ;
  wire \n_0_RD_ADDR_reg[3] ;
  wire \n_0_RD_ADDR_reg[4] ;
  wire \n_0_RD_ADDR_reg[5] ;
  wire \n_0_RD_ADDR_reg[6] ;
  wire \n_0_RD_DATA_REG_reg[0] ;
  wire \n_0_RD_DATA_REG_reg[10] ;
  wire \n_0_RD_DATA_REG_reg[11] ;
  wire \n_0_RD_DATA_REG_reg[12] ;
  wire \n_0_RD_DATA_REG_reg[13] ;
  wire \n_0_RD_DATA_REG_reg[16] ;
  wire \n_0_RD_DATA_REG_reg[17] ;
  wire \n_0_RD_DATA_REG_reg[18] ;
  wire \n_0_RD_DATA_REG_reg[19] ;
  wire \n_0_RD_DATA_REG_reg[1] ;
  wire \n_0_RD_DATA_REG_reg[20] ;
  wire \n_0_RD_DATA_REG_reg[21] ;
  wire \n_0_RD_DATA_REG_reg[22] ;
  wire \n_0_RD_DATA_REG_reg[23] ;
  wire \n_0_RD_DATA_REG_reg[25] ;
  wire \n_0_RD_DATA_REG_reg[26] ;
  wire \n_0_RD_DATA_REG_reg[27] ;
  wire \n_0_RD_DATA_REG_reg[28] ;
  wire \n_0_RD_DATA_REG_reg[2] ;
  wire \n_0_RD_DATA_REG_reg[3] ;
  wire \n_0_RD_DATA_REG_reg[4] ;
  wire \n_0_RD_DATA_REG_reg[5] ;
  wire \n_0_RD_DATA_REG_reg[6] ;
  wire \n_0_RD_DATA_REG_reg[7] ;
  wire \n_0_RD_DATA_REG_reg[9] ;
  wire n_0_RD_ENABLE_i_10__1;
  wire n_0_RD_ENABLE_i_1__1;
  wire n_0_RD_ENABLE_i_3__1;
  wire n_0_RD_ENABLE_i_4__1;
  wire n_0_RD_ENABLE_i_5__1;
  wire n_0_RD_ENABLE_i_6__1;
  wire n_0_RD_ENABLE_i_7__1;
  wire n_0_RD_ENABLE_i_8__1;
  wire n_0_RD_ENABLE_i_9__1;
  wire \n_0_RD_OCCUPANCY[0]_i_2__1 ;
  wire \n_0_RD_OCCUPANCY[3]_i_10__1 ;
  wire \n_0_RD_OCCUPANCY[3]_i_2__1 ;
  wire \n_0_RD_OCCUPANCY[3]_i_3__1 ;
  wire \n_0_RD_OCCUPANCY[3]_i_4__1 ;
  wire \n_0_RD_OCCUPANCY[3]_i_5__1 ;
  wire \n_0_RD_OCCUPANCY[3]_i_6__1 ;
  wire \n_0_RD_OCCUPANCY[3]_i_7__1 ;
  wire \n_0_RD_OCCUPANCY[3]_i_8__1 ;
  wire \n_0_RD_OCCUPANCY[3]_i_9__1 ;
  wire \n_0_RD_OCCUPANCY[6]_i_2__1 ;
  wire \n_0_RD_OCCUPANCY[6]_i_3__1 ;
  wire \n_0_RD_OCCUPANCY[6]_i_4__1 ;
  wire \n_0_RD_OCCUPANCY[6]_i_5__1 ;
  wire \n_0_RD_OCCUPANCY[6]_i_6__1 ;
  wire \n_0_RD_OCCUPANCY_reg[3]_i_1__1 ;
  wire \n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ;
  wire \n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ;
  wire n_0_REMOVE_IDLE_i_1__1;
  wire n_0_REMOVE_IDLE_reg;
  wire n_0_RXBUFERR_i_1__1;
  wire n_0_RXBUFERR_i_2__1;
  wire n_0_RXCHARISCOMMA_USR_i_1__1;
  wire n_0_RXCHARISK_USR_i_1__1;
  wire \n_0_RXCLKCORCNT[0]_i_1__1 ;
  wire \n_0_RXCLKCORCNT[1]_i_1__1 ;
  wire \n_0_RXCLKCORCNT[2]_i_1__1 ;
  wire \n_0_RXDATA_USR[0]_i_1__1 ;
  wire \n_0_RXDATA_USR[1]_i_1__1 ;
  wire \n_0_RXDATA_USR[2]_i_1__1 ;
  wire \n_0_RXDATA_USR[3]_i_1__1 ;
  wire \n_0_RXDATA_USR[4]_i_1__1 ;
  wire \n_0_RXDATA_USR[5]_i_1__1 ;
  wire \n_0_RXDATA_USR[6]_i_1__1 ;
  wire \n_0_RXDATA_USR[7]_i_1__1 ;
  wire n_0_RXDISPERR_USR_i_1__1;
  wire n_0_RXNOTINTABLE_USR_i_1__1;
  wire \n_0_WR_ADDR_GRAY_reg[0] ;
  wire \n_0_WR_ADDR_GRAY_reg[1] ;
  wire \n_0_WR_ADDR_GRAY_reg[2] ;
  wire \n_0_WR_ADDR_GRAY_reg[3] ;
  wire \n_0_WR_ADDR_GRAY_reg[4] ;
  wire \n_0_WR_ADDR_GRAY_reg[5] ;
  wire \n_0_WR_ADDR_PLUS2[6]_i_2__1 ;
  wire \n_0_WR_ADDR_PLUS2_reg[0] ;
  wire \n_0_WR_ADDR_reg[0] ;
  wire \n_0_WR_ADDR_reg[1] ;
  wire \n_0_WR_ADDR_reg[2] ;
  wire \n_0_WR_ADDR_reg[3] ;
  wire \n_0_WR_ADDR_reg[4] ;
  wire \n_0_WR_ADDR_reg[5] ;
  wire \n_0_WR_ADDR_reg[6] ;
  wire \n_0_WR_DATA_REG1_reg[0] ;
  wire \n_0_WR_DATA_REG1_reg[1] ;
  wire \n_0_WR_DATA_REG1_reg[2] ;
  wire \n_0_WR_DATA_REG1_reg[3] ;
  wire \n_0_WR_DATA_REG1_reg[4] ;
  wire \n_0_WR_DATA_REG1_reg[5] ;
  wire \n_0_WR_DATA_REG1_reg[6] ;
  wire \n_0_WR_DATA_REG1_reg[7] ;
  wire \n_0_WR_DATA_reg[0] ;
  wire \n_0_WR_DATA_reg[10] ;
  wire \n_0_WR_DATA_reg[11] ;
  wire \n_0_WR_DATA_reg[12] ;
  wire \n_0_WR_DATA_reg[13] ;
  wire \n_0_WR_DATA_reg[16] ;
  wire \n_0_WR_DATA_reg[17] ;
  wire \n_0_WR_DATA_reg[18] ;
  wire \n_0_WR_DATA_reg[19] ;
  wire \n_0_WR_DATA_reg[1] ;
  wire \n_0_WR_DATA_reg[20] ;
  wire \n_0_WR_DATA_reg[21] ;
  wire \n_0_WR_DATA_reg[22] ;
  wire \n_0_WR_DATA_reg[23] ;
  wire \n_0_WR_DATA_reg[25] ;
  wire \n_0_WR_DATA_reg[26] ;
  wire \n_0_WR_DATA_reg[27] ;
  wire \n_0_WR_DATA_reg[28] ;
  wire \n_0_WR_DATA_reg[2] ;
  wire \n_0_WR_DATA_reg[3] ;
  wire \n_0_WR_DATA_reg[4] ;
  wire \n_0_WR_DATA_reg[5] ;
  wire \n_0_WR_DATA_reg[6] ;
  wire \n_0_WR_DATA_reg[7] ;
  wire \n_0_WR_DATA_reg[9] ;
  wire n_0_WR_ENABLE_i_2__1;
  wire n_0_WR_ENABLE_i_3__1;
  wire \n_0_WR_OCCUPANCY[3]_i_2__1 ;
  wire \n_0_WR_OCCUPANCY[3]_i_3__1 ;
  wire \n_0_WR_OCCUPANCY[3]_i_4__1 ;
  wire \n_0_WR_OCCUPANCY[3]_i_5__1 ;
  wire \n_0_WR_OCCUPANCY[3]_i_6__1 ;
  wire \n_0_WR_OCCUPANCY[3]_i_7__1 ;
  wire \n_0_WR_OCCUPANCY[6]_i_2__1 ;
  wire \n_0_WR_OCCUPANCY[6]_i_3__1 ;
  wire \n_0_WR_OCCUPANCY[6]_i_4__1 ;
  wire \n_0_WR_OCCUPANCY_reg[3]_i_1__1 ;
  wire n_0_WR_TOGGLE_i_1__1;
  wire \n_1_GEN_FIFO[0].DIST_RAM ;
  wire \n_1_GEN_FIFO[10].DIST_RAM ;
  wire \n_1_GEN_FIFO[11].DIST_RAM ;
  wire \n_1_GEN_FIFO[12].DIST_RAM ;
  wire \n_1_GEN_FIFO[13].DIST_RAM ;
  wire \n_1_GEN_FIFO[16].DIST_RAM ;
  wire \n_1_GEN_FIFO[17].DIST_RAM ;
  wire \n_1_GEN_FIFO[18].DIST_RAM ;
  wire \n_1_GEN_FIFO[19].DIST_RAM ;
  wire \n_1_GEN_FIFO[1].DIST_RAM ;
  wire \n_1_GEN_FIFO[20].DIST_RAM ;
  wire \n_1_GEN_FIFO[21].DIST_RAM ;
  wire \n_1_GEN_FIFO[22].DIST_RAM ;
  wire \n_1_GEN_FIFO[23].DIST_RAM ;
  wire \n_1_GEN_FIFO[25].DIST_RAM ;
  wire \n_1_GEN_FIFO[26].DIST_RAM ;
  wire \n_1_GEN_FIFO[27].DIST_RAM ;
  wire \n_1_GEN_FIFO[28].DIST_RAM ;
  wire \n_1_GEN_FIFO[2].DIST_RAM ;
  wire \n_1_GEN_FIFO[3].DIST_RAM ;
  wire \n_1_GEN_FIFO[4].DIST_RAM ;
  wire \n_1_GEN_FIFO[5].DIST_RAM ;
  wire \n_1_GEN_FIFO[6].DIST_RAM ;
  wire \n_1_GEN_FIFO[7].DIST_RAM ;
  wire \n_1_GEN_FIFO[9].DIST_RAM ;
  wire \n_1_RD_OCCUPANCY_reg[3]_i_1__1 ;
  wire \n_1_WR_OCCUPANCY_reg[3]_i_1__1 ;
  wire \n_2_RD_OCCUPANCY_reg[3]_i_1__1 ;
  wire \n_2_RD_OCCUPANCY_reg[6]_i_1__1 ;
  wire \n_2_WR_OCCUPANCY_reg[3]_i_1__1 ;
  wire \n_2_WR_OCCUPANCY_reg[6]_i_1__1 ;
  wire \n_3_RD_OCCUPANCY_reg[3]_i_1__1 ;
  wire \n_3_RD_OCCUPANCY_reg[6]_i_1__1 ;
  wire \n_3_WR_OCCUPANCY_reg[3]_i_1__1 ;
  wire \n_3_WR_OCCUPANCY_reg[6]_i_1__1 ;
  wire p_0_in;
  wire [6:0]p_0_in6_out;
  wire p_0_in9_in;
  wire p_11_in;
  wire p_12_in;
  wire p_1_in21_in;
  wire p_1_in7_in;
  wire [7:0]p_2_in;
  wire p_2_in24_in;
  wire p_2_in9_in;
  wire p_3_in;
  wire p_3_in11_in;
  wire p_3_in27_in;
  wire p_4_in;
  wire p_4_in13_in;
  wire p_4_in30_in;
  wire p_5_in;
  wire p_5_in15_in;
  wire [6:0]plusOp;
  wire [6:0]plusOp__0;
  wire rxuserclk2;
  wire userclk2;
  wire \NLW_GEN_FIFO[0].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[10].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[11].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[12].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[13].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[16].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[17].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[18].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[19].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[1].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[20].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[21].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[22].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[23].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[25].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[26].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[27].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[28].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[2].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[3].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[4].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[5].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[6].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[7].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[9].DIST_RAM_SPO_UNCONNECTED ;
  wire [0:0]\NLW_RD_OCCUPANCY_reg[3]_i_1__1_O_UNCONNECTED ;
  wire [3:2]\NLW_RD_OCCUPANCY_reg[6]_i_1__1_CO_UNCONNECTED ;
  wire [3:3]\NLW_RD_OCCUPANCY_reg[6]_i_1__1_O_UNCONNECTED ;
  wire [0:0]\NLW_WR_OCCUPANCY_reg[3]_i_1__1_O_UNCONNECTED ;
  wire [3:2]\NLW_WR_OCCUPANCY_reg[6]_i_1__1_CO_UNCONNECTED ;
  wire [3:3]\NLW_WR_OCCUPANCY_reg[6]_i_1__1_O_UNCONNECTED ;

LUT5 #(
    .INIT(32'h08000020)) 
     D5P6_WR_REG_i_1__1
       (.I0(n_0_D5P6_WR_REG_i_2__1),
        .I1(\n_0_WR_DATA_REG1_reg[7] ),
        .I2(\n_0_WR_DATA_REG1_reg[4] ),
        .I3(\n_0_WR_DATA_REG1_reg[2] ),
        .I4(\n_0_WR_DATA_REG1_reg[0] ),
        .O(p_11_in));
LUT5 #(
    .INIT(32'h00000002)) 
     D5P6_WR_REG_i_2__1
       (.I0(\n_0_WR_DATA_REG1_reg[6] ),
        .I1(\n_0_WR_DATA_REG1_reg[3] ),
        .I2(\n_0_WR_DATA_REG1_reg[1] ),
        .I3(\n_0_WR_DATA_REG1_reg[5] ),
        .I4(p_0_in9_in),
        .O(n_0_D5P6_WR_REG_i_2__1));
FDRE D5P6_WR_REG_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_11_in),
        .Q(D5P6_WR_REG),
        .R(SR));
LUT1 #(
    .INIT(2'h1)) 
     EVEN_i_1__1
       (.I0(EVEN),
        .O(n_0_EVEN_i_1__1));
FDSE EVEN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EVEN_i_1__1),
        .Q(EVEN),
        .S(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[0].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[0] ),
        .DPO(\n_1_GEN_FIFO[0].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[0].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[0].RD_DATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[0].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[10].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[10] ),
        .DPO(\n_1_GEN_FIFO[10].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[10].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[10].RD_DATA_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[10].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[10].RD_DATA_reg[10] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[11].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[11] ),
        .DPO(\n_1_GEN_FIFO[11].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[11].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[11].RD_DATA_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[11].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[12].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[12] ),
        .DPO(\n_1_GEN_FIFO[12].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[12].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[12].RD_DATA_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[12].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[12].RD_DATA_reg[12] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[13].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[13] ),
        .DPO(\n_1_GEN_FIFO[13].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[13].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[13].RD_DATA_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[13].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[13].RD_DATA_reg[13] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[16].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[16] ),
        .DPO(\n_1_GEN_FIFO[16].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[16].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[16].RD_DATA_reg[16] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[16].DIST_RAM ),
        .Q(p_2_in[0]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[17].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[17] ),
        .DPO(\n_1_GEN_FIFO[17].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[17].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[17].RD_DATA_reg[17] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[17].DIST_RAM ),
        .Q(p_2_in[1]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[18].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[18] ),
        .DPO(\n_1_GEN_FIFO[18].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[18].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[18].RD_DATA_reg[18] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[18].DIST_RAM ),
        .Q(p_2_in[2]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[19].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[19] ),
        .DPO(\n_1_GEN_FIFO[19].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[19].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[19].RD_DATA_reg[19] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[19].DIST_RAM ),
        .Q(p_2_in[3]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[1].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[1] ),
        .DPO(\n_1_GEN_FIFO[1].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[1].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[1].RD_DATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[1].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[20].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[20] ),
        .DPO(\n_1_GEN_FIFO[20].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[20].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[20].RD_DATA_reg[20] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[20].DIST_RAM ),
        .Q(p_2_in[4]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[21].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[21] ),
        .DPO(\n_1_GEN_FIFO[21].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[21].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[21].RD_DATA_reg[21] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[21].DIST_RAM ),
        .Q(p_2_in[5]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[22].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[22] ),
        .DPO(\n_1_GEN_FIFO[22].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[22].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[22].RD_DATA_reg[22] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[22].DIST_RAM ),
        .Q(p_2_in[6]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[23].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[23] ),
        .DPO(\n_1_GEN_FIFO[23].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[23].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[23].RD_DATA_reg[23] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[23].DIST_RAM ),
        .Q(p_2_in[7]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[25].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[25] ),
        .DPO(\n_1_GEN_FIFO[25].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[25].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[25].RD_DATA_reg[25] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[25].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[25].RD_DATA_reg[25] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[26].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[26] ),
        .DPO(\n_1_GEN_FIFO[26].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[26].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[26].RD_DATA_reg[26] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[26].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[26].RD_DATA_reg[26] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[27].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[27] ),
        .DPO(\n_1_GEN_FIFO[27].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[27].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[27].RD_DATA_reg[27] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[27].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[28].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[28] ),
        .DPO(\n_1_GEN_FIFO[28].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[28].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[28].RD_DATA_reg[28] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[28].DIST_RAM ),
        .Q(\GEN_FIFO[28].RD_DATA_reg ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[2].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[2] ),
        .DPO(\n_1_GEN_FIFO[2].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[2].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[2].RD_DATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[2].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[3].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[3] ),
        .DPO(\n_1_GEN_FIFO[3].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[3].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[3].RD_DATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[3].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[4].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[4] ),
        .DPO(\n_1_GEN_FIFO[4].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[4].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[4].RD_DATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[4].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[5].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[5] ),
        .DPO(\n_1_GEN_FIFO[5].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[5].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[5].RD_DATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[5].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[6].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[6] ),
        .DPO(\n_1_GEN_FIFO[6].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[6].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[6].RD_DATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[6].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[7].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[7] ),
        .DPO(\n_1_GEN_FIFO[7].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[7].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[7].RD_DATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[7].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[9].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[9] ),
        .DPO(\n_1_GEN_FIFO[9].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[9].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[9].RD_DATA_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[9].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[9].RD_DATA_reg[9] ),
        .R(SS));
GND GND
       (.G(\<const0> ));
LUT4 #(
    .INIT(16'hF444)) 
     I1_DETECTED_WR_REG_i_1__1
       (.I0(n_0_I1_DETECTED_WR_REG_i_2__1),
        .I1(D5P6_WR_REG),
        .I2(p_11_in),
        .I3(K28P5_WR_REG),
        .O(I1_DETECTED_WR));
(* SOFT_HLUTNM = "soft_lutpair607" *) 
   LUT4 #(
    .INIT(16'hFFFB)) 
     I1_DETECTED_WR_REG_i_2__1
       (.I0(\n_0_WR_DATA_REG1_reg[6] ),
        .I1(\n_0_WR_DATA_REG1_reg[5] ),
        .I2(\n_0_WR_DATA_REG1_reg[1] ),
        .I3(n_0_K28P5_WR_REG_i_2__1),
        .O(n_0_I1_DETECTED_WR_REG_i_2__1));
FDRE I1_DETECTED_WR_REG_reg
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(I1_DETECTED_WR),
        .Q(I1_DETECTED_WR_REG),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair606" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     INSERT_IDLE_i_1__3
       (.I0(EVEN),
        .I1(RD_ENABLE0),
        .I2(I1),
        .I3(MGT_RX_RESET1_in),
        .O(n_0_INSERT_IDLE_i_1__3));
FDRE INSERT_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_INSERT_IDLE_i_1__3),
        .Q(INSERT_IDLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair607" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     K28P5_WR_REG_i_1__1
       (.I0(n_0_K28P5_WR_REG_i_2__1),
        .I1(\n_0_WR_DATA_REG1_reg[1] ),
        .I2(\n_0_WR_DATA_REG1_reg[5] ),
        .I3(\n_0_WR_DATA_REG1_reg[6] ),
        .O(p_12_in));
LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
     K28P5_WR_REG_i_2__1
       (.I0(p_0_in9_in),
        .I1(\n_0_WR_DATA_REG1_reg[7] ),
        .I2(\n_0_WR_DATA_REG1_reg[0] ),
        .I3(\n_0_WR_DATA_REG1_reg[4] ),
        .I4(\n_0_WR_DATA_REG1_reg[3] ),
        .I5(\n_0_WR_DATA_REG1_reg[2] ),
        .O(n_0_K28P5_WR_REG_i_2__1));
FDRE K28P5_WR_REG_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_12_in),
        .Q(K28P5_WR_REG),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair618" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[0]_i_1__1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair618" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[1]_i_1__1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .O(\n_0_RD_ADDR_GRAY[1]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair617" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[2]_i_1__1 
       (.I0(p_3_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .O(\n_0_RD_ADDR_GRAY[2]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair617" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[3]_i_1__1 
       (.I0(p_4_in),
        .I1(p_3_in),
        .O(\n_0_RD_ADDR_GRAY[3]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair619" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[4]_i_1__1 
       (.I0(p_5_in),
        .I1(p_4_in),
        .O(\n_0_RD_ADDR_GRAY[4]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair619" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[5]_i_1__1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .I1(p_5_in),
        .O(\n_0_RD_ADDR_GRAY[5]_i_1__1 ));
FDRE \RD_ADDR_GRAY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp[1]),
        .Q(RD_ADDR_GRAY[0]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[1]_i_1__1 ),
        .Q(RD_ADDR_GRAY[1]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[2]_i_1__1 ),
        .Q(RD_ADDR_GRAY[2]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[3]_i_1__1 ),
        .Q(RD_ADDR_GRAY[3]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[4]_i_1__1 ),
        .Q(RD_ADDR_GRAY[4]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[5]_i_1__1 ),
        .Q(RD_ADDR_GRAY[5]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .Q(RD_ADDR_GRAY[6]),
        .R(SS));
FDSE \RD_ADDR_PLUS1_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .Q(RD_ADDR_PLUS1[0]),
        .S(SS));
FDRE \RD_ADDR_PLUS1_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .Q(RD_ADDR_PLUS1[1]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .Q(RD_ADDR_PLUS1[2]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_3_in),
        .Q(RD_ADDR_PLUS1[3]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_4_in),
        .Q(RD_ADDR_PLUS1[4]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_5_in),
        .Q(RD_ADDR_PLUS1[5]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .Q(RD_ADDR_PLUS1[6]),
        .R(SS));
LUT1 #(
    .INIT(2'h1)) 
     \RD_ADDR_PLUS2[0]_i_1__1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair608" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \RD_ADDR_PLUS2[2]_i_1__1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair608" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \RD_ADDR_PLUS2[3]_i_1__1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I3(p_3_in),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair602" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \RD_ADDR_PLUS2[4]_i_1__1 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I3(p_3_in),
        .I4(p_4_in),
        .O(plusOp[4]));
LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
     \RD_ADDR_PLUS2[5]_i_1__1 
       (.I0(p_3_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I3(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I4(p_4_in),
        .I5(p_5_in),
        .O(plusOp[5]));
LUT3 #(
    .INIT(8'h78)) 
     \RD_ADDR_PLUS2[6]_i_1__1 
       (.I0(\n_0_RD_ADDR_PLUS2[6]_i_2__1 ),
        .I1(p_5_in),
        .I2(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .O(plusOp[6]));
(* SOFT_HLUTNM = "soft_lutpair602" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \RD_ADDR_PLUS2[6]_i_2__1 
       (.I0(p_4_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I3(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I4(p_3_in),
        .O(\n_0_RD_ADDR_PLUS2[6]_i_2__1 ));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[0]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .R(SS));
(* counter = "31" *) 
   FDSE \RD_ADDR_PLUS2_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[1]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .S(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[2]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[3]),
        .Q(p_3_in),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[4]),
        .Q(p_4_in),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[5]),
        .Q(p_5_in),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[6]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .R(SS));
FDRE \RD_ADDR_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[0]),
        .Q(\n_0_RD_ADDR_reg[0] ),
        .R(SS));
FDRE \RD_ADDR_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[1]),
        .Q(\n_0_RD_ADDR_reg[1] ),
        .R(SS));
FDRE \RD_ADDR_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[2]),
        .Q(\n_0_RD_ADDR_reg[2] ),
        .R(SS));
FDRE \RD_ADDR_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[3]),
        .Q(\n_0_RD_ADDR_reg[3] ),
        .R(SS));
FDRE \RD_ADDR_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[4]),
        .Q(\n_0_RD_ADDR_reg[4] ),
        .R(SS));
FDRE \RD_ADDR_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[5]),
        .Q(\n_0_RD_ADDR_reg[5] ),
        .R(SS));
FDRE \RD_ADDR_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[6]),
        .Q(\n_0_RD_ADDR_reg[6] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .Q(\n_0_RD_DATA_REG_reg[0] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[10] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[10].RD_DATA_reg[10] ),
        .Q(\n_0_RD_DATA_REG_reg[10] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[11] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .Q(\n_0_RD_DATA_REG_reg[11] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[12] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[12].RD_DATA_reg[12] ),
        .Q(\n_0_RD_DATA_REG_reg[12] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[13] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[13].RD_DATA_reg[13] ),
        .Q(\n_0_RD_DATA_REG_reg[13] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[16] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[0]),
        .Q(\n_0_RD_DATA_REG_reg[16] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[17] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[1]),
        .Q(\n_0_RD_DATA_REG_reg[17] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[18] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[2]),
        .Q(\n_0_RD_DATA_REG_reg[18] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[19] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[3]),
        .Q(\n_0_RD_DATA_REG_reg[19] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .Q(\n_0_RD_DATA_REG_reg[1] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[20] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[4]),
        .Q(\n_0_RD_DATA_REG_reg[20] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[21] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[5]),
        .Q(\n_0_RD_DATA_REG_reg[21] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[22] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[6]),
        .Q(\n_0_RD_DATA_REG_reg[22] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[23] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[7]),
        .Q(\n_0_RD_DATA_REG_reg[23] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[25] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[25].RD_DATA_reg[25] ),
        .Q(\n_0_RD_DATA_REG_reg[25] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[26] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[26].RD_DATA_reg[26] ),
        .Q(\n_0_RD_DATA_REG_reg[26] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[27] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .Q(\n_0_RD_DATA_REG_reg[27] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[28] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\GEN_FIFO[28].RD_DATA_reg ),
        .Q(\n_0_RD_DATA_REG_reg[28] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .Q(\n_0_RD_DATA_REG_reg[2] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .Q(\n_0_RD_DATA_REG_reg[3] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .Q(\n_0_RD_DATA_REG_reg[4] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .Q(\n_0_RD_DATA_REG_reg[5] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .Q(\n_0_RD_DATA_REG_reg[6] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[7] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .Q(\n_0_RD_DATA_REG_reg[7] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[9] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[9].RD_DATA_reg[9] ),
        .Q(\n_0_RD_DATA_REG_reg[9] ),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair603" *) 
   LUT2 #(
    .INIT(4'hB)) 
     RD_ENABLE_i_10__1
       (.I0(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .I1(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .O(n_0_RD_ENABLE_i_10__1));
(* SOFT_HLUTNM = "soft_lutpair606" *) 
   LUT4 #(
    .INIT(16'h0002)) 
     RD_ENABLE_i_1__1
       (.I0(EVEN),
        .I1(RD_ENABLE0),
        .I2(I1),
        .I3(MGT_RX_RESET1_in),
        .O(n_0_RD_ENABLE_i_1__1));
LUT6 #(
    .INIT(64'h2202000000000000)) 
     RD_ENABLE_i_2__1
       (.I0(n_0_RD_ENABLE_i_3__1),
        .I1(n_0_RD_ENABLE_i_4__1),
        .I2(n_0_RD_ENABLE_i_5__1),
        .I3(p_2_in[6]),
        .I4(n_0_RD_ENABLE_i_6__1),
        .I5(n_0_RD_ENABLE_i_7__1),
        .O(RD_ENABLE0));
LUT6 #(
    .INIT(64'h0000004208400042)) 
     RD_ENABLE_i_3__1
       (.I0(p_2_in[4]),
        .I1(p_2_in[2]),
        .I2(p_2_in[0]),
        .I3(p_2_in[3]),
        .I4(p_2_in[5]),
        .I5(p_2_in[6]),
        .O(n_0_RD_ENABLE_i_3__1));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     RD_ENABLE_i_4__1
       (.I0(RD_OCCUPANCY[4]),
        .I1(RD_OCCUPANCY[5]),
        .I2(RD_OCCUPANCY[2]),
        .I3(RD_OCCUPANCY[1]),
        .I4(RD_OCCUPANCY[0]),
        .I5(RD_OCCUPANCY[3]),
        .O(n_0_RD_ENABLE_i_4__1));
LUT2 #(
    .INIT(4'h7)) 
     RD_ENABLE_i_5__1
       (.I0(p_2_in[5]),
        .I1(p_2_in[4]),
        .O(n_0_RD_ENABLE_i_5__1));
LUT5 #(
    .INIT(32'h20080800)) 
     RD_ENABLE_i_6__1
       (.I0(n_0_RD_ENABLE_i_8__1),
        .I1(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .I2(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .I3(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .I4(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .O(n_0_RD_ENABLE_i_6__1));
LUT6 #(
    .INIT(64'h00000060C0000000)) 
     RD_ENABLE_i_7__1
       (.I0(p_2_in[4]),
        .I1(p_2_in[7]),
        .I2(n_0_RD_ENABLE_i_9__1),
        .I3(n_0_RD_ENABLE_i_10__1),
        .I4(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .I5(p_2_in[6]),
        .O(n_0_RD_ENABLE_i_7__1));
(* SOFT_HLUTNM = "soft_lutpair603" *) 
   LUT5 #(
    .INIT(32'h05008002)) 
     RD_ENABLE_i_8__1
       (.I0(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .I1(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .I2(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .I3(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .I4(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .O(n_0_RD_ENABLE_i_8__1));
LUT5 #(
    .INIT(32'h00010100)) 
     RD_ENABLE_i_9__1
       (.I0(p_2_in[1]),
        .I1(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .I2(RD_OCCUPANCY[6]),
        .I3(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .I4(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .O(n_0_RD_ENABLE_i_9__1));
FDRE RD_ENABLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RD_ENABLE_i_1__1),
        .Q(RD_ENABLE),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'h96)) 
     \RD_OCCUPANCY[0]_i_1__1 
       (.I0(\n_0_RD_ADDR_reg[0] ),
        .I1(\n_0_RD_OCCUPANCY[0]_i_2__1 ),
        .I2(DATA_OUT),
        .O(RD_OCCUPANCY01_out[0]));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \RD_OCCUPANCY[0]_i_2__1 
       (.I0(DATA_OUT1_out),
        .I1(DATA_OUT0_out),
        .I2(DATA_OUT3_out),
        .I3(DATA_OUT2_out),
        .I4(DATA_OUT5_out),
        .I5(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[0]_i_2__1 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[3]_i_10__1 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_10__1 ));
LUT4 #(
    .INIT(16'h6996)) 
     \RD_OCCUPANCY[3]_i_2__1 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(DATA_OUT2_out),
        .I3(DATA_OUT3_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_2__1 ));
LUT5 #(
    .INIT(32'h96696996)) 
     \RD_OCCUPANCY[3]_i_3__1 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT4_out),
        .I4(DATA_OUT3_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_3__1 ));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \RD_OCCUPANCY[3]_i_4__1 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT0_out),
        .I4(DATA_OUT3_out),
        .I5(DATA_OUT2_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_4__1 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[3]_i_5__1 
       (.I0(\n_0_RD_OCCUPANCY[0]_i_2__1 ),
        .I1(DATA_OUT),
        .O(\n_0_RD_OCCUPANCY[3]_i_5__1 ));
LUT5 #(
    .INIT(32'h69969669)) 
     \RD_OCCUPANCY[3]_i_6__1 
       (.I0(DATA_OUT3_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT5_out),
        .I3(DATA_OUT4_out),
        .I4(\n_0_RD_ADDR_reg[3] ),
        .O(\n_0_RD_OCCUPANCY[3]_i_6__1 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \RD_OCCUPANCY[3]_i_7__1 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT3_out),
        .I2(DATA_OUT2_out),
        .I3(DATA_OUT1_out),
        .I4(\n_0_RD_ADDR_reg[2] ),
        .I5(DATA_OUT5_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_7__1 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \RD_OCCUPANCY[3]_i_8__1 
       (.I0(DATA_OUT3_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT0_out),
        .I4(\n_0_RD_ADDR_reg[1] ),
        .I5(\n_0_RD_OCCUPANCY[3]_i_10__1 ),
        .O(\n_0_RD_OCCUPANCY[3]_i_8__1 ));
LUT3 #(
    .INIT(8'h69)) 
     \RD_OCCUPANCY[3]_i_9__1 
       (.I0(DATA_OUT),
        .I1(\n_0_RD_OCCUPANCY[0]_i_2__1 ),
        .I2(\n_0_RD_ADDR_reg[0] ),
        .O(\n_0_RD_OCCUPANCY[3]_i_9__1 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[6]_i_2__1 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_2__1 ));
LUT3 #(
    .INIT(8'h96)) 
     \RD_OCCUPANCY[6]_i_3__1 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT3_out),
        .I2(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_3__1 ));
LUT2 #(
    .INIT(4'h9)) 
     \RD_OCCUPANCY[6]_i_4__1 
       (.I0(DATA_OUT5_out),
        .I1(\n_0_RD_ADDR_reg[6] ),
        .O(\n_0_RD_OCCUPANCY[6]_i_4__1 ));
LUT3 #(
    .INIT(8'h69)) 
     \RD_OCCUPANCY[6]_i_5__1 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(\n_0_RD_ADDR_reg[5] ),
        .O(\n_0_RD_OCCUPANCY[6]_i_5__1 ));
LUT4 #(
    .INIT(16'h9669)) 
     \RD_OCCUPANCY[6]_i_6__1 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT3_out),
        .I2(\n_0_RD_ADDR_reg[4] ),
        .I3(DATA_OUT5_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_6__1 ));
FDRE \RD_OCCUPANCY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[0]),
        .Q(RD_OCCUPANCY[0]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[1]),
        .Q(RD_OCCUPANCY[1]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[2]),
        .Q(RD_OCCUPANCY[2]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[3]),
        .Q(RD_OCCUPANCY[3]),
        .R(SS));
CARRY4 \RD_OCCUPANCY_reg[3]_i_1__1 
       (.CI(\<const0> ),
        .CO({\n_0_RD_OCCUPANCY_reg[3]_i_1__1 ,\n_1_RD_OCCUPANCY_reg[3]_i_1__1 ,\n_2_RD_OCCUPANCY_reg[3]_i_1__1 ,\n_3_RD_OCCUPANCY_reg[3]_i_1__1 }),
        .CYINIT(\<const1> ),
        .DI({\n_0_RD_OCCUPANCY[3]_i_2__1 ,\n_0_RD_OCCUPANCY[3]_i_3__1 ,\n_0_RD_OCCUPANCY[3]_i_4__1 ,\n_0_RD_OCCUPANCY[3]_i_5__1 }),
        .O({RD_OCCUPANCY01_out[3:1],\NLW_RD_OCCUPANCY_reg[3]_i_1__1_O_UNCONNECTED [0]}),
        .S({\n_0_RD_OCCUPANCY[3]_i_6__1 ,\n_0_RD_OCCUPANCY[3]_i_7__1 ,\n_0_RD_OCCUPANCY[3]_i_8__1 ,\n_0_RD_OCCUPANCY[3]_i_9__1 }));
FDRE \RD_OCCUPANCY_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[4]),
        .Q(RD_OCCUPANCY[4]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[5]),
        .Q(RD_OCCUPANCY[5]),
        .R(SS));
FDSE \RD_OCCUPANCY_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[6]),
        .Q(RD_OCCUPANCY[6]),
        .S(SS));
CARRY4 \RD_OCCUPANCY_reg[6]_i_1__1 
       (.CI(\n_0_RD_OCCUPANCY_reg[3]_i_1__1 ),
        .CO({\NLW_RD_OCCUPANCY_reg[6]_i_1__1_CO_UNCONNECTED [3:2],\n_2_RD_OCCUPANCY_reg[6]_i_1__1 ,\n_3_RD_OCCUPANCY_reg[6]_i_1__1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\n_0_RD_OCCUPANCY[6]_i_2__1 ,\n_0_RD_OCCUPANCY[6]_i_3__1 }),
        .O({\NLW_RD_OCCUPANCY_reg[6]_i_1__1_O_UNCONNECTED [3],RD_OCCUPANCY01_out[6:4]}),
        .S({\<const0> ,\n_0_RD_OCCUPANCY[6]_i_4__1 ,\n_0_RD_OCCUPANCY[6]_i_5__1 ,\n_0_RD_OCCUPANCY[6]_i_6__1 }));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__97 \RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[0]),
        .data_out(\n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__98 \RECLOCK_RD_ADDRGRAY[1].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[1]),
        .data_out(p_4_in30_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__99 \RECLOCK_RD_ADDRGRAY[2].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[2]),
        .data_out(p_3_in27_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__100 \RECLOCK_RD_ADDRGRAY[3].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[3]),
        .data_out(p_2_in24_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__101 \RECLOCK_RD_ADDRGRAY[4].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[4]),
        .data_out(p_1_in21_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__102 \RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[5]),
        .data_out(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__103 \RECLOCK_RD_ADDRGRAY[6].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[6]),
        .data_out(p_0_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__104 \RECLOCK_WR_ADDRGRAY[0].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[0] ),
        .data_out(DATA_OUT));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__105 \RECLOCK_WR_ADDRGRAY[1].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[1] ),
        .data_out(DATA_OUT0_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__106 \RECLOCK_WR_ADDRGRAY[2].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[2] ),
        .data_out(DATA_OUT1_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__107 \RECLOCK_WR_ADDRGRAY[3].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[3] ),
        .data_out(DATA_OUT2_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__108 \RECLOCK_WR_ADDRGRAY[4].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[4] ),
        .data_out(DATA_OUT3_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__109 \RECLOCK_WR_ADDRGRAY[5].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[5] ),
        .data_out(DATA_OUT4_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__110 \RECLOCK_WR_ADDRGRAY[6].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(DATA_IN),
        .data_out(DATA_OUT5_out));
(* SOFT_HLUTNM = "soft_lutpair604" *) 
   LUT5 #(
    .INIT(32'h080F0800)) 
     REMOVE_IDLE_i_1__1
       (.I0(n_0_WR_ENABLE_i_2__1),
        .I1(I1_DETECTED_WR),
        .I2(SR),
        .I3(WR_TOGGLE),
        .I4(n_0_REMOVE_IDLE_reg),
        .O(n_0_REMOVE_IDLE_i_1__1));
FDRE REMOVE_IDLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(n_0_REMOVE_IDLE_i_1__1),
        .Q(n_0_REMOVE_IDLE_reg),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hFFFF8002)) 
     RXBUFERR_i_1__1
       (.I0(n_0_RXBUFERR_i_2__1),
        .I1(RD_OCCUPANCY[2]),
        .I2(RD_OCCUPANCY[3]),
        .I3(RD_OCCUPANCY[4]),
        .I4(O1),
        .O(n_0_RXBUFERR_i_1__1));
LUT6 #(
    .INIT(64'hBD000000000000BD)) 
     RXBUFERR_i_2__1
       (.I0(RD_OCCUPANCY[2]),
        .I1(RD_OCCUPANCY[1]),
        .I2(RD_OCCUPANCY[0]),
        .I3(RD_OCCUPANCY[4]),
        .I4(RD_OCCUPANCY[5]),
        .I5(RD_OCCUPANCY[6]),
        .O(n_0_RXBUFERR_i_2__1));
FDRE RXBUFERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXBUFERR_i_1__1),
        .Q(O1),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair611" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXCHARISCOMMA_USR_i_1__1
       (.I0(\n_0_RD_DATA_REG_reg[28] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[12] ),
        .O(n_0_RXCHARISCOMMA_USR_i_1__1));
FDRE RXCHARISCOMMA_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXCHARISCOMMA_USR_i_1__1),
        .Q(RXCHARISCOMMA_USR),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair612" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXCHARISK_USR_i_1__1
       (.I0(\n_0_RD_DATA_REG_reg[27] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[11] ),
        .O(n_0_RXCHARISK_USR_i_1__1));
FDRE RXCHARISK_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXCHARISK_USR_i_1__1),
        .Q(RXCHARISK_USR),
        .R(SS));
LUT3 #(
    .INIT(8'hBA)) 
     \RXCLKCORCNT[0]_i_1__1 
       (.I0(insert_idle_reg),
        .I1(I2[0]),
        .I2(\n_0_RD_DATA_REG_reg[13] ),
        .O(\n_0_RXCLKCORCNT[0]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair600" *) 
   LUT5 #(
    .INIT(32'h000000A2)) 
     \RXCLKCORCNT[1]_i_1__1 
       (.I0(insert_idle_reg),
        .I1(\n_0_RD_DATA_REG_reg[13] ),
        .I2(I2[0]),
        .I3(I1),
        .I4(MGT_RX_RESET1_in),
        .O(\n_0_RXCLKCORCNT[1]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair600" *) 
   LUT5 #(
    .INIT(32'h000000A2)) 
     \RXCLKCORCNT[2]_i_1__1 
       (.I0(insert_idle_reg),
        .I1(\n_0_RD_DATA_REG_reg[13] ),
        .I2(I2[0]),
        .I3(I1),
        .I4(MGT_RX_RESET1_in),
        .O(\n_0_RXCLKCORCNT[2]_i_1__1 ));
FDRE \RXCLKCORCNT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[0]_i_1__1 ),
        .Q(I2[0]),
        .R(SS));
FDRE \RXCLKCORCNT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[1]_i_1__1 ),
        .Q(I2[1]),
        .R(\<const0> ));
FDRE \RXCLKCORCNT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[2]_i_1__1 ),
        .Q(I2[2]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair616" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[0]_i_1__1 
       (.I0(\n_0_RD_DATA_REG_reg[16] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[0] ),
        .O(\n_0_RXDATA_USR[0]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair616" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[1]_i_1__1 
       (.I0(\n_0_RD_DATA_REG_reg[17] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[1] ),
        .O(\n_0_RXDATA_USR[1]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair615" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[2]_i_1__1 
       (.I0(\n_0_RD_DATA_REG_reg[18] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[2] ),
        .O(\n_0_RXDATA_USR[2]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair615" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[3]_i_1__1 
       (.I0(\n_0_RD_DATA_REG_reg[19] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[3] ),
        .O(\n_0_RXDATA_USR[3]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair614" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[4]_i_1__1 
       (.I0(\n_0_RD_DATA_REG_reg[20] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[4] ),
        .O(\n_0_RXDATA_USR[4]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair614" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[5]_i_1__1 
       (.I0(\n_0_RD_DATA_REG_reg[21] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[5] ),
        .O(\n_0_RXDATA_USR[5]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair613" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[6]_i_1__1 
       (.I0(\n_0_RD_DATA_REG_reg[22] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[6] ),
        .O(\n_0_RXDATA_USR[6]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair613" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[7]_i_1__1 
       (.I0(\n_0_RD_DATA_REG_reg[23] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[7] ),
        .O(\n_0_RXDATA_USR[7]_i_1__1 ));
FDRE \RXDATA_USR_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[0]_i_1__1 ),
        .Q(RXDATA_USR[0]),
        .R(SS));
FDRE \RXDATA_USR_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[1]_i_1__1 ),
        .Q(RXDATA_USR[1]),
        .R(SS));
FDRE \RXDATA_USR_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[2]_i_1__1 ),
        .Q(RXDATA_USR[2]),
        .R(SS));
FDRE \RXDATA_USR_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[3]_i_1__1 ),
        .Q(RXDATA_USR[3]),
        .R(SS));
FDRE \RXDATA_USR_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[4]_i_1__1 ),
        .Q(RXDATA_USR[4]),
        .R(SS));
FDRE \RXDATA_USR_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[5]_i_1__1 ),
        .Q(RXDATA_USR[5]),
        .R(SS));
FDRE \RXDATA_USR_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[6]_i_1__1 ),
        .Q(RXDATA_USR[6]),
        .R(SS));
FDRE \RXDATA_USR_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[7]_i_1__1 ),
        .Q(RXDATA_USR[7]),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair612" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXDISPERR_USR_i_1__1
       (.I0(\n_0_RD_DATA_REG_reg[26] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[10] ),
        .O(n_0_RXDISPERR_USR_i_1__1));
FDRE RXDISPERR_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXDISPERR_USR_i_1__1),
        .Q(RXDISPERR_USR),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair611" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXNOTINTABLE_USR_i_1__1
       (.I0(\n_0_RD_DATA_REG_reg[25] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[9] ),
        .O(n_0_RXNOTINTABLE_USR_i_1__1));
FDRE RXNOTINTABLE_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXNOTINTABLE_USR_i_1__1),
        .Q(RXNOTINTABLE_USR),
        .R(SS));
VCC VCC
       (.P(\<const1> ));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[0]_i_1__1 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I1(p_1_in7_in),
        .O(p_0_in6_out[0]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[1]_i_1__1 
       (.I0(p_1_in7_in),
        .I1(p_2_in9_in),
        .O(p_0_in6_out[1]));
(* SOFT_HLUTNM = "soft_lutpair620" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[2]_i_1__1 
       (.I0(p_2_in9_in),
        .I1(p_3_in11_in),
        .O(p_0_in6_out[2]));
(* SOFT_HLUTNM = "soft_lutpair620" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[3]_i_1__1 
       (.I0(p_3_in11_in),
        .I1(p_4_in13_in),
        .O(p_0_in6_out[3]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[4]_i_1__1 
       (.I0(p_4_in13_in),
        .I1(p_5_in15_in),
        .O(p_0_in6_out[4]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[5]_i_1__1 
       (.I0(p_5_in15_in),
        .I1(p_0_in6_out[6]),
        .O(p_0_in6_out[5]));
FDSE \WR_ADDR_GRAY_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[0]),
        .Q(\n_0_WR_ADDR_GRAY_reg[0] ),
        .S(SR));
FDRE \WR_ADDR_GRAY_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[1]),
        .Q(\n_0_WR_ADDR_GRAY_reg[1] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[2]),
        .Q(\n_0_WR_ADDR_GRAY_reg[2] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[3]),
        .Q(\n_0_WR_ADDR_GRAY_reg[3] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[4]),
        .Q(\n_0_WR_ADDR_GRAY_reg[4] ),
        .R(SR));
FDSE \WR_ADDR_GRAY_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[5]),
        .Q(\n_0_WR_ADDR_GRAY_reg[5] ),
        .S(SR));
FDSE \WR_ADDR_GRAY_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[6]),
        .Q(DATA_IN),
        .S(SR));
FDSE \WR_ADDR_PLUS1_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .Q(WR_ADDR_PLUS1[0]),
        .S(SR));
FDRE \WR_ADDR_PLUS1_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_1_in7_in),
        .Q(WR_ADDR_PLUS1[1]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_2_in9_in),
        .Q(WR_ADDR_PLUS1[2]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_3_in11_in),
        .Q(WR_ADDR_PLUS1[3]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_4_in13_in),
        .Q(WR_ADDR_PLUS1[4]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_5_in15_in),
        .Q(WR_ADDR_PLUS1[5]),
        .R(SR));
FDSE \WR_ADDR_PLUS1_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_0_in6_out[6]),
        .Q(WR_ADDR_PLUS1[6]),
        .S(SR));
LUT1 #(
    .INIT(2'h1)) 
     \WR_ADDR_PLUS2[0]_i_1__1 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .O(plusOp__0[0]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_PLUS2[1]_i_1__1 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I1(p_1_in7_in),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair609" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \WR_ADDR_PLUS2[2]_i_1__1 
       (.I0(p_2_in9_in),
        .I1(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I2(p_1_in7_in),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair609" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \WR_ADDR_PLUS2[3]_i_1__1 
       (.I0(p_3_in11_in),
        .I1(p_1_in7_in),
        .I2(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I3(p_2_in9_in),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair601" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \WR_ADDR_PLUS2[4]_i_1__1 
       (.I0(p_2_in9_in),
        .I1(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I2(p_1_in7_in),
        .I3(p_3_in11_in),
        .I4(p_4_in13_in),
        .O(plusOp__0[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \WR_ADDR_PLUS2[5]_i_1__1 
       (.I0(p_5_in15_in),
        .I1(p_2_in9_in),
        .I2(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I3(p_1_in7_in),
        .I4(p_3_in11_in),
        .I5(p_4_in13_in),
        .O(plusOp__0[5]));
LUT3 #(
    .INIT(8'h6A)) 
     \WR_ADDR_PLUS2[6]_i_1__1 
       (.I0(p_0_in6_out[6]),
        .I1(\n_0_WR_ADDR_PLUS2[6]_i_2__1 ),
        .I2(p_5_in15_in),
        .O(plusOp__0[6]));
(* SOFT_HLUTNM = "soft_lutpair601" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \WR_ADDR_PLUS2[6]_i_2__1 
       (.I0(p_4_in13_in),
        .I1(p_3_in11_in),
        .I2(p_1_in7_in),
        .I3(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I4(p_2_in9_in),
        .O(\n_0_WR_ADDR_PLUS2[6]_i_2__1 ));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[0]),
        .Q(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .R(SR));
(* counter = "32" *) 
   FDSE \WR_ADDR_PLUS2_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[1]),
        .Q(p_1_in7_in),
        .S(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[2]),
        .Q(p_2_in9_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[3]),
        .Q(p_3_in11_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[4]),
        .Q(p_4_in13_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[5]),
        .Q(p_5_in15_in),
        .R(SR));
(* counter = "32" *) 
   FDSE \WR_ADDR_PLUS2_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[6]),
        .Q(p_0_in6_out[6]),
        .S(SR));
FDRE \WR_ADDR_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[0]),
        .Q(\n_0_WR_ADDR_reg[0] ),
        .R(SR));
FDRE \WR_ADDR_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[1]),
        .Q(\n_0_WR_ADDR_reg[1] ),
        .R(SR));
FDRE \WR_ADDR_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[2]),
        .Q(\n_0_WR_ADDR_reg[2] ),
        .R(SR));
FDRE \WR_ADDR_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[3]),
        .Q(\n_0_WR_ADDR_reg[3] ),
        .R(SR));
FDRE \WR_ADDR_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[4]),
        .Q(\n_0_WR_ADDR_reg[4] ),
        .R(SR));
FDRE \WR_ADDR_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[5]),
        .Q(\n_0_WR_ADDR_reg[5] ),
        .R(SR));
FDSE \WR_ADDR_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[6]),
        .Q(\n_0_WR_ADDR_reg[6] ),
        .S(SR));
FDRE \WR_DATA_REG1_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[0]),
        .Q(\n_0_WR_DATA_REG1_reg[0] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I4),
        .Q(WR_DATA_REG1[10]),
        .R(SR));
FDRE \WR_DATA_REG1_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I3),
        .Q(p_0_in9_in),
        .R(SR));
FDRE \WR_DATA_REG1_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(Q),
        .Q(WR_DATA_REG1[12]),
        .R(SR));
FDRE \WR_DATA_REG1_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[1]),
        .Q(\n_0_WR_DATA_REG1_reg[1] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[2]),
        .Q(\n_0_WR_DATA_REG1_reg[2] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[3]),
        .Q(\n_0_WR_DATA_REG1_reg[3] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[4]),
        .Q(\n_0_WR_DATA_REG1_reg[4] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[5]),
        .Q(\n_0_WR_DATA_REG1_reg[5] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[6]),
        .Q(\n_0_WR_DATA_REG1_reg[6] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6[7]),
        .Q(\n_0_WR_DATA_REG1_reg[7] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5),
        .Q(WR_DATA_REG1[9]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[0] ),
        .Q(WR_DATA_REG2[0]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[10]),
        .Q(WR_DATA_REG2[10]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in9_in),
        .Q(WR_DATA_REG2[11]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[12]),
        .Q(WR_DATA_REG2[12]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[1] ),
        .Q(WR_DATA_REG2[1]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[2] ),
        .Q(WR_DATA_REG2[2]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[3] ),
        .Q(WR_DATA_REG2[3]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[4] ),
        .Q(WR_DATA_REG2[4]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[5] ),
        .Q(WR_DATA_REG2[5]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[6] ),
        .Q(WR_DATA_REG2[6]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[7] ),
        .Q(WR_DATA_REG2[7]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[9]),
        .Q(WR_DATA_REG2[9]),
        .R(SR));
FDRE \WR_DATA_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[0] ),
        .Q(\n_0_WR_DATA_reg[0] ),
        .R(SR));
FDRE \WR_DATA_reg[10] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[10]),
        .Q(\n_0_WR_DATA_reg[10] ),
        .R(SR));
FDRE \WR_DATA_reg[11] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(p_0_in9_in),
        .Q(\n_0_WR_DATA_reg[11] ),
        .R(SR));
FDRE \WR_DATA_reg[12] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[12]),
        .Q(\n_0_WR_DATA_reg[12] ),
        .R(SR));
FDRE \WR_DATA_reg[13] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(n_0_REMOVE_IDLE_reg),
        .Q(\n_0_WR_DATA_reg[13] ),
        .R(SR));
FDRE \WR_DATA_reg[16] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[0]),
        .Q(\n_0_WR_DATA_reg[16] ),
        .R(SR));
FDRE \WR_DATA_reg[17] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[1]),
        .Q(\n_0_WR_DATA_reg[17] ),
        .R(SR));
FDRE \WR_DATA_reg[18] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[2]),
        .Q(\n_0_WR_DATA_reg[18] ),
        .R(SR));
FDRE \WR_DATA_reg[19] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[3]),
        .Q(\n_0_WR_DATA_reg[19] ),
        .R(SR));
FDRE \WR_DATA_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[1] ),
        .Q(\n_0_WR_DATA_reg[1] ),
        .R(SR));
FDRE \WR_DATA_reg[20] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[4]),
        .Q(\n_0_WR_DATA_reg[20] ),
        .R(SR));
FDRE \WR_DATA_reg[21] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[5]),
        .Q(\n_0_WR_DATA_reg[21] ),
        .R(SR));
FDRE \WR_DATA_reg[22] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[6]),
        .Q(\n_0_WR_DATA_reg[22] ),
        .R(SR));
FDRE \WR_DATA_reg[23] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[7]),
        .Q(\n_0_WR_DATA_reg[23] ),
        .R(SR));
FDRE \WR_DATA_reg[25] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[9]),
        .Q(\n_0_WR_DATA_reg[25] ),
        .R(SR));
FDRE \WR_DATA_reg[26] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[10]),
        .Q(\n_0_WR_DATA_reg[26] ),
        .R(SR));
FDRE \WR_DATA_reg[27] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[11]),
        .Q(\n_0_WR_DATA_reg[27] ),
        .R(SR));
FDRE \WR_DATA_reg[28] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[12]),
        .Q(\n_0_WR_DATA_reg[28] ),
        .R(SR));
FDRE \WR_DATA_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[2] ),
        .Q(\n_0_WR_DATA_reg[2] ),
        .R(SR));
FDRE \WR_DATA_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[3] ),
        .Q(\n_0_WR_DATA_reg[3] ),
        .R(SR));
FDRE \WR_DATA_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[4] ),
        .Q(\n_0_WR_DATA_reg[4] ),
        .R(SR));
FDRE \WR_DATA_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[5] ),
        .Q(\n_0_WR_DATA_reg[5] ),
        .R(SR));
FDRE \WR_DATA_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[6] ),
        .Q(\n_0_WR_DATA_reg[6] ),
        .R(SR));
FDRE \WR_DATA_reg[7] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[7] ),
        .Q(\n_0_WR_DATA_reg[7] ),
        .R(SR));
FDRE \WR_DATA_reg[9] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[9]),
        .Q(\n_0_WR_DATA_reg[9] ),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair604" *) 
   LUT4 #(
    .INIT(16'h0070)) 
     WR_ENABLE_i_1__1
       (.I0(n_0_WR_ENABLE_i_2__1),
        .I1(I1_DETECTED_WR),
        .I2(WR_TOGGLE),
        .I3(SR),
        .O(WR_ENABLE0));
(* SOFT_HLUTNM = "soft_lutpair605" *) 
   LUT5 #(
    .INIT(32'h00400000)) 
     WR_ENABLE_i_2__1
       (.I0(n_0_WR_ENABLE_i_3__1),
        .I1(WR_TOGGLE),
        .I2(WR_OCCUPANCY[6]),
        .I3(n_0_REMOVE_IDLE_reg),
        .I4(I1_DETECTED_WR_REG),
        .O(n_0_WR_ENABLE_i_2__1));
LUT5 #(
    .INIT(32'h00000001)) 
     WR_ENABLE_i_3__1
       (.I0(WR_OCCUPANCY[4]),
        .I1(WR_OCCUPANCY[1]),
        .I2(WR_OCCUPANCY[3]),
        .I3(WR_OCCUPANCY[5]),
        .I4(WR_OCCUPANCY[2]),
        .O(n_0_WR_ENABLE_i_3__1));
FDRE WR_ENABLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_ENABLE0),
        .Q(WR_ENABLE),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h69969669)) 
     \WR_OCCUPANCY[3]_i_2__1 
       (.I0(\n_0_WR_ADDR_reg[3] ),
        .I1(p_1_in21_in),
        .I2(p_2_in24_in),
        .I3(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I4(p_0_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_2__1 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \WR_OCCUPANCY[3]_i_3__1 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I1(p_0_in),
        .I2(p_1_in21_in),
        .I3(p_2_in24_in),
        .I4(\n_0_WR_ADDR_reg[2] ),
        .I5(p_3_in27_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_3__1 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \WR_OCCUPANCY[3]_i_4__1 
       (.I0(\n_0_WR_ADDR_reg[1] ),
        .I1(p_2_in24_in),
        .I2(p_1_in21_in),
        .I3(\n_0_WR_OCCUPANCY[3]_i_6__1 ),
        .I4(p_3_in27_in),
        .I5(p_4_in30_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_4__1 ));
LUT5 #(
    .INIT(32'h96696996)) 
     \WR_OCCUPANCY[3]_i_5__1 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ),
        .I1(p_4_in30_in),
        .I2(p_3_in27_in),
        .I3(\n_0_WR_OCCUPANCY[3]_i_7__1 ),
        .I4(\n_0_WR_ADDR_reg[0] ),
        .O(\n_0_WR_OCCUPANCY[3]_i_5__1 ));
(* SOFT_HLUTNM = "soft_lutpair610" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_OCCUPANCY[3]_i_6__1 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I1(p_0_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_6__1 ));
(* SOFT_HLUTNM = "soft_lutpair610" *) 
   LUT4 #(
    .INIT(16'h9669)) 
     \WR_OCCUPANCY[3]_i_7__1 
       (.I0(p_0_in),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(p_2_in24_in),
        .I3(p_1_in21_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_7__1 ));
LUT2 #(
    .INIT(4'h9)) 
     \WR_OCCUPANCY[6]_i_2__1 
       (.I0(\n_0_WR_ADDR_reg[6] ),
        .I1(p_0_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_2__1 ));
LUT3 #(
    .INIT(8'h69)) 
     \WR_OCCUPANCY[6]_i_3__1 
       (.I0(\n_0_WR_ADDR_reg[5] ),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(p_0_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_3__1 ));
LUT4 #(
    .INIT(16'h9669)) 
     \WR_OCCUPANCY[6]_i_4__1 
       (.I0(p_0_in),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(\n_0_WR_ADDR_reg[4] ),
        .I3(p_1_in21_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_4__1 ));
FDRE \WR_OCCUPANCY_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[1]),
        .Q(WR_OCCUPANCY[1]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[2]),
        .Q(WR_OCCUPANCY[2]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[3]),
        .Q(WR_OCCUPANCY[3]),
        .R(SR));
CARRY4 \WR_OCCUPANCY_reg[3]_i_1__1 
       (.CI(\<const0> ),
        .CO({\n_0_WR_OCCUPANCY_reg[3]_i_1__1 ,\n_1_WR_OCCUPANCY_reg[3]_i_1__1 ,\n_2_WR_OCCUPANCY_reg[3]_i_1__1 ,\n_3_WR_OCCUPANCY_reg[3]_i_1__1 }),
        .CYINIT(\<const1> ),
        .DI({\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .O({WR_OCCUPANCY00_out[3:1],\NLW_WR_OCCUPANCY_reg[3]_i_1__1_O_UNCONNECTED [0]}),
        .S({\n_0_WR_OCCUPANCY[3]_i_2__1 ,\n_0_WR_OCCUPANCY[3]_i_3__1 ,\n_0_WR_OCCUPANCY[3]_i_4__1 ,\n_0_WR_OCCUPANCY[3]_i_5__1 }));
FDRE \WR_OCCUPANCY_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[4]),
        .Q(WR_OCCUPANCY[4]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[5]),
        .Q(WR_OCCUPANCY[5]),
        .R(SR));
FDSE \WR_OCCUPANCY_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[6]),
        .Q(WR_OCCUPANCY[6]),
        .S(SR));
CARRY4 \WR_OCCUPANCY_reg[6]_i_1__1 
       (.CI(\n_0_WR_OCCUPANCY_reg[3]_i_1__1 ),
        .CO({\NLW_WR_OCCUPANCY_reg[6]_i_1__1_CO_UNCONNECTED [3:2],\n_2_WR_OCCUPANCY_reg[6]_i_1__1 ,\n_3_WR_OCCUPANCY_reg[6]_i_1__1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] }),
        .O({\NLW_WR_OCCUPANCY_reg[6]_i_1__1_O_UNCONNECTED [3],WR_OCCUPANCY00_out[6:4]}),
        .S({\<const0> ,\n_0_WR_OCCUPANCY[6]_i_2__1 ,\n_0_WR_OCCUPANCY[6]_i_3__1 ,\n_0_WR_OCCUPANCY[6]_i_4__1 }));
(* RETAIN_INVERTER *) 
   (* SOFT_HLUTNM = "soft_lutpair605" *) 
   LUT1 #(
    .INIT(2'h1)) 
     WR_TOGGLE_i_1__1
       (.I0(WR_TOGGLE),
        .O(n_0_WR_TOGGLE_i_1__1));
FDSE WR_TOGGLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(n_0_WR_TOGGLE_i_1__1),
        .Q(WR_TOGGLE),
        .S(SR));
FDRE insert_idle_reg_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(INSERT_IDLE),
        .Q(insert_idle_reg),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "QSGMII_RX_ELASTIC_BUFFER" *) 
module quadsgmiiQSGMII_RX_ELASTIC_BUFFER_20
   (RXCHARISCOMMA_USR,
    RXCHARISK_USR,
    RXDISPERR_USR,
    RXNOTINTABLE_USR,
    I2,
    RXDATA_USR,
    O1,
    rxuserclk2,
    userclk2,
    SS,
    I1,
    I3,
    SR,
    Q,
    I4,
    I5,
    I6,
    I7);
  output RXCHARISCOMMA_USR;
  output RXCHARISK_USR;
  output RXDISPERR_USR;
  output RXNOTINTABLE_USR;
  output [2:0]I2;
  output [7:0]RXDATA_USR;
  output O1;
  input rxuserclk2;
  input userclk2;
  input [0:0]SS;
  input I1;
  input I3;
  input [0:0]SR;
  input [0:0]Q;
  input [0:0]I4;
  input [0:0]I5;
  input [0:0]I6;
  input [7:0]I7;

  wire \<const0> ;
  wire \<const1> ;
  wire D5P6_WR_REG;
  wire DATA_IN;
  wire DATA_OUT;
  wire DATA_OUT0_out;
  wire DATA_OUT1_out;
  wire DATA_OUT2_out;
  wire DATA_OUT3_out;
  wire DATA_OUT4_out;
  wire DATA_OUT5_out;
  wire EVEN;
  wire \GEN_FIFO[28].RD_DATA_reg ;
  wire I1;
  wire I1_DETECTED_WR;
  wire I1_DETECTED_WR_REG;
  wire [2:0]I2;
  wire I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire [0:0]I6;
  wire [7:0]I7;
  wire INSERT_IDLE;
  wire K28P5_WR_REG;
  wire O1;
  wire [0:0]Q;
  wire [6:0]RD_ADDR_GRAY;
  wire [6:0]RD_ADDR_PLUS1;
  wire RD_ENABLE;
  wire RD_ENABLE0;
  wire [6:0]RD_OCCUPANCY;
  wire [6:0]RD_OCCUPANCY01_out;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire [7:0]RXDATA_USR;
  wire RXDISPERR_USR;
  wire RXNOTINTABLE_USR;
  wire [0:0]SR;
  wire [0:0]SS;
  wire [6:0]WR_ADDR_PLUS1;
  wire [12:9]WR_DATA_REG1;
  wire [12:0]WR_DATA_REG2;
  wire WR_ENABLE;
  wire WR_ENABLE0;
  wire [6:1]WR_OCCUPANCY;
  wire [6:1]WR_OCCUPANCY00_out;
  wire WR_TOGGLE;
  wire insert_idle_reg;
  wire n_0_D5P6_WR_REG_i_2__2;
  wire n_0_EVEN_i_1__2;
  wire \n_0_GEN_FIFO[0].RD_DATA_reg[0] ;
  wire \n_0_GEN_FIFO[10].RD_DATA_reg[10] ;
  wire \n_0_GEN_FIFO[11].RD_DATA_reg[11] ;
  wire \n_0_GEN_FIFO[12].RD_DATA_reg[12] ;
  wire \n_0_GEN_FIFO[13].RD_DATA_reg[13] ;
  wire \n_0_GEN_FIFO[1].RD_DATA_reg[1] ;
  wire \n_0_GEN_FIFO[25].RD_DATA_reg[25] ;
  wire \n_0_GEN_FIFO[26].RD_DATA_reg[26] ;
  wire \n_0_GEN_FIFO[27].RD_DATA_reg[27] ;
  wire \n_0_GEN_FIFO[2].RD_DATA_reg[2] ;
  wire \n_0_GEN_FIFO[3].RD_DATA_reg[3] ;
  wire \n_0_GEN_FIFO[4].RD_DATA_reg[4] ;
  wire \n_0_GEN_FIFO[5].RD_DATA_reg[5] ;
  wire \n_0_GEN_FIFO[6].RD_DATA_reg[6] ;
  wire \n_0_GEN_FIFO[7].RD_DATA_reg[7] ;
  wire \n_0_GEN_FIFO[9].RD_DATA_reg[9] ;
  wire n_0_I1_DETECTED_WR_REG_i_2__2;
  wire n_0_INSERT_IDLE_i_1__5;
  wire n_0_K28P5_WR_REG_i_2__2;
  wire \n_0_RD_ADDR_GRAY[1]_i_1__2 ;
  wire \n_0_RD_ADDR_GRAY[2]_i_1__2 ;
  wire \n_0_RD_ADDR_GRAY[3]_i_1__2 ;
  wire \n_0_RD_ADDR_GRAY[4]_i_1__2 ;
  wire \n_0_RD_ADDR_GRAY[5]_i_1__2 ;
  wire \n_0_RD_ADDR_PLUS2[6]_i_2__2 ;
  wire \n_0_RD_ADDR_PLUS2_reg[0] ;
  wire \n_0_RD_ADDR_PLUS2_reg[1] ;
  wire \n_0_RD_ADDR_PLUS2_reg[2] ;
  wire \n_0_RD_ADDR_PLUS2_reg[6] ;
  wire \n_0_RD_ADDR_reg[0] ;
  wire \n_0_RD_ADDR_reg[1] ;
  wire \n_0_RD_ADDR_reg[2] ;
  wire \n_0_RD_ADDR_reg[3] ;
  wire \n_0_RD_ADDR_reg[4] ;
  wire \n_0_RD_ADDR_reg[5] ;
  wire \n_0_RD_ADDR_reg[6] ;
  wire \n_0_RD_DATA_REG_reg[0] ;
  wire \n_0_RD_DATA_REG_reg[10] ;
  wire \n_0_RD_DATA_REG_reg[11] ;
  wire \n_0_RD_DATA_REG_reg[12] ;
  wire \n_0_RD_DATA_REG_reg[13] ;
  wire \n_0_RD_DATA_REG_reg[16] ;
  wire \n_0_RD_DATA_REG_reg[17] ;
  wire \n_0_RD_DATA_REG_reg[18] ;
  wire \n_0_RD_DATA_REG_reg[19] ;
  wire \n_0_RD_DATA_REG_reg[1] ;
  wire \n_0_RD_DATA_REG_reg[20] ;
  wire \n_0_RD_DATA_REG_reg[21] ;
  wire \n_0_RD_DATA_REG_reg[22] ;
  wire \n_0_RD_DATA_REG_reg[23] ;
  wire \n_0_RD_DATA_REG_reg[25] ;
  wire \n_0_RD_DATA_REG_reg[26] ;
  wire \n_0_RD_DATA_REG_reg[27] ;
  wire \n_0_RD_DATA_REG_reg[28] ;
  wire \n_0_RD_DATA_REG_reg[2] ;
  wire \n_0_RD_DATA_REG_reg[3] ;
  wire \n_0_RD_DATA_REG_reg[4] ;
  wire \n_0_RD_DATA_REG_reg[5] ;
  wire \n_0_RD_DATA_REG_reg[6] ;
  wire \n_0_RD_DATA_REG_reg[7] ;
  wire \n_0_RD_DATA_REG_reg[9] ;
  wire n_0_RD_ENABLE_i_10__2;
  wire n_0_RD_ENABLE_i_1__2;
  wire n_0_RD_ENABLE_i_3__2;
  wire n_0_RD_ENABLE_i_4__2;
  wire n_0_RD_ENABLE_i_5__2;
  wire n_0_RD_ENABLE_i_6__2;
  wire n_0_RD_ENABLE_i_7__2;
  wire n_0_RD_ENABLE_i_8__2;
  wire n_0_RD_ENABLE_i_9__2;
  wire \n_0_RD_OCCUPANCY[0]_i_2__2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_10__2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_2__2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_3__2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_4__2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_5__2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_6__2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_7__2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_8__2 ;
  wire \n_0_RD_OCCUPANCY[3]_i_9__2 ;
  wire \n_0_RD_OCCUPANCY[6]_i_2__2 ;
  wire \n_0_RD_OCCUPANCY[6]_i_3__2 ;
  wire \n_0_RD_OCCUPANCY[6]_i_4__2 ;
  wire \n_0_RD_OCCUPANCY[6]_i_5__2 ;
  wire \n_0_RD_OCCUPANCY[6]_i_6__2 ;
  wire \n_0_RD_OCCUPANCY_reg[3]_i_1__2 ;
  wire \n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ;
  wire \n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ;
  wire n_0_REMOVE_IDLE_i_1__2;
  wire n_0_REMOVE_IDLE_reg;
  wire n_0_RXBUFERR_i_1__2;
  wire n_0_RXBUFERR_i_2__2;
  wire n_0_RXCHARISCOMMA_USR_i_1__2;
  wire n_0_RXCHARISK_USR_i_1__2;
  wire \n_0_RXCLKCORCNT[0]_i_1__2 ;
  wire \n_0_RXCLKCORCNT[1]_i_1__2 ;
  wire \n_0_RXCLKCORCNT[2]_i_1__2 ;
  wire \n_0_RXDATA_USR[0]_i_1__2 ;
  wire \n_0_RXDATA_USR[1]_i_1__2 ;
  wire \n_0_RXDATA_USR[2]_i_1__2 ;
  wire \n_0_RXDATA_USR[3]_i_1__2 ;
  wire \n_0_RXDATA_USR[4]_i_1__2 ;
  wire \n_0_RXDATA_USR[5]_i_1__2 ;
  wire \n_0_RXDATA_USR[6]_i_1__2 ;
  wire \n_0_RXDATA_USR[7]_i_1__2 ;
  wire n_0_RXDISPERR_USR_i_1__2;
  wire n_0_RXNOTINTABLE_USR_i_1__2;
  wire \n_0_WR_ADDR_GRAY_reg[0] ;
  wire \n_0_WR_ADDR_GRAY_reg[1] ;
  wire \n_0_WR_ADDR_GRAY_reg[2] ;
  wire \n_0_WR_ADDR_GRAY_reg[3] ;
  wire \n_0_WR_ADDR_GRAY_reg[4] ;
  wire \n_0_WR_ADDR_GRAY_reg[5] ;
  wire \n_0_WR_ADDR_PLUS2[6]_i_2__2 ;
  wire \n_0_WR_ADDR_PLUS2_reg[0] ;
  wire \n_0_WR_ADDR_reg[0] ;
  wire \n_0_WR_ADDR_reg[1] ;
  wire \n_0_WR_ADDR_reg[2] ;
  wire \n_0_WR_ADDR_reg[3] ;
  wire \n_0_WR_ADDR_reg[4] ;
  wire \n_0_WR_ADDR_reg[5] ;
  wire \n_0_WR_ADDR_reg[6] ;
  wire \n_0_WR_DATA_REG1_reg[0] ;
  wire \n_0_WR_DATA_REG1_reg[1] ;
  wire \n_0_WR_DATA_REG1_reg[2] ;
  wire \n_0_WR_DATA_REG1_reg[3] ;
  wire \n_0_WR_DATA_REG1_reg[4] ;
  wire \n_0_WR_DATA_REG1_reg[5] ;
  wire \n_0_WR_DATA_REG1_reg[6] ;
  wire \n_0_WR_DATA_REG1_reg[7] ;
  wire \n_0_WR_DATA_reg[0] ;
  wire \n_0_WR_DATA_reg[10] ;
  wire \n_0_WR_DATA_reg[11] ;
  wire \n_0_WR_DATA_reg[12] ;
  wire \n_0_WR_DATA_reg[13] ;
  wire \n_0_WR_DATA_reg[16] ;
  wire \n_0_WR_DATA_reg[17] ;
  wire \n_0_WR_DATA_reg[18] ;
  wire \n_0_WR_DATA_reg[19] ;
  wire \n_0_WR_DATA_reg[1] ;
  wire \n_0_WR_DATA_reg[20] ;
  wire \n_0_WR_DATA_reg[21] ;
  wire \n_0_WR_DATA_reg[22] ;
  wire \n_0_WR_DATA_reg[23] ;
  wire \n_0_WR_DATA_reg[25] ;
  wire \n_0_WR_DATA_reg[26] ;
  wire \n_0_WR_DATA_reg[27] ;
  wire \n_0_WR_DATA_reg[28] ;
  wire \n_0_WR_DATA_reg[2] ;
  wire \n_0_WR_DATA_reg[3] ;
  wire \n_0_WR_DATA_reg[4] ;
  wire \n_0_WR_DATA_reg[5] ;
  wire \n_0_WR_DATA_reg[6] ;
  wire \n_0_WR_DATA_reg[7] ;
  wire \n_0_WR_DATA_reg[9] ;
  wire n_0_WR_ENABLE_i_2__2;
  wire n_0_WR_ENABLE_i_3__2;
  wire \n_0_WR_OCCUPANCY[3]_i_2__2 ;
  wire \n_0_WR_OCCUPANCY[3]_i_3__2 ;
  wire \n_0_WR_OCCUPANCY[3]_i_4__2 ;
  wire \n_0_WR_OCCUPANCY[3]_i_5__2 ;
  wire \n_0_WR_OCCUPANCY[3]_i_6__2 ;
  wire \n_0_WR_OCCUPANCY[3]_i_7__2 ;
  wire \n_0_WR_OCCUPANCY[6]_i_2__2 ;
  wire \n_0_WR_OCCUPANCY[6]_i_3__2 ;
  wire \n_0_WR_OCCUPANCY[6]_i_4__2 ;
  wire \n_0_WR_OCCUPANCY_reg[3]_i_1__2 ;
  wire n_0_WR_TOGGLE_i_1__2;
  wire \n_1_GEN_FIFO[0].DIST_RAM ;
  wire \n_1_GEN_FIFO[10].DIST_RAM ;
  wire \n_1_GEN_FIFO[11].DIST_RAM ;
  wire \n_1_GEN_FIFO[12].DIST_RAM ;
  wire \n_1_GEN_FIFO[13].DIST_RAM ;
  wire \n_1_GEN_FIFO[16].DIST_RAM ;
  wire \n_1_GEN_FIFO[17].DIST_RAM ;
  wire \n_1_GEN_FIFO[18].DIST_RAM ;
  wire \n_1_GEN_FIFO[19].DIST_RAM ;
  wire \n_1_GEN_FIFO[1].DIST_RAM ;
  wire \n_1_GEN_FIFO[20].DIST_RAM ;
  wire \n_1_GEN_FIFO[21].DIST_RAM ;
  wire \n_1_GEN_FIFO[22].DIST_RAM ;
  wire \n_1_GEN_FIFO[23].DIST_RAM ;
  wire \n_1_GEN_FIFO[25].DIST_RAM ;
  wire \n_1_GEN_FIFO[26].DIST_RAM ;
  wire \n_1_GEN_FIFO[27].DIST_RAM ;
  wire \n_1_GEN_FIFO[28].DIST_RAM ;
  wire \n_1_GEN_FIFO[2].DIST_RAM ;
  wire \n_1_GEN_FIFO[3].DIST_RAM ;
  wire \n_1_GEN_FIFO[4].DIST_RAM ;
  wire \n_1_GEN_FIFO[5].DIST_RAM ;
  wire \n_1_GEN_FIFO[6].DIST_RAM ;
  wire \n_1_GEN_FIFO[7].DIST_RAM ;
  wire \n_1_GEN_FIFO[9].DIST_RAM ;
  wire \n_1_RD_OCCUPANCY_reg[3]_i_1__2 ;
  wire \n_1_WR_OCCUPANCY_reg[3]_i_1__2 ;
  wire \n_2_RD_OCCUPANCY_reg[3]_i_1__2 ;
  wire \n_2_RD_OCCUPANCY_reg[6]_i_1__2 ;
  wire \n_2_WR_OCCUPANCY_reg[3]_i_1__2 ;
  wire \n_2_WR_OCCUPANCY_reg[6]_i_1__2 ;
  wire \n_3_RD_OCCUPANCY_reg[3]_i_1__2 ;
  wire \n_3_RD_OCCUPANCY_reg[6]_i_1__2 ;
  wire \n_3_WR_OCCUPANCY_reg[3]_i_1__2 ;
  wire \n_3_WR_OCCUPANCY_reg[6]_i_1__2 ;
  wire p_0_in;
  wire [6:0]p_0_in6_out;
  wire p_0_in9_in;
  wire p_11_in;
  wire p_12_in;
  wire p_1_in21_in;
  wire p_1_in7_in;
  wire [7:0]p_2_in;
  wire p_2_in24_in;
  wire p_2_in9_in;
  wire p_3_in;
  wire p_3_in11_in;
  wire p_3_in27_in;
  wire p_4_in;
  wire p_4_in13_in;
  wire p_4_in30_in;
  wire p_5_in;
  wire p_5_in15_in;
  wire [6:0]plusOp;
  wire [6:0]plusOp__0;
  wire rxuserclk2;
  wire userclk2;
  wire \NLW_GEN_FIFO[0].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[10].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[11].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[12].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[13].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[16].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[17].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[18].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[19].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[1].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[20].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[21].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[22].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[23].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[25].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[26].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[27].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[28].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[2].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[3].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[4].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[5].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[6].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[7].DIST_RAM_SPO_UNCONNECTED ;
  wire \NLW_GEN_FIFO[9].DIST_RAM_SPO_UNCONNECTED ;
  wire [0:0]\NLW_RD_OCCUPANCY_reg[3]_i_1__2_O_UNCONNECTED ;
  wire [3:2]\NLW_RD_OCCUPANCY_reg[6]_i_1__2_CO_UNCONNECTED ;
  wire [3:3]\NLW_RD_OCCUPANCY_reg[6]_i_1__2_O_UNCONNECTED ;
  wire [0:0]\NLW_WR_OCCUPANCY_reg[3]_i_1__2_O_UNCONNECTED ;
  wire [3:2]\NLW_WR_OCCUPANCY_reg[6]_i_1__2_CO_UNCONNECTED ;
  wire [3:3]\NLW_WR_OCCUPANCY_reg[6]_i_1__2_O_UNCONNECTED ;

LUT5 #(
    .INIT(32'h08000020)) 
     D5P6_WR_REG_i_1__2
       (.I0(n_0_D5P6_WR_REG_i_2__2),
        .I1(\n_0_WR_DATA_REG1_reg[7] ),
        .I2(\n_0_WR_DATA_REG1_reg[4] ),
        .I3(\n_0_WR_DATA_REG1_reg[2] ),
        .I4(\n_0_WR_DATA_REG1_reg[0] ),
        .O(p_11_in));
LUT5 #(
    .INIT(32'h00000002)) 
     D5P6_WR_REG_i_2__2
       (.I0(\n_0_WR_DATA_REG1_reg[6] ),
        .I1(\n_0_WR_DATA_REG1_reg[3] ),
        .I2(\n_0_WR_DATA_REG1_reg[1] ),
        .I3(\n_0_WR_DATA_REG1_reg[5] ),
        .I4(p_0_in9_in),
        .O(n_0_D5P6_WR_REG_i_2__2));
FDRE D5P6_WR_REG_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_11_in),
        .Q(D5P6_WR_REG),
        .R(SR));
LUT1 #(
    .INIT(2'h1)) 
     EVEN_i_1__2
       (.I0(EVEN),
        .O(n_0_EVEN_i_1__2));
FDSE EVEN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EVEN_i_1__2),
        .Q(EVEN),
        .S(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[0].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[0] ),
        .DPO(\n_1_GEN_FIFO[0].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[0].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[0].RD_DATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[0].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[10].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[10] ),
        .DPO(\n_1_GEN_FIFO[10].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[10].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[10].RD_DATA_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[10].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[10].RD_DATA_reg[10] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[11].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[11] ),
        .DPO(\n_1_GEN_FIFO[11].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[11].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[11].RD_DATA_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[11].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[12].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[12] ),
        .DPO(\n_1_GEN_FIFO[12].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[12].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[12].RD_DATA_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[12].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[12].RD_DATA_reg[12] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[13].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[13] ),
        .DPO(\n_1_GEN_FIFO[13].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[13].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[13].RD_DATA_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[13].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[13].RD_DATA_reg[13] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[16].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[16] ),
        .DPO(\n_1_GEN_FIFO[16].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[16].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[16].RD_DATA_reg[16] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[16].DIST_RAM ),
        .Q(p_2_in[0]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[17].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[17] ),
        .DPO(\n_1_GEN_FIFO[17].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[17].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[17].RD_DATA_reg[17] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[17].DIST_RAM ),
        .Q(p_2_in[1]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[18].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[18] ),
        .DPO(\n_1_GEN_FIFO[18].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[18].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[18].RD_DATA_reg[18] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[18].DIST_RAM ),
        .Q(p_2_in[2]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[19].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[19] ),
        .DPO(\n_1_GEN_FIFO[19].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[19].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[19].RD_DATA_reg[19] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[19].DIST_RAM ),
        .Q(p_2_in[3]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[1].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[1] ),
        .DPO(\n_1_GEN_FIFO[1].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[1].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[1].RD_DATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[1].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[20].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[20] ),
        .DPO(\n_1_GEN_FIFO[20].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[20].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[20].RD_DATA_reg[20] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[20].DIST_RAM ),
        .Q(p_2_in[4]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[21].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[21] ),
        .DPO(\n_1_GEN_FIFO[21].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[21].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[21].RD_DATA_reg[21] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[21].DIST_RAM ),
        .Q(p_2_in[5]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[22].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[22] ),
        .DPO(\n_1_GEN_FIFO[22].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[22].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[22].RD_DATA_reg[22] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[22].DIST_RAM ),
        .Q(p_2_in[6]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[23].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[23] ),
        .DPO(\n_1_GEN_FIFO[23].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[23].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[23].RD_DATA_reg[23] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[23].DIST_RAM ),
        .Q(p_2_in[7]),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[25].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[25] ),
        .DPO(\n_1_GEN_FIFO[25].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[25].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[25].RD_DATA_reg[25] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[25].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[25].RD_DATA_reg[25] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[26].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[26] ),
        .DPO(\n_1_GEN_FIFO[26].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[26].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[26].RD_DATA_reg[26] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[26].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[26].RD_DATA_reg[26] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[27].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[27] ),
        .DPO(\n_1_GEN_FIFO[27].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[27].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[27].RD_DATA_reg[27] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[27].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[28].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[28] ),
        .DPO(\n_1_GEN_FIFO[28].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[28].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[28].RD_DATA_reg[28] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[28].DIST_RAM ),
        .Q(\GEN_FIFO[28].RD_DATA_reg ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[2].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[2] ),
        .DPO(\n_1_GEN_FIFO[2].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[2].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[2].RD_DATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[2].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[3].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[3] ),
        .DPO(\n_1_GEN_FIFO[3].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[3].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[3].RD_DATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[3].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[4].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[4] ),
        .DPO(\n_1_GEN_FIFO[4].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[4].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[4].RD_DATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[4].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[5].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[5] ),
        .DPO(\n_1_GEN_FIFO[5].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[5].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[5].RD_DATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[5].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[6].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[6] ),
        .DPO(\n_1_GEN_FIFO[6].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[6].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[6].RD_DATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[6].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[7].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[7] ),
        .DPO(\n_1_GEN_FIFO[7].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[7].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[7].RD_DATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[7].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .R(SS));
(* BOX_TYPE = "PRIMITIVE" *) 
   RAM128X1D #(
    .INIT(128'h00000000000000000000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
     \GEN_FIFO[9].DIST_RAM 
       (.A({\n_0_WR_ADDR_reg[6] ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] ,\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .D(\n_0_WR_DATA_reg[9] ),
        .DPO(\n_1_GEN_FIFO[9].DIST_RAM ),
        .DPRA({\n_0_RD_ADDR_reg[6] ,\n_0_RD_ADDR_reg[5] ,\n_0_RD_ADDR_reg[4] ,\n_0_RD_ADDR_reg[3] ,\n_0_RD_ADDR_reg[2] ,\n_0_RD_ADDR_reg[1] ,\n_0_RD_ADDR_reg[0] }),
        .SPO(\NLW_GEN_FIFO[9].DIST_RAM_SPO_UNCONNECTED ),
        .WCLK(rxuserclk2),
        .WE(WR_ENABLE));
FDRE \GEN_FIFO[9].RD_DATA_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_1_GEN_FIFO[9].DIST_RAM ),
        .Q(\n_0_GEN_FIFO[9].RD_DATA_reg[9] ),
        .R(SS));
GND GND
       (.G(\<const0> ));
LUT4 #(
    .INIT(16'hF444)) 
     I1_DETECTED_WR_REG_i_1__2
       (.I0(n_0_I1_DETECTED_WR_REG_i_2__2),
        .I1(D5P6_WR_REG),
        .I2(p_11_in),
        .I3(K28P5_WR_REG),
        .O(I1_DETECTED_WR));
(* SOFT_HLUTNM = "soft_lutpair628" *) 
   LUT4 #(
    .INIT(16'hFFFB)) 
     I1_DETECTED_WR_REG_i_2__2
       (.I0(\n_0_WR_DATA_REG1_reg[6] ),
        .I1(\n_0_WR_DATA_REG1_reg[5] ),
        .I2(\n_0_WR_DATA_REG1_reg[1] ),
        .I3(n_0_K28P5_WR_REG_i_2__2),
        .O(n_0_I1_DETECTED_WR_REG_i_2__2));
FDRE I1_DETECTED_WR_REG_reg
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(I1_DETECTED_WR),
        .Q(I1_DETECTED_WR_REG),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair627" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     INSERT_IDLE_i_1__5
       (.I0(EVEN),
        .I1(RD_ENABLE0),
        .I2(I1),
        .I3(I3),
        .O(n_0_INSERT_IDLE_i_1__5));
FDRE INSERT_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_INSERT_IDLE_i_1__5),
        .Q(INSERT_IDLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair628" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     K28P5_WR_REG_i_1__2
       (.I0(n_0_K28P5_WR_REG_i_2__2),
        .I1(\n_0_WR_DATA_REG1_reg[1] ),
        .I2(\n_0_WR_DATA_REG1_reg[5] ),
        .I3(\n_0_WR_DATA_REG1_reg[6] ),
        .O(p_12_in));
LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
     K28P5_WR_REG_i_2__2
       (.I0(p_0_in9_in),
        .I1(\n_0_WR_DATA_REG1_reg[7] ),
        .I2(\n_0_WR_DATA_REG1_reg[0] ),
        .I3(\n_0_WR_DATA_REG1_reg[4] ),
        .I4(\n_0_WR_DATA_REG1_reg[3] ),
        .I5(\n_0_WR_DATA_REG1_reg[2] ),
        .O(n_0_K28P5_WR_REG_i_2__2));
FDRE K28P5_WR_REG_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_12_in),
        .Q(K28P5_WR_REG),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair639" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[0]_i_1__2 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .O(plusOp[1]));
(* SOFT_HLUTNM = "soft_lutpair639" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[1]_i_1__2 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .O(\n_0_RD_ADDR_GRAY[1]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair638" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[2]_i_1__2 
       (.I0(p_3_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .O(\n_0_RD_ADDR_GRAY[2]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair638" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[3]_i_1__2 
       (.I0(p_4_in),
        .I1(p_3_in),
        .O(\n_0_RD_ADDR_GRAY[3]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair640" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[4]_i_1__2 
       (.I0(p_5_in),
        .I1(p_4_in),
        .O(\n_0_RD_ADDR_GRAY[4]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair640" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \RD_ADDR_GRAY[5]_i_1__2 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .I1(p_5_in),
        .O(\n_0_RD_ADDR_GRAY[5]_i_1__2 ));
FDRE \RD_ADDR_GRAY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp[1]),
        .Q(RD_ADDR_GRAY[0]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[1]_i_1__2 ),
        .Q(RD_ADDR_GRAY[1]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[2]_i_1__2 ),
        .Q(RD_ADDR_GRAY[2]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[3]_i_1__2 ),
        .Q(RD_ADDR_GRAY[3]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[4]_i_1__2 ),
        .Q(RD_ADDR_GRAY[4]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_GRAY[5]_i_1__2 ),
        .Q(RD_ADDR_GRAY[5]),
        .R(SS));
FDRE \RD_ADDR_GRAY_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .Q(RD_ADDR_GRAY[6]),
        .R(SS));
FDSE \RD_ADDR_PLUS1_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .Q(RD_ADDR_PLUS1[0]),
        .S(SS));
FDRE \RD_ADDR_PLUS1_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .Q(RD_ADDR_PLUS1[1]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .Q(RD_ADDR_PLUS1[2]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_3_in),
        .Q(RD_ADDR_PLUS1[3]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_4_in),
        .Q(RD_ADDR_PLUS1[4]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_5_in),
        .Q(RD_ADDR_PLUS1[5]),
        .R(SS));
FDRE \RD_ADDR_PLUS1_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .Q(RD_ADDR_PLUS1[6]),
        .R(SS));
LUT1 #(
    .INIT(2'h1)) 
     \RD_ADDR_PLUS2[0]_i_1__2 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .O(plusOp[0]));
(* SOFT_HLUTNM = "soft_lutpair629" *) 
   LUT3 #(
    .INIT(8'h78)) 
     \RD_ADDR_PLUS2[2]_i_1__2 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .O(plusOp[2]));
(* SOFT_HLUTNM = "soft_lutpair629" *) 
   LUT4 #(
    .INIT(16'h7F80)) 
     \RD_ADDR_PLUS2[3]_i_1__2 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I3(p_3_in),
        .O(plusOp[3]));
(* SOFT_HLUTNM = "soft_lutpair623" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \RD_ADDR_PLUS2[4]_i_1__2 
       (.I0(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I1(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I3(p_3_in),
        .I4(p_4_in),
        .O(plusOp[4]));
LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
     \RD_ADDR_PLUS2[5]_i_1__2 
       (.I0(p_3_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I3(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I4(p_4_in),
        .I5(p_5_in),
        .O(plusOp[5]));
LUT3 #(
    .INIT(8'h78)) 
     \RD_ADDR_PLUS2[6]_i_1__2 
       (.I0(\n_0_RD_ADDR_PLUS2[6]_i_2__2 ),
        .I1(p_5_in),
        .I2(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .O(plusOp[6]));
(* SOFT_HLUTNM = "soft_lutpair623" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \RD_ADDR_PLUS2[6]_i_2__2 
       (.I0(p_4_in),
        .I1(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .I2(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .I3(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .I4(p_3_in),
        .O(\n_0_RD_ADDR_PLUS2[6]_i_2__2 ));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[0]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[0] ),
        .R(SS));
(* counter = "31" *) 
   FDSE \RD_ADDR_PLUS2_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[1]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[1] ),
        .S(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[2]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[2] ),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[3]),
        .Q(p_3_in),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[4]),
        .Q(p_4_in),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[5]),
        .Q(p_5_in),
        .R(SS));
(* counter = "31" *) 
   FDRE \RD_ADDR_PLUS2_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(plusOp[6]),
        .Q(\n_0_RD_ADDR_PLUS2_reg[6] ),
        .R(SS));
FDRE \RD_ADDR_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[0]),
        .Q(\n_0_RD_ADDR_reg[0] ),
        .R(SS));
FDRE \RD_ADDR_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[1]),
        .Q(\n_0_RD_ADDR_reg[1] ),
        .R(SS));
FDRE \RD_ADDR_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[2]),
        .Q(\n_0_RD_ADDR_reg[2] ),
        .R(SS));
FDRE \RD_ADDR_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[3]),
        .Q(\n_0_RD_ADDR_reg[3] ),
        .R(SS));
FDRE \RD_ADDR_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[4]),
        .Q(\n_0_RD_ADDR_reg[4] ),
        .R(SS));
FDRE \RD_ADDR_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[5]),
        .Q(\n_0_RD_ADDR_reg[5] ),
        .R(SS));
FDRE \RD_ADDR_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(RD_ADDR_PLUS1[6]),
        .Q(\n_0_RD_ADDR_reg[6] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[0] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .Q(\n_0_RD_DATA_REG_reg[0] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[10] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[10].RD_DATA_reg[10] ),
        .Q(\n_0_RD_DATA_REG_reg[10] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[11] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .Q(\n_0_RD_DATA_REG_reg[11] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[12] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[12].RD_DATA_reg[12] ),
        .Q(\n_0_RD_DATA_REG_reg[12] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[13] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[13].RD_DATA_reg[13] ),
        .Q(\n_0_RD_DATA_REG_reg[13] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[16] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[0]),
        .Q(\n_0_RD_DATA_REG_reg[16] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[17] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[1]),
        .Q(\n_0_RD_DATA_REG_reg[17] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[18] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[2]),
        .Q(\n_0_RD_DATA_REG_reg[18] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[19] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[3]),
        .Q(\n_0_RD_DATA_REG_reg[19] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[1] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .Q(\n_0_RD_DATA_REG_reg[1] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[20] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[4]),
        .Q(\n_0_RD_DATA_REG_reg[20] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[21] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[5]),
        .Q(\n_0_RD_DATA_REG_reg[21] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[22] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[6]),
        .Q(\n_0_RD_DATA_REG_reg[22] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[23] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(p_2_in[7]),
        .Q(\n_0_RD_DATA_REG_reg[23] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[25] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[25].RD_DATA_reg[25] ),
        .Q(\n_0_RD_DATA_REG_reg[25] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[26] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[26].RD_DATA_reg[26] ),
        .Q(\n_0_RD_DATA_REG_reg[26] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[27] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .Q(\n_0_RD_DATA_REG_reg[27] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[28] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\GEN_FIFO[28].RD_DATA_reg ),
        .Q(\n_0_RD_DATA_REG_reg[28] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[2] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .Q(\n_0_RD_DATA_REG_reg[2] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[3] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .Q(\n_0_RD_DATA_REG_reg[3] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[4] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .Q(\n_0_RD_DATA_REG_reg[4] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[5] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .Q(\n_0_RD_DATA_REG_reg[5] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[6] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .Q(\n_0_RD_DATA_REG_reg[6] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[7] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .Q(\n_0_RD_DATA_REG_reg[7] ),
        .R(SS));
FDRE \RD_DATA_REG_reg[9] 
       (.C(userclk2),
        .CE(RD_ENABLE),
        .D(\n_0_GEN_FIFO[9].RD_DATA_reg[9] ),
        .Q(\n_0_RD_DATA_REG_reg[9] ),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair624" *) 
   LUT2 #(
    .INIT(4'hB)) 
     RD_ENABLE_i_10__2
       (.I0(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .I1(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .O(n_0_RD_ENABLE_i_10__2));
(* SOFT_HLUTNM = "soft_lutpair627" *) 
   LUT4 #(
    .INIT(16'h0002)) 
     RD_ENABLE_i_1__2
       (.I0(EVEN),
        .I1(RD_ENABLE0),
        .I2(I1),
        .I3(I3),
        .O(n_0_RD_ENABLE_i_1__2));
LUT6 #(
    .INIT(64'h2202000000000000)) 
     RD_ENABLE_i_2__2
       (.I0(n_0_RD_ENABLE_i_3__2),
        .I1(n_0_RD_ENABLE_i_4__2),
        .I2(n_0_RD_ENABLE_i_5__2),
        .I3(p_2_in[6]),
        .I4(n_0_RD_ENABLE_i_6__2),
        .I5(n_0_RD_ENABLE_i_7__2),
        .O(RD_ENABLE0));
LUT6 #(
    .INIT(64'h0000004208400042)) 
     RD_ENABLE_i_3__2
       (.I0(p_2_in[4]),
        .I1(p_2_in[2]),
        .I2(p_2_in[0]),
        .I3(p_2_in[3]),
        .I4(p_2_in[5]),
        .I5(p_2_in[6]),
        .O(n_0_RD_ENABLE_i_3__2));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     RD_ENABLE_i_4__2
       (.I0(RD_OCCUPANCY[4]),
        .I1(RD_OCCUPANCY[5]),
        .I2(RD_OCCUPANCY[2]),
        .I3(RD_OCCUPANCY[1]),
        .I4(RD_OCCUPANCY[0]),
        .I5(RD_OCCUPANCY[3]),
        .O(n_0_RD_ENABLE_i_4__2));
LUT2 #(
    .INIT(4'h7)) 
     RD_ENABLE_i_5__2
       (.I0(p_2_in[5]),
        .I1(p_2_in[4]),
        .O(n_0_RD_ENABLE_i_5__2));
LUT5 #(
    .INIT(32'h20080800)) 
     RD_ENABLE_i_6__2
       (.I0(n_0_RD_ENABLE_i_8__2),
        .I1(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .I2(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .I3(\n_0_GEN_FIFO[7].RD_DATA_reg[7] ),
        .I4(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .O(n_0_RD_ENABLE_i_6__2));
LUT6 #(
    .INIT(64'h00000060C0000000)) 
     RD_ENABLE_i_7__2
       (.I0(p_2_in[4]),
        .I1(p_2_in[7]),
        .I2(n_0_RD_ENABLE_i_9__2),
        .I3(n_0_RD_ENABLE_i_10__2),
        .I4(\n_0_GEN_FIFO[27].RD_DATA_reg[27] ),
        .I5(p_2_in[6]),
        .O(n_0_RD_ENABLE_i_7__2));
(* SOFT_HLUTNM = "soft_lutpair624" *) 
   LUT5 #(
    .INIT(32'h05008002)) 
     RD_ENABLE_i_8__2
       (.I0(\n_0_GEN_FIFO[4].RD_DATA_reg[4] ),
        .I1(\n_0_GEN_FIFO[5].RD_DATA_reg[5] ),
        .I2(\n_0_GEN_FIFO[3].RD_DATA_reg[3] ),
        .I3(\n_0_GEN_FIFO[2].RD_DATA_reg[2] ),
        .I4(\n_0_GEN_FIFO[0].RD_DATA_reg[0] ),
        .O(n_0_RD_ENABLE_i_8__2));
LUT5 #(
    .INIT(32'h00010100)) 
     RD_ENABLE_i_9__2
       (.I0(p_2_in[1]),
        .I1(\n_0_GEN_FIFO[1].RD_DATA_reg[1] ),
        .I2(RD_OCCUPANCY[6]),
        .I3(\n_0_GEN_FIFO[11].RD_DATA_reg[11] ),
        .I4(\n_0_GEN_FIFO[6].RD_DATA_reg[6] ),
        .O(n_0_RD_ENABLE_i_9__2));
FDRE RD_ENABLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RD_ENABLE_i_1__2),
        .Q(RD_ENABLE),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'h96)) 
     \RD_OCCUPANCY[0]_i_1__2 
       (.I0(\n_0_RD_ADDR_reg[0] ),
        .I1(\n_0_RD_OCCUPANCY[0]_i_2__2 ),
        .I2(DATA_OUT),
        .O(RD_OCCUPANCY01_out[0]));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \RD_OCCUPANCY[0]_i_2__2 
       (.I0(DATA_OUT1_out),
        .I1(DATA_OUT0_out),
        .I2(DATA_OUT3_out),
        .I3(DATA_OUT2_out),
        .I4(DATA_OUT5_out),
        .I5(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[0]_i_2__2 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[3]_i_10__2 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_10__2 ));
LUT4 #(
    .INIT(16'h6996)) 
     \RD_OCCUPANCY[3]_i_2__2 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(DATA_OUT2_out),
        .I3(DATA_OUT3_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_2__2 ));
LUT5 #(
    .INIT(32'h96696996)) 
     \RD_OCCUPANCY[3]_i_3__2 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT4_out),
        .I4(DATA_OUT3_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_3__2 ));
LUT6 #(
    .INIT(64'h6996966996696996)) 
     \RD_OCCUPANCY[3]_i_4__2 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT0_out),
        .I4(DATA_OUT3_out),
        .I5(DATA_OUT2_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_4__2 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[3]_i_5__2 
       (.I0(\n_0_RD_OCCUPANCY[0]_i_2__2 ),
        .I1(DATA_OUT),
        .O(\n_0_RD_OCCUPANCY[3]_i_5__2 ));
LUT5 #(
    .INIT(32'h69969669)) 
     \RD_OCCUPANCY[3]_i_6__2 
       (.I0(DATA_OUT3_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT5_out),
        .I3(DATA_OUT4_out),
        .I4(\n_0_RD_ADDR_reg[3] ),
        .O(\n_0_RD_OCCUPANCY[3]_i_6__2 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \RD_OCCUPANCY[3]_i_7__2 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT3_out),
        .I2(DATA_OUT2_out),
        .I3(DATA_OUT1_out),
        .I4(\n_0_RD_ADDR_reg[2] ),
        .I5(DATA_OUT5_out),
        .O(\n_0_RD_OCCUPANCY[3]_i_7__2 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \RD_OCCUPANCY[3]_i_8__2 
       (.I0(DATA_OUT3_out),
        .I1(DATA_OUT2_out),
        .I2(DATA_OUT1_out),
        .I3(DATA_OUT0_out),
        .I4(\n_0_RD_ADDR_reg[1] ),
        .I5(\n_0_RD_OCCUPANCY[3]_i_10__2 ),
        .O(\n_0_RD_OCCUPANCY[3]_i_8__2 ));
LUT3 #(
    .INIT(8'h69)) 
     \RD_OCCUPANCY[3]_i_9__2 
       (.I0(DATA_OUT),
        .I1(\n_0_RD_OCCUPANCY[0]_i_2__2 ),
        .I2(\n_0_RD_ADDR_reg[0] ),
        .O(\n_0_RD_OCCUPANCY[3]_i_9__2 ));
LUT2 #(
    .INIT(4'h6)) 
     \RD_OCCUPANCY[6]_i_2__2 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_2__2 ));
LUT3 #(
    .INIT(8'h96)) 
     \RD_OCCUPANCY[6]_i_3__2 
       (.I0(DATA_OUT5_out),
        .I1(DATA_OUT3_out),
        .I2(DATA_OUT4_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_3__2 ));
LUT2 #(
    .INIT(4'h9)) 
     \RD_OCCUPANCY[6]_i_4__2 
       (.I0(DATA_OUT5_out),
        .I1(\n_0_RD_ADDR_reg[6] ),
        .O(\n_0_RD_OCCUPANCY[6]_i_4__2 ));
LUT3 #(
    .INIT(8'h69)) 
     \RD_OCCUPANCY[6]_i_5__2 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT5_out),
        .I2(\n_0_RD_ADDR_reg[5] ),
        .O(\n_0_RD_OCCUPANCY[6]_i_5__2 ));
LUT4 #(
    .INIT(16'h9669)) 
     \RD_OCCUPANCY[6]_i_6__2 
       (.I0(DATA_OUT4_out),
        .I1(DATA_OUT3_out),
        .I2(\n_0_RD_ADDR_reg[4] ),
        .I3(DATA_OUT5_out),
        .O(\n_0_RD_OCCUPANCY[6]_i_6__2 ));
FDRE \RD_OCCUPANCY_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[0]),
        .Q(RD_OCCUPANCY[0]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[1]),
        .Q(RD_OCCUPANCY[1]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[2]),
        .Q(RD_OCCUPANCY[2]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[3]),
        .Q(RD_OCCUPANCY[3]),
        .R(SS));
CARRY4 \RD_OCCUPANCY_reg[3]_i_1__2 
       (.CI(\<const0> ),
        .CO({\n_0_RD_OCCUPANCY_reg[3]_i_1__2 ,\n_1_RD_OCCUPANCY_reg[3]_i_1__2 ,\n_2_RD_OCCUPANCY_reg[3]_i_1__2 ,\n_3_RD_OCCUPANCY_reg[3]_i_1__2 }),
        .CYINIT(\<const1> ),
        .DI({\n_0_RD_OCCUPANCY[3]_i_2__2 ,\n_0_RD_OCCUPANCY[3]_i_3__2 ,\n_0_RD_OCCUPANCY[3]_i_4__2 ,\n_0_RD_OCCUPANCY[3]_i_5__2 }),
        .O({RD_OCCUPANCY01_out[3:1],\NLW_RD_OCCUPANCY_reg[3]_i_1__2_O_UNCONNECTED [0]}),
        .S({\n_0_RD_OCCUPANCY[3]_i_6__2 ,\n_0_RD_OCCUPANCY[3]_i_7__2 ,\n_0_RD_OCCUPANCY[3]_i_8__2 ,\n_0_RD_OCCUPANCY[3]_i_9__2 }));
FDRE \RD_OCCUPANCY_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[4]),
        .Q(RD_OCCUPANCY[4]),
        .R(SS));
FDRE \RD_OCCUPANCY_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[5]),
        .Q(RD_OCCUPANCY[5]),
        .R(SS));
FDSE \RD_OCCUPANCY_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RD_OCCUPANCY01_out[6]),
        .Q(RD_OCCUPANCY[6]),
        .S(SS));
CARRY4 \RD_OCCUPANCY_reg[6]_i_1__2 
       (.CI(\n_0_RD_OCCUPANCY_reg[3]_i_1__2 ),
        .CO({\NLW_RD_OCCUPANCY_reg[6]_i_1__2_CO_UNCONNECTED [3:2],\n_2_RD_OCCUPANCY_reg[6]_i_1__2 ,\n_3_RD_OCCUPANCY_reg[6]_i_1__2 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\n_0_RD_OCCUPANCY[6]_i_2__2 ,\n_0_RD_OCCUPANCY[6]_i_3__2 }),
        .O({\NLW_RD_OCCUPANCY_reg[6]_i_1__2_O_UNCONNECTED [3],RD_OCCUPANCY01_out[6:4]}),
        .S({\<const0> ,\n_0_RD_OCCUPANCY[6]_i_4__2 ,\n_0_RD_OCCUPANCY[6]_i_5__2 ,\n_0_RD_OCCUPANCY[6]_i_6__2 }));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block \RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[0]),
        .data_out(\n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__68 \RECLOCK_RD_ADDRGRAY[1].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[1]),
        .data_out(p_4_in30_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__67 \RECLOCK_RD_ADDRGRAY[2].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[2]),
        .data_out(p_3_in27_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__66 \RECLOCK_RD_ADDRGRAY[3].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[3]),
        .data_out(p_2_in24_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__65 \RECLOCK_RD_ADDRGRAY[4].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[4]),
        .data_out(p_1_in21_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__64 \RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[5]),
        .data_out(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__63 \RECLOCK_RD_ADDRGRAY[6].SYNC_RD_ADDRGRAY 
       (.clk(rxuserclk2),
        .data_in(RD_ADDR_GRAY[6]),
        .data_out(p_0_in));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__62 \RECLOCK_WR_ADDRGRAY[0].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[0] ),
        .data_out(DATA_OUT));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__61 \RECLOCK_WR_ADDRGRAY[1].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[1] ),
        .data_out(DATA_OUT0_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__60 \RECLOCK_WR_ADDRGRAY[2].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[2] ),
        .data_out(DATA_OUT1_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__59 \RECLOCK_WR_ADDRGRAY[3].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[3] ),
        .data_out(DATA_OUT2_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__58 \RECLOCK_WR_ADDRGRAY[4].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[4] ),
        .data_out(DATA_OUT3_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__57 \RECLOCK_WR_ADDRGRAY[5].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(\n_0_WR_ADDR_GRAY_reg[5] ),
        .data_out(DATA_OUT4_out));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiqsgmii_sync_block__56 \RECLOCK_WR_ADDRGRAY[6].SYNC_WR_ADDRGRAY 
       (.clk(userclk2),
        .data_in(DATA_IN),
        .data_out(DATA_OUT5_out));
(* SOFT_HLUTNM = "soft_lutpair625" *) 
   LUT5 #(
    .INIT(32'h080F0800)) 
     REMOVE_IDLE_i_1__2
       (.I0(n_0_WR_ENABLE_i_2__2),
        .I1(I1_DETECTED_WR),
        .I2(SR),
        .I3(WR_TOGGLE),
        .I4(n_0_REMOVE_IDLE_reg),
        .O(n_0_REMOVE_IDLE_i_1__2));
FDRE REMOVE_IDLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(n_0_REMOVE_IDLE_i_1__2),
        .Q(n_0_REMOVE_IDLE_reg),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hFFFF8002)) 
     RXBUFERR_i_1__2
       (.I0(n_0_RXBUFERR_i_2__2),
        .I1(RD_OCCUPANCY[2]),
        .I2(RD_OCCUPANCY[3]),
        .I3(RD_OCCUPANCY[4]),
        .I4(O1),
        .O(n_0_RXBUFERR_i_1__2));
LUT6 #(
    .INIT(64'hBD000000000000BD)) 
     RXBUFERR_i_2__2
       (.I0(RD_OCCUPANCY[2]),
        .I1(RD_OCCUPANCY[1]),
        .I2(RD_OCCUPANCY[0]),
        .I3(RD_OCCUPANCY[4]),
        .I4(RD_OCCUPANCY[5]),
        .I5(RD_OCCUPANCY[6]),
        .O(n_0_RXBUFERR_i_2__2));
FDRE RXBUFERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXBUFERR_i_1__2),
        .Q(O1),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair632" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXCHARISCOMMA_USR_i_1__2
       (.I0(\n_0_RD_DATA_REG_reg[28] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[12] ),
        .O(n_0_RXCHARISCOMMA_USR_i_1__2));
FDRE RXCHARISCOMMA_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXCHARISCOMMA_USR_i_1__2),
        .Q(RXCHARISCOMMA_USR),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair633" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXCHARISK_USR_i_1__2
       (.I0(\n_0_RD_DATA_REG_reg[27] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[11] ),
        .O(n_0_RXCHARISK_USR_i_1__2));
FDRE RXCHARISK_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXCHARISK_USR_i_1__2),
        .Q(RXCHARISK_USR),
        .R(SS));
LUT3 #(
    .INIT(8'hBA)) 
     \RXCLKCORCNT[0]_i_1__2 
       (.I0(insert_idle_reg),
        .I1(I2[0]),
        .I2(\n_0_RD_DATA_REG_reg[13] ),
        .O(\n_0_RXCLKCORCNT[0]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair621" *) 
   LUT5 #(
    .INIT(32'h000000A2)) 
     \RXCLKCORCNT[1]_i_1__2 
       (.I0(insert_idle_reg),
        .I1(\n_0_RD_DATA_REG_reg[13] ),
        .I2(I2[0]),
        .I3(I1),
        .I4(I3),
        .O(\n_0_RXCLKCORCNT[1]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair621" *) 
   LUT5 #(
    .INIT(32'h000000A2)) 
     \RXCLKCORCNT[2]_i_1__2 
       (.I0(insert_idle_reg),
        .I1(\n_0_RD_DATA_REG_reg[13] ),
        .I2(I2[0]),
        .I3(I1),
        .I4(I3),
        .O(\n_0_RXCLKCORCNT[2]_i_1__2 ));
FDRE \RXCLKCORCNT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[0]_i_1__2 ),
        .Q(I2[0]),
        .R(SS));
FDRE \RXCLKCORCNT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[1]_i_1__2 ),
        .Q(I2[1]),
        .R(\<const0> ));
FDRE \RXCLKCORCNT_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXCLKCORCNT[2]_i_1__2 ),
        .Q(I2[2]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair637" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[0]_i_1__2 
       (.I0(\n_0_RD_DATA_REG_reg[16] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[0] ),
        .O(\n_0_RXDATA_USR[0]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair637" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[1]_i_1__2 
       (.I0(\n_0_RD_DATA_REG_reg[17] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[1] ),
        .O(\n_0_RXDATA_USR[1]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair636" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[2]_i_1__2 
       (.I0(\n_0_RD_DATA_REG_reg[18] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[2] ),
        .O(\n_0_RXDATA_USR[2]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair636" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[3]_i_1__2 
       (.I0(\n_0_RD_DATA_REG_reg[19] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[3] ),
        .O(\n_0_RXDATA_USR[3]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair635" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[4]_i_1__2 
       (.I0(\n_0_RD_DATA_REG_reg[20] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[4] ),
        .O(\n_0_RXDATA_USR[4]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair635" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[5]_i_1__2 
       (.I0(\n_0_RD_DATA_REG_reg[21] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[5] ),
        .O(\n_0_RXDATA_USR[5]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair634" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[6]_i_1__2 
       (.I0(\n_0_RD_DATA_REG_reg[22] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[6] ),
        .O(\n_0_RXDATA_USR[6]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair634" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \RXDATA_USR[7]_i_1__2 
       (.I0(\n_0_RD_DATA_REG_reg[23] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[7] ),
        .O(\n_0_RXDATA_USR[7]_i_1__2 ));
FDRE \RXDATA_USR_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[0]_i_1__2 ),
        .Q(RXDATA_USR[0]),
        .R(SS));
FDRE \RXDATA_USR_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[1]_i_1__2 ),
        .Q(RXDATA_USR[1]),
        .R(SS));
FDRE \RXDATA_USR_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[2]_i_1__2 ),
        .Q(RXDATA_USR[2]),
        .R(SS));
FDRE \RXDATA_USR_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[3]_i_1__2 ),
        .Q(RXDATA_USR[3]),
        .R(SS));
FDRE \RXDATA_USR_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[4]_i_1__2 ),
        .Q(RXDATA_USR[4]),
        .R(SS));
FDRE \RXDATA_USR_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[5]_i_1__2 ),
        .Q(RXDATA_USR[5]),
        .R(SS));
FDRE \RXDATA_USR_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[6]_i_1__2 ),
        .Q(RXDATA_USR[6]),
        .R(SS));
FDRE \RXDATA_USR_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_USR[7]_i_1__2 ),
        .Q(RXDATA_USR[7]),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair633" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXDISPERR_USR_i_1__2
       (.I0(\n_0_RD_DATA_REG_reg[26] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[10] ),
        .O(n_0_RXDISPERR_USR_i_1__2));
FDRE RXDISPERR_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXDISPERR_USR_i_1__2),
        .Q(RXDISPERR_USR),
        .R(SS));
(* SOFT_HLUTNM = "soft_lutpair632" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     RXNOTINTABLE_USR_i_1__2
       (.I0(\n_0_RD_DATA_REG_reg[25] ),
        .I1(EVEN),
        .I2(\n_0_RD_DATA_REG_reg[9] ),
        .O(n_0_RXNOTINTABLE_USR_i_1__2));
FDRE RXNOTINTABLE_USR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RXNOTINTABLE_USR_i_1__2),
        .Q(RXNOTINTABLE_USR),
        .R(SS));
VCC VCC
       (.P(\<const1> ));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[0]_i_1__2 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I1(p_1_in7_in),
        .O(p_0_in6_out[0]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[1]_i_1__2 
       (.I0(p_1_in7_in),
        .I1(p_2_in9_in),
        .O(p_0_in6_out[1]));
(* SOFT_HLUTNM = "soft_lutpair641" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[2]_i_1__2 
       (.I0(p_2_in9_in),
        .I1(p_3_in11_in),
        .O(p_0_in6_out[2]));
(* SOFT_HLUTNM = "soft_lutpair641" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[3]_i_1__2 
       (.I0(p_3_in11_in),
        .I1(p_4_in13_in),
        .O(p_0_in6_out[3]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[4]_i_1__2 
       (.I0(p_4_in13_in),
        .I1(p_5_in15_in),
        .O(p_0_in6_out[4]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_GRAY[5]_i_1__2 
       (.I0(p_5_in15_in),
        .I1(p_0_in6_out[6]),
        .O(p_0_in6_out[5]));
FDSE \WR_ADDR_GRAY_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[0]),
        .Q(\n_0_WR_ADDR_GRAY_reg[0] ),
        .S(SR));
FDRE \WR_ADDR_GRAY_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[1]),
        .Q(\n_0_WR_ADDR_GRAY_reg[1] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[2]),
        .Q(\n_0_WR_ADDR_GRAY_reg[2] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[3]),
        .Q(\n_0_WR_ADDR_GRAY_reg[3] ),
        .R(SR));
FDRE \WR_ADDR_GRAY_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[4]),
        .Q(\n_0_WR_ADDR_GRAY_reg[4] ),
        .R(SR));
FDSE \WR_ADDR_GRAY_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[5]),
        .Q(\n_0_WR_ADDR_GRAY_reg[5] ),
        .S(SR));
FDSE \WR_ADDR_GRAY_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in6_out[6]),
        .Q(DATA_IN),
        .S(SR));
FDSE \WR_ADDR_PLUS1_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .Q(WR_ADDR_PLUS1[0]),
        .S(SR));
FDRE \WR_ADDR_PLUS1_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_1_in7_in),
        .Q(WR_ADDR_PLUS1[1]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_2_in9_in),
        .Q(WR_ADDR_PLUS1[2]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_3_in11_in),
        .Q(WR_ADDR_PLUS1[3]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_4_in13_in),
        .Q(WR_ADDR_PLUS1[4]),
        .R(SR));
FDRE \WR_ADDR_PLUS1_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_5_in15_in),
        .Q(WR_ADDR_PLUS1[5]),
        .R(SR));
FDSE \WR_ADDR_PLUS1_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(p_0_in6_out[6]),
        .Q(WR_ADDR_PLUS1[6]),
        .S(SR));
LUT1 #(
    .INIT(2'h1)) 
     \WR_ADDR_PLUS2[0]_i_1__2 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .O(plusOp__0[0]));
LUT2 #(
    .INIT(4'h6)) 
     \WR_ADDR_PLUS2[1]_i_1__2 
       (.I0(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I1(p_1_in7_in),
        .O(plusOp__0[1]));
(* SOFT_HLUTNM = "soft_lutpair630" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \WR_ADDR_PLUS2[2]_i_1__2 
       (.I0(p_2_in9_in),
        .I1(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I2(p_1_in7_in),
        .O(plusOp__0[2]));
(* SOFT_HLUTNM = "soft_lutpair630" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \WR_ADDR_PLUS2[3]_i_1__2 
       (.I0(p_3_in11_in),
        .I1(p_1_in7_in),
        .I2(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I3(p_2_in9_in),
        .O(plusOp__0[3]));
(* SOFT_HLUTNM = "soft_lutpair622" *) 
   LUT5 #(
    .INIT(32'h7FFF8000)) 
     \WR_ADDR_PLUS2[4]_i_1__2 
       (.I0(p_2_in9_in),
        .I1(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I2(p_1_in7_in),
        .I3(p_3_in11_in),
        .I4(p_4_in13_in),
        .O(plusOp__0[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \WR_ADDR_PLUS2[5]_i_1__2 
       (.I0(p_5_in15_in),
        .I1(p_2_in9_in),
        .I2(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I3(p_1_in7_in),
        .I4(p_3_in11_in),
        .I5(p_4_in13_in),
        .O(plusOp__0[5]));
LUT3 #(
    .INIT(8'h6A)) 
     \WR_ADDR_PLUS2[6]_i_1__2 
       (.I0(p_0_in6_out[6]),
        .I1(\n_0_WR_ADDR_PLUS2[6]_i_2__2 ),
        .I2(p_5_in15_in),
        .O(plusOp__0[6]));
(* SOFT_HLUTNM = "soft_lutpair622" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     \WR_ADDR_PLUS2[6]_i_2__2 
       (.I0(p_4_in13_in),
        .I1(p_3_in11_in),
        .I2(p_1_in7_in),
        .I3(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .I4(p_2_in9_in),
        .O(\n_0_WR_ADDR_PLUS2[6]_i_2__2 ));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[0]),
        .Q(\n_0_WR_ADDR_PLUS2_reg[0] ),
        .R(SR));
(* counter = "32" *) 
   FDSE \WR_ADDR_PLUS2_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[1]),
        .Q(p_1_in7_in),
        .S(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[2]),
        .Q(p_2_in9_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[3]),
        .Q(p_3_in11_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[4]),
        .Q(p_4_in13_in),
        .R(SR));
(* counter = "32" *) 
   FDRE \WR_ADDR_PLUS2_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[5]),
        .Q(p_5_in15_in),
        .R(SR));
(* counter = "32" *) 
   FDSE \WR_ADDR_PLUS2_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(plusOp__0[6]),
        .Q(p_0_in6_out[6]),
        .S(SR));
FDRE \WR_ADDR_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[0]),
        .Q(\n_0_WR_ADDR_reg[0] ),
        .R(SR));
FDRE \WR_ADDR_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[1]),
        .Q(\n_0_WR_ADDR_reg[1] ),
        .R(SR));
FDRE \WR_ADDR_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[2]),
        .Q(\n_0_WR_ADDR_reg[2] ),
        .R(SR));
FDRE \WR_ADDR_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[3]),
        .Q(\n_0_WR_ADDR_reg[3] ),
        .R(SR));
FDRE \WR_ADDR_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[4]),
        .Q(\n_0_WR_ADDR_reg[4] ),
        .R(SR));
FDRE \WR_ADDR_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[5]),
        .Q(\n_0_WR_ADDR_reg[5] ),
        .R(SR));
FDSE \WR_ADDR_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_ENABLE),
        .D(WR_ADDR_PLUS1[6]),
        .Q(\n_0_WR_ADDR_reg[6] ),
        .S(SR));
FDRE \WR_DATA_REG1_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I7[0]),
        .Q(\n_0_WR_DATA_REG1_reg[0] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I5),
        .Q(WR_DATA_REG1[10]),
        .R(SR));
FDRE \WR_DATA_REG1_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I4),
        .Q(p_0_in9_in),
        .R(SR));
FDRE \WR_DATA_REG1_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(Q),
        .Q(WR_DATA_REG1[12]),
        .R(SR));
FDRE \WR_DATA_REG1_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I7[1]),
        .Q(\n_0_WR_DATA_REG1_reg[1] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I7[2]),
        .Q(\n_0_WR_DATA_REG1_reg[2] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I7[3]),
        .Q(\n_0_WR_DATA_REG1_reg[3] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I7[4]),
        .Q(\n_0_WR_DATA_REG1_reg[4] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I7[5]),
        .Q(\n_0_WR_DATA_REG1_reg[5] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I7[6]),
        .Q(\n_0_WR_DATA_REG1_reg[6] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I7[7]),
        .Q(\n_0_WR_DATA_REG1_reg[7] ),
        .R(SR));
FDRE \WR_DATA_REG1_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(I6),
        .Q(WR_DATA_REG1[9]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[0] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[0] ),
        .Q(WR_DATA_REG2[0]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[10] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[10]),
        .Q(WR_DATA_REG2[10]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[11] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(p_0_in9_in),
        .Q(WR_DATA_REG2[11]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[12] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[12]),
        .Q(WR_DATA_REG2[12]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[1] ),
        .Q(WR_DATA_REG2[1]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[2] ),
        .Q(WR_DATA_REG2[2]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[3] ),
        .Q(WR_DATA_REG2[3]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[4] ),
        .Q(WR_DATA_REG2[4]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[5] ),
        .Q(WR_DATA_REG2[5]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[6] ),
        .Q(WR_DATA_REG2[6]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[7] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(\n_0_WR_DATA_REG1_reg[7] ),
        .Q(WR_DATA_REG2[7]),
        .R(SR));
FDRE \WR_DATA_REG2_reg[9] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_DATA_REG1[9]),
        .Q(WR_DATA_REG2[9]),
        .R(SR));
FDRE \WR_DATA_reg[0] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[0] ),
        .Q(\n_0_WR_DATA_reg[0] ),
        .R(SR));
FDRE \WR_DATA_reg[10] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[10]),
        .Q(\n_0_WR_DATA_reg[10] ),
        .R(SR));
FDRE \WR_DATA_reg[11] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(p_0_in9_in),
        .Q(\n_0_WR_DATA_reg[11] ),
        .R(SR));
FDRE \WR_DATA_reg[12] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[12]),
        .Q(\n_0_WR_DATA_reg[12] ),
        .R(SR));
FDRE \WR_DATA_reg[13] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(n_0_REMOVE_IDLE_reg),
        .Q(\n_0_WR_DATA_reg[13] ),
        .R(SR));
FDRE \WR_DATA_reg[16] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[0]),
        .Q(\n_0_WR_DATA_reg[16] ),
        .R(SR));
FDRE \WR_DATA_reg[17] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[1]),
        .Q(\n_0_WR_DATA_reg[17] ),
        .R(SR));
FDRE \WR_DATA_reg[18] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[2]),
        .Q(\n_0_WR_DATA_reg[18] ),
        .R(SR));
FDRE \WR_DATA_reg[19] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[3]),
        .Q(\n_0_WR_DATA_reg[19] ),
        .R(SR));
FDRE \WR_DATA_reg[1] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[1] ),
        .Q(\n_0_WR_DATA_reg[1] ),
        .R(SR));
FDRE \WR_DATA_reg[20] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[4]),
        .Q(\n_0_WR_DATA_reg[20] ),
        .R(SR));
FDRE \WR_DATA_reg[21] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[5]),
        .Q(\n_0_WR_DATA_reg[21] ),
        .R(SR));
FDRE \WR_DATA_reg[22] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[6]),
        .Q(\n_0_WR_DATA_reg[22] ),
        .R(SR));
FDRE \WR_DATA_reg[23] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[7]),
        .Q(\n_0_WR_DATA_reg[23] ),
        .R(SR));
FDRE \WR_DATA_reg[25] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[9]),
        .Q(\n_0_WR_DATA_reg[25] ),
        .R(SR));
FDRE \WR_DATA_reg[26] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[10]),
        .Q(\n_0_WR_DATA_reg[26] ),
        .R(SR));
FDRE \WR_DATA_reg[27] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[11]),
        .Q(\n_0_WR_DATA_reg[27] ),
        .R(SR));
FDRE \WR_DATA_reg[28] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG2[12]),
        .Q(\n_0_WR_DATA_reg[28] ),
        .R(SR));
FDRE \WR_DATA_reg[2] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[2] ),
        .Q(\n_0_WR_DATA_reg[2] ),
        .R(SR));
FDRE \WR_DATA_reg[3] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[3] ),
        .Q(\n_0_WR_DATA_reg[3] ),
        .R(SR));
FDRE \WR_DATA_reg[4] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[4] ),
        .Q(\n_0_WR_DATA_reg[4] ),
        .R(SR));
FDRE \WR_DATA_reg[5] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[5] ),
        .Q(\n_0_WR_DATA_reg[5] ),
        .R(SR));
FDRE \WR_DATA_reg[6] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[6] ),
        .Q(\n_0_WR_DATA_reg[6] ),
        .R(SR));
FDRE \WR_DATA_reg[7] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(\n_0_WR_DATA_REG1_reg[7] ),
        .Q(\n_0_WR_DATA_reg[7] ),
        .R(SR));
FDRE \WR_DATA_reg[9] 
       (.C(rxuserclk2),
        .CE(WR_TOGGLE),
        .D(WR_DATA_REG1[9]),
        .Q(\n_0_WR_DATA_reg[9] ),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair625" *) 
   LUT4 #(
    .INIT(16'h0070)) 
     WR_ENABLE_i_1__2
       (.I0(n_0_WR_ENABLE_i_2__2),
        .I1(I1_DETECTED_WR),
        .I2(WR_TOGGLE),
        .I3(SR),
        .O(WR_ENABLE0));
(* SOFT_HLUTNM = "soft_lutpair626" *) 
   LUT5 #(
    .INIT(32'h00400000)) 
     WR_ENABLE_i_2__2
       (.I0(n_0_WR_ENABLE_i_3__2),
        .I1(WR_TOGGLE),
        .I2(WR_OCCUPANCY[6]),
        .I3(n_0_REMOVE_IDLE_reg),
        .I4(I1_DETECTED_WR_REG),
        .O(n_0_WR_ENABLE_i_2__2));
LUT5 #(
    .INIT(32'h00000001)) 
     WR_ENABLE_i_3__2
       (.I0(WR_OCCUPANCY[4]),
        .I1(WR_OCCUPANCY[1]),
        .I2(WR_OCCUPANCY[3]),
        .I3(WR_OCCUPANCY[5]),
        .I4(WR_OCCUPANCY[2]),
        .O(n_0_WR_ENABLE_i_3__2));
FDRE WR_ENABLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_ENABLE0),
        .Q(WR_ENABLE),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h69969669)) 
     \WR_OCCUPANCY[3]_i_2__2 
       (.I0(\n_0_WR_ADDR_reg[3] ),
        .I1(p_1_in21_in),
        .I2(p_2_in24_in),
        .I3(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I4(p_0_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_2__2 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \WR_OCCUPANCY[3]_i_3__2 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I1(p_0_in),
        .I2(p_1_in21_in),
        .I3(p_2_in24_in),
        .I4(\n_0_WR_ADDR_reg[2] ),
        .I5(p_3_in27_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_3__2 ));
LUT6 #(
    .INIT(64'h9669699669969669)) 
     \WR_OCCUPANCY[3]_i_4__2 
       (.I0(\n_0_WR_ADDR_reg[1] ),
        .I1(p_2_in24_in),
        .I2(p_1_in21_in),
        .I3(\n_0_WR_OCCUPANCY[3]_i_6__2 ),
        .I4(p_3_in27_in),
        .I5(p_4_in30_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_4__2 ));
LUT5 #(
    .INIT(32'h96696996)) 
     \WR_OCCUPANCY[3]_i_5__2 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[0].SYNC_RD_ADDRGRAY ),
        .I1(p_4_in30_in),
        .I2(p_3_in27_in),
        .I3(\n_0_WR_OCCUPANCY[3]_i_7__2 ),
        .I4(\n_0_WR_ADDR_reg[0] ),
        .O(\n_0_WR_OCCUPANCY[3]_i_5__2 ));
(* SOFT_HLUTNM = "soft_lutpair631" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \WR_OCCUPANCY[3]_i_6__2 
       (.I0(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I1(p_0_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_6__2 ));
(* SOFT_HLUTNM = "soft_lutpair631" *) 
   LUT4 #(
    .INIT(16'h9669)) 
     \WR_OCCUPANCY[3]_i_7__2 
       (.I0(p_0_in),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(p_2_in24_in),
        .I3(p_1_in21_in),
        .O(\n_0_WR_OCCUPANCY[3]_i_7__2 ));
LUT2 #(
    .INIT(4'h9)) 
     \WR_OCCUPANCY[6]_i_2__2 
       (.I0(\n_0_WR_ADDR_reg[6] ),
        .I1(p_0_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_2__2 ));
LUT3 #(
    .INIT(8'h69)) 
     \WR_OCCUPANCY[6]_i_3__2 
       (.I0(\n_0_WR_ADDR_reg[5] ),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(p_0_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_3__2 ));
LUT4 #(
    .INIT(16'h9669)) 
     \WR_OCCUPANCY[6]_i_4__2 
       (.I0(p_0_in),
        .I1(\n_0_RECLOCK_RD_ADDRGRAY[5].SYNC_RD_ADDRGRAY ),
        .I2(\n_0_WR_ADDR_reg[4] ),
        .I3(p_1_in21_in),
        .O(\n_0_WR_OCCUPANCY[6]_i_4__2 ));
FDRE \WR_OCCUPANCY_reg[1] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[1]),
        .Q(WR_OCCUPANCY[1]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[2] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[2]),
        .Q(WR_OCCUPANCY[2]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[3] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[3]),
        .Q(WR_OCCUPANCY[3]),
        .R(SR));
CARRY4 \WR_OCCUPANCY_reg[3]_i_1__2 
       (.CI(\<const0> ),
        .CO({\n_0_WR_OCCUPANCY_reg[3]_i_1__2 ,\n_1_WR_OCCUPANCY_reg[3]_i_1__2 ,\n_2_WR_OCCUPANCY_reg[3]_i_1__2 ,\n_3_WR_OCCUPANCY_reg[3]_i_1__2 }),
        .CYINIT(\<const1> ),
        .DI({\n_0_WR_ADDR_reg[3] ,\n_0_WR_ADDR_reg[2] ,\n_0_WR_ADDR_reg[1] ,\n_0_WR_ADDR_reg[0] }),
        .O({WR_OCCUPANCY00_out[3:1],\NLW_WR_OCCUPANCY_reg[3]_i_1__2_O_UNCONNECTED [0]}),
        .S({\n_0_WR_OCCUPANCY[3]_i_2__2 ,\n_0_WR_OCCUPANCY[3]_i_3__2 ,\n_0_WR_OCCUPANCY[3]_i_4__2 ,\n_0_WR_OCCUPANCY[3]_i_5__2 }));
FDRE \WR_OCCUPANCY_reg[4] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[4]),
        .Q(WR_OCCUPANCY[4]),
        .R(SR));
FDRE \WR_OCCUPANCY_reg[5] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[5]),
        .Q(WR_OCCUPANCY[5]),
        .R(SR));
FDSE \WR_OCCUPANCY_reg[6] 
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(WR_OCCUPANCY00_out[6]),
        .Q(WR_OCCUPANCY[6]),
        .S(SR));
CARRY4 \WR_OCCUPANCY_reg[6]_i_1__2 
       (.CI(\n_0_WR_OCCUPANCY_reg[3]_i_1__2 ),
        .CO({\NLW_WR_OCCUPANCY_reg[6]_i_1__2_CO_UNCONNECTED [3:2],\n_2_WR_OCCUPANCY_reg[6]_i_1__2 ,\n_3_WR_OCCUPANCY_reg[6]_i_1__2 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\n_0_WR_ADDR_reg[5] ,\n_0_WR_ADDR_reg[4] }),
        .O({\NLW_WR_OCCUPANCY_reg[6]_i_1__2_O_UNCONNECTED [3],WR_OCCUPANCY00_out[6:4]}),
        .S({\<const0> ,\n_0_WR_OCCUPANCY[6]_i_2__2 ,\n_0_WR_OCCUPANCY[6]_i_3__2 ,\n_0_WR_OCCUPANCY[6]_i_4__2 }));
(* RETAIN_INVERTER *) 
   (* SOFT_HLUTNM = "soft_lutpair626" *) 
   LUT1 #(
    .INIT(2'h1)) 
     WR_TOGGLE_i_1__2
       (.I0(WR_TOGGLE),
        .O(n_0_WR_TOGGLE_i_1__2));
FDSE WR_TOGGLE_reg
       (.C(rxuserclk2),
        .CE(\<const1> ),
        .D(n_0_WR_TOGGLE_i_1__2),
        .Q(WR_TOGGLE),
        .S(SR));
FDRE insert_idle_reg_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(INSERT_IDLE),
        .Q(insert_idle_reg),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "RX" *) 
module quadsgmiiRX__parameterized0
   (K28p5_REG1,
    RX_IDLE,
    SOP_REG3,
    EOP_REG1,
    gmii_rx_er_ch3_int,
    RX_CONFIG_VALID,
    status_vector_ch3,
    O1,
    gmii_rx_dv_ch3_int,
    O2,
    CO,
    O3,
    O4,
    O5,
    O6,
    O7,
    RX_CONFIG_REG,
    O8,
    O9,
    O10,
    O11,
    userclk2,
    SR,
    FALSE_NIT0,
    S0,
    SYNC_STATUS_REG0,
    S2,
    I1,
    I2,
    Q,
    S,
    I3,
    I4,
    I5,
    RXSYNC_STATUS,
    I6,
    XMIT_DATA,
    I7,
    RXNOTINTABLE_INT,
    RXEVEN,
    SRESET,
    I8,
    I9,
    I10,
    I11,
    I12,
    I13,
    I14,
    I15);
  output K28p5_REG1;
  output RX_IDLE;
  output SOP_REG3;
  output EOP_REG1;
  output gmii_rx_er_ch3_int;
  output RX_CONFIG_VALID;
  output [1:0]status_vector_ch3;
  output O1;
  output gmii_rx_dv_ch3_int;
  output O2;
  output [0:0]CO;
  output [0:0]O3;
  output O4;
  output O5;
  output O6;
  output [0:0]O7;
  output [15:0]RX_CONFIG_REG;
  output O8;
  output O9;
  output O10;
  output [7:0]O11;
  input userclk2;
  input [0:0]SR;
  input FALSE_NIT0;
  input S0;
  input SYNC_STATUS_REG0;
  input S2;
  input I1;
  input I2;
  input [7:0]Q;
  input [0:0]S;
  input [0:0]I3;
  input [0:0]I4;
  input [0:0]I5;
  input RXSYNC_STATUS;
  input I6;
  input XMIT_DATA;
  input I7;
  input RXNOTINTABLE_INT;
  input RXEVEN;
  input SRESET;
  input [8:0]I8;
  input [8:0]I9;
  input I10;
  input [2:0]I11;
  input I12;
  input I13;
  input I14;
  input [0:0]I15;

  wire \<const0> ;
  wire \<const1> ;
  wire C;
  wire C0;
  wire CGBAD;
  wire CGBAD_REG1;
  wire CGBAD_REG2;
  wire CGBAD_REG3;
  wire [0:0]CO;
  wire C_HDR_REMOVED;
  wire C_HDR_REMOVED_REG;
  wire C_REG1;
  wire C_REG2;
  wire C_REG3;
  wire D0p0;
  wire D0p0_REG;
  wire EOP;
  wire EOP0;
  wire EOP_REG1;
  wire EOP_REG10;
  wire EXTEND_ERR;
  wire EXTEND_ERR0;
  wire EXTEND_REG1;
  wire EXTEND_REG2;
  wire EXTEND_REG3;
  wire EXT_ILLEGAL_K;
  wire EXT_ILLEGAL_K0;
  wire EXT_ILLEGAL_K_REG1;
  wire EXT_ILLEGAL_K_REG2;
  wire FALSE_CARRIER;
  wire FALSE_CARRIER_REG1;
  wire FALSE_CARRIER_REG2;
  wire FALSE_CARRIER_REG3;
  wire FALSE_DATA;
  wire FALSE_DATA0;
  wire FALSE_K;
  wire FALSE_K0;
  wire FALSE_NIT;
  wire FALSE_NIT0;
  wire FROM_IDLE_D;
  wire FROM_IDLE_D0;
  wire FROM_RX_CX;
  wire FROM_RX_CX0;
  wire FROM_RX_K;
  wire FROM_RX_K0;
  wire I;
  wire I0;
  wire I1;
  wire I10;
  wire [2:0]I11;
  wire I12;
  wire I13;
  wire I14;
  wire [0:0]I15;
  wire I2;
  wire [0:0]I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire I6;
  wire I7;
  wire [8:0]I8;
  wire [8:0]I9;
  wire ILLEGAL_K;
  wire ILLEGAL_K0;
  wire ILLEGAL_K_REG1;
  wire ILLEGAL_K_REG2;
  wire K23p7;
  wire K28p5;
  wire K28p5_REG1;
  wire K28p5_REG2;
  wire K29p7;
  wire O1;
  wire O10;
  wire [7:0]O11;
  wire O2;
  wire [0:0]O3;
  wire O4;
  wire O5;
  wire O6;
  wire [0:0]O7;
  wire O8;
  wire O9;
  wire [7:0]Q;
  wire R;
  wire RUDI_C0;
  wire RUDI_I0;
  wire RXCHARISK_REG1;
  wire [7:0]RXDATA_REG5;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_VALID;
  wire RX_CONFIG_VALID_INT0;
  wire RX_DATA_ERROR;
  wire RX_DATA_ERROR0;
  wire RX_ER0;
  wire RX_IDLE;
  wire R_REG1;
  wire [0:0]S;
  wire S0;
  wire S2;
  wire SOP;
  wire SOP0;
  wire SOP_REG1;
  wire SOP_REG2;
  wire SOP_REG3;
  wire [0:0]SR;
  wire SRESET;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire S_0;
  wire T;
  wire T_REG1;
  wire T_REG2;
  wire WAIT_FOR_K;
  wire XMIT_DATA;
  wire gmii_rx_dv_ch3_int;
  wire gmii_rx_er_ch3_int;
  wire n_0_CONSISTENCY_MATCH_i_5__2;
  wire n_0_CONSISTENCY_MATCH_i_7__2;
  wire n_0_CONSISTENCY_MATCH_i_8__2;
  wire n_0_CONSISTENCY_MATCH_reg_i_3__2;
  wire n_0_C_i_3__2;
  wire n_0_C_i_4__2;
  wire n_0_C_i_5__2;
  wire n_0_C_i_6__2;
  wire n_0_C_reg_i_2__2;
  wire n_0_D0p0_REG_i_2__2;
  wire n_0_EOP_i_2__2;
  wire n_0_EXTEND_i_1__2;
  wire n_0_EXTEND_i_3__2;
  wire n_0_EXTEND_reg;
  wire n_0_FALSE_CARRIER_i_1__2;
  wire n_0_FALSE_CARRIER_i_2__2;
  wire n_0_FALSE_CARRIER_i_3__2;
  wire n_0_FALSE_DATA_i_2__2;
  wire n_0_FALSE_DATA_i_3__2;
  wire n_0_FALSE_DATA_i_4__2;
  wire n_0_FALSE_K_i_2__2;
  wire n_0_FALSE_NIT_i_5__2;
  wire n_0_FALSE_NIT_i_6__2;
  wire \n_0_IDLE_REG_reg[0] ;
  wire \n_0_IDLE_REG_reg[2] ;
  wire n_0_I_i_2__2;
  wire n_0_RECEIVE_i_1__2;
  wire \n_0_RXDATA_REG4_reg[0]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[1]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[2]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[3]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[4]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[5]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[6]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[7]_srl4 ;
  wire \n_0_RXD[0]_i_1__2 ;
  wire \n_0_RXD[1]_i_1__2 ;
  wire \n_0_RXD[2]_i_1__2 ;
  wire \n_0_RXD[3]_i_1__2 ;
  wire \n_0_RXD[4]_i_1__2 ;
  wire \n_0_RXD[5]_i_1__2 ;
  wire \n_0_RXD[6]_i_1__2 ;
  wire \n_0_RXD[7]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[0]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[10]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[11]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[12]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[13]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[14]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[15]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[1]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[2]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[3]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[4]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[5]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[6]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[7]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[7]_i_2__2 ;
  wire \n_0_RX_CONFIG_REG[8]_i_1__2 ;
  wire \n_0_RX_CONFIG_REG[9]_i_1__2 ;
  wire n_0_RX_CONFIG_REG_NULL_i_2__2;
  wire n_0_RX_CONFIG_REG_NULL_i_3__2;
  wire n_0_RX_CONFIG_REG_NULL_i_4__2;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_10__2 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_7__2 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_9__2 ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 ;
  wire n_0_RX_CONFIG_VALID_INT_i_2__2;
  wire \n_0_RX_CONFIG_VALID_REG_reg[0] ;
  wire \n_0_RX_CONFIG_VALID_REG_reg[3] ;
  wire n_0_RX_DATA_ERROR_i_2__2;
  wire n_0_RX_DATA_ERROR_i_4__2;
  wire n_0_RX_ER_i_4__2;
  wire n_0_RX_INVALID_i_1__2;
  wire n_0_RX_INVALID_i_2__2;
  wire n_0_R_i_2__2;
  wire n_0_WAIT_FOR_K_i_1__2;
  wire n_1_CONSISTENCY_MATCH_reg_i_3__2;
  wire \n_1_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 ;
  wire n_2_CONSISTENCY_MATCH_reg_i_3__2;
  wire \n_2_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 ;
  wire n_3_CONSISTENCY_MATCH_reg_i_3__2;
  wire \n_3_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 ;
  wire p_0_in1_in;
  wire p_0_in2_in;
  wire p_1_in;
  wire [1:0]status_vector_ch3;
  wire userclk2;
  wire [3:1]NLW_CONSISTENCY_MATCH_reg_i_2__2_CO_UNCONNECTED;
  wire [3:0]NLW_CONSISTENCY_MATCH_reg_i_2__2_O_UNCONNECTED;
  wire [3:0]NLW_CONSISTENCY_MATCH_reg_i_3__2_O_UNCONNECTED;
  wire [3:1]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__2_CO_UNCONNECTED ;
  wire [3:0]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__2_O_UNCONNECTED ;
  wire [3:0]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2_O_UNCONNECTED ;

FDRE CGBAD_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD),
        .Q(CGBAD_REG1),
        .R(\<const0> ));
FDRE CGBAD_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD_REG1),
        .Q(CGBAD_REG2),
        .R(\<const0> ));
FDRE CGBAD_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD_REG2),
        .Q(CGBAD_REG3),
        .R(SR));
FDRE CGBAD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S2),
        .Q(CGBAD),
        .R(SR));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_5__2
       (.I0(RX_CONFIG_REG[9]),
        .I1(I9[6]),
        .I2(RX_CONFIG_REG[10]),
        .I3(I9[7]),
        .I4(I9[8]),
        .I5(RX_CONFIG_REG[11]),
        .O(n_0_CONSISTENCY_MATCH_i_5__2));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_7__2
       (.I0(RX_CONFIG_REG[5]),
        .I1(I9[5]),
        .I2(RX_CONFIG_REG[3]),
        .I3(I9[3]),
        .I4(I9[4]),
        .I5(RX_CONFIG_REG[4]),
        .O(n_0_CONSISTENCY_MATCH_i_7__2));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_8__2
       (.I0(RX_CONFIG_REG[2]),
        .I1(I9[2]),
        .I2(RX_CONFIG_REG[0]),
        .I3(I9[0]),
        .I4(I9[1]),
        .I5(RX_CONFIG_REG[1]),
        .O(n_0_CONSISTENCY_MATCH_i_8__2));
CARRY4 CONSISTENCY_MATCH_reg_i_2__2
       (.CI(n_0_CONSISTENCY_MATCH_reg_i_3__2),
        .CO({NLW_CONSISTENCY_MATCH_reg_i_2__2_CO_UNCONNECTED[3:1],O3}),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_CONSISTENCY_MATCH_reg_i_2__2_O_UNCONNECTED[3:0]),
        .S({\<const0> ,\<const0> ,\<const0> ,I5}));
CARRY4 CONSISTENCY_MATCH_reg_i_3__2
       (.CI(\<const0> ),
        .CO({n_0_CONSISTENCY_MATCH_reg_i_3__2,n_1_CONSISTENCY_MATCH_reg_i_3__2,n_2_CONSISTENCY_MATCH_reg_i_3__2,n_3_CONSISTENCY_MATCH_reg_i_3__2}),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_CONSISTENCY_MATCH_reg_i_3__2_O_UNCONNECTED[3:0]),
        .S({n_0_CONSISTENCY_MATCH_i_5__2,I4,n_0_CONSISTENCY_MATCH_i_7__2,n_0_CONSISTENCY_MATCH_i_8__2}));
(* SOFT_HLUTNM = "soft_lutpair487" *) 
   LUT4 #(
    .INIT(16'h1000)) 
     C_HDR_REMOVED_REG_i_1__2
       (.I0(I11[2]),
        .I1(I11[1]),
        .I2(I11[0]),
        .I3(C_REG2),
        .O(C_HDR_REMOVED));
FDRE C_HDR_REMOVED_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_HDR_REMOVED),
        .Q(C_HDR_REMOVED_REG),
        .R(\<const0> ));
FDRE C_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C),
        .Q(C_REG1),
        .R(\<const0> ));
FDRE C_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_REG1),
        .Q(C_REG2),
        .R(\<const0> ));
FDRE C_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_REG2),
        .Q(C_REG3),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair482" *) 
   LUT3 #(
    .INIT(8'h04)) 
     C_i_1__2
       (.I0(n_0_C_reg_i_2__2),
        .I1(K28p5_REG1),
        .I2(I1),
        .O(C0));
LUT6 #(
    .INIT(64'hBFFFFFFFFFFFFFFF)) 
     C_i_3__2
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(Q[7]),
        .I5(n_0_C_i_5__2),
        .O(n_0_C_i_3__2));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFBFF)) 
     C_i_4__2
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(n_0_C_i_6__2),
        .I4(Q[0]),
        .I5(Q[4]),
        .O(n_0_C_i_4__2));
(* SOFT_HLUTNM = "soft_lutpair485" *) 
   LUT2 #(
    .INIT(4'h2)) 
     C_i_5__2
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(n_0_C_i_5__2));
(* SOFT_HLUTNM = "soft_lutpair493" *) 
   LUT2 #(
    .INIT(4'h1)) 
     C_i_6__2
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(n_0_C_i_6__2));
FDRE C_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C0),
        .Q(C),
        .R(\<const0> ));
MUXF7 C_reg_i_2__2
       (.I0(n_0_C_i_3__2),
        .I1(n_0_C_i_4__2),
        .O(n_0_C_reg_i_2__2),
        .S(Q[1]));
(* SOFT_HLUTNM = "soft_lutpair491" *) 
   LUT4 #(
    .INIT(16'h0002)) 
     D0p0_REG_i_1__2
       (.I0(n_0_D0p0_REG_i_2__2),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[7]),
        .O(D0p0));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     D0p0_REG_i_2__2
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(I1),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(n_0_D0p0_REG_i_2__2));
FDRE D0p0_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(D0p0),
        .Q(D0p0_REG),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'hEA)) 
     EOP_REG1_i_1__2
       (.I0(EOP),
        .I1(n_0_EXTEND_reg),
        .I2(EXTEND_REG1),
        .O(EOP_REG10));
FDRE EOP_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EOP_REG10),
        .Q(EOP_REG1),
        .R(SR));
LUT6 #(
    .INIT(64'hFFFFFFFF88888000)) 
     EOP_i_1__2
       (.I0(T_REG2),
        .I1(R_REG1),
        .I2(RXEVEN),
        .I3(K28p5_REG1),
        .I4(R),
        .I5(n_0_EOP_i_2__2),
        .O(EOP0));
LUT5 #(
    .INIT(32'hF8888888)) 
     EOP_i_2__2
       (.I0(RX_IDLE),
        .I1(K28p5_REG1),
        .I2(RXEVEN),
        .I3(D0p0_REG),
        .I4(C_REG1),
        .O(n_0_EOP_i_2__2));
FDRE EOP_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EOP0),
        .Q(EOP),
        .R(SR));
LUT3 #(
    .INIT(8'hEA)) 
     EXTEND_ERR_i_1__2
       (.I0(EXT_ILLEGAL_K_REG2),
        .I1(CGBAD_REG3),
        .I2(EXTEND_REG3),
        .O(EXTEND_ERR0));
FDRE EXTEND_ERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_ERR0),
        .Q(EXTEND_ERR),
        .R(SYNC_STATUS_REG0));
FDRE EXTEND_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EXTEND_reg),
        .Q(EXTEND_REG1),
        .R(\<const0> ));
FDRE EXTEND_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_REG1),
        .Q(EXTEND_REG2),
        .R(\<const0> ));
FDRE EXTEND_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_REG2),
        .Q(EXTEND_REG3),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hAA00AA2AAA00AA00)) 
     EXTEND_i_1__2
       (.I0(I12),
        .I1(RXEVEN),
        .I2(K28p5_REG1),
        .I3(n_0_EXTEND_i_3__2),
        .I4(S_0),
        .I5(n_0_EXTEND_reg),
        .O(n_0_EXTEND_i_1__2));
LUT3 #(
    .INIT(8'h80)) 
     EXTEND_i_3__2
       (.I0(R),
        .I1(O1),
        .I2(R_REG1),
        .O(n_0_EXTEND_i_3__2));
FDRE EXTEND_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EXTEND_i_1__2),
        .Q(n_0_EXTEND_reg),
        .R(\<const0> ));
FDRE EXT_ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K),
        .Q(EXT_ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
FDRE EXT_ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K_REG1),
        .Q(EXT_ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
LUT5 #(
    .INIT(32'h00000700)) 
     EXT_ILLEGAL_K_i_1__2
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .I2(R),
        .I3(EXTEND_REG1),
        .I4(S_0),
        .O(EXT_ILLEGAL_K0));
FDRE EXT_ILLEGAL_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K0),
        .Q(EXT_ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
FDRE FALSE_CARRIER_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER),
        .Q(FALSE_CARRIER_REG1),
        .R(\<const0> ));
FDRE FALSE_CARRIER_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER_REG1),
        .Q(FALSE_CARRIER_REG2),
        .R(\<const0> ));
FDRE FALSE_CARRIER_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER_REG2),
        .Q(FALSE_CARRIER_REG3),
        .R(SYNC_STATUS_REG0));
LUT6 #(
    .INIT(64'h0A0E0E0E0A0A0A0A)) 
     FALSE_CARRIER_i_1__2
       (.I0(n_0_FALSE_CARRIER_i_2__2),
        .I1(RXSYNC_STATUS),
        .I2(SR),
        .I3(RXEVEN),
        .I4(K28p5_REG1),
        .I5(FALSE_CARRIER),
        .O(n_0_FALSE_CARRIER_i_1__2));
LUT5 #(
    .INIT(32'h00000020)) 
     FALSE_CARRIER_i_2__2
       (.I0(I6),
        .I1(S_0),
        .I2(RX_IDLE),
        .I3(K28p5_REG1),
        .I4(n_0_FALSE_CARRIER_i_3__2),
        .O(n_0_FALSE_CARRIER_i_2__2));
LUT3 #(
    .INIT(8'hFE)) 
     FALSE_CARRIER_i_3__2
       (.I0(FALSE_DATA),
        .I1(FALSE_K),
        .I2(FALSE_NIT),
        .O(n_0_FALSE_CARRIER_i_3__2));
FDRE FALSE_CARRIER_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_FALSE_CARRIER_i_1__2),
        .Q(FALSE_CARRIER),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair494" *) 
   LUT3 #(
    .INIT(8'h02)) 
     FALSE_DATA_i_1__2
       (.I0(n_0_FALSE_DATA_i_2__2),
        .I1(RXNOTINTABLE_INT),
        .I2(I1),
        .O(FALSE_DATA0));
LUT6 #(
    .INIT(64'h00004400000F0000)) 
     FALSE_DATA_i_2__2
       (.I0(n_0_FALSE_DATA_i_3__2),
        .I1(Q[2]),
        .I2(n_0_FALSE_DATA_i_4__2),
        .I3(Q[7]),
        .I4(Q[6]),
        .I5(Q[5]),
        .O(n_0_FALSE_DATA_i_2__2));
(* SOFT_HLUTNM = "soft_lutpair481" *) 
   LUT4 #(
    .INIT(16'hEFF1)) 
     FALSE_DATA_i_3__2
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(n_0_FALSE_DATA_i_3__2));
(* SOFT_HLUTNM = "soft_lutpair481" *) 
   LUT5 #(
    .INIT(32'hE8FFFFFF)) 
     FALSE_DATA_i_4__2
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(n_0_FALSE_DATA_i_4__2));
FDRE FALSE_DATA_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_DATA0),
        .Q(FALSE_DATA),
        .R(SR));
LUT6 #(
    .INIT(64'h0000000040000040)) 
     FALSE_K_i_1__2
       (.I0(n_0_FALSE_K_i_2__2),
        .I1(Q[7]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[6]),
        .I5(RXNOTINTABLE_INT),
        .O(FALSE_K0));
(* SOFT_HLUTNM = "soft_lutpair484" *) 
   LUT5 #(
    .INIT(32'hEFFFFFFF)) 
     FALSE_K_i_2__2
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(I1),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(n_0_FALSE_K_i_2__2));
FDRE FALSE_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_K0),
        .Q(FALSE_K),
        .R(SR));
LUT6 #(
    .INIT(64'hFFFF400040004000)) 
     FALSE_NIT_i_2__2
       (.I0(n_0_FALSE_K_i_2__2),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(n_0_FALSE_NIT_i_5__2),
        .I5(n_0_D0p0_REG_i_2__2),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair491" *) 
   LUT3 #(
    .INIT(8'h28)) 
     FALSE_NIT_i_3__2
       (.I0(n_0_D0p0_REG_i_2__2),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(O6));
LUT6 #(
    .INIT(64'h0600000000000000)) 
     FALSE_NIT_i_4__2
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(n_0_FALSE_NIT_i_6__2),
        .I3(Q[6]),
        .I4(Q[5]),
        .I5(Q[4]),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair480" *) 
   LUT2 #(
    .INIT(4'h8)) 
     FALSE_NIT_i_5__2
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(n_0_FALSE_NIT_i_5__2));
(* SOFT_HLUTNM = "soft_lutpair484" *) 
   LUT3 #(
    .INIT(8'h7F)) 
     FALSE_NIT_i_6__2
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(I1),
        .O(n_0_FALSE_NIT_i_6__2));
FDRE FALSE_NIT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_NIT0),
        .Q(FALSE_NIT),
        .R(SR));
LUT4 #(
    .INIT(16'h0004)) 
     FROM_IDLE_D_i_1__2
       (.I0(K28p5_REG1),
        .I1(RX_IDLE),
        .I2(WAIT_FOR_K),
        .I3(I6),
        .O(FROM_IDLE_D0));
FDRE FROM_IDLE_D_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_IDLE_D0),
        .Q(FROM_IDLE_D),
        .R(SYNC_STATUS_REG0));
LUT6 #(
    .INIT(64'hFFFFA8FFFCFCA8A8)) 
     FROM_RX_CX_i_1__2
       (.I0(RXCHARISK_REG1),
        .I1(C_REG1),
        .I2(C_REG2),
        .I3(I10),
        .I4(CGBAD),
        .I5(C_REG3),
        .O(FROM_RX_CX0));
FDRE FROM_RX_CX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_RX_CX0),
        .Q(FROM_RX_CX),
        .R(SYNC_STATUS_REG0));
LUT4 #(
    .INIT(16'h00E0)) 
     FROM_RX_K_i_1__2
       (.I0(RXCHARISK_REG1),
        .I1(CGBAD),
        .I2(K28p5_REG2),
        .I3(I6),
        .O(FROM_RX_K0));
FDRE FROM_RX_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_RX_K0),
        .Q(FROM_RX_K),
        .R(SYNC_STATUS_REG0));
GND GND
       (.G(\<const0> ));
FDRE \IDLE_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE),
        .Q(\n_0_IDLE_REG_reg[0] ),
        .R(SR));
FDRE \IDLE_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_IDLE_REG_reg[0] ),
        .Q(p_0_in1_in),
        .R(SR));
FDRE \IDLE_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_0_in1_in),
        .Q(\n_0_IDLE_REG_reg[2] ),
        .R(SR));
FDRE ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K),
        .Q(ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
FDRE ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K_REG1),
        .Q(ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
LUT4 #(
    .INIT(16'h0010)) 
     ILLEGAL_K_i_1__2
       (.I0(R),
        .I1(K28p5_REG1),
        .I2(RXCHARISK_REG1),
        .I3(T),
        .O(ILLEGAL_K0));
FDRE ILLEGAL_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K0),
        .Q(ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
FDRE I_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I),
        .Q(RX_IDLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair482" *) 
   LUT5 #(
    .INIT(32'h33220020)) 
     I_i_1__2
       (.I0(n_0_C_reg_i_2__2),
        .I1(n_0_I_i_2__2),
        .I2(K28p5_REG1),
        .I3(I1),
        .I4(I6),
        .O(I0));
LUT6 #(
    .INIT(64'h000001FFFFFFFFFF)) 
     I_i_2__2
       (.I0(FALSE_DATA),
        .I1(FALSE_K),
        .I2(FALSE_NIT),
        .I3(RX_IDLE),
        .I4(K28p5_REG1),
        .I5(RXEVEN),
        .O(n_0_I_i_2__2));
FDRE I_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I0),
        .Q(I),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair483" *) 
   LUT5 #(
    .INIT(32'h04000000)) 
     K28p5_REG1_i_1__2
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(n_0_FALSE_K_i_2__2),
        .I3(Q[7]),
        .I4(Q[4]),
        .O(K28p5));
FDRE K28p5_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K28p5),
        .Q(K28p5_REG1),
        .R(\<const0> ));
FDRE K28p5_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K28p5_REG1),
        .Q(K28p5_REG2),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h0D0C)) 
     RECEIVED_IDLE_i_1__2
       (.I0(RX_CONFIG_VALID),
        .I1(RX_IDLE),
        .I2(SRESET),
        .I3(I14),
        .O(O10));
LUT5 #(
    .INIT(32'h44044400)) 
     RECEIVE_i_1__2
       (.I0(SR),
        .I1(RXSYNC_STATUS),
        .I2(EOP),
        .I3(SOP_REG2),
        .I4(O1),
        .O(n_0_RECEIVE_i_1__2));
FDRE RECEIVE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RECEIVE_i_1__2),
        .Q(O1),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'hFFFE)) 
     RUDI_C_i_1__2
       (.I0(p_1_in),
        .I1(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .I2(\n_0_RX_CONFIG_VALID_REG_reg[3] ),
        .I3(p_0_in2_in),
        .O(RUDI_C0));
FDRE RUDI_C_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RUDI_C0),
        .Q(status_vector_ch3[0]),
        .R(SR));
LUT2 #(
    .INIT(4'hE)) 
     RUDI_I_i_1__2
       (.I0(\n_0_IDLE_REG_reg[2] ),
        .I1(p_0_in1_in),
        .O(RUDI_I0));
FDRE RUDI_I_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RUDI_I0),
        .Q(status_vector_ch3[1]),
        .R(SR));
FDRE RXCHARISK_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(RXCHARISK_REG1),
        .R(\<const0> ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg[0]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[0]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[0]),
        .Q(\n_0_RXDATA_REG4_reg[0]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg[1]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[1]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[1]),
        .Q(\n_0_RXDATA_REG4_reg[1]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg[2]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[2]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[2]),
        .Q(\n_0_RXDATA_REG4_reg[2]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg[3]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[3]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[3]),
        .Q(\n_0_RXDATA_REG4_reg[3]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg[4]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[4]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[4]),
        .Q(\n_0_RXDATA_REG4_reg[4]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg[5]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[5]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[5]),
        .Q(\n_0_RXDATA_REG4_reg[5]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg[6]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[6]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[6]),
        .Q(\n_0_RXDATA_REG4_reg[6]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i3/RECEIVER/RXDATA_REG4_reg[7]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[7]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[7]),
        .Q(\n_0_RXDATA_REG4_reg[7]_srl4 ));
FDRE \RXDATA_REG5_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[0]_srl4 ),
        .Q(RXDATA_REG5[0]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[1]_srl4 ),
        .Q(RXDATA_REG5[1]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[2]_srl4 ),
        .Q(RXDATA_REG5[2]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[3]_srl4 ),
        .Q(RXDATA_REG5[3]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[4]_srl4 ),
        .Q(RXDATA_REG5[4]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[5]_srl4 ),
        .Q(RXDATA_REG5[5]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[6]_srl4 ),
        .Q(RXDATA_REG5[6]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[7]_srl4 ),
        .Q(RXDATA_REG5[7]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair492" *) 
   LUT4 #(
    .INIT(16'hBBBA)) 
     \RXD[0]_i_1__2 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[0]),
        .O(\n_0_RXD[0]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair492" *) 
   LUT4 #(
    .INIT(16'h5554)) 
     \RXD[1]_i_1__2 
       (.I0(SOP_REG3),
        .I1(RXDATA_REG5[1]),
        .I2(FALSE_CARRIER_REG3),
        .I3(EXTEND_REG1),
        .O(\n_0_RXD[1]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair489" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \RXD[2]_i_1__2 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[2]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[2]_i_1__2 ));
LUT4 #(
    .INIT(16'h5554)) 
     \RXD[3]_i_1__2 
       (.I0(SOP_REG3),
        .I1(RXDATA_REG5[3]),
        .I2(FALSE_CARRIER_REG3),
        .I3(EXTEND_REG1),
        .O(\n_0_RXD[3]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair486" *) 
   LUT5 #(
    .INIT(32'hBABBBAAA)) 
     \RXD[4]_i_1__2 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_ERR),
        .I3(EXTEND_REG1),
        .I4(RXDATA_REG5[4]),
        .O(\n_0_RXD[4]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair489" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \RXD[5]_i_1__2 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[5]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[5]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair490" *) 
   LUT4 #(
    .INIT(16'hABAA)) 
     \RXD[6]_i_1__2 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[6]),
        .O(\n_0_RXD[6]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair490" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \RXD[7]_i_1__2 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[7]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[7]_i_1__2 ));
FDRE \RXD_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[0]_i_1__2 ),
        .Q(O11[0]),
        .R(I15));
FDRE \RXD_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[1]_i_1__2 ),
        .Q(O11[1]),
        .R(I15));
FDRE \RXD_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[2]_i_1__2 ),
        .Q(O11[2]),
        .R(I15));
FDRE \RXD_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[3]_i_1__2 ),
        .Q(O11[3]),
        .R(I15));
FDRE \RXD_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[4]_i_1__2 ),
        .Q(O11[4]),
        .R(I15));
FDRE \RXD_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[5]_i_1__2 ),
        .Q(O11[5]),
        .R(I15));
FDRE \RXD_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[6]_i_1__2 ),
        .Q(O11[6]),
        .R(I15));
FDRE \RXD_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[7]_i_1__2 ),
        .Q(O11[7]),
        .R(I15));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[0]_i_1__2 
       (.I0(Q[0]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__2 ),
        .I3(RX_CONFIG_REG[0]),
        .O(\n_0_RX_CONFIG_REG[0]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[10]_i_1__2 
       (.I0(Q[2]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[10]),
        .O(\n_0_RX_CONFIG_REG[10]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[11]_i_1__2 
       (.I0(Q[3]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[11]),
        .O(\n_0_RX_CONFIG_REG[11]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[12]_i_1__2 
       (.I0(Q[4]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[12]),
        .O(\n_0_RX_CONFIG_REG[12]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[13]_i_1__2 
       (.I0(Q[5]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[13]),
        .O(\n_0_RX_CONFIG_REG[13]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[14]_i_1__2 
       (.I0(Q[6]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[14]),
        .O(\n_0_RX_CONFIG_REG[14]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[15]_i_1__2 
       (.I0(Q[7]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[15]),
        .O(\n_0_RX_CONFIG_REG[15]_i_1__2 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[1]_i_1__2 
       (.I0(Q[1]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__2 ),
        .I3(RX_CONFIG_REG[1]),
        .O(\n_0_RX_CONFIG_REG[1]_i_1__2 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[2]_i_1__2 
       (.I0(Q[2]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__2 ),
        .I3(RX_CONFIG_REG[2]),
        .O(\n_0_RX_CONFIG_REG[2]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair493" *) 
   LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[3]_i_1__2 
       (.I0(Q[3]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__2 ),
        .I3(RX_CONFIG_REG[3]),
        .O(\n_0_RX_CONFIG_REG[3]_i_1__2 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[4]_i_1__2 
       (.I0(Q[4]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__2 ),
        .I3(RX_CONFIG_REG[4]),
        .O(\n_0_RX_CONFIG_REG[4]_i_1__2 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[5]_i_1__2 
       (.I0(Q[5]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__2 ),
        .I3(RX_CONFIG_REG[5]),
        .O(\n_0_RX_CONFIG_REG[5]_i_1__2 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[6]_i_1__2 
       (.I0(Q[6]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__2 ),
        .I3(RX_CONFIG_REG[6]),
        .O(\n_0_RX_CONFIG_REG[6]_i_1__2 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[7]_i_1__2 
       (.I0(Q[7]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__2 ),
        .I3(RX_CONFIG_REG[7]),
        .O(\n_0_RX_CONFIG_REG[7]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair487" *) 
   LUT5 #(
    .INIT(32'h55555515)) 
     \RX_CONFIG_REG[7]_i_2__2 
       (.I0(C),
        .I1(C_REG2),
        .I2(I11[0]),
        .I3(I11[1]),
        .I4(I11[2]),
        .O(\n_0_RX_CONFIG_REG[7]_i_2__2 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[8]_i_1__2 
       (.I0(Q[0]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[8]),
        .O(\n_0_RX_CONFIG_REG[8]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[9]_i_1__2 
       (.I0(Q[1]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[9]),
        .O(\n_0_RX_CONFIG_REG[9]_i_1__2 ));
LUT6 #(
    .INIT(64'h808080FF80808000)) 
     RX_CONFIG_REG_NULL_i_1__2
       (.I0(n_0_RX_CONFIG_REG_NULL_i_2__2),
        .I1(n_0_RX_CONFIG_REG_NULL_i_3__2),
        .I2(n_0_RX_CONFIG_REG_NULL_i_4__2),
        .I3(SRESET),
        .I4(RX_CONFIG_VALID),
        .I5(I13),
        .O(O9));
LUT5 #(
    .INIT(32'h00000001)) 
     RX_CONFIG_REG_NULL_i_2__2
       (.I0(RX_CONFIG_REG[3]),
        .I1(RX_CONFIG_REG[4]),
        .I2(RX_CONFIG_REG[1]),
        .I3(RX_CONFIG_REG[2]),
        .I4(RX_CONFIG_REG[0]),
        .O(n_0_RX_CONFIG_REG_NULL_i_2__2));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     RX_CONFIG_REG_NULL_i_3__2
       (.I0(RX_CONFIG_REG[12]),
        .I1(RX_CONFIG_REG[11]),
        .I2(RX_CONFIG_REG[15]),
        .I3(SRESET),
        .I4(RX_CONFIG_REG[13]),
        .I5(RX_CONFIG_REG[14]),
        .O(n_0_RX_CONFIG_REG_NULL_i_3__2));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     RX_CONFIG_REG_NULL_i_4__2
       (.I0(RX_CONFIG_REG[6]),
        .I1(RX_CONFIG_REG[5]),
        .I2(RX_CONFIG_REG[9]),
        .I3(RX_CONFIG_REG[10]),
        .I4(RX_CONFIG_REG[7]),
        .I5(RX_CONFIG_REG[8]),
        .O(n_0_RX_CONFIG_REG_NULL_i_4__2));
(* SOFT_HLUTNM = "soft_lutpair488" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \RX_CONFIG_REG_REG[15]_i_1__2 
       (.I0(SRESET),
        .I1(RX_IDLE),
        .O(O7));
FDRE \RX_CONFIG_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[0]_i_1__2 ),
        .Q(RX_CONFIG_REG[0]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[10]_i_1__2 ),
        .Q(RX_CONFIG_REG[10]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[11]_i_1__2 ),
        .Q(RX_CONFIG_REG[11]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[12]_i_1__2 ),
        .Q(RX_CONFIG_REG[12]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[13]_i_1__2 ),
        .Q(RX_CONFIG_REG[13]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[14]_i_1__2 ),
        .Q(RX_CONFIG_REG[14]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[15]_i_1__2 ),
        .Q(RX_CONFIG_REG[15]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[1]_i_1__2 ),
        .Q(RX_CONFIG_REG[1]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[2]_i_1__2 ),
        .Q(RX_CONFIG_REG[2]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[3]_i_1__2 ),
        .Q(RX_CONFIG_REG[3]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[4]_i_1__2 ),
        .Q(RX_CONFIG_REG[4]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[5]_i_1__2 ),
        .Q(RX_CONFIG_REG[5]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[6]_i_1__2 ),
        .Q(RX_CONFIG_REG[6]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[7]_i_1__2 ),
        .Q(RX_CONFIG_REG[7]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[8]_i_1__2 ),
        .Q(RX_CONFIG_REG[8]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[9]_i_1__2 ),
        .Q(RX_CONFIG_REG[9]),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_10__2 
       (.I0(RX_CONFIG_REG[0]),
        .I1(I8[0]),
        .I2(RX_CONFIG_REG[1]),
        .I3(I8[1]),
        .I4(I8[2]),
        .I5(RX_CONFIG_REG[2]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_10__2 ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_7__2 
       (.I0(RX_CONFIG_REG[10]),
        .I1(I8[7]),
        .I2(RX_CONFIG_REG[11]),
        .I3(I8[8]),
        .I4(I8[6]),
        .I5(RX_CONFIG_REG[9]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_7__2 ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_9__2 
       (.I0(RX_CONFIG_REG[3]),
        .I1(I8[3]),
        .I2(RX_CONFIG_REG[4]),
        .I3(I8[4]),
        .I4(I8[5]),
        .I5(RX_CONFIG_REG[5]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_9__2 ));
CARRY4 \RX_CONFIG_SNAPSHOT_reg[15]_i_2__2 
       (.CI(\n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 ),
        .CO({\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__2_CO_UNCONNECTED [3:1],CO}),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__2_O_UNCONNECTED [3:0]),
        .S({\<const0> ,\<const0> ,\<const0> ,I3}));
CARRY4 \RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 
       (.CI(\<const0> ),
        .CO({\n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 ,\n_1_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 ,\n_2_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 ,\n_3_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2 }),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_5__2_O_UNCONNECTED [3:0]),
        .S({\n_0_RX_CONFIG_SNAPSHOT[15]_i_7__2 ,S,\n_0_RX_CONFIG_SNAPSHOT[15]_i_9__2 ,\n_0_RX_CONFIG_SNAPSHOT[15]_i_10__2 }));
LUT5 #(
    .INIT(32'h00000002)) 
     RX_CONFIG_VALID_INT_i_1__2
       (.I0(RXSYNC_STATUS),
        .I1(CGBAD),
        .I2(RXCHARISK_REG1),
        .I3(n_0_RX_CONFIG_VALID_INT_i_2__2),
        .I4(S2),
        .O(RX_CONFIG_VALID_INT0));
(* SOFT_HLUTNM = "soft_lutpair494" *) 
   LUT3 #(
    .INIT(8'hAB)) 
     RX_CONFIG_VALID_INT_i_2__2
       (.I0(I1),
        .I1(C_HDR_REMOVED_REG),
        .I2(C_REG1),
        .O(n_0_RX_CONFIG_VALID_INT_i_2__2));
FDRE RX_CONFIG_VALID_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_CONFIG_VALID_INT0),
        .Q(RX_CONFIG_VALID),
        .R(SR));
FDRE \RX_CONFIG_VALID_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_CONFIG_VALID),
        .Q(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .R(SR));
FDRE \RX_CONFIG_VALID_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .Q(p_0_in2_in),
        .R(SR));
FDRE \RX_CONFIG_VALID_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_0_in2_in),
        .Q(p_1_in),
        .R(SR));
FDRE \RX_CONFIG_VALID_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_1_in),
        .Q(\n_0_RX_CONFIG_VALID_REG_reg[3] ),
        .R(SR));
LUT6 #(
    .INIT(64'h888AAAAA88888888)) 
     RX_DATA_ERROR_i_1__2
       (.I0(O1),
        .I1(n_0_RX_DATA_ERROR_i_2__2),
        .I2(R),
        .I3(I10),
        .I4(R_REG1),
        .I5(T_REG2),
        .O(RX_DATA_ERROR0));
LUT5 #(
    .INIT(32'hFFFF0A0E)) 
     RX_DATA_ERROR_i_2__2
       (.I0(K28p5_REG1),
        .I1(R),
        .I2(R_REG1),
        .I3(T_REG1),
        .I4(n_0_RX_DATA_ERROR_i_4__2),
        .O(n_0_RX_DATA_ERROR_i_2__2));
(* SOFT_HLUTNM = "soft_lutpair488" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     RX_DATA_ERROR_i_4__2
       (.I0(CGBAD_REG3),
        .I1(C_REG1),
        .I2(ILLEGAL_K_REG2),
        .I3(RX_IDLE),
        .O(n_0_RX_DATA_ERROR_i_4__2));
FDRE RX_DATA_ERROR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_DATA_ERROR0),
        .Q(RX_DATA_ERROR),
        .R(SYNC_STATUS_REG0));
FDRE #(
    .INIT(1'b0)) 
     RX_DV_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(gmii_rx_dv_ch3_int),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2220222000202220)) 
     RX_ER_i_1__2
       (.I0(XMIT_DATA),
        .I1(I7),
        .I2(O1),
        .I3(RXSYNC_STATUS),
        .I4(n_0_RX_ER_i_4__2),
        .I5(RX_DATA_ERROR),
        .O(RX_ER0));
(* SOFT_HLUTNM = "soft_lutpair486" *) 
   LUT2 #(
    .INIT(4'h1)) 
     RX_ER_i_4__2
       (.I0(FALSE_CARRIER_REG3),
        .I1(EXTEND_REG1),
        .O(n_0_RX_ER_i_4__2));
FDRE #(
    .INIT(1'b0)) 
     RX_ER_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_ER0),
        .Q(gmii_rx_er_ch3_int),
        .R(SR));
LUT5 #(
    .INIT(32'h00700050)) 
     RX_INVALID_i_1__2
       (.I0(n_0_RX_INVALID_i_2__2),
        .I1(K28p5_REG1),
        .I2(RXSYNC_STATUS),
        .I3(SR),
        .I4(O2),
        .O(n_0_RX_INVALID_i_1__2));
LUT4 #(
    .INIT(16'h4445)) 
     RX_INVALID_i_2__2
       (.I0(FROM_RX_CX),
        .I1(I6),
        .I2(FROM_RX_K),
        .I3(FROM_IDLE_D),
        .O(n_0_RX_INVALID_i_2__2));
FDRE RX_INVALID_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RX_INVALID_i_1__2),
        .Q(O2),
        .R(\<const0> ));
FDRE R_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(R),
        .Q(R_REG1),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2000000000000000)) 
     R_i_1__5
       (.I0(n_0_R_i_2__2),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(I1),
        .O(K23p7));
(* SOFT_HLUTNM = "soft_lutpair483" *) 
   LUT4 #(
    .INIT(16'h8000)) 
     R_i_2__2
       (.I0(Q[4]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .O(n_0_R_i_2__2));
FDRE R_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K23p7),
        .Q(R),
        .R(\<const0> ));
FDRE SOP_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP),
        .Q(SOP_REG1),
        .R(\<const0> ));
FDRE SOP_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP_REG1),
        .Q(SOP_REG2),
        .R(\<const0> ));
FDRE SOP_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP_REG2),
        .Q(SOP_REG3),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h20202000)) 
     SOP_i_1__2
       (.I0(I6),
        .I1(WAIT_FOR_K),
        .I2(S_0),
        .I3(RX_IDLE),
        .I4(n_0_EXTEND_reg),
        .O(SOP0));
FDRE SOP_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP0),
        .Q(SOP),
        .R(SR));
FDRE SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const1> ),
        .Q(SYNC_STATUS_REG),
        .R(SYNC_STATUS_REG0));
(* SOFT_HLUTNM = "soft_lutpair485" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     S_i_2__2
       (.I0(Q[3]),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[4]),
        .O(O4));
FDRE S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S0),
        .Q(S_0),
        .R(\<const0> ));
FDRE T_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T),
        .Q(T_REG1),
        .R(\<const0> ));
FDRE T_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T_REG1),
        .Q(T_REG2),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair480" *) 
   LUT5 #(
    .INIT(32'h00800000)) 
     T_i_1__5
       (.I0(O4),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(I1),
        .O(K29p7));
FDRE T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K29p7),
        .Q(T),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'h0222222200002222)) 
     WAIT_FOR_K_i_1__2
       (.I0(RXSYNC_STATUS),
        .I1(SR),
        .I2(RXEVEN),
        .I3(K28p5_REG1),
        .I4(SYNC_STATUS_REG),
        .I5(WAIT_FOR_K),
        .O(n_0_WAIT_FOR_K_i_1__2));
FDRE WAIT_FOR_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_WAIT_FOR_K_i_1__2),
        .Q(WAIT_FOR_K),
        .R(\<const0> ));
endmodule

(* ORIG_REF_NAME = "RX" *) 
module quadsgmiiRX__parameterized0_26
   (K28p5_REG1,
    RX_IDLE,
    SOP_REG3,
    EOP_REG1,
    gmii_rx_er_ch2_int,
    RX_CONFIG_VALID,
    status_vector_ch2,
    O1,
    gmii_rx_dv_ch2_int,
    O2,
    CO,
    O3,
    O4,
    O5,
    O6,
    SR,
    RX_CONFIG_REG,
    O7,
    O8,
    O9,
    O10,
    userclk2,
    I10,
    FALSE_NIT0,
    S0,
    SYNC_STATUS_REG0,
    S2,
    I1,
    I2,
    Q,
    S,
    I3,
    I4,
    I5,
    RXSYNC_STATUS,
    I6,
    XMIT_DATA,
    I7,
    RXNOTINTABLE_INT,
    RXEVEN,
    SRESET,
    I8,
    I9,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16);
  output K28p5_REG1;
  output RX_IDLE;
  output SOP_REG3;
  output EOP_REG1;
  output gmii_rx_er_ch2_int;
  output RX_CONFIG_VALID;
  output [1:0]status_vector_ch2;
  output O1;
  output gmii_rx_dv_ch2_int;
  output O2;
  output [0:0]CO;
  output [0:0]O3;
  output O4;
  output O5;
  output O6;
  output [0:0]SR;
  output [15:0]RX_CONFIG_REG;
  output O7;
  output O8;
  output O9;
  output [7:0]O10;
  input userclk2;
  input [0:0]I10;
  input FALSE_NIT0;
  input S0;
  input SYNC_STATUS_REG0;
  input S2;
  input I1;
  input I2;
  input [7:0]Q;
  input [0:0]S;
  input [0:0]I3;
  input [0:0]I4;
  input [0:0]I5;
  input RXSYNC_STATUS;
  input I6;
  input XMIT_DATA;
  input I7;
  input RXNOTINTABLE_INT;
  input RXEVEN;
  input SRESET;
  input [8:0]I8;
  input [8:0]I9;
  input I11;
  input [2:0]I12;
  input I13;
  input I14;
  input I15;
  input [0:0]I16;

  wire \<const0> ;
  wire \<const1> ;
  wire C;
  wire C0;
  wire CGBAD;
  wire CGBAD_REG1;
  wire CGBAD_REG2;
  wire CGBAD_REG3;
  wire [0:0]CO;
  wire C_HDR_REMOVED;
  wire C_HDR_REMOVED_REG;
  wire C_REG1;
  wire C_REG2;
  wire C_REG3;
  wire D0p0;
  wire D0p0_REG;
  wire EOP;
  wire EOP0;
  wire EOP_REG1;
  wire EOP_REG10;
  wire EXTEND_ERR;
  wire EXTEND_ERR0;
  wire EXTEND_REG1;
  wire EXTEND_REG2;
  wire EXTEND_REG3;
  wire EXT_ILLEGAL_K;
  wire EXT_ILLEGAL_K0;
  wire EXT_ILLEGAL_K_REG1;
  wire EXT_ILLEGAL_K_REG2;
  wire FALSE_CARRIER;
  wire FALSE_CARRIER_REG1;
  wire FALSE_CARRIER_REG2;
  wire FALSE_CARRIER_REG3;
  wire FALSE_DATA;
  wire FALSE_DATA0;
  wire FALSE_K;
  wire FALSE_K0;
  wire FALSE_NIT;
  wire FALSE_NIT0;
  wire FROM_IDLE_D;
  wire FROM_IDLE_D0;
  wire FROM_RX_CX;
  wire FROM_RX_CX0;
  wire FROM_RX_K;
  wire FROM_RX_K0;
  wire I;
  wire I0;
  wire I1;
  wire [0:0]I10;
  wire I11;
  wire [2:0]I12;
  wire I13;
  wire I14;
  wire I15;
  wire [0:0]I16;
  wire I2;
  wire [0:0]I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire I6;
  wire I7;
  wire [8:0]I8;
  wire [8:0]I9;
  wire ILLEGAL_K;
  wire ILLEGAL_K0;
  wire ILLEGAL_K_REG1;
  wire ILLEGAL_K_REG2;
  wire K23p7;
  wire K28p5;
  wire K28p5_REG1;
  wire K28p5_REG2;
  wire K29p7;
  wire O1;
  wire [7:0]O10;
  wire O2;
  wire [0:0]O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [7:0]Q;
  wire R;
  wire RUDI_C0;
  wire RUDI_I0;
  wire RXCHARISK_REG1;
  wire [7:0]RXDATA_REG5;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_VALID;
  wire RX_CONFIG_VALID_INT0;
  wire RX_DATA_ERROR;
  wire RX_DATA_ERROR0;
  wire RX_ER0;
  wire RX_IDLE;
  wire R_REG1;
  wire [0:0]S;
  wire S0;
  wire S2;
  wire SOP;
  wire SOP0;
  wire SOP_REG1;
  wire SOP_REG2;
  wire SOP_REG3;
  wire [0:0]SR;
  wire SRESET;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire S_0;
  wire T;
  wire T_REG1;
  wire T_REG2;
  wire WAIT_FOR_K;
  wire XMIT_DATA;
  wire gmii_rx_dv_ch2_int;
  wire gmii_rx_er_ch2_int;
  wire n_0_CONSISTENCY_MATCH_i_5__1;
  wire n_0_CONSISTENCY_MATCH_i_7__1;
  wire n_0_CONSISTENCY_MATCH_i_8__1;
  wire n_0_CONSISTENCY_MATCH_reg_i_3__1;
  wire n_0_C_i_3__1;
  wire n_0_C_i_4__1;
  wire n_0_C_i_5__1;
  wire n_0_C_i_6__1;
  wire n_0_C_reg_i_2__1;
  wire n_0_D0p0_REG_i_2__1;
  wire n_0_EOP_i_2__1;
  wire n_0_EXTEND_i_1__1;
  wire n_0_EXTEND_i_3__1;
  wire n_0_EXTEND_reg;
  wire n_0_FALSE_CARRIER_i_1__1;
  wire n_0_FALSE_CARRIER_i_2__1;
  wire n_0_FALSE_CARRIER_i_3__1;
  wire n_0_FALSE_DATA_i_2__1;
  wire n_0_FALSE_DATA_i_3__1;
  wire n_0_FALSE_DATA_i_4__1;
  wire n_0_FALSE_K_i_2__1;
  wire n_0_FALSE_NIT_i_5__1;
  wire n_0_FALSE_NIT_i_6__1;
  wire \n_0_IDLE_REG_reg[0] ;
  wire \n_0_IDLE_REG_reg[2] ;
  wire n_0_I_i_2__1;
  wire n_0_RECEIVE_i_1__1;
  wire \n_0_RXDATA_REG4_reg[0]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[1]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[2]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[3]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[4]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[5]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[6]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[7]_srl4 ;
  wire \n_0_RXD[0]_i_1__1 ;
  wire \n_0_RXD[1]_i_1__1 ;
  wire \n_0_RXD[2]_i_1__1 ;
  wire \n_0_RXD[3]_i_1__1 ;
  wire \n_0_RXD[4]_i_1__1 ;
  wire \n_0_RXD[5]_i_1__1 ;
  wire \n_0_RXD[6]_i_1__1 ;
  wire \n_0_RXD[7]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[0]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[10]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[11]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[12]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[13]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[14]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[15]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[1]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[2]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[3]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[4]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[5]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[6]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[7]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[7]_i_2__1 ;
  wire \n_0_RX_CONFIG_REG[8]_i_1__1 ;
  wire \n_0_RX_CONFIG_REG[9]_i_1__1 ;
  wire n_0_RX_CONFIG_REG_NULL_i_2__1;
  wire n_0_RX_CONFIG_REG_NULL_i_3__1;
  wire n_0_RX_CONFIG_REG_NULL_i_4__1;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_10__1 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_7__1 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_9__1 ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 ;
  wire n_0_RX_CONFIG_VALID_INT_i_2__1;
  wire \n_0_RX_CONFIG_VALID_REG_reg[0] ;
  wire \n_0_RX_CONFIG_VALID_REG_reg[3] ;
  wire n_0_RX_DATA_ERROR_i_2__1;
  wire n_0_RX_DATA_ERROR_i_4__1;
  wire n_0_RX_ER_i_4__1;
  wire n_0_RX_INVALID_i_1__1;
  wire n_0_RX_INVALID_i_2__1;
  wire n_0_R_i_2__1;
  wire n_0_WAIT_FOR_K_i_1__1;
  wire n_1_CONSISTENCY_MATCH_reg_i_3__1;
  wire \n_1_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 ;
  wire n_2_CONSISTENCY_MATCH_reg_i_3__1;
  wire \n_2_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 ;
  wire n_3_CONSISTENCY_MATCH_reg_i_3__1;
  wire \n_3_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 ;
  wire p_0_in1_in;
  wire p_0_in2_in;
  wire p_1_in;
  wire [1:0]status_vector_ch2;
  wire userclk2;
  wire [3:1]NLW_CONSISTENCY_MATCH_reg_i_2__1_CO_UNCONNECTED;
  wire [3:0]NLW_CONSISTENCY_MATCH_reg_i_2__1_O_UNCONNECTED;
  wire [3:0]NLW_CONSISTENCY_MATCH_reg_i_3__1_O_UNCONNECTED;
  wire [3:1]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__1_CO_UNCONNECTED ;
  wire [3:0]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__1_O_UNCONNECTED ;
  wire [3:0]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1_O_UNCONNECTED ;

FDRE CGBAD_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD),
        .Q(CGBAD_REG1),
        .R(\<const0> ));
FDRE CGBAD_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD_REG1),
        .Q(CGBAD_REG2),
        .R(\<const0> ));
FDRE CGBAD_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD_REG2),
        .Q(CGBAD_REG3),
        .R(I10));
FDRE CGBAD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S2),
        .Q(CGBAD),
        .R(I10));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_5__1
       (.I0(RX_CONFIG_REG[9]),
        .I1(I9[6]),
        .I2(RX_CONFIG_REG[10]),
        .I3(I9[7]),
        .I4(I9[8]),
        .I5(RX_CONFIG_REG[11]),
        .O(n_0_CONSISTENCY_MATCH_i_5__1));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_7__1
       (.I0(RX_CONFIG_REG[5]),
        .I1(I9[5]),
        .I2(RX_CONFIG_REG[3]),
        .I3(I9[3]),
        .I4(I9[4]),
        .I5(RX_CONFIG_REG[4]),
        .O(n_0_CONSISTENCY_MATCH_i_7__1));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_8__1
       (.I0(RX_CONFIG_REG[2]),
        .I1(I9[2]),
        .I2(RX_CONFIG_REG[0]),
        .I3(I9[0]),
        .I4(I9[1]),
        .I5(RX_CONFIG_REG[1]),
        .O(n_0_CONSISTENCY_MATCH_i_8__1));
CARRY4 CONSISTENCY_MATCH_reg_i_2__1
       (.CI(n_0_CONSISTENCY_MATCH_reg_i_3__1),
        .CO({NLW_CONSISTENCY_MATCH_reg_i_2__1_CO_UNCONNECTED[3:1],O3}),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_CONSISTENCY_MATCH_reg_i_2__1_O_UNCONNECTED[3:0]),
        .S({\<const0> ,\<const0> ,\<const0> ,I5}));
CARRY4 CONSISTENCY_MATCH_reg_i_3__1
       (.CI(\<const0> ),
        .CO({n_0_CONSISTENCY_MATCH_reg_i_3__1,n_1_CONSISTENCY_MATCH_reg_i_3__1,n_2_CONSISTENCY_MATCH_reg_i_3__1,n_3_CONSISTENCY_MATCH_reg_i_3__1}),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_CONSISTENCY_MATCH_reg_i_3__1_O_UNCONNECTED[3:0]),
        .S({n_0_CONSISTENCY_MATCH_i_5__1,I4,n_0_CONSISTENCY_MATCH_i_7__1,n_0_CONSISTENCY_MATCH_i_8__1}));
(* SOFT_HLUTNM = "soft_lutpair357" *) 
   LUT4 #(
    .INIT(16'h1000)) 
     C_HDR_REMOVED_REG_i_1__1
       (.I0(I12[2]),
        .I1(I12[1]),
        .I2(I12[0]),
        .I3(C_REG2),
        .O(C_HDR_REMOVED));
FDRE C_HDR_REMOVED_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_HDR_REMOVED),
        .Q(C_HDR_REMOVED_REG),
        .R(\<const0> ));
FDRE C_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C),
        .Q(C_REG1),
        .R(\<const0> ));
FDRE C_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_REG1),
        .Q(C_REG2),
        .R(\<const0> ));
FDRE C_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_REG2),
        .Q(C_REG3),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair352" *) 
   LUT3 #(
    .INIT(8'h04)) 
     C_i_1__1
       (.I0(n_0_C_reg_i_2__1),
        .I1(K28p5_REG1),
        .I2(I1),
        .O(C0));
LUT6 #(
    .INIT(64'hBFFFFFFFFFFFFFFF)) 
     C_i_3__1
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(Q[7]),
        .I5(n_0_C_i_5__1),
        .O(n_0_C_i_3__1));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFBFF)) 
     C_i_4__1
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(n_0_C_i_6__1),
        .I4(Q[0]),
        .I5(Q[4]),
        .O(n_0_C_i_4__1));
(* SOFT_HLUTNM = "soft_lutpair355" *) 
   LUT2 #(
    .INIT(4'h2)) 
     C_i_5__1
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(n_0_C_i_5__1));
(* SOFT_HLUTNM = "soft_lutpair363" *) 
   LUT2 #(
    .INIT(4'h1)) 
     C_i_6__1
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(n_0_C_i_6__1));
FDRE C_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C0),
        .Q(C),
        .R(\<const0> ));
MUXF7 C_reg_i_2__1
       (.I0(n_0_C_i_3__1),
        .I1(n_0_C_i_4__1),
        .O(n_0_C_reg_i_2__1),
        .S(Q[1]));
(* SOFT_HLUTNM = "soft_lutpair361" *) 
   LUT4 #(
    .INIT(16'h0002)) 
     D0p0_REG_i_1__1
       (.I0(n_0_D0p0_REG_i_2__1),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[7]),
        .O(D0p0));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     D0p0_REG_i_2__1
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(I1),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(n_0_D0p0_REG_i_2__1));
FDRE D0p0_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(D0p0),
        .Q(D0p0_REG),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'hEA)) 
     EOP_REG1_i_1__1
       (.I0(EOP),
        .I1(n_0_EXTEND_reg),
        .I2(EXTEND_REG1),
        .O(EOP_REG10));
FDRE EOP_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EOP_REG10),
        .Q(EOP_REG1),
        .R(I10));
LUT6 #(
    .INIT(64'hFFFFFFFF88888000)) 
     EOP_i_1__1
       (.I0(T_REG2),
        .I1(R_REG1),
        .I2(RXEVEN),
        .I3(K28p5_REG1),
        .I4(R),
        .I5(n_0_EOP_i_2__1),
        .O(EOP0));
LUT5 #(
    .INIT(32'hF8888888)) 
     EOP_i_2__1
       (.I0(RX_IDLE),
        .I1(K28p5_REG1),
        .I2(RXEVEN),
        .I3(D0p0_REG),
        .I4(C_REG1),
        .O(n_0_EOP_i_2__1));
FDRE EOP_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EOP0),
        .Q(EOP),
        .R(I10));
LUT3 #(
    .INIT(8'hEA)) 
     EXTEND_ERR_i_1__1
       (.I0(EXT_ILLEGAL_K_REG2),
        .I1(CGBAD_REG3),
        .I2(EXTEND_REG3),
        .O(EXTEND_ERR0));
FDRE EXTEND_ERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_ERR0),
        .Q(EXTEND_ERR),
        .R(SYNC_STATUS_REG0));
FDRE EXTEND_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EXTEND_reg),
        .Q(EXTEND_REG1),
        .R(\<const0> ));
FDRE EXTEND_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_REG1),
        .Q(EXTEND_REG2),
        .R(\<const0> ));
FDRE EXTEND_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_REG2),
        .Q(EXTEND_REG3),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hAA00AA2AAA00AA00)) 
     EXTEND_i_1__1
       (.I0(I13),
        .I1(RXEVEN),
        .I2(K28p5_REG1),
        .I3(n_0_EXTEND_i_3__1),
        .I4(S_0),
        .I5(n_0_EXTEND_reg),
        .O(n_0_EXTEND_i_1__1));
LUT3 #(
    .INIT(8'h80)) 
     EXTEND_i_3__1
       (.I0(R),
        .I1(O1),
        .I2(R_REG1),
        .O(n_0_EXTEND_i_3__1));
FDRE EXTEND_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EXTEND_i_1__1),
        .Q(n_0_EXTEND_reg),
        .R(\<const0> ));
FDRE EXT_ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K),
        .Q(EXT_ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
FDRE EXT_ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K_REG1),
        .Q(EXT_ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
LUT5 #(
    .INIT(32'h00000700)) 
     EXT_ILLEGAL_K_i_1__1
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .I2(R),
        .I3(EXTEND_REG1),
        .I4(S_0),
        .O(EXT_ILLEGAL_K0));
FDRE EXT_ILLEGAL_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K0),
        .Q(EXT_ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
FDRE FALSE_CARRIER_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER),
        .Q(FALSE_CARRIER_REG1),
        .R(\<const0> ));
FDRE FALSE_CARRIER_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER_REG1),
        .Q(FALSE_CARRIER_REG2),
        .R(\<const0> ));
FDRE FALSE_CARRIER_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER_REG2),
        .Q(FALSE_CARRIER_REG3),
        .R(SYNC_STATUS_REG0));
LUT6 #(
    .INIT(64'h0A0E0E0E0A0A0A0A)) 
     FALSE_CARRIER_i_1__1
       (.I0(n_0_FALSE_CARRIER_i_2__1),
        .I1(RXSYNC_STATUS),
        .I2(I10),
        .I3(RXEVEN),
        .I4(K28p5_REG1),
        .I5(FALSE_CARRIER),
        .O(n_0_FALSE_CARRIER_i_1__1));
LUT5 #(
    .INIT(32'h00000020)) 
     FALSE_CARRIER_i_2__1
       (.I0(I6),
        .I1(S_0),
        .I2(RX_IDLE),
        .I3(K28p5_REG1),
        .I4(n_0_FALSE_CARRIER_i_3__1),
        .O(n_0_FALSE_CARRIER_i_2__1));
LUT3 #(
    .INIT(8'hFE)) 
     FALSE_CARRIER_i_3__1
       (.I0(FALSE_DATA),
        .I1(FALSE_K),
        .I2(FALSE_NIT),
        .O(n_0_FALSE_CARRIER_i_3__1));
FDRE FALSE_CARRIER_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_FALSE_CARRIER_i_1__1),
        .Q(FALSE_CARRIER),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair364" *) 
   LUT3 #(
    .INIT(8'h02)) 
     FALSE_DATA_i_1__1
       (.I0(n_0_FALSE_DATA_i_2__1),
        .I1(RXNOTINTABLE_INT),
        .I2(I1),
        .O(FALSE_DATA0));
LUT6 #(
    .INIT(64'h00004400000F0000)) 
     FALSE_DATA_i_2__1
       (.I0(n_0_FALSE_DATA_i_3__1),
        .I1(Q[2]),
        .I2(n_0_FALSE_DATA_i_4__1),
        .I3(Q[7]),
        .I4(Q[6]),
        .I5(Q[5]),
        .O(n_0_FALSE_DATA_i_2__1));
(* SOFT_HLUTNM = "soft_lutpair351" *) 
   LUT4 #(
    .INIT(16'hEFF1)) 
     FALSE_DATA_i_3__1
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(n_0_FALSE_DATA_i_3__1));
(* SOFT_HLUTNM = "soft_lutpair351" *) 
   LUT5 #(
    .INIT(32'hE8FFFFFF)) 
     FALSE_DATA_i_4__1
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(n_0_FALSE_DATA_i_4__1));
FDRE FALSE_DATA_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_DATA0),
        .Q(FALSE_DATA),
        .R(I10));
LUT6 #(
    .INIT(64'h0000000040000040)) 
     FALSE_K_i_1__1
       (.I0(n_0_FALSE_K_i_2__1),
        .I1(Q[7]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[6]),
        .I5(RXNOTINTABLE_INT),
        .O(FALSE_K0));
(* SOFT_HLUTNM = "soft_lutpair354" *) 
   LUT5 #(
    .INIT(32'hEFFFFFFF)) 
     FALSE_K_i_2__1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(I1),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(n_0_FALSE_K_i_2__1));
FDRE FALSE_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_K0),
        .Q(FALSE_K),
        .R(I10));
LUT6 #(
    .INIT(64'hFFFF400040004000)) 
     FALSE_NIT_i_2__1
       (.I0(n_0_FALSE_K_i_2__1),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(n_0_FALSE_NIT_i_5__1),
        .I5(n_0_D0p0_REG_i_2__1),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair361" *) 
   LUT3 #(
    .INIT(8'h28)) 
     FALSE_NIT_i_3__1
       (.I0(n_0_D0p0_REG_i_2__1),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(O6));
LUT6 #(
    .INIT(64'h0600000000000000)) 
     FALSE_NIT_i_4__1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(n_0_FALSE_NIT_i_6__1),
        .I3(Q[6]),
        .I4(Q[5]),
        .I5(Q[4]),
        .O(O7));
(* SOFT_HLUTNM = "soft_lutpair350" *) 
   LUT2 #(
    .INIT(4'h8)) 
     FALSE_NIT_i_5__1
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(n_0_FALSE_NIT_i_5__1));
(* SOFT_HLUTNM = "soft_lutpair354" *) 
   LUT3 #(
    .INIT(8'h7F)) 
     FALSE_NIT_i_6__1
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(I1),
        .O(n_0_FALSE_NIT_i_6__1));
FDRE FALSE_NIT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_NIT0),
        .Q(FALSE_NIT),
        .R(I10));
LUT4 #(
    .INIT(16'h0004)) 
     FROM_IDLE_D_i_1__1
       (.I0(K28p5_REG1),
        .I1(RX_IDLE),
        .I2(WAIT_FOR_K),
        .I3(I6),
        .O(FROM_IDLE_D0));
FDRE FROM_IDLE_D_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_IDLE_D0),
        .Q(FROM_IDLE_D),
        .R(SYNC_STATUS_REG0));
LUT6 #(
    .INIT(64'hFFFFA8FFFCFCA8A8)) 
     FROM_RX_CX_i_1__1
       (.I0(RXCHARISK_REG1),
        .I1(C_REG1),
        .I2(C_REG2),
        .I3(I11),
        .I4(CGBAD),
        .I5(C_REG3),
        .O(FROM_RX_CX0));
FDRE FROM_RX_CX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_RX_CX0),
        .Q(FROM_RX_CX),
        .R(SYNC_STATUS_REG0));
LUT4 #(
    .INIT(16'h00E0)) 
     FROM_RX_K_i_1__1
       (.I0(RXCHARISK_REG1),
        .I1(CGBAD),
        .I2(K28p5_REG2),
        .I3(I6),
        .O(FROM_RX_K0));
FDRE FROM_RX_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_RX_K0),
        .Q(FROM_RX_K),
        .R(SYNC_STATUS_REG0));
GND GND
       (.G(\<const0> ));
FDRE \IDLE_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE),
        .Q(\n_0_IDLE_REG_reg[0] ),
        .R(I10));
FDRE \IDLE_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_IDLE_REG_reg[0] ),
        .Q(p_0_in1_in),
        .R(I10));
FDRE \IDLE_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_0_in1_in),
        .Q(\n_0_IDLE_REG_reg[2] ),
        .R(I10));
FDRE ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K),
        .Q(ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
FDRE ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K_REG1),
        .Q(ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
LUT4 #(
    .INIT(16'h0010)) 
     ILLEGAL_K_i_1__1
       (.I0(R),
        .I1(K28p5_REG1),
        .I2(RXCHARISK_REG1),
        .I3(T),
        .O(ILLEGAL_K0));
FDRE ILLEGAL_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K0),
        .Q(ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
FDRE I_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I),
        .Q(RX_IDLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair352" *) 
   LUT5 #(
    .INIT(32'h33220020)) 
     I_i_1__1
       (.I0(n_0_C_reg_i_2__1),
        .I1(n_0_I_i_2__1),
        .I2(K28p5_REG1),
        .I3(I1),
        .I4(I6),
        .O(I0));
LUT6 #(
    .INIT(64'h000001FFFFFFFFFF)) 
     I_i_2__1
       (.I0(FALSE_DATA),
        .I1(FALSE_K),
        .I2(FALSE_NIT),
        .I3(RX_IDLE),
        .I4(K28p5_REG1),
        .I5(RXEVEN),
        .O(n_0_I_i_2__1));
FDRE I_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I0),
        .Q(I),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair353" *) 
   LUT5 #(
    .INIT(32'h04000000)) 
     K28p5_REG1_i_1__1
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(n_0_FALSE_K_i_2__1),
        .I3(Q[7]),
        .I4(Q[4]),
        .O(K28p5));
FDRE K28p5_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K28p5),
        .Q(K28p5_REG1),
        .R(\<const0> ));
FDRE K28p5_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K28p5_REG1),
        .Q(K28p5_REG2),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h0D0C)) 
     RECEIVED_IDLE_i_1__1
       (.I0(RX_CONFIG_VALID),
        .I1(RX_IDLE),
        .I2(SRESET),
        .I3(I15),
        .O(O9));
LUT5 #(
    .INIT(32'h44044400)) 
     RECEIVE_i_1__1
       (.I0(I10),
        .I1(RXSYNC_STATUS),
        .I2(EOP),
        .I3(SOP_REG2),
        .I4(O1),
        .O(n_0_RECEIVE_i_1__1));
FDRE RECEIVE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RECEIVE_i_1__1),
        .Q(O1),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'hFFFE)) 
     RUDI_C_i_1__1
       (.I0(p_1_in),
        .I1(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .I2(\n_0_RX_CONFIG_VALID_REG_reg[3] ),
        .I3(p_0_in2_in),
        .O(RUDI_C0));
FDRE RUDI_C_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RUDI_C0),
        .Q(status_vector_ch2[0]),
        .R(I10));
LUT2 #(
    .INIT(4'hE)) 
     RUDI_I_i_1__1
       (.I0(\n_0_IDLE_REG_reg[2] ),
        .I1(p_0_in1_in),
        .O(RUDI_I0));
FDRE RUDI_I_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RUDI_I0),
        .Q(status_vector_ch2[1]),
        .R(I10));
FDRE RXCHARISK_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(RXCHARISK_REG1),
        .R(\<const0> ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg[0]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[0]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[0]),
        .Q(\n_0_RXDATA_REG4_reg[0]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg[1]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[1]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[1]),
        .Q(\n_0_RXDATA_REG4_reg[1]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg[2]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[2]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[2]),
        .Q(\n_0_RXDATA_REG4_reg[2]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg[3]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[3]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[3]),
        .Q(\n_0_RXDATA_REG4_reg[3]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg[4]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[4]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[4]),
        .Q(\n_0_RXDATA_REG4_reg[4]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg[5]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[5]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[5]),
        .Q(\n_0_RXDATA_REG4_reg[5]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg[6]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[6]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[6]),
        .Q(\n_0_RXDATA_REG4_reg[6]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i2/RECEIVER/RXDATA_REG4_reg[7]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[7]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[7]),
        .Q(\n_0_RXDATA_REG4_reg[7]_srl4 ));
FDRE \RXDATA_REG5_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[0]_srl4 ),
        .Q(RXDATA_REG5[0]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[1]_srl4 ),
        .Q(RXDATA_REG5[1]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[2]_srl4 ),
        .Q(RXDATA_REG5[2]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[3]_srl4 ),
        .Q(RXDATA_REG5[3]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[4]_srl4 ),
        .Q(RXDATA_REG5[4]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[5]_srl4 ),
        .Q(RXDATA_REG5[5]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[6]_srl4 ),
        .Q(RXDATA_REG5[6]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[7]_srl4 ),
        .Q(RXDATA_REG5[7]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair362" *) 
   LUT4 #(
    .INIT(16'hBBBA)) 
     \RXD[0]_i_1__1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[0]),
        .O(\n_0_RXD[0]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair362" *) 
   LUT4 #(
    .INIT(16'h5554)) 
     \RXD[1]_i_1__1 
       (.I0(SOP_REG3),
        .I1(RXDATA_REG5[1]),
        .I2(FALSE_CARRIER_REG3),
        .I3(EXTEND_REG1),
        .O(\n_0_RXD[1]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair359" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \RXD[2]_i_1__1 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[2]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[2]_i_1__1 ));
LUT4 #(
    .INIT(16'h5554)) 
     \RXD[3]_i_1__1 
       (.I0(SOP_REG3),
        .I1(RXDATA_REG5[3]),
        .I2(FALSE_CARRIER_REG3),
        .I3(EXTEND_REG1),
        .O(\n_0_RXD[3]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair356" *) 
   LUT5 #(
    .INIT(32'hBABBBAAA)) 
     \RXD[4]_i_1__1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_ERR),
        .I3(EXTEND_REG1),
        .I4(RXDATA_REG5[4]),
        .O(\n_0_RXD[4]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair359" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \RXD[5]_i_1__1 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[5]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[5]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair360" *) 
   LUT4 #(
    .INIT(16'hABAA)) 
     \RXD[6]_i_1__1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[6]),
        .O(\n_0_RXD[6]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair360" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \RXD[7]_i_1__1 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[7]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[7]_i_1__1 ));
FDRE \RXD_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[0]_i_1__1 ),
        .Q(O10[0]),
        .R(I16));
FDRE \RXD_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[1]_i_1__1 ),
        .Q(O10[1]),
        .R(I16));
FDRE \RXD_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[2]_i_1__1 ),
        .Q(O10[2]),
        .R(I16));
FDRE \RXD_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[3]_i_1__1 ),
        .Q(O10[3]),
        .R(I16));
FDRE \RXD_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[4]_i_1__1 ),
        .Q(O10[4]),
        .R(I16));
FDRE \RXD_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[5]_i_1__1 ),
        .Q(O10[5]),
        .R(I16));
FDRE \RXD_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[6]_i_1__1 ),
        .Q(O10[6]),
        .R(I16));
FDRE \RXD_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[7]_i_1__1 ),
        .Q(O10[7]),
        .R(I16));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[0]_i_1__1 
       (.I0(Q[0]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__1 ),
        .I3(RX_CONFIG_REG[0]),
        .O(\n_0_RX_CONFIG_REG[0]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[10]_i_1__1 
       (.I0(Q[2]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[10]),
        .O(\n_0_RX_CONFIG_REG[10]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[11]_i_1__1 
       (.I0(Q[3]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[11]),
        .O(\n_0_RX_CONFIG_REG[11]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[12]_i_1__1 
       (.I0(Q[4]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[12]),
        .O(\n_0_RX_CONFIG_REG[12]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[13]_i_1__1 
       (.I0(Q[5]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[13]),
        .O(\n_0_RX_CONFIG_REG[13]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[14]_i_1__1 
       (.I0(Q[6]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[14]),
        .O(\n_0_RX_CONFIG_REG[14]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[15]_i_1__1 
       (.I0(Q[7]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[15]),
        .O(\n_0_RX_CONFIG_REG[15]_i_1__1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[1]_i_1__1 
       (.I0(Q[1]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__1 ),
        .I3(RX_CONFIG_REG[1]),
        .O(\n_0_RX_CONFIG_REG[1]_i_1__1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[2]_i_1__1 
       (.I0(Q[2]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__1 ),
        .I3(RX_CONFIG_REG[2]),
        .O(\n_0_RX_CONFIG_REG[2]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair363" *) 
   LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[3]_i_1__1 
       (.I0(Q[3]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__1 ),
        .I3(RX_CONFIG_REG[3]),
        .O(\n_0_RX_CONFIG_REG[3]_i_1__1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[4]_i_1__1 
       (.I0(Q[4]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__1 ),
        .I3(RX_CONFIG_REG[4]),
        .O(\n_0_RX_CONFIG_REG[4]_i_1__1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[5]_i_1__1 
       (.I0(Q[5]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__1 ),
        .I3(RX_CONFIG_REG[5]),
        .O(\n_0_RX_CONFIG_REG[5]_i_1__1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[6]_i_1__1 
       (.I0(Q[6]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__1 ),
        .I3(RX_CONFIG_REG[6]),
        .O(\n_0_RX_CONFIG_REG[6]_i_1__1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[7]_i_1__1 
       (.I0(Q[7]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__1 ),
        .I3(RX_CONFIG_REG[7]),
        .O(\n_0_RX_CONFIG_REG[7]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair357" *) 
   LUT5 #(
    .INIT(32'h55555515)) 
     \RX_CONFIG_REG[7]_i_2__1 
       (.I0(C),
        .I1(C_REG2),
        .I2(I12[0]),
        .I3(I12[1]),
        .I4(I12[2]),
        .O(\n_0_RX_CONFIG_REG[7]_i_2__1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[8]_i_1__1 
       (.I0(Q[0]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[8]),
        .O(\n_0_RX_CONFIG_REG[8]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[9]_i_1__1 
       (.I0(Q[1]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[9]),
        .O(\n_0_RX_CONFIG_REG[9]_i_1__1 ));
LUT6 #(
    .INIT(64'h808080FF80808000)) 
     RX_CONFIG_REG_NULL_i_1__1
       (.I0(n_0_RX_CONFIG_REG_NULL_i_2__1),
        .I1(n_0_RX_CONFIG_REG_NULL_i_3__1),
        .I2(n_0_RX_CONFIG_REG_NULL_i_4__1),
        .I3(SRESET),
        .I4(RX_CONFIG_VALID),
        .I5(I14),
        .O(O8));
LUT5 #(
    .INIT(32'h00000001)) 
     RX_CONFIG_REG_NULL_i_2__1
       (.I0(RX_CONFIG_REG[3]),
        .I1(RX_CONFIG_REG[4]),
        .I2(RX_CONFIG_REG[1]),
        .I3(RX_CONFIG_REG[2]),
        .I4(RX_CONFIG_REG[0]),
        .O(n_0_RX_CONFIG_REG_NULL_i_2__1));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     RX_CONFIG_REG_NULL_i_3__1
       (.I0(RX_CONFIG_REG[12]),
        .I1(RX_CONFIG_REG[11]),
        .I2(RX_CONFIG_REG[15]),
        .I3(SRESET),
        .I4(RX_CONFIG_REG[13]),
        .I5(RX_CONFIG_REG[14]),
        .O(n_0_RX_CONFIG_REG_NULL_i_3__1));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     RX_CONFIG_REG_NULL_i_4__1
       (.I0(RX_CONFIG_REG[6]),
        .I1(RX_CONFIG_REG[5]),
        .I2(RX_CONFIG_REG[9]),
        .I3(RX_CONFIG_REG[10]),
        .I4(RX_CONFIG_REG[7]),
        .I5(RX_CONFIG_REG[8]),
        .O(n_0_RX_CONFIG_REG_NULL_i_4__1));
(* SOFT_HLUTNM = "soft_lutpair358" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \RX_CONFIG_REG_REG[15]_i_1__1 
       (.I0(SRESET),
        .I1(RX_IDLE),
        .O(SR));
FDRE \RX_CONFIG_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[0]_i_1__1 ),
        .Q(RX_CONFIG_REG[0]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[10]_i_1__1 ),
        .Q(RX_CONFIG_REG[10]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[11]_i_1__1 ),
        .Q(RX_CONFIG_REG[11]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[12]_i_1__1 ),
        .Q(RX_CONFIG_REG[12]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[13]_i_1__1 ),
        .Q(RX_CONFIG_REG[13]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[14]_i_1__1 ),
        .Q(RX_CONFIG_REG[14]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[15]_i_1__1 ),
        .Q(RX_CONFIG_REG[15]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[1]_i_1__1 ),
        .Q(RX_CONFIG_REG[1]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[2]_i_1__1 ),
        .Q(RX_CONFIG_REG[2]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[3]_i_1__1 ),
        .Q(RX_CONFIG_REG[3]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[4]_i_1__1 ),
        .Q(RX_CONFIG_REG[4]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[5]_i_1__1 ),
        .Q(RX_CONFIG_REG[5]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[6]_i_1__1 ),
        .Q(RX_CONFIG_REG[6]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[7]_i_1__1 ),
        .Q(RX_CONFIG_REG[7]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[8]_i_1__1 ),
        .Q(RX_CONFIG_REG[8]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[9]_i_1__1 ),
        .Q(RX_CONFIG_REG[9]),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_10__1 
       (.I0(RX_CONFIG_REG[0]),
        .I1(I8[0]),
        .I2(RX_CONFIG_REG[1]),
        .I3(I8[1]),
        .I4(I8[2]),
        .I5(RX_CONFIG_REG[2]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_10__1 ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_7__1 
       (.I0(RX_CONFIG_REG[10]),
        .I1(I8[7]),
        .I2(RX_CONFIG_REG[11]),
        .I3(I8[8]),
        .I4(I8[6]),
        .I5(RX_CONFIG_REG[9]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_7__1 ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_9__1 
       (.I0(RX_CONFIG_REG[3]),
        .I1(I8[3]),
        .I2(RX_CONFIG_REG[4]),
        .I3(I8[4]),
        .I4(I8[5]),
        .I5(RX_CONFIG_REG[5]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_9__1 ));
CARRY4 \RX_CONFIG_SNAPSHOT_reg[15]_i_2__1 
       (.CI(\n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 ),
        .CO({\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__1_CO_UNCONNECTED [3:1],CO}),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__1_O_UNCONNECTED [3:0]),
        .S({\<const0> ,\<const0> ,\<const0> ,I3}));
CARRY4 \RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 
       (.CI(\<const0> ),
        .CO({\n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 ,\n_1_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 ,\n_2_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 ,\n_3_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1 }),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_5__1_O_UNCONNECTED [3:0]),
        .S({\n_0_RX_CONFIG_SNAPSHOT[15]_i_7__1 ,S,\n_0_RX_CONFIG_SNAPSHOT[15]_i_9__1 ,\n_0_RX_CONFIG_SNAPSHOT[15]_i_10__1 }));
LUT5 #(
    .INIT(32'h00000002)) 
     RX_CONFIG_VALID_INT_i_1__1
       (.I0(RXSYNC_STATUS),
        .I1(CGBAD),
        .I2(RXCHARISK_REG1),
        .I3(n_0_RX_CONFIG_VALID_INT_i_2__1),
        .I4(S2),
        .O(RX_CONFIG_VALID_INT0));
(* SOFT_HLUTNM = "soft_lutpair364" *) 
   LUT3 #(
    .INIT(8'hAB)) 
     RX_CONFIG_VALID_INT_i_2__1
       (.I0(I1),
        .I1(C_HDR_REMOVED_REG),
        .I2(C_REG1),
        .O(n_0_RX_CONFIG_VALID_INT_i_2__1));
FDRE RX_CONFIG_VALID_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_CONFIG_VALID_INT0),
        .Q(RX_CONFIG_VALID),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_CONFIG_VALID),
        .Q(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .Q(p_0_in2_in),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_0_in2_in),
        .Q(p_1_in),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_1_in),
        .Q(\n_0_RX_CONFIG_VALID_REG_reg[3] ),
        .R(I10));
LUT6 #(
    .INIT(64'h888AAAAA88888888)) 
     RX_DATA_ERROR_i_1__1
       (.I0(O1),
        .I1(n_0_RX_DATA_ERROR_i_2__1),
        .I2(R),
        .I3(I11),
        .I4(R_REG1),
        .I5(T_REG2),
        .O(RX_DATA_ERROR0));
LUT5 #(
    .INIT(32'hFFFF0A0E)) 
     RX_DATA_ERROR_i_2__1
       (.I0(K28p5_REG1),
        .I1(R),
        .I2(R_REG1),
        .I3(T_REG1),
        .I4(n_0_RX_DATA_ERROR_i_4__1),
        .O(n_0_RX_DATA_ERROR_i_2__1));
(* SOFT_HLUTNM = "soft_lutpair358" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     RX_DATA_ERROR_i_4__1
       (.I0(CGBAD_REG3),
        .I1(C_REG1),
        .I2(ILLEGAL_K_REG2),
        .I3(RX_IDLE),
        .O(n_0_RX_DATA_ERROR_i_4__1));
FDRE RX_DATA_ERROR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_DATA_ERROR0),
        .Q(RX_DATA_ERROR),
        .R(SYNC_STATUS_REG0));
FDRE #(
    .INIT(1'b0)) 
     RX_DV_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(gmii_rx_dv_ch2_int),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2220222000202220)) 
     RX_ER_i_1__1
       (.I0(XMIT_DATA),
        .I1(I7),
        .I2(O1),
        .I3(RXSYNC_STATUS),
        .I4(n_0_RX_ER_i_4__1),
        .I5(RX_DATA_ERROR),
        .O(RX_ER0));
(* SOFT_HLUTNM = "soft_lutpair356" *) 
   LUT2 #(
    .INIT(4'h1)) 
     RX_ER_i_4__1
       (.I0(FALSE_CARRIER_REG3),
        .I1(EXTEND_REG1),
        .O(n_0_RX_ER_i_4__1));
FDRE #(
    .INIT(1'b0)) 
     RX_ER_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_ER0),
        .Q(gmii_rx_er_ch2_int),
        .R(I10));
LUT5 #(
    .INIT(32'h00700050)) 
     RX_INVALID_i_1__1
       (.I0(n_0_RX_INVALID_i_2__1),
        .I1(K28p5_REG1),
        .I2(RXSYNC_STATUS),
        .I3(I10),
        .I4(O2),
        .O(n_0_RX_INVALID_i_1__1));
LUT4 #(
    .INIT(16'h4445)) 
     RX_INVALID_i_2__1
       (.I0(FROM_RX_CX),
        .I1(I6),
        .I2(FROM_RX_K),
        .I3(FROM_IDLE_D),
        .O(n_0_RX_INVALID_i_2__1));
FDRE RX_INVALID_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RX_INVALID_i_1__1),
        .Q(O2),
        .R(\<const0> ));
FDRE R_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(R),
        .Q(R_REG1),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2000000000000000)) 
     R_i_1__3
       (.I0(n_0_R_i_2__1),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(I1),
        .O(K23p7));
(* SOFT_HLUTNM = "soft_lutpair353" *) 
   LUT4 #(
    .INIT(16'h8000)) 
     R_i_2__1
       (.I0(Q[4]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .O(n_0_R_i_2__1));
FDRE R_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K23p7),
        .Q(R),
        .R(\<const0> ));
FDRE SOP_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP),
        .Q(SOP_REG1),
        .R(\<const0> ));
FDRE SOP_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP_REG1),
        .Q(SOP_REG2),
        .R(\<const0> ));
FDRE SOP_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP_REG2),
        .Q(SOP_REG3),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h20202000)) 
     SOP_i_1__1
       (.I0(I6),
        .I1(WAIT_FOR_K),
        .I2(S_0),
        .I3(RX_IDLE),
        .I4(n_0_EXTEND_reg),
        .O(SOP0));
FDRE SOP_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP0),
        .Q(SOP),
        .R(I10));
FDRE SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const1> ),
        .Q(SYNC_STATUS_REG),
        .R(SYNC_STATUS_REG0));
(* SOFT_HLUTNM = "soft_lutpair355" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     S_i_2__1
       (.I0(Q[3]),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[4]),
        .O(O4));
FDRE S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S0),
        .Q(S_0),
        .R(\<const0> ));
FDRE T_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T),
        .Q(T_REG1),
        .R(\<const0> ));
FDRE T_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T_REG1),
        .Q(T_REG2),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair350" *) 
   LUT5 #(
    .INIT(32'h00800000)) 
     T_i_1__3
       (.I0(O4),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(I1),
        .O(K29p7));
FDRE T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K29p7),
        .Q(T),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'h0222222200002222)) 
     WAIT_FOR_K_i_1__1
       (.I0(RXSYNC_STATUS),
        .I1(I10),
        .I2(RXEVEN),
        .I3(K28p5_REG1),
        .I4(SYNC_STATUS_REG),
        .I5(WAIT_FOR_K),
        .O(n_0_WAIT_FOR_K_i_1__1));
FDRE WAIT_FOR_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_WAIT_FOR_K_i_1__1),
        .Q(WAIT_FOR_K),
        .R(\<const0> ));
endmodule

(* ORIG_REF_NAME = "RX" *) 
module quadsgmiiRX__parameterized0_35
   (K28p5_REG1,
    RX_IDLE,
    SOP_REG3,
    EOP_REG1,
    gmii_rx_er_ch1_int,
    RX_CONFIG_VALID,
    status_vector_ch1,
    O1,
    gmii_rx_dv_ch1_int,
    O2,
    CO,
    O3,
    O4,
    O5,
    O6,
    SR,
    RX_CONFIG_REG,
    O7,
    O8,
    O9,
    O10,
    userclk2,
    I10,
    FALSE_NIT0,
    S0,
    SYNC_STATUS_REG0,
    S2,
    I1,
    I2,
    Q,
    S,
    I3,
    I4,
    I5,
    RXSYNC_STATUS,
    I6,
    XMIT_DATA,
    I7,
    RXNOTINTABLE_INT,
    RXEVEN,
    SRESET,
    I8,
    I9,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16);
  output K28p5_REG1;
  output RX_IDLE;
  output SOP_REG3;
  output EOP_REG1;
  output gmii_rx_er_ch1_int;
  output RX_CONFIG_VALID;
  output [1:0]status_vector_ch1;
  output O1;
  output gmii_rx_dv_ch1_int;
  output O2;
  output [0:0]CO;
  output [0:0]O3;
  output O4;
  output O5;
  output O6;
  output [0:0]SR;
  output [15:0]RX_CONFIG_REG;
  output O7;
  output O8;
  output O9;
  output [7:0]O10;
  input userclk2;
  input [0:0]I10;
  input FALSE_NIT0;
  input S0;
  input SYNC_STATUS_REG0;
  input S2;
  input I1;
  input I2;
  input [7:0]Q;
  input [0:0]S;
  input [0:0]I3;
  input [0:0]I4;
  input [0:0]I5;
  input RXSYNC_STATUS;
  input I6;
  input XMIT_DATA;
  input I7;
  input RXNOTINTABLE_INT;
  input RXEVEN;
  input SRESET;
  input [8:0]I8;
  input [8:0]I9;
  input I11;
  input [2:0]I12;
  input I13;
  input I14;
  input I15;
  input [0:0]I16;

  wire \<const0> ;
  wire \<const1> ;
  wire C;
  wire C0;
  wire CGBAD;
  wire CGBAD_REG1;
  wire CGBAD_REG2;
  wire CGBAD_REG3;
  wire [0:0]CO;
  wire C_HDR_REMOVED;
  wire C_HDR_REMOVED_REG;
  wire C_REG1;
  wire C_REG2;
  wire C_REG3;
  wire D0p0;
  wire D0p0_REG;
  wire EOP;
  wire EOP0;
  wire EOP_REG1;
  wire EOP_REG10;
  wire EXTEND_ERR;
  wire EXTEND_ERR0;
  wire EXTEND_REG1;
  wire EXTEND_REG2;
  wire EXTEND_REG3;
  wire EXT_ILLEGAL_K;
  wire EXT_ILLEGAL_K0;
  wire EXT_ILLEGAL_K_REG1;
  wire EXT_ILLEGAL_K_REG2;
  wire FALSE_CARRIER;
  wire FALSE_CARRIER_REG1;
  wire FALSE_CARRIER_REG2;
  wire FALSE_CARRIER_REG3;
  wire FALSE_DATA;
  wire FALSE_DATA0;
  wire FALSE_K;
  wire FALSE_K0;
  wire FALSE_NIT;
  wire FALSE_NIT0;
  wire FROM_IDLE_D;
  wire FROM_IDLE_D0;
  wire FROM_RX_CX;
  wire FROM_RX_CX0;
  wire FROM_RX_K;
  wire FROM_RX_K0;
  wire I;
  wire I0;
  wire I1;
  wire [0:0]I10;
  wire I11;
  wire [2:0]I12;
  wire I13;
  wire I14;
  wire I15;
  wire [0:0]I16;
  wire I2;
  wire [0:0]I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire I6;
  wire I7;
  wire [8:0]I8;
  wire [8:0]I9;
  wire ILLEGAL_K;
  wire ILLEGAL_K0;
  wire ILLEGAL_K_REG1;
  wire ILLEGAL_K_REG2;
  wire K23p7;
  wire K28p5;
  wire K28p5_REG1;
  wire K28p5_REG2;
  wire K29p7;
  wire O1;
  wire [7:0]O10;
  wire O2;
  wire [0:0]O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [7:0]Q;
  wire R;
  wire RUDI_C0;
  wire RUDI_I0;
  wire RXCHARISK_REG1;
  wire [7:0]RXDATA_REG5;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_VALID;
  wire RX_CONFIG_VALID_INT0;
  wire RX_DATA_ERROR;
  wire RX_DATA_ERROR0;
  wire RX_ER0;
  wire RX_IDLE;
  wire R_REG1;
  wire [0:0]S;
  wire S0;
  wire S2;
  wire SOP;
  wire SOP0;
  wire SOP_REG1;
  wire SOP_REG2;
  wire SOP_REG3;
  wire [0:0]SR;
  wire SRESET;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire S_0;
  wire T;
  wire T_REG1;
  wire T_REG2;
  wire WAIT_FOR_K;
  wire XMIT_DATA;
  wire gmii_rx_dv_ch1_int;
  wire gmii_rx_er_ch1_int;
  wire n_0_CONSISTENCY_MATCH_i_5__0;
  wire n_0_CONSISTENCY_MATCH_i_7__0;
  wire n_0_CONSISTENCY_MATCH_i_8__0;
  wire n_0_CONSISTENCY_MATCH_reg_i_3__0;
  wire n_0_C_i_3__0;
  wire n_0_C_i_4__0;
  wire n_0_C_i_5__0;
  wire n_0_C_i_6__0;
  wire n_0_C_reg_i_2__0;
  wire n_0_D0p0_REG_i_2__0;
  wire n_0_EOP_i_2__0;
  wire n_0_EXTEND_i_1__0;
  wire n_0_EXTEND_i_3__0;
  wire n_0_EXTEND_reg;
  wire n_0_FALSE_CARRIER_i_1__0;
  wire n_0_FALSE_CARRIER_i_2__0;
  wire n_0_FALSE_CARRIER_i_3__0;
  wire n_0_FALSE_DATA_i_2__0;
  wire n_0_FALSE_DATA_i_3__0;
  wire n_0_FALSE_DATA_i_4__0;
  wire n_0_FALSE_K_i_2__0;
  wire n_0_FALSE_NIT_i_5__0;
  wire n_0_FALSE_NIT_i_6__0;
  wire \n_0_IDLE_REG_reg[0] ;
  wire \n_0_IDLE_REG_reg[2] ;
  wire n_0_I_i_2__0;
  wire n_0_RECEIVE_i_1__0;
  wire \n_0_RXDATA_REG4_reg[0]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[1]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[2]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[3]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[4]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[5]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[6]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[7]_srl4 ;
  wire \n_0_RXD[0]_i_1__0 ;
  wire \n_0_RXD[1]_i_1__0 ;
  wire \n_0_RXD[2]_i_1__0 ;
  wire \n_0_RXD[3]_i_1__0 ;
  wire \n_0_RXD[4]_i_1__0 ;
  wire \n_0_RXD[5]_i_1__0 ;
  wire \n_0_RXD[6]_i_1__0 ;
  wire \n_0_RXD[7]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[0]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[10]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[11]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[12]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[13]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[14]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[15]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[1]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[2]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[3]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[4]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[5]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[6]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[7]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[7]_i_2__0 ;
  wire \n_0_RX_CONFIG_REG[8]_i_1__0 ;
  wire \n_0_RX_CONFIG_REG[9]_i_1__0 ;
  wire n_0_RX_CONFIG_REG_NULL_i_2__0;
  wire n_0_RX_CONFIG_REG_NULL_i_3__0;
  wire n_0_RX_CONFIG_REG_NULL_i_4__0;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_10__0 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_7__0 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_9__0 ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 ;
  wire n_0_RX_CONFIG_VALID_INT_i_2__0;
  wire \n_0_RX_CONFIG_VALID_REG_reg[0] ;
  wire \n_0_RX_CONFIG_VALID_REG_reg[3] ;
  wire n_0_RX_DATA_ERROR_i_2__0;
  wire n_0_RX_DATA_ERROR_i_4__0;
  wire n_0_RX_ER_i_4__0;
  wire n_0_RX_INVALID_i_1__0;
  wire n_0_RX_INVALID_i_2__0;
  wire n_0_R_i_2__0;
  wire n_0_WAIT_FOR_K_i_1__0;
  wire n_1_CONSISTENCY_MATCH_reg_i_3__0;
  wire \n_1_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 ;
  wire n_2_CONSISTENCY_MATCH_reg_i_3__0;
  wire \n_2_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 ;
  wire n_3_CONSISTENCY_MATCH_reg_i_3__0;
  wire \n_3_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 ;
  wire p_0_in1_in;
  wire p_0_in2_in;
  wire p_1_in;
  wire [1:0]status_vector_ch1;
  wire userclk2;
  wire [3:1]NLW_CONSISTENCY_MATCH_reg_i_2__0_CO_UNCONNECTED;
  wire [3:0]NLW_CONSISTENCY_MATCH_reg_i_2__0_O_UNCONNECTED;
  wire [3:0]NLW_CONSISTENCY_MATCH_reg_i_3__0_O_UNCONNECTED;
  wire [3:1]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__0_O_UNCONNECTED ;
  wire [3:0]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0_O_UNCONNECTED ;

FDRE CGBAD_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD),
        .Q(CGBAD_REG1),
        .R(\<const0> ));
FDRE CGBAD_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD_REG1),
        .Q(CGBAD_REG2),
        .R(\<const0> ));
FDRE CGBAD_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD_REG2),
        .Q(CGBAD_REG3),
        .R(I10));
FDRE CGBAD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S2),
        .Q(CGBAD),
        .R(I10));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_5__0
       (.I0(RX_CONFIG_REG[9]),
        .I1(I9[6]),
        .I2(RX_CONFIG_REG[10]),
        .I3(I9[7]),
        .I4(I9[8]),
        .I5(RX_CONFIG_REG[11]),
        .O(n_0_CONSISTENCY_MATCH_i_5__0));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_7__0
       (.I0(RX_CONFIG_REG[5]),
        .I1(I9[5]),
        .I2(RX_CONFIG_REG[3]),
        .I3(I9[3]),
        .I4(I9[4]),
        .I5(RX_CONFIG_REG[4]),
        .O(n_0_CONSISTENCY_MATCH_i_7__0));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_8__0
       (.I0(RX_CONFIG_REG[2]),
        .I1(I9[2]),
        .I2(RX_CONFIG_REG[0]),
        .I3(I9[0]),
        .I4(I9[1]),
        .I5(RX_CONFIG_REG[1]),
        .O(n_0_CONSISTENCY_MATCH_i_8__0));
CARRY4 CONSISTENCY_MATCH_reg_i_2__0
       (.CI(n_0_CONSISTENCY_MATCH_reg_i_3__0),
        .CO({NLW_CONSISTENCY_MATCH_reg_i_2__0_CO_UNCONNECTED[3:1],O3}),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_CONSISTENCY_MATCH_reg_i_2__0_O_UNCONNECTED[3:0]),
        .S({\<const0> ,\<const0> ,\<const0> ,I5}));
CARRY4 CONSISTENCY_MATCH_reg_i_3__0
       (.CI(\<const0> ),
        .CO({n_0_CONSISTENCY_MATCH_reg_i_3__0,n_1_CONSISTENCY_MATCH_reg_i_3__0,n_2_CONSISTENCY_MATCH_reg_i_3__0,n_3_CONSISTENCY_MATCH_reg_i_3__0}),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_CONSISTENCY_MATCH_reg_i_3__0_O_UNCONNECTED[3:0]),
        .S({n_0_CONSISTENCY_MATCH_i_5__0,I4,n_0_CONSISTENCY_MATCH_i_7__0,n_0_CONSISTENCY_MATCH_i_8__0}));
(* SOFT_HLUTNM = "soft_lutpair228" *) 
   LUT4 #(
    .INIT(16'h1000)) 
     C_HDR_REMOVED_REG_i_1__0
       (.I0(I12[2]),
        .I1(I12[1]),
        .I2(I12[0]),
        .I3(C_REG2),
        .O(C_HDR_REMOVED));
FDRE C_HDR_REMOVED_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_HDR_REMOVED),
        .Q(C_HDR_REMOVED_REG),
        .R(\<const0> ));
FDRE C_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C),
        .Q(C_REG1),
        .R(\<const0> ));
FDRE C_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_REG1),
        .Q(C_REG2),
        .R(\<const0> ));
FDRE C_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_REG2),
        .Q(C_REG3),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair223" *) 
   LUT3 #(
    .INIT(8'h04)) 
     C_i_1__0
       (.I0(n_0_C_reg_i_2__0),
        .I1(K28p5_REG1),
        .I2(I1),
        .O(C0));
LUT6 #(
    .INIT(64'hBFFFFFFFFFFFFFFF)) 
     C_i_3__0
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(Q[7]),
        .I5(n_0_C_i_5__0),
        .O(n_0_C_i_3__0));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFBFF)) 
     C_i_4__0
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(n_0_C_i_6__0),
        .I4(Q[0]),
        .I5(Q[4]),
        .O(n_0_C_i_4__0));
(* SOFT_HLUTNM = "soft_lutpair226" *) 
   LUT2 #(
    .INIT(4'h2)) 
     C_i_5__0
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(n_0_C_i_5__0));
(* SOFT_HLUTNM = "soft_lutpair234" *) 
   LUT2 #(
    .INIT(4'h1)) 
     C_i_6__0
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(n_0_C_i_6__0));
FDRE C_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C0),
        .Q(C),
        .R(\<const0> ));
MUXF7 C_reg_i_2__0
       (.I0(n_0_C_i_3__0),
        .I1(n_0_C_i_4__0),
        .O(n_0_C_reg_i_2__0),
        .S(Q[1]));
(* SOFT_HLUTNM = "soft_lutpair232" *) 
   LUT4 #(
    .INIT(16'h0002)) 
     D0p0_REG_i_1__0
       (.I0(n_0_D0p0_REG_i_2__0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[7]),
        .O(D0p0));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     D0p0_REG_i_2__0
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(I1),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(n_0_D0p0_REG_i_2__0));
FDRE D0p0_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(D0p0),
        .Q(D0p0_REG),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'hEA)) 
     EOP_REG1_i_1__0
       (.I0(EOP),
        .I1(n_0_EXTEND_reg),
        .I2(EXTEND_REG1),
        .O(EOP_REG10));
FDRE EOP_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EOP_REG10),
        .Q(EOP_REG1),
        .R(I10));
LUT6 #(
    .INIT(64'hFFFFFFFF88888000)) 
     EOP_i_1__0
       (.I0(T_REG2),
        .I1(R_REG1),
        .I2(RXEVEN),
        .I3(K28p5_REG1),
        .I4(R),
        .I5(n_0_EOP_i_2__0),
        .O(EOP0));
LUT5 #(
    .INIT(32'hF8888888)) 
     EOP_i_2__0
       (.I0(RX_IDLE),
        .I1(K28p5_REG1),
        .I2(RXEVEN),
        .I3(D0p0_REG),
        .I4(C_REG1),
        .O(n_0_EOP_i_2__0));
FDRE EOP_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EOP0),
        .Q(EOP),
        .R(I10));
LUT3 #(
    .INIT(8'hEA)) 
     EXTEND_ERR_i_1__0
       (.I0(EXT_ILLEGAL_K_REG2),
        .I1(CGBAD_REG3),
        .I2(EXTEND_REG3),
        .O(EXTEND_ERR0));
FDRE EXTEND_ERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_ERR0),
        .Q(EXTEND_ERR),
        .R(SYNC_STATUS_REG0));
FDRE EXTEND_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EXTEND_reg),
        .Q(EXTEND_REG1),
        .R(\<const0> ));
FDRE EXTEND_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_REG1),
        .Q(EXTEND_REG2),
        .R(\<const0> ));
FDRE EXTEND_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_REG2),
        .Q(EXTEND_REG3),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hAA00AA2AAA00AA00)) 
     EXTEND_i_1__0
       (.I0(I13),
        .I1(RXEVEN),
        .I2(K28p5_REG1),
        .I3(n_0_EXTEND_i_3__0),
        .I4(S_0),
        .I5(n_0_EXTEND_reg),
        .O(n_0_EXTEND_i_1__0));
LUT3 #(
    .INIT(8'h80)) 
     EXTEND_i_3__0
       (.I0(R),
        .I1(O1),
        .I2(R_REG1),
        .O(n_0_EXTEND_i_3__0));
FDRE EXTEND_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EXTEND_i_1__0),
        .Q(n_0_EXTEND_reg),
        .R(\<const0> ));
FDRE EXT_ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K),
        .Q(EXT_ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
FDRE EXT_ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K_REG1),
        .Q(EXT_ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
LUT5 #(
    .INIT(32'h00000700)) 
     EXT_ILLEGAL_K_i_1__0
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .I2(R),
        .I3(EXTEND_REG1),
        .I4(S_0),
        .O(EXT_ILLEGAL_K0));
FDRE EXT_ILLEGAL_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K0),
        .Q(EXT_ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
FDRE FALSE_CARRIER_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER),
        .Q(FALSE_CARRIER_REG1),
        .R(\<const0> ));
FDRE FALSE_CARRIER_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER_REG1),
        .Q(FALSE_CARRIER_REG2),
        .R(\<const0> ));
FDRE FALSE_CARRIER_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER_REG2),
        .Q(FALSE_CARRIER_REG3),
        .R(SYNC_STATUS_REG0));
LUT6 #(
    .INIT(64'h0A0E0E0E0A0A0A0A)) 
     FALSE_CARRIER_i_1__0
       (.I0(n_0_FALSE_CARRIER_i_2__0),
        .I1(RXSYNC_STATUS),
        .I2(I10),
        .I3(RXEVEN),
        .I4(K28p5_REG1),
        .I5(FALSE_CARRIER),
        .O(n_0_FALSE_CARRIER_i_1__0));
LUT5 #(
    .INIT(32'h00000020)) 
     FALSE_CARRIER_i_2__0
       (.I0(I6),
        .I1(S_0),
        .I2(RX_IDLE),
        .I3(K28p5_REG1),
        .I4(n_0_FALSE_CARRIER_i_3__0),
        .O(n_0_FALSE_CARRIER_i_2__0));
LUT3 #(
    .INIT(8'hFE)) 
     FALSE_CARRIER_i_3__0
       (.I0(FALSE_DATA),
        .I1(FALSE_K),
        .I2(FALSE_NIT),
        .O(n_0_FALSE_CARRIER_i_3__0));
FDRE FALSE_CARRIER_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_FALSE_CARRIER_i_1__0),
        .Q(FALSE_CARRIER),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair235" *) 
   LUT3 #(
    .INIT(8'h02)) 
     FALSE_DATA_i_1__0
       (.I0(n_0_FALSE_DATA_i_2__0),
        .I1(RXNOTINTABLE_INT),
        .I2(I1),
        .O(FALSE_DATA0));
LUT6 #(
    .INIT(64'h00004400000F0000)) 
     FALSE_DATA_i_2__0
       (.I0(n_0_FALSE_DATA_i_3__0),
        .I1(Q[2]),
        .I2(n_0_FALSE_DATA_i_4__0),
        .I3(Q[7]),
        .I4(Q[6]),
        .I5(Q[5]),
        .O(n_0_FALSE_DATA_i_2__0));
(* SOFT_HLUTNM = "soft_lutpair222" *) 
   LUT4 #(
    .INIT(16'hEFF1)) 
     FALSE_DATA_i_3__0
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(n_0_FALSE_DATA_i_3__0));
(* SOFT_HLUTNM = "soft_lutpair222" *) 
   LUT5 #(
    .INIT(32'hE8FFFFFF)) 
     FALSE_DATA_i_4__0
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(n_0_FALSE_DATA_i_4__0));
FDRE FALSE_DATA_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_DATA0),
        .Q(FALSE_DATA),
        .R(I10));
LUT6 #(
    .INIT(64'h0000000040000040)) 
     FALSE_K_i_1__0
       (.I0(n_0_FALSE_K_i_2__0),
        .I1(Q[7]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[6]),
        .I5(RXNOTINTABLE_INT),
        .O(FALSE_K0));
(* SOFT_HLUTNM = "soft_lutpair225" *) 
   LUT5 #(
    .INIT(32'hEFFFFFFF)) 
     FALSE_K_i_2__0
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(I1),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(n_0_FALSE_K_i_2__0));
FDRE FALSE_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_K0),
        .Q(FALSE_K),
        .R(I10));
LUT6 #(
    .INIT(64'hFFFF400040004000)) 
     FALSE_NIT_i_2__0
       (.I0(n_0_FALSE_K_i_2__0),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(n_0_FALSE_NIT_i_5__0),
        .I5(n_0_D0p0_REG_i_2__0),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair232" *) 
   LUT3 #(
    .INIT(8'h28)) 
     FALSE_NIT_i_3__0
       (.I0(n_0_D0p0_REG_i_2__0),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(O6));
LUT6 #(
    .INIT(64'h0600000000000000)) 
     FALSE_NIT_i_4__0
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(n_0_FALSE_NIT_i_6__0),
        .I3(Q[6]),
        .I4(Q[5]),
        .I5(Q[4]),
        .O(O7));
(* SOFT_HLUTNM = "soft_lutpair221" *) 
   LUT2 #(
    .INIT(4'h8)) 
     FALSE_NIT_i_5__0
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(n_0_FALSE_NIT_i_5__0));
(* SOFT_HLUTNM = "soft_lutpair225" *) 
   LUT3 #(
    .INIT(8'h7F)) 
     FALSE_NIT_i_6__0
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(I1),
        .O(n_0_FALSE_NIT_i_6__0));
FDRE FALSE_NIT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_NIT0),
        .Q(FALSE_NIT),
        .R(I10));
LUT4 #(
    .INIT(16'h0004)) 
     FROM_IDLE_D_i_1__0
       (.I0(K28p5_REG1),
        .I1(RX_IDLE),
        .I2(WAIT_FOR_K),
        .I3(I6),
        .O(FROM_IDLE_D0));
FDRE FROM_IDLE_D_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_IDLE_D0),
        .Q(FROM_IDLE_D),
        .R(SYNC_STATUS_REG0));
LUT6 #(
    .INIT(64'hFFFFA8FFFCFCA8A8)) 
     FROM_RX_CX_i_1__0
       (.I0(RXCHARISK_REG1),
        .I1(C_REG1),
        .I2(C_REG2),
        .I3(I11),
        .I4(CGBAD),
        .I5(C_REG3),
        .O(FROM_RX_CX0));
FDRE FROM_RX_CX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_RX_CX0),
        .Q(FROM_RX_CX),
        .R(SYNC_STATUS_REG0));
LUT4 #(
    .INIT(16'h00E0)) 
     FROM_RX_K_i_1__0
       (.I0(RXCHARISK_REG1),
        .I1(CGBAD),
        .I2(K28p5_REG2),
        .I3(I6),
        .O(FROM_RX_K0));
FDRE FROM_RX_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_RX_K0),
        .Q(FROM_RX_K),
        .R(SYNC_STATUS_REG0));
GND GND
       (.G(\<const0> ));
FDRE \IDLE_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE),
        .Q(\n_0_IDLE_REG_reg[0] ),
        .R(I10));
FDRE \IDLE_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_IDLE_REG_reg[0] ),
        .Q(p_0_in1_in),
        .R(I10));
FDRE \IDLE_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_0_in1_in),
        .Q(\n_0_IDLE_REG_reg[2] ),
        .R(I10));
FDRE ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K),
        .Q(ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
FDRE ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K_REG1),
        .Q(ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
LUT4 #(
    .INIT(16'h0010)) 
     ILLEGAL_K_i_1__0
       (.I0(R),
        .I1(K28p5_REG1),
        .I2(RXCHARISK_REG1),
        .I3(T),
        .O(ILLEGAL_K0));
FDRE ILLEGAL_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K0),
        .Q(ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
FDRE I_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I),
        .Q(RX_IDLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair223" *) 
   LUT5 #(
    .INIT(32'h33220020)) 
     I_i_1__0
       (.I0(n_0_C_reg_i_2__0),
        .I1(n_0_I_i_2__0),
        .I2(K28p5_REG1),
        .I3(I1),
        .I4(I6),
        .O(I0));
LUT6 #(
    .INIT(64'h000001FFFFFFFFFF)) 
     I_i_2__0
       (.I0(FALSE_DATA),
        .I1(FALSE_K),
        .I2(FALSE_NIT),
        .I3(RX_IDLE),
        .I4(K28p5_REG1),
        .I5(RXEVEN),
        .O(n_0_I_i_2__0));
FDRE I_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I0),
        .Q(I),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair224" *) 
   LUT5 #(
    .INIT(32'h04000000)) 
     K28p5_REG1_i_1__0
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(n_0_FALSE_K_i_2__0),
        .I3(Q[7]),
        .I4(Q[4]),
        .O(K28p5));
FDRE K28p5_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K28p5),
        .Q(K28p5_REG1),
        .R(\<const0> ));
FDRE K28p5_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K28p5_REG1),
        .Q(K28p5_REG2),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h0D0C)) 
     RECEIVED_IDLE_i_1__0
       (.I0(RX_CONFIG_VALID),
        .I1(RX_IDLE),
        .I2(SRESET),
        .I3(I15),
        .O(O9));
LUT5 #(
    .INIT(32'h44044400)) 
     RECEIVE_i_1__0
       (.I0(I10),
        .I1(RXSYNC_STATUS),
        .I2(EOP),
        .I3(SOP_REG2),
        .I4(O1),
        .O(n_0_RECEIVE_i_1__0));
FDRE RECEIVE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RECEIVE_i_1__0),
        .Q(O1),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'hFFFE)) 
     RUDI_C_i_1__0
       (.I0(p_1_in),
        .I1(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .I2(\n_0_RX_CONFIG_VALID_REG_reg[3] ),
        .I3(p_0_in2_in),
        .O(RUDI_C0));
FDRE RUDI_C_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RUDI_C0),
        .Q(status_vector_ch1[0]),
        .R(I10));
LUT2 #(
    .INIT(4'hE)) 
     RUDI_I_i_1__0
       (.I0(\n_0_IDLE_REG_reg[2] ),
        .I1(p_0_in1_in),
        .O(RUDI_I0));
FDRE RUDI_I_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RUDI_I0),
        .Q(status_vector_ch1[1]),
        .R(I10));
FDRE RXCHARISK_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(RXCHARISK_REG1),
        .R(\<const0> ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg[0]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[0]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[0]),
        .Q(\n_0_RXDATA_REG4_reg[0]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg[1]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[1]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[1]),
        .Q(\n_0_RXDATA_REG4_reg[1]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg[2]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[2]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[2]),
        .Q(\n_0_RXDATA_REG4_reg[2]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg[3]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[3]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[3]),
        .Q(\n_0_RXDATA_REG4_reg[3]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg[4]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[4]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[4]),
        .Q(\n_0_RXDATA_REG4_reg[4]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg[5]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[5]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[5]),
        .Q(\n_0_RXDATA_REG4_reg[5]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg[6]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[6]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[6]),
        .Q(\n_0_RXDATA_REG4_reg[6]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i1/RECEIVER/RXDATA_REG4_reg[7]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[7]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[7]),
        .Q(\n_0_RXDATA_REG4_reg[7]_srl4 ));
FDRE \RXDATA_REG5_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[0]_srl4 ),
        .Q(RXDATA_REG5[0]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[1]_srl4 ),
        .Q(RXDATA_REG5[1]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[2]_srl4 ),
        .Q(RXDATA_REG5[2]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[3]_srl4 ),
        .Q(RXDATA_REG5[3]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[4]_srl4 ),
        .Q(RXDATA_REG5[4]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[5]_srl4 ),
        .Q(RXDATA_REG5[5]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[6]_srl4 ),
        .Q(RXDATA_REG5[6]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[7]_srl4 ),
        .Q(RXDATA_REG5[7]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair233" *) 
   LUT4 #(
    .INIT(16'hBBBA)) 
     \RXD[0]_i_1__0 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[0]),
        .O(\n_0_RXD[0]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair233" *) 
   LUT4 #(
    .INIT(16'h5554)) 
     \RXD[1]_i_1__0 
       (.I0(SOP_REG3),
        .I1(RXDATA_REG5[1]),
        .I2(FALSE_CARRIER_REG3),
        .I3(EXTEND_REG1),
        .O(\n_0_RXD[1]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair230" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \RXD[2]_i_1__0 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[2]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[2]_i_1__0 ));
LUT4 #(
    .INIT(16'h5554)) 
     \RXD[3]_i_1__0 
       (.I0(SOP_REG3),
        .I1(RXDATA_REG5[3]),
        .I2(FALSE_CARRIER_REG3),
        .I3(EXTEND_REG1),
        .O(\n_0_RXD[3]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair227" *) 
   LUT5 #(
    .INIT(32'hBABBBAAA)) 
     \RXD[4]_i_1__0 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_ERR),
        .I3(EXTEND_REG1),
        .I4(RXDATA_REG5[4]),
        .O(\n_0_RXD[4]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair230" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \RXD[5]_i_1__0 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[5]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[5]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair231" *) 
   LUT4 #(
    .INIT(16'hABAA)) 
     \RXD[6]_i_1__0 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[6]),
        .O(\n_0_RXD[6]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair231" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \RXD[7]_i_1__0 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[7]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[7]_i_1__0 ));
FDRE \RXD_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[0]_i_1__0 ),
        .Q(O10[0]),
        .R(I16));
FDRE \RXD_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[1]_i_1__0 ),
        .Q(O10[1]),
        .R(I16));
FDRE \RXD_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[2]_i_1__0 ),
        .Q(O10[2]),
        .R(I16));
FDRE \RXD_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[3]_i_1__0 ),
        .Q(O10[3]),
        .R(I16));
FDRE \RXD_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[4]_i_1__0 ),
        .Q(O10[4]),
        .R(I16));
FDRE \RXD_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[5]_i_1__0 ),
        .Q(O10[5]),
        .R(I16));
FDRE \RXD_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[6]_i_1__0 ),
        .Q(O10[6]),
        .R(I16));
FDRE \RXD_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[7]_i_1__0 ),
        .Q(O10[7]),
        .R(I16));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[0]_i_1__0 
       (.I0(Q[0]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__0 ),
        .I3(RX_CONFIG_REG[0]),
        .O(\n_0_RX_CONFIG_REG[0]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[10]_i_1__0 
       (.I0(Q[2]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[10]),
        .O(\n_0_RX_CONFIG_REG[10]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[11]_i_1__0 
       (.I0(Q[3]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[11]),
        .O(\n_0_RX_CONFIG_REG[11]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[12]_i_1__0 
       (.I0(Q[4]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[12]),
        .O(\n_0_RX_CONFIG_REG[12]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[13]_i_1__0 
       (.I0(Q[5]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[13]),
        .O(\n_0_RX_CONFIG_REG[13]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[14]_i_1__0 
       (.I0(Q[6]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[14]),
        .O(\n_0_RX_CONFIG_REG[14]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[15]_i_1__0 
       (.I0(Q[7]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[15]),
        .O(\n_0_RX_CONFIG_REG[15]_i_1__0 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[1]_i_1__0 
       (.I0(Q[1]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__0 ),
        .I3(RX_CONFIG_REG[1]),
        .O(\n_0_RX_CONFIG_REG[1]_i_1__0 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[2]_i_1__0 
       (.I0(Q[2]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__0 ),
        .I3(RX_CONFIG_REG[2]),
        .O(\n_0_RX_CONFIG_REG[2]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair234" *) 
   LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[3]_i_1__0 
       (.I0(Q[3]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__0 ),
        .I3(RX_CONFIG_REG[3]),
        .O(\n_0_RX_CONFIG_REG[3]_i_1__0 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[4]_i_1__0 
       (.I0(Q[4]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__0 ),
        .I3(RX_CONFIG_REG[4]),
        .O(\n_0_RX_CONFIG_REG[4]_i_1__0 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[5]_i_1__0 
       (.I0(Q[5]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__0 ),
        .I3(RX_CONFIG_REG[5]),
        .O(\n_0_RX_CONFIG_REG[5]_i_1__0 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[6]_i_1__0 
       (.I0(Q[6]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__0 ),
        .I3(RX_CONFIG_REG[6]),
        .O(\n_0_RX_CONFIG_REG[6]_i_1__0 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[7]_i_1__0 
       (.I0(Q[7]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2__0 ),
        .I3(RX_CONFIG_REG[7]),
        .O(\n_0_RX_CONFIG_REG[7]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair228" *) 
   LUT5 #(
    .INIT(32'h55555515)) 
     \RX_CONFIG_REG[7]_i_2__0 
       (.I0(C),
        .I1(C_REG2),
        .I2(I12[0]),
        .I3(I12[1]),
        .I4(I12[2]),
        .O(\n_0_RX_CONFIG_REG[7]_i_2__0 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[8]_i_1__0 
       (.I0(Q[0]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[8]),
        .O(\n_0_RX_CONFIG_REG[8]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[9]_i_1__0 
       (.I0(Q[1]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[9]),
        .O(\n_0_RX_CONFIG_REG[9]_i_1__0 ));
LUT6 #(
    .INIT(64'h808080FF80808000)) 
     RX_CONFIG_REG_NULL_i_1__0
       (.I0(n_0_RX_CONFIG_REG_NULL_i_2__0),
        .I1(n_0_RX_CONFIG_REG_NULL_i_3__0),
        .I2(n_0_RX_CONFIG_REG_NULL_i_4__0),
        .I3(SRESET),
        .I4(RX_CONFIG_VALID),
        .I5(I14),
        .O(O8));
LUT5 #(
    .INIT(32'h00000001)) 
     RX_CONFIG_REG_NULL_i_2__0
       (.I0(RX_CONFIG_REG[3]),
        .I1(RX_CONFIG_REG[4]),
        .I2(RX_CONFIG_REG[1]),
        .I3(RX_CONFIG_REG[2]),
        .I4(RX_CONFIG_REG[0]),
        .O(n_0_RX_CONFIG_REG_NULL_i_2__0));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     RX_CONFIG_REG_NULL_i_3__0
       (.I0(RX_CONFIG_REG[12]),
        .I1(RX_CONFIG_REG[11]),
        .I2(RX_CONFIG_REG[15]),
        .I3(SRESET),
        .I4(RX_CONFIG_REG[13]),
        .I5(RX_CONFIG_REG[14]),
        .O(n_0_RX_CONFIG_REG_NULL_i_3__0));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     RX_CONFIG_REG_NULL_i_4__0
       (.I0(RX_CONFIG_REG[6]),
        .I1(RX_CONFIG_REG[5]),
        .I2(RX_CONFIG_REG[9]),
        .I3(RX_CONFIG_REG[10]),
        .I4(RX_CONFIG_REG[7]),
        .I5(RX_CONFIG_REG[8]),
        .O(n_0_RX_CONFIG_REG_NULL_i_4__0));
(* SOFT_HLUTNM = "soft_lutpair229" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \RX_CONFIG_REG_REG[15]_i_1__0 
       (.I0(SRESET),
        .I1(RX_IDLE),
        .O(SR));
FDRE \RX_CONFIG_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[0]_i_1__0 ),
        .Q(RX_CONFIG_REG[0]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[10]_i_1__0 ),
        .Q(RX_CONFIG_REG[10]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[11]_i_1__0 ),
        .Q(RX_CONFIG_REG[11]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[12]_i_1__0 ),
        .Q(RX_CONFIG_REG[12]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[13]_i_1__0 ),
        .Q(RX_CONFIG_REG[13]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[14]_i_1__0 ),
        .Q(RX_CONFIG_REG[14]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[15]_i_1__0 ),
        .Q(RX_CONFIG_REG[15]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[1]_i_1__0 ),
        .Q(RX_CONFIG_REG[1]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[2]_i_1__0 ),
        .Q(RX_CONFIG_REG[2]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[3]_i_1__0 ),
        .Q(RX_CONFIG_REG[3]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[4]_i_1__0 ),
        .Q(RX_CONFIG_REG[4]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[5]_i_1__0 ),
        .Q(RX_CONFIG_REG[5]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[6]_i_1__0 ),
        .Q(RX_CONFIG_REG[6]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[7]_i_1__0 ),
        .Q(RX_CONFIG_REG[7]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[8]_i_1__0 ),
        .Q(RX_CONFIG_REG[8]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[9]_i_1__0 ),
        .Q(RX_CONFIG_REG[9]),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_10__0 
       (.I0(RX_CONFIG_REG[0]),
        .I1(I8[0]),
        .I2(RX_CONFIG_REG[1]),
        .I3(I8[1]),
        .I4(I8[2]),
        .I5(RX_CONFIG_REG[2]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_10__0 ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_7__0 
       (.I0(RX_CONFIG_REG[10]),
        .I1(I8[7]),
        .I2(RX_CONFIG_REG[11]),
        .I3(I8[8]),
        .I4(I8[6]),
        .I5(RX_CONFIG_REG[9]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_7__0 ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_9__0 
       (.I0(RX_CONFIG_REG[3]),
        .I1(I8[3]),
        .I2(RX_CONFIG_REG[4]),
        .I3(I8[4]),
        .I4(I8[5]),
        .I5(RX_CONFIG_REG[5]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_9__0 ));
CARRY4 \RX_CONFIG_SNAPSHOT_reg[15]_i_2__0 
       (.CI(\n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 ),
        .CO({\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__0_CO_UNCONNECTED [3:1],CO}),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2__0_O_UNCONNECTED [3:0]),
        .S({\<const0> ,\<const0> ,\<const0> ,I3}));
CARRY4 \RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 
       (.CI(\<const0> ),
        .CO({\n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 ,\n_1_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 ,\n_2_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 ,\n_3_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0 }),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_5__0_O_UNCONNECTED [3:0]),
        .S({\n_0_RX_CONFIG_SNAPSHOT[15]_i_7__0 ,S,\n_0_RX_CONFIG_SNAPSHOT[15]_i_9__0 ,\n_0_RX_CONFIG_SNAPSHOT[15]_i_10__0 }));
LUT5 #(
    .INIT(32'h00000002)) 
     RX_CONFIG_VALID_INT_i_1__0
       (.I0(RXSYNC_STATUS),
        .I1(CGBAD),
        .I2(RXCHARISK_REG1),
        .I3(n_0_RX_CONFIG_VALID_INT_i_2__0),
        .I4(S2),
        .O(RX_CONFIG_VALID_INT0));
(* SOFT_HLUTNM = "soft_lutpair235" *) 
   LUT3 #(
    .INIT(8'hAB)) 
     RX_CONFIG_VALID_INT_i_2__0
       (.I0(I1),
        .I1(C_HDR_REMOVED_REG),
        .I2(C_REG1),
        .O(n_0_RX_CONFIG_VALID_INT_i_2__0));
FDRE RX_CONFIG_VALID_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_CONFIG_VALID_INT0),
        .Q(RX_CONFIG_VALID),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_CONFIG_VALID),
        .Q(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .Q(p_0_in2_in),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_0_in2_in),
        .Q(p_1_in),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_1_in),
        .Q(\n_0_RX_CONFIG_VALID_REG_reg[3] ),
        .R(I10));
LUT6 #(
    .INIT(64'h888AAAAA88888888)) 
     RX_DATA_ERROR_i_1__0
       (.I0(O1),
        .I1(n_0_RX_DATA_ERROR_i_2__0),
        .I2(R),
        .I3(I11),
        .I4(R_REG1),
        .I5(T_REG2),
        .O(RX_DATA_ERROR0));
LUT5 #(
    .INIT(32'hFFFF0A0E)) 
     RX_DATA_ERROR_i_2__0
       (.I0(K28p5_REG1),
        .I1(R),
        .I2(R_REG1),
        .I3(T_REG1),
        .I4(n_0_RX_DATA_ERROR_i_4__0),
        .O(n_0_RX_DATA_ERROR_i_2__0));
(* SOFT_HLUTNM = "soft_lutpair229" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     RX_DATA_ERROR_i_4__0
       (.I0(CGBAD_REG3),
        .I1(C_REG1),
        .I2(ILLEGAL_K_REG2),
        .I3(RX_IDLE),
        .O(n_0_RX_DATA_ERROR_i_4__0));
FDRE RX_DATA_ERROR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_DATA_ERROR0),
        .Q(RX_DATA_ERROR),
        .R(SYNC_STATUS_REG0));
FDRE #(
    .INIT(1'b0)) 
     RX_DV_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(gmii_rx_dv_ch1_int),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2220222000202220)) 
     RX_ER_i_1__0
       (.I0(XMIT_DATA),
        .I1(I7),
        .I2(O1),
        .I3(RXSYNC_STATUS),
        .I4(n_0_RX_ER_i_4__0),
        .I5(RX_DATA_ERROR),
        .O(RX_ER0));
(* SOFT_HLUTNM = "soft_lutpair227" *) 
   LUT2 #(
    .INIT(4'h1)) 
     RX_ER_i_4__0
       (.I0(FALSE_CARRIER_REG3),
        .I1(EXTEND_REG1),
        .O(n_0_RX_ER_i_4__0));
FDRE #(
    .INIT(1'b0)) 
     RX_ER_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_ER0),
        .Q(gmii_rx_er_ch1_int),
        .R(I10));
LUT5 #(
    .INIT(32'h00700050)) 
     RX_INVALID_i_1__0
       (.I0(n_0_RX_INVALID_i_2__0),
        .I1(K28p5_REG1),
        .I2(RXSYNC_STATUS),
        .I3(I10),
        .I4(O2),
        .O(n_0_RX_INVALID_i_1__0));
LUT4 #(
    .INIT(16'h4445)) 
     RX_INVALID_i_2__0
       (.I0(FROM_RX_CX),
        .I1(I6),
        .I2(FROM_RX_K),
        .I3(FROM_IDLE_D),
        .O(n_0_RX_INVALID_i_2__0));
FDRE RX_INVALID_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RX_INVALID_i_1__0),
        .Q(O2),
        .R(\<const0> ));
FDRE R_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(R),
        .Q(R_REG1),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2000000000000000)) 
     R_i_1__1
       (.I0(n_0_R_i_2__0),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(I1),
        .O(K23p7));
(* SOFT_HLUTNM = "soft_lutpair224" *) 
   LUT4 #(
    .INIT(16'h8000)) 
     R_i_2__0
       (.I0(Q[4]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .O(n_0_R_i_2__0));
FDRE R_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K23p7),
        .Q(R),
        .R(\<const0> ));
FDRE SOP_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP),
        .Q(SOP_REG1),
        .R(\<const0> ));
FDRE SOP_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP_REG1),
        .Q(SOP_REG2),
        .R(\<const0> ));
FDRE SOP_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP_REG2),
        .Q(SOP_REG3),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h20202000)) 
     SOP_i_1__0
       (.I0(I6),
        .I1(WAIT_FOR_K),
        .I2(S_0),
        .I3(RX_IDLE),
        .I4(n_0_EXTEND_reg),
        .O(SOP0));
FDRE SOP_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP0),
        .Q(SOP),
        .R(I10));
FDRE SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const1> ),
        .Q(SYNC_STATUS_REG),
        .R(SYNC_STATUS_REG0));
(* SOFT_HLUTNM = "soft_lutpair226" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     S_i_2__0
       (.I0(Q[3]),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[4]),
        .O(O4));
FDRE S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S0),
        .Q(S_0),
        .R(\<const0> ));
FDRE T_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T),
        .Q(T_REG1),
        .R(\<const0> ));
FDRE T_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T_REG1),
        .Q(T_REG2),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair221" *) 
   LUT5 #(
    .INIT(32'h00800000)) 
     T_i_1__1
       (.I0(O4),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(I1),
        .O(K29p7));
FDRE T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K29p7),
        .Q(T),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'h0222222200002222)) 
     WAIT_FOR_K_i_1__0
       (.I0(RXSYNC_STATUS),
        .I1(I10),
        .I2(RXEVEN),
        .I3(K28p5_REG1),
        .I4(SYNC_STATUS_REG),
        .I5(WAIT_FOR_K),
        .O(n_0_WAIT_FOR_K_i_1__0));
FDRE WAIT_FOR_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_WAIT_FOR_K_i_1__0),
        .Q(WAIT_FOR_K),
        .R(\<const0> ));
endmodule

(* ORIG_REF_NAME = "RX" *) 
module quadsgmiiRX__parameterized0_44
   (K28p5_REG1,
    RX_IDLE,
    SOP_REG3,
    EOP_REG1,
    gmii_rx_er_ch0_int,
    RX_CONFIG_VALID,
    status_vector_ch0,
    O1,
    gmii_rx_dv_ch0_int,
    O2,
    CO,
    O3,
    O4,
    O5,
    O6,
    SR,
    RX_CONFIG_REG,
    O7,
    O8,
    O9,
    O12,
    userclk2,
    I10,
    FALSE_NIT0,
    S0,
    SYNC_STATUS_REG0,
    S2,
    I1,
    I2,
    Q,
    S,
    I3,
    I4,
    I5,
    RXSYNC_STATUS,
    I6,
    XMIT_DATA,
    I7,
    RXNOTINTABLE_INT,
    RXEVEN,
    SRESET,
    I8,
    I9,
    I11,
    I12,
    I13,
    I14,
    I15,
    I16);
  output K28p5_REG1;
  output RX_IDLE;
  output SOP_REG3;
  output EOP_REG1;
  output gmii_rx_er_ch0_int;
  output RX_CONFIG_VALID;
  output [1:0]status_vector_ch0;
  output O1;
  output gmii_rx_dv_ch0_int;
  output O2;
  output [0:0]CO;
  output [0:0]O3;
  output O4;
  output O5;
  output O6;
  output [0:0]SR;
  output [15:0]RX_CONFIG_REG;
  output O7;
  output O8;
  output O9;
  output [7:0]O12;
  input userclk2;
  input [0:0]I10;
  input FALSE_NIT0;
  input S0;
  input SYNC_STATUS_REG0;
  input S2;
  input I1;
  input I2;
  input [7:0]Q;
  input [0:0]S;
  input [0:0]I3;
  input [0:0]I4;
  input [0:0]I5;
  input RXSYNC_STATUS;
  input I6;
  input XMIT_DATA;
  input I7;
  input RXNOTINTABLE_INT;
  input RXEVEN;
  input SRESET;
  input [8:0]I8;
  input [8:0]I9;
  input I11;
  input [2:0]I12;
  input I13;
  input I14;
  input I15;
  input [0:0]I16;

  wire \<const0> ;
  wire \<const1> ;
  wire C;
  wire C0;
  wire CGBAD;
  wire CGBAD_REG1;
  wire CGBAD_REG2;
  wire CGBAD_REG3;
  wire [0:0]CO;
  wire C_HDR_REMOVED;
  wire C_HDR_REMOVED_REG;
  wire C_REG1;
  wire C_REG2;
  wire C_REG3;
  wire D0p0;
  wire D0p0_REG;
  wire EOP;
  wire EOP0;
  wire EOP_REG1;
  wire EOP_REG10;
  wire EXTEND_ERR;
  wire EXTEND_ERR0;
  wire EXTEND_REG1;
  wire EXTEND_REG2;
  wire EXTEND_REG3;
  wire EXT_ILLEGAL_K;
  wire EXT_ILLEGAL_K0;
  wire EXT_ILLEGAL_K_REG1;
  wire EXT_ILLEGAL_K_REG2;
  wire FALSE_CARRIER;
  wire FALSE_CARRIER_REG1;
  wire FALSE_CARRIER_REG2;
  wire FALSE_CARRIER_REG3;
  wire FALSE_DATA;
  wire FALSE_DATA0;
  wire FALSE_K;
  wire FALSE_K0;
  wire FALSE_NIT;
  wire FALSE_NIT0;
  wire FROM_IDLE_D;
  wire FROM_IDLE_D0;
  wire FROM_RX_CX;
  wire FROM_RX_CX0;
  wire FROM_RX_K;
  wire FROM_RX_K0;
  wire I;
  wire I0;
  wire I1;
  wire [0:0]I10;
  wire I11;
  wire [2:0]I12;
  wire I13;
  wire I14;
  wire I15;
  wire [0:0]I16;
  wire I2;
  wire [0:0]I3;
  wire [0:0]I4;
  wire [0:0]I5;
  wire I6;
  wire I7;
  wire [8:0]I8;
  wire [8:0]I9;
  wire ILLEGAL_K;
  wire ILLEGAL_K0;
  wire ILLEGAL_K_REG1;
  wire ILLEGAL_K_REG2;
  wire K23p7;
  wire K28p5;
  wire K28p5_REG1;
  wire K28p5_REG2;
  wire K29p7;
  wire O1;
  wire [7:0]O12;
  wire O2;
  wire [0:0]O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [7:0]Q;
  wire R;
  wire RUDI_C0;
  wire RUDI_I0;
  wire RXCHARISK_REG1;
  wire [7:0]RXDATA_REG5;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire [15:0]RX_CONFIG_REG;
  wire RX_CONFIG_VALID;
  wire RX_CONFIG_VALID_INT0;
  wire RX_DATA_ERROR;
  wire RX_DATA_ERROR0;
  wire RX_ER0;
  wire RX_IDLE;
  wire R_REG1;
  wire [0:0]S;
  wire S0;
  wire S2;
  wire SOP;
  wire SOP0;
  wire SOP_REG1;
  wire SOP_REG2;
  wire SOP_REG3;
  wire [0:0]SR;
  wire SRESET;
  wire SYNC_STATUS_REG;
  wire SYNC_STATUS_REG0;
  wire S_0;
  wire T;
  wire T_REG1;
  wire T_REG2;
  wire WAIT_FOR_K;
  wire XMIT_DATA;
  wire gmii_rx_dv_ch0_int;
  wire gmii_rx_er_ch0_int;
  wire n_0_CONSISTENCY_MATCH_i_5;
  wire n_0_CONSISTENCY_MATCH_i_7;
  wire n_0_CONSISTENCY_MATCH_i_8;
  wire n_0_CONSISTENCY_MATCH_reg_i_3;
  wire n_0_C_i_3;
  wire n_0_C_i_4;
  wire n_0_C_i_5;
  wire n_0_C_i_6;
  wire n_0_C_reg_i_2;
  wire n_0_D0p0_REG_i_2;
  wire n_0_EOP_i_2;
  wire n_0_EXTEND_i_1;
  wire n_0_EXTEND_i_3;
  wire n_0_EXTEND_reg;
  wire n_0_FALSE_CARRIER_i_1;
  wire n_0_FALSE_CARRIER_i_2;
  wire n_0_FALSE_CARRIER_i_3;
  wire n_0_FALSE_DATA_i_2;
  wire n_0_FALSE_DATA_i_3;
  wire n_0_FALSE_DATA_i_4;
  wire n_0_FALSE_K_i_2;
  wire n_0_FALSE_NIT_i_5;
  wire n_0_FALSE_NIT_i_6;
  wire \n_0_IDLE_REG_reg[0] ;
  wire \n_0_IDLE_REG_reg[2] ;
  wire n_0_I_i_2;
  wire n_0_RECEIVE_i_1;
  wire \n_0_RXDATA_REG4_reg[0]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[1]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[2]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[3]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[4]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[5]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[6]_srl4 ;
  wire \n_0_RXDATA_REG4_reg[7]_srl4 ;
  wire \n_0_RXD[0]_i_1 ;
  wire \n_0_RXD[1]_i_1 ;
  wire \n_0_RXD[2]_i_1 ;
  wire \n_0_RXD[3]_i_1 ;
  wire \n_0_RXD[4]_i_1 ;
  wire \n_0_RXD[5]_i_1 ;
  wire \n_0_RXD[6]_i_1 ;
  wire \n_0_RXD[7]_i_1 ;
  wire \n_0_RX_CONFIG_REG[0]_i_1 ;
  wire \n_0_RX_CONFIG_REG[10]_i_1 ;
  wire \n_0_RX_CONFIG_REG[11]_i_1 ;
  wire \n_0_RX_CONFIG_REG[12]_i_1 ;
  wire \n_0_RX_CONFIG_REG[13]_i_1 ;
  wire \n_0_RX_CONFIG_REG[14]_i_1 ;
  wire \n_0_RX_CONFIG_REG[15]_i_1 ;
  wire \n_0_RX_CONFIG_REG[1]_i_1 ;
  wire \n_0_RX_CONFIG_REG[2]_i_1 ;
  wire \n_0_RX_CONFIG_REG[3]_i_1 ;
  wire \n_0_RX_CONFIG_REG[4]_i_1 ;
  wire \n_0_RX_CONFIG_REG[5]_i_1 ;
  wire \n_0_RX_CONFIG_REG[6]_i_1 ;
  wire \n_0_RX_CONFIG_REG[7]_i_1 ;
  wire \n_0_RX_CONFIG_REG[7]_i_2 ;
  wire \n_0_RX_CONFIG_REG[8]_i_1 ;
  wire \n_0_RX_CONFIG_REG[9]_i_1 ;
  wire n_0_RX_CONFIG_REG_NULL_i_2;
  wire n_0_RX_CONFIG_REG_NULL_i_3;
  wire n_0_RX_CONFIG_REG_NULL_i_4;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_10 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_7 ;
  wire \n_0_RX_CONFIG_SNAPSHOT[15]_i_9 ;
  wire \n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5 ;
  wire n_0_RX_CONFIG_VALID_INT_i_2;
  wire \n_0_RX_CONFIG_VALID_REG_reg[0] ;
  wire \n_0_RX_CONFIG_VALID_REG_reg[3] ;
  wire n_0_RX_DATA_ERROR_i_2;
  wire n_0_RX_DATA_ERROR_i_4;
  wire n_0_RX_ER_i_4;
  wire n_0_RX_INVALID_i_1;
  wire n_0_RX_INVALID_i_2;
  wire n_0_R_i_2;
  wire n_0_WAIT_FOR_K_i_1;
  wire n_1_CONSISTENCY_MATCH_reg_i_3;
  wire \n_1_RX_CONFIG_SNAPSHOT_reg[15]_i_5 ;
  wire n_2_CONSISTENCY_MATCH_reg_i_3;
  wire \n_2_RX_CONFIG_SNAPSHOT_reg[15]_i_5 ;
  wire n_3_CONSISTENCY_MATCH_reg_i_3;
  wire \n_3_RX_CONFIG_SNAPSHOT_reg[15]_i_5 ;
  wire p_0_in1_in;
  wire p_0_in2_in;
  wire p_1_in;
  wire [1:0]status_vector_ch0;
  wire userclk2;
  wire [3:1]NLW_CONSISTENCY_MATCH_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_CONSISTENCY_MATCH_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_CONSISTENCY_MATCH_reg_i_3_O_UNCONNECTED;
  wire [3:1]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_5_O_UNCONNECTED ;

FDRE CGBAD_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD),
        .Q(CGBAD_REG1),
        .R(\<const0> ));
FDRE CGBAD_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD_REG1),
        .Q(CGBAD_REG2),
        .R(\<const0> ));
FDRE CGBAD_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(CGBAD_REG2),
        .Q(CGBAD_REG3),
        .R(I10));
FDRE CGBAD_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S2),
        .Q(CGBAD),
        .R(I10));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_5
       (.I0(RX_CONFIG_REG[9]),
        .I1(I9[6]),
        .I2(RX_CONFIG_REG[10]),
        .I3(I9[7]),
        .I4(I9[8]),
        .I5(RX_CONFIG_REG[11]),
        .O(n_0_CONSISTENCY_MATCH_i_5));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_7
       (.I0(RX_CONFIG_REG[5]),
        .I1(I9[5]),
        .I2(RX_CONFIG_REG[3]),
        .I3(I9[3]),
        .I4(I9[4]),
        .I5(RX_CONFIG_REG[4]),
        .O(n_0_CONSISTENCY_MATCH_i_7));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     CONSISTENCY_MATCH_i_8
       (.I0(RX_CONFIG_REG[2]),
        .I1(I9[2]),
        .I2(RX_CONFIG_REG[0]),
        .I3(I9[0]),
        .I4(I9[1]),
        .I5(RX_CONFIG_REG[1]),
        .O(n_0_CONSISTENCY_MATCH_i_8));
CARRY4 CONSISTENCY_MATCH_reg_i_2
       (.CI(n_0_CONSISTENCY_MATCH_reg_i_3),
        .CO({NLW_CONSISTENCY_MATCH_reg_i_2_CO_UNCONNECTED[3:1],O3}),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_CONSISTENCY_MATCH_reg_i_2_O_UNCONNECTED[3:0]),
        .S({\<const0> ,\<const0> ,\<const0> ,I5}));
CARRY4 CONSISTENCY_MATCH_reg_i_3
       (.CI(\<const0> ),
        .CO({n_0_CONSISTENCY_MATCH_reg_i_3,n_1_CONSISTENCY_MATCH_reg_i_3,n_2_CONSISTENCY_MATCH_reg_i_3,n_3_CONSISTENCY_MATCH_reg_i_3}),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(NLW_CONSISTENCY_MATCH_reg_i_3_O_UNCONNECTED[3:0]),
        .S({n_0_CONSISTENCY_MATCH_i_5,I4,n_0_CONSISTENCY_MATCH_i_7,n_0_CONSISTENCY_MATCH_i_8}));
(* SOFT_HLUTNM = "soft_lutpair96" *) 
   LUT4 #(
    .INIT(16'h1000)) 
     C_HDR_REMOVED_REG_i_1
       (.I0(I12[2]),
        .I1(I12[1]),
        .I2(I12[0]),
        .I3(C_REG2),
        .O(C_HDR_REMOVED));
FDRE C_HDR_REMOVED_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_HDR_REMOVED),
        .Q(C_HDR_REMOVED_REG),
        .R(\<const0> ));
FDRE C_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C),
        .Q(C_REG1),
        .R(\<const0> ));
FDRE C_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_REG1),
        .Q(C_REG2),
        .R(\<const0> ));
FDRE C_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C_REG2),
        .Q(C_REG3),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair91" *) 
   LUT3 #(
    .INIT(8'h04)) 
     C_i_1
       (.I0(n_0_C_reg_i_2),
        .I1(K28p5_REG1),
        .I2(I1),
        .O(C0));
LUT6 #(
    .INIT(64'hBFFFFFFFFFFFFFFF)) 
     C_i_3
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(Q[7]),
        .I5(n_0_C_i_5),
        .O(n_0_C_i_3));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFBFF)) 
     C_i_4
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(n_0_C_i_6),
        .I4(Q[0]),
        .I5(Q[4]),
        .O(n_0_C_i_4));
(* SOFT_HLUTNM = "soft_lutpair94" *) 
   LUT2 #(
    .INIT(4'h2)) 
     C_i_5
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(n_0_C_i_5));
(* SOFT_HLUTNM = "soft_lutpair102" *) 
   LUT2 #(
    .INIT(4'h1)) 
     C_i_6
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(n_0_C_i_6));
FDRE C_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(C0),
        .Q(C),
        .R(\<const0> ));
MUXF7 C_reg_i_2
       (.I0(n_0_C_i_3),
        .I1(n_0_C_i_4),
        .O(n_0_C_reg_i_2),
        .S(Q[1]));
(* SOFT_HLUTNM = "soft_lutpair100" *) 
   LUT4 #(
    .INIT(16'h0002)) 
     D0p0_REG_i_1
       (.I0(n_0_D0p0_REG_i_2),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[7]),
        .O(D0p0));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     D0p0_REG_i_2
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(I1),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(n_0_D0p0_REG_i_2));
FDRE D0p0_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(D0p0),
        .Q(D0p0_REG),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'hEA)) 
     EOP_REG1_i_1
       (.I0(EOP),
        .I1(n_0_EXTEND_reg),
        .I2(EXTEND_REG1),
        .O(EOP_REG10));
FDRE EOP_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EOP_REG10),
        .Q(EOP_REG1),
        .R(I10));
LUT6 #(
    .INIT(64'hFFFFFFFF88888000)) 
     EOP_i_1
       (.I0(T_REG2),
        .I1(R_REG1),
        .I2(RXEVEN),
        .I3(K28p5_REG1),
        .I4(R),
        .I5(n_0_EOP_i_2),
        .O(EOP0));
LUT5 #(
    .INIT(32'hF8888888)) 
     EOP_i_2
       (.I0(RX_IDLE),
        .I1(K28p5_REG1),
        .I2(RXEVEN),
        .I3(D0p0_REG),
        .I4(C_REG1),
        .O(n_0_EOP_i_2));
FDRE EOP_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EOP0),
        .Q(EOP),
        .R(I10));
LUT3 #(
    .INIT(8'hEA)) 
     EXTEND_ERR_i_1
       (.I0(EXT_ILLEGAL_K_REG2),
        .I1(CGBAD_REG3),
        .I2(EXTEND_REG3),
        .O(EXTEND_ERR0));
FDRE EXTEND_ERR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_ERR0),
        .Q(EXTEND_ERR),
        .R(SYNC_STATUS_REG0));
FDRE EXTEND_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EXTEND_reg),
        .Q(EXTEND_REG1),
        .R(\<const0> ));
FDRE EXTEND_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_REG1),
        .Q(EXTEND_REG2),
        .R(\<const0> ));
FDRE EXTEND_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXTEND_REG2),
        .Q(EXTEND_REG3),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hAA00AA2AAA00AA00)) 
     EXTEND_i_1
       (.I0(I13),
        .I1(RXEVEN),
        .I2(K28p5_REG1),
        .I3(n_0_EXTEND_i_3),
        .I4(S_0),
        .I5(n_0_EXTEND_reg),
        .O(n_0_EXTEND_i_1));
LUT3 #(
    .INIT(8'h80)) 
     EXTEND_i_3
       (.I0(R),
        .I1(O1),
        .I2(R_REG1),
        .O(n_0_EXTEND_i_3));
FDRE EXTEND_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EXTEND_i_1),
        .Q(n_0_EXTEND_reg),
        .R(\<const0> ));
FDRE EXT_ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K),
        .Q(EXT_ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
FDRE EXT_ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K_REG1),
        .Q(EXT_ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
LUT5 #(
    .INIT(32'h00000700)) 
     EXT_ILLEGAL_K_i_1
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .I2(R),
        .I3(EXTEND_REG1),
        .I4(S_0),
        .O(EXT_ILLEGAL_K0));
FDRE EXT_ILLEGAL_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(EXT_ILLEGAL_K0),
        .Q(EXT_ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
FDRE FALSE_CARRIER_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER),
        .Q(FALSE_CARRIER_REG1),
        .R(\<const0> ));
FDRE FALSE_CARRIER_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER_REG1),
        .Q(FALSE_CARRIER_REG2),
        .R(\<const0> ));
FDRE FALSE_CARRIER_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_CARRIER_REG2),
        .Q(FALSE_CARRIER_REG3),
        .R(SYNC_STATUS_REG0));
LUT6 #(
    .INIT(64'h0A0E0E0E0A0A0A0A)) 
     FALSE_CARRIER_i_1
       (.I0(n_0_FALSE_CARRIER_i_2),
        .I1(RXSYNC_STATUS),
        .I2(I10),
        .I3(RXEVEN),
        .I4(K28p5_REG1),
        .I5(FALSE_CARRIER),
        .O(n_0_FALSE_CARRIER_i_1));
LUT5 #(
    .INIT(32'h00000020)) 
     FALSE_CARRIER_i_2
       (.I0(I6),
        .I1(S_0),
        .I2(RX_IDLE),
        .I3(K28p5_REG1),
        .I4(n_0_FALSE_CARRIER_i_3),
        .O(n_0_FALSE_CARRIER_i_2));
LUT3 #(
    .INIT(8'hFE)) 
     FALSE_CARRIER_i_3
       (.I0(FALSE_DATA),
        .I1(FALSE_K),
        .I2(FALSE_NIT),
        .O(n_0_FALSE_CARRIER_i_3));
FDRE FALSE_CARRIER_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_FALSE_CARRIER_i_1),
        .Q(FALSE_CARRIER),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair103" *) 
   LUT3 #(
    .INIT(8'h02)) 
     FALSE_DATA_i_1
       (.I0(n_0_FALSE_DATA_i_2),
        .I1(RXNOTINTABLE_INT),
        .I2(I1),
        .O(FALSE_DATA0));
LUT6 #(
    .INIT(64'h00004400000F0000)) 
     FALSE_DATA_i_2
       (.I0(n_0_FALSE_DATA_i_3),
        .I1(Q[2]),
        .I2(n_0_FALSE_DATA_i_4),
        .I3(Q[7]),
        .I4(Q[6]),
        .I5(Q[5]),
        .O(n_0_FALSE_DATA_i_2));
(* SOFT_HLUTNM = "soft_lutpair90" *) 
   LUT4 #(
    .INIT(16'hEFF1)) 
     FALSE_DATA_i_3
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(n_0_FALSE_DATA_i_3));
(* SOFT_HLUTNM = "soft_lutpair90" *) 
   LUT5 #(
    .INIT(32'hE8FFFFFF)) 
     FALSE_DATA_i_4
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(n_0_FALSE_DATA_i_4));
FDRE FALSE_DATA_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_DATA0),
        .Q(FALSE_DATA),
        .R(I10));
LUT6 #(
    .INIT(64'h0000000040000040)) 
     FALSE_K_i_1
       (.I0(n_0_FALSE_K_i_2),
        .I1(Q[7]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[6]),
        .I5(RXNOTINTABLE_INT),
        .O(FALSE_K0));
(* SOFT_HLUTNM = "soft_lutpair93" *) 
   LUT5 #(
    .INIT(32'hEFFFFFFF)) 
     FALSE_K_i_2
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(I1),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(n_0_FALSE_K_i_2));
FDRE FALSE_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_K0),
        .Q(FALSE_K),
        .R(I10));
LUT6 #(
    .INIT(64'hFFFF400040004000)) 
     FALSE_NIT_i_2
       (.I0(n_0_FALSE_K_i_2),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(n_0_FALSE_NIT_i_5),
        .I5(n_0_D0p0_REG_i_2),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair100" *) 
   LUT3 #(
    .INIT(8'h28)) 
     FALSE_NIT_i_3
       (.I0(n_0_D0p0_REG_i_2),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(O6));
LUT6 #(
    .INIT(64'h0600000000000000)) 
     FALSE_NIT_i_4
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(n_0_FALSE_NIT_i_6),
        .I3(Q[6]),
        .I4(Q[5]),
        .I5(Q[4]),
        .O(O7));
(* SOFT_HLUTNM = "soft_lutpair89" *) 
   LUT2 #(
    .INIT(4'h8)) 
     FALSE_NIT_i_5
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(n_0_FALSE_NIT_i_5));
(* SOFT_HLUTNM = "soft_lutpair93" *) 
   LUT3 #(
    .INIT(8'h7F)) 
     FALSE_NIT_i_6
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(I1),
        .O(n_0_FALSE_NIT_i_6));
FDRE FALSE_NIT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FALSE_NIT0),
        .Q(FALSE_NIT),
        .R(I10));
LUT4 #(
    .INIT(16'h0004)) 
     FROM_IDLE_D_i_1
       (.I0(K28p5_REG1),
        .I1(RX_IDLE),
        .I2(WAIT_FOR_K),
        .I3(I6),
        .O(FROM_IDLE_D0));
FDRE FROM_IDLE_D_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_IDLE_D0),
        .Q(FROM_IDLE_D),
        .R(SYNC_STATUS_REG0));
LUT6 #(
    .INIT(64'hFFFFA8FFFCFCA8A8)) 
     FROM_RX_CX_i_1
       (.I0(RXCHARISK_REG1),
        .I1(C_REG1),
        .I2(C_REG2),
        .I3(I11),
        .I4(CGBAD),
        .I5(C_REG3),
        .O(FROM_RX_CX0));
FDRE FROM_RX_CX_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_RX_CX0),
        .Q(FROM_RX_CX),
        .R(SYNC_STATUS_REG0));
LUT4 #(
    .INIT(16'h00E0)) 
     FROM_RX_K_i_1
       (.I0(RXCHARISK_REG1),
        .I1(CGBAD),
        .I2(K28p5_REG2),
        .I3(I6),
        .O(FROM_RX_K0));
FDRE FROM_RX_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(FROM_RX_K0),
        .Q(FROM_RX_K),
        .R(SYNC_STATUS_REG0));
GND GND
       (.G(\<const0> ));
FDRE \IDLE_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_IDLE),
        .Q(\n_0_IDLE_REG_reg[0] ),
        .R(I10));
FDRE \IDLE_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_IDLE_REG_reg[0] ),
        .Q(p_0_in1_in),
        .R(I10));
FDRE \IDLE_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_0_in1_in),
        .Q(\n_0_IDLE_REG_reg[2] ),
        .R(I10));
FDRE ILLEGAL_K_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K),
        .Q(ILLEGAL_K_REG1),
        .R(SYNC_STATUS_REG0));
FDRE ILLEGAL_K_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K_REG1),
        .Q(ILLEGAL_K_REG2),
        .R(SYNC_STATUS_REG0));
LUT4 #(
    .INIT(16'h0010)) 
     ILLEGAL_K_i_1
       (.I0(R),
        .I1(K28p5_REG1),
        .I2(RXCHARISK_REG1),
        .I3(T),
        .O(ILLEGAL_K0));
FDRE ILLEGAL_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(ILLEGAL_K0),
        .Q(ILLEGAL_K),
        .R(SYNC_STATUS_REG0));
FDRE I_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I),
        .Q(RX_IDLE),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair91" *) 
   LUT5 #(
    .INIT(32'h33220020)) 
     I_i_1
       (.I0(n_0_C_reg_i_2),
        .I1(n_0_I_i_2),
        .I2(K28p5_REG1),
        .I3(I1),
        .I4(I6),
        .O(I0));
LUT6 #(
    .INIT(64'h000001FFFFFFFFFF)) 
     I_i_2
       (.I0(FALSE_DATA),
        .I1(FALSE_K),
        .I2(FALSE_NIT),
        .I3(RX_IDLE),
        .I4(K28p5_REG1),
        .I5(RXEVEN),
        .O(n_0_I_i_2));
FDRE I_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I0),
        .Q(I),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair92" *) 
   LUT5 #(
    .INIT(32'h04000000)) 
     K28p5_REG1_i_1
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(n_0_FALSE_K_i_2),
        .I3(Q[7]),
        .I4(Q[4]),
        .O(K28p5));
FDRE K28p5_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K28p5),
        .Q(K28p5_REG1),
        .R(\<const0> ));
FDRE K28p5_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K28p5_REG1),
        .Q(K28p5_REG2),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h0D0C)) 
     RECEIVED_IDLE_i_1
       (.I0(RX_CONFIG_VALID),
        .I1(RX_IDLE),
        .I2(SRESET),
        .I3(I15),
        .O(O9));
LUT5 #(
    .INIT(32'h44044400)) 
     RECEIVE_i_1
       (.I0(I10),
        .I1(RXSYNC_STATUS),
        .I2(EOP),
        .I3(SOP_REG2),
        .I4(O1),
        .O(n_0_RECEIVE_i_1));
FDRE RECEIVE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RECEIVE_i_1),
        .Q(O1),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'hFFFE)) 
     RUDI_C_i_1
       (.I0(p_1_in),
        .I1(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .I2(\n_0_RX_CONFIG_VALID_REG_reg[3] ),
        .I3(p_0_in2_in),
        .O(RUDI_C0));
FDRE RUDI_C_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RUDI_C0),
        .Q(status_vector_ch0[0]),
        .R(I10));
LUT2 #(
    .INIT(4'hE)) 
     RUDI_I_i_1
       (.I0(\n_0_IDLE_REG_reg[2] ),
        .I1(p_0_in1_in),
        .O(RUDI_I0));
FDRE RUDI_I_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RUDI_I0),
        .Q(status_vector_ch0[1]),
        .R(I10));
FDRE RXCHARISK_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I1),
        .Q(RXCHARISK_REG1),
        .R(\<const0> ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg[0]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[0]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[0]),
        .Q(\n_0_RXDATA_REG4_reg[0]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg[1]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[1]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[1]),
        .Q(\n_0_RXDATA_REG4_reg[1]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg[2]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[2]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[2]),
        .Q(\n_0_RXDATA_REG4_reg[2]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg[3]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[3]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[3]),
        .Q(\n_0_RXDATA_REG4_reg[3]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg[4]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[4]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[4]),
        .Q(\n_0_RXDATA_REG4_reg[4]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg[5]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[5]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[5]),
        .Q(\n_0_RXDATA_REG4_reg[5]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg[6]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[6]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[6]),
        .Q(\n_0_RXDATA_REG4_reg[6]_srl4 ));
(* srl_bus_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg " *) 
   (* srl_name = "inst/\quadsgmii_core/qsgmii_inst/GPCS_PMA_GEN_i0/RECEIVER/RXDATA_REG4_reg[7]_srl4 " *) 
   SRL16E \RXDATA_REG4_reg[7]_srl4 
       (.A0(\<const1> ),
        .A1(\<const1> ),
        .A2(\<const0> ),
        .A3(\<const0> ),
        .CE(\<const1> ),
        .CLK(userclk2),
        .D(Q[7]),
        .Q(\n_0_RXDATA_REG4_reg[7]_srl4 ));
FDRE \RXDATA_REG5_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[0]_srl4 ),
        .Q(RXDATA_REG5[0]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[1]_srl4 ),
        .Q(RXDATA_REG5[1]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[2]_srl4 ),
        .Q(RXDATA_REG5[2]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[3]_srl4 ),
        .Q(RXDATA_REG5[3]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[4]_srl4 ),
        .Q(RXDATA_REG5[4]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[5]_srl4 ),
        .Q(RXDATA_REG5[5]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[6]_srl4 ),
        .Q(RXDATA_REG5[6]),
        .R(\<const0> ));
FDRE \RXDATA_REG5_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXDATA_REG4_reg[7]_srl4 ),
        .Q(RXDATA_REG5[7]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair101" *) 
   LUT4 #(
    .INIT(16'hBBBA)) 
     \RXD[0]_i_1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[0]),
        .O(\n_0_RXD[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair101" *) 
   LUT4 #(
    .INIT(16'h5554)) 
     \RXD[1]_i_1 
       (.I0(SOP_REG3),
        .I1(RXDATA_REG5[1]),
        .I2(FALSE_CARRIER_REG3),
        .I3(EXTEND_REG1),
        .O(\n_0_RXD[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair98" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \RXD[2]_i_1 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[2]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[2]_i_1 ));
LUT4 #(
    .INIT(16'h5554)) 
     \RXD[3]_i_1 
       (.I0(SOP_REG3),
        .I1(RXDATA_REG5[3]),
        .I2(FALSE_CARRIER_REG3),
        .I3(EXTEND_REG1),
        .O(\n_0_RXD[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair95" *) 
   LUT5 #(
    .INIT(32'hBABBBAAA)) 
     \RXD[4]_i_1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_ERR),
        .I3(EXTEND_REG1),
        .I4(RXDATA_REG5[4]),
        .O(\n_0_RXD[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair98" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \RXD[5]_i_1 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[5]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair99" *) 
   LUT4 #(
    .INIT(16'hABAA)) 
     \RXD[6]_i_1 
       (.I0(SOP_REG3),
        .I1(FALSE_CARRIER_REG3),
        .I2(EXTEND_REG1),
        .I3(RXDATA_REG5[6]),
        .O(\n_0_RXD[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair99" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \RXD[7]_i_1 
       (.I0(EXTEND_REG1),
        .I1(FALSE_CARRIER_REG3),
        .I2(RXDATA_REG5[7]),
        .I3(SOP_REG3),
        .O(\n_0_RXD[7]_i_1 ));
FDRE \RXD_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[0]_i_1 ),
        .Q(O12[0]),
        .R(I16));
FDRE \RXD_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[1]_i_1 ),
        .Q(O12[1]),
        .R(I16));
FDRE \RXD_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[2]_i_1 ),
        .Q(O12[2]),
        .R(I16));
FDRE \RXD_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[3]_i_1 ),
        .Q(O12[3]),
        .R(I16));
FDRE \RXD_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[4]_i_1 ),
        .Q(O12[4]),
        .R(I16));
FDRE \RXD_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[5]_i_1 ),
        .Q(O12[5]),
        .R(I16));
FDRE \RXD_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[6]_i_1 ),
        .Q(O12[6]),
        .R(I16));
FDRE \RXD_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RXD[7]_i_1 ),
        .Q(O12[7]),
        .R(I16));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[0]_i_1 
       (.I0(Q[0]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2 ),
        .I3(RX_CONFIG_REG[0]),
        .O(\n_0_RX_CONFIG_REG[0]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[10]_i_1 
       (.I0(Q[2]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[10]),
        .O(\n_0_RX_CONFIG_REG[10]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[11]_i_1 
       (.I0(Q[3]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[11]),
        .O(\n_0_RX_CONFIG_REG[11]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[12]_i_1 
       (.I0(Q[4]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[12]),
        .O(\n_0_RX_CONFIG_REG[12]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[13]_i_1 
       (.I0(Q[5]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[13]),
        .O(\n_0_RX_CONFIG_REG[13]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[14]_i_1 
       (.I0(Q[6]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[14]),
        .O(\n_0_RX_CONFIG_REG[14]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[15]_i_1 
       (.I0(Q[7]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[15]),
        .O(\n_0_RX_CONFIG_REG[15]_i_1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[1]_i_1 
       (.I0(Q[1]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2 ),
        .I3(RX_CONFIG_REG[1]),
        .O(\n_0_RX_CONFIG_REG[1]_i_1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[2]_i_1 
       (.I0(Q[2]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2 ),
        .I3(RX_CONFIG_REG[2]),
        .O(\n_0_RX_CONFIG_REG[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair102" *) 
   LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[3]_i_1 
       (.I0(Q[3]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2 ),
        .I3(RX_CONFIG_REG[3]),
        .O(\n_0_RX_CONFIG_REG[3]_i_1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[4]_i_1 
       (.I0(Q[4]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2 ),
        .I3(RX_CONFIG_REG[4]),
        .O(\n_0_RX_CONFIG_REG[4]_i_1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[5]_i_1 
       (.I0(Q[5]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2 ),
        .I3(RX_CONFIG_REG[5]),
        .O(\n_0_RX_CONFIG_REG[5]_i_1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[6]_i_1 
       (.I0(Q[6]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2 ),
        .I3(RX_CONFIG_REG[6]),
        .O(\n_0_RX_CONFIG_REG[6]_i_1 ));
LUT4 #(
    .INIT(16'hFE02)) 
     \RX_CONFIG_REG[7]_i_1 
       (.I0(Q[7]),
        .I1(I1),
        .I2(\n_0_RX_CONFIG_REG[7]_i_2 ),
        .I3(RX_CONFIG_REG[7]),
        .O(\n_0_RX_CONFIG_REG[7]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair96" *) 
   LUT5 #(
    .INIT(32'h55555515)) 
     \RX_CONFIG_REG[7]_i_2 
       (.I0(C),
        .I1(C_REG2),
        .I2(I12[0]),
        .I3(I12[1]),
        .I4(I12[2]),
        .O(\n_0_RX_CONFIG_REG[7]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[8]_i_1 
       (.I0(Q[0]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[8]),
        .O(\n_0_RX_CONFIG_REG[8]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFEEEF00002220)) 
     \RX_CONFIG_REG[9]_i_1 
       (.I0(Q[1]),
        .I1(RXCHARISK_REG1),
        .I2(C_REG1),
        .I3(C_HDR_REMOVED_REG),
        .I4(I1),
        .I5(RX_CONFIG_REG[9]),
        .O(\n_0_RX_CONFIG_REG[9]_i_1 ));
LUT6 #(
    .INIT(64'h808080FF80808000)) 
     RX_CONFIG_REG_NULL_i_1
       (.I0(n_0_RX_CONFIG_REG_NULL_i_2),
        .I1(n_0_RX_CONFIG_REG_NULL_i_3),
        .I2(n_0_RX_CONFIG_REG_NULL_i_4),
        .I3(SRESET),
        .I4(RX_CONFIG_VALID),
        .I5(I14),
        .O(O8));
LUT5 #(
    .INIT(32'h00000001)) 
     RX_CONFIG_REG_NULL_i_2
       (.I0(RX_CONFIG_REG[3]),
        .I1(RX_CONFIG_REG[4]),
        .I2(RX_CONFIG_REG[1]),
        .I3(RX_CONFIG_REG[2]),
        .I4(RX_CONFIG_REG[0]),
        .O(n_0_RX_CONFIG_REG_NULL_i_2));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     RX_CONFIG_REG_NULL_i_3
       (.I0(RX_CONFIG_REG[12]),
        .I1(RX_CONFIG_REG[11]),
        .I2(RX_CONFIG_REG[15]),
        .I3(SRESET),
        .I4(RX_CONFIG_REG[13]),
        .I5(RX_CONFIG_REG[14]),
        .O(n_0_RX_CONFIG_REG_NULL_i_3));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     RX_CONFIG_REG_NULL_i_4
       (.I0(RX_CONFIG_REG[6]),
        .I1(RX_CONFIG_REG[5]),
        .I2(RX_CONFIG_REG[9]),
        .I3(RX_CONFIG_REG[10]),
        .I4(RX_CONFIG_REG[7]),
        .I5(RX_CONFIG_REG[8]),
        .O(n_0_RX_CONFIG_REG_NULL_i_4));
(* SOFT_HLUTNM = "soft_lutpair97" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \RX_CONFIG_REG_REG[15]_i_1 
       (.I0(SRESET),
        .I1(RX_IDLE),
        .O(SR));
FDRE \RX_CONFIG_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[0]_i_1 ),
        .Q(RX_CONFIG_REG[0]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[10]_i_1 ),
        .Q(RX_CONFIG_REG[10]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[11]_i_1 ),
        .Q(RX_CONFIG_REG[11]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[12]_i_1 ),
        .Q(RX_CONFIG_REG[12]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[13] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[13]_i_1 ),
        .Q(RX_CONFIG_REG[13]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[14] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[14]_i_1 ),
        .Q(RX_CONFIG_REG[14]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[15] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[15]_i_1 ),
        .Q(RX_CONFIG_REG[15]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[1]_i_1 ),
        .Q(RX_CONFIG_REG[1]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[2]_i_1 ),
        .Q(RX_CONFIG_REG[2]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[3]_i_1 ),
        .Q(RX_CONFIG_REG[3]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[4]_i_1 ),
        .Q(RX_CONFIG_REG[4]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[5]_i_1 ),
        .Q(RX_CONFIG_REG[5]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[6]_i_1 ),
        .Q(RX_CONFIG_REG[6]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[7]_i_1 ),
        .Q(RX_CONFIG_REG[7]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[8]_i_1 ),
        .Q(RX_CONFIG_REG[8]),
        .R(\<const0> ));
FDRE \RX_CONFIG_REG_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_REG[9]_i_1 ),
        .Q(RX_CONFIG_REG[9]),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_10 
       (.I0(RX_CONFIG_REG[0]),
        .I1(I8[0]),
        .I2(RX_CONFIG_REG[1]),
        .I3(I8[1]),
        .I4(I8[2]),
        .I5(RX_CONFIG_REG[2]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_10 ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_7 
       (.I0(RX_CONFIG_REG[10]),
        .I1(I8[7]),
        .I2(RX_CONFIG_REG[11]),
        .I3(I8[8]),
        .I4(I8[6]),
        .I5(RX_CONFIG_REG[9]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_7 ));
LUT6 #(
    .INIT(64'h9009000000009009)) 
     \RX_CONFIG_SNAPSHOT[15]_i_9 
       (.I0(RX_CONFIG_REG[3]),
        .I1(I8[3]),
        .I2(RX_CONFIG_REG[4]),
        .I3(I8[4]),
        .I4(I8[5]),
        .I5(RX_CONFIG_REG[5]),
        .O(\n_0_RX_CONFIG_SNAPSHOT[15]_i_9 ));
CARRY4 \RX_CONFIG_SNAPSHOT_reg[15]_i_2 
       (.CI(\n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5 ),
        .CO({\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2_CO_UNCONNECTED [3:1],CO}),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_2_O_UNCONNECTED [3:0]),
        .S({\<const0> ,\<const0> ,\<const0> ,I3}));
CARRY4 \RX_CONFIG_SNAPSHOT_reg[15]_i_5 
       (.CI(\<const0> ),
        .CO({\n_0_RX_CONFIG_SNAPSHOT_reg[15]_i_5 ,\n_1_RX_CONFIG_SNAPSHOT_reg[15]_i_5 ,\n_2_RX_CONFIG_SNAPSHOT_reg[15]_i_5 ,\n_3_RX_CONFIG_SNAPSHOT_reg[15]_i_5 }),
        .CYINIT(\<const1> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O(\NLW_RX_CONFIG_SNAPSHOT_reg[15]_i_5_O_UNCONNECTED [3:0]),
        .S({\n_0_RX_CONFIG_SNAPSHOT[15]_i_7 ,S,\n_0_RX_CONFIG_SNAPSHOT[15]_i_9 ,\n_0_RX_CONFIG_SNAPSHOT[15]_i_10 }));
LUT5 #(
    .INIT(32'h00000002)) 
     RX_CONFIG_VALID_INT_i_1
       (.I0(RXSYNC_STATUS),
        .I1(CGBAD),
        .I2(RXCHARISK_REG1),
        .I3(n_0_RX_CONFIG_VALID_INT_i_2),
        .I4(S2),
        .O(RX_CONFIG_VALID_INT0));
(* SOFT_HLUTNM = "soft_lutpair103" *) 
   LUT3 #(
    .INIT(8'hAB)) 
     RX_CONFIG_VALID_INT_i_2
       (.I0(I1),
        .I1(C_HDR_REMOVED_REG),
        .I2(C_REG1),
        .O(n_0_RX_CONFIG_VALID_INT_i_2));
FDRE RX_CONFIG_VALID_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_CONFIG_VALID_INT0),
        .Q(RX_CONFIG_VALID),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_CONFIG_VALID),
        .Q(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_RX_CONFIG_VALID_REG_reg[0] ),
        .Q(p_0_in2_in),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_0_in2_in),
        .Q(p_1_in),
        .R(I10));
FDRE \RX_CONFIG_VALID_REG_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_1_in),
        .Q(\n_0_RX_CONFIG_VALID_REG_reg[3] ),
        .R(I10));
LUT6 #(
    .INIT(64'h888AAAAA88888888)) 
     RX_DATA_ERROR_i_1
       (.I0(O1),
        .I1(n_0_RX_DATA_ERROR_i_2),
        .I2(R),
        .I3(I11),
        .I4(R_REG1),
        .I5(T_REG2),
        .O(RX_DATA_ERROR0));
LUT5 #(
    .INIT(32'hFFFF0A0E)) 
     RX_DATA_ERROR_i_2
       (.I0(K28p5_REG1),
        .I1(R),
        .I2(R_REG1),
        .I3(T_REG1),
        .I4(n_0_RX_DATA_ERROR_i_4),
        .O(n_0_RX_DATA_ERROR_i_2));
(* SOFT_HLUTNM = "soft_lutpair97" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     RX_DATA_ERROR_i_4
       (.I0(CGBAD_REG3),
        .I1(C_REG1),
        .I2(ILLEGAL_K_REG2),
        .I3(RX_IDLE),
        .O(n_0_RX_DATA_ERROR_i_4));
FDRE RX_DATA_ERROR_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_DATA_ERROR0),
        .Q(RX_DATA_ERROR),
        .R(SYNC_STATUS_REG0));
FDRE #(
    .INIT(1'b0)) 
     RX_DV_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I2),
        .Q(gmii_rx_dv_ch0_int),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2220222000202220)) 
     RX_ER_i_1
       (.I0(XMIT_DATA),
        .I1(I7),
        .I2(O1),
        .I3(RXSYNC_STATUS),
        .I4(n_0_RX_ER_i_4),
        .I5(RX_DATA_ERROR),
        .O(RX_ER0));
(* SOFT_HLUTNM = "soft_lutpair95" *) 
   LUT2 #(
    .INIT(4'h1)) 
     RX_ER_i_4
       (.I0(FALSE_CARRIER_REG3),
        .I1(EXTEND_REG1),
        .O(n_0_RX_ER_i_4));
FDRE #(
    .INIT(1'b0)) 
     RX_ER_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(RX_ER0),
        .Q(gmii_rx_er_ch0_int),
        .R(I10));
LUT5 #(
    .INIT(32'h00700050)) 
     RX_INVALID_i_1
       (.I0(n_0_RX_INVALID_i_2),
        .I1(K28p5_REG1),
        .I2(RXSYNC_STATUS),
        .I3(I10),
        .I4(O2),
        .O(n_0_RX_INVALID_i_1));
LUT4 #(
    .INIT(16'h4445)) 
     RX_INVALID_i_2
       (.I0(FROM_RX_CX),
        .I1(I6),
        .I2(FROM_RX_K),
        .I3(FROM_IDLE_D),
        .O(n_0_RX_INVALID_i_2));
FDRE RX_INVALID_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_RX_INVALID_i_1),
        .Q(O2),
        .R(\<const0> ));
FDRE R_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(R),
        .Q(R_REG1),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h2000000000000000)) 
     R_i_1
       (.I0(n_0_R_i_2),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(I1),
        .O(K23p7));
(* SOFT_HLUTNM = "soft_lutpair92" *) 
   LUT4 #(
    .INIT(16'h8000)) 
     R_i_2
       (.I0(Q[4]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .O(n_0_R_i_2));
FDRE R_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K23p7),
        .Q(R),
        .R(\<const0> ));
FDRE SOP_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP),
        .Q(SOP_REG1),
        .R(\<const0> ));
FDRE SOP_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP_REG1),
        .Q(SOP_REG2),
        .R(\<const0> ));
FDRE SOP_REG3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP_REG2),
        .Q(SOP_REG3),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'h20202000)) 
     SOP_i_1
       (.I0(I6),
        .I1(WAIT_FOR_K),
        .I2(S_0),
        .I3(RX_IDLE),
        .I4(n_0_EXTEND_reg),
        .O(SOP0));
FDRE SOP_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SOP0),
        .Q(SOP),
        .R(I10));
FDRE SYNC_STATUS_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\<const1> ),
        .Q(SYNC_STATUS_REG),
        .R(SYNC_STATUS_REG0));
(* SOFT_HLUTNM = "soft_lutpair94" *) 
   LUT5 #(
    .INIT(32'h80000000)) 
     S_i_2
       (.I0(Q[3]),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[4]),
        .O(O4));
FDRE S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S0),
        .Q(S_0),
        .R(\<const0> ));
FDRE T_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T),
        .Q(T_REG1),
        .R(\<const0> ));
FDRE T_REG2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T_REG1),
        .Q(T_REG2),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair89" *) 
   LUT5 #(
    .INIT(32'h00800000)) 
     T_i_1
       (.I0(O4),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(I1),
        .O(K29p7));
FDRE T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(K29p7),
        .Q(T),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'h0222222200002222)) 
     WAIT_FOR_K_i_1
       (.I0(RXSYNC_STATUS),
        .I1(I10),
        .I2(RXEVEN),
        .I3(K28p5_REG1),
        .I4(SYNC_STATUS_REG),
        .I5(WAIT_FOR_K),
        .O(n_0_WAIT_FOR_K_i_1));
FDRE WAIT_FOR_K_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_WAIT_FOR_K_i_1),
        .Q(WAIT_FOR_K),
        .R(\<const0> ));
endmodule

module quadsgmiiSYNCHRONISE
   (RXEVEN,
    RXSYNC_STATUS,
    O3,
    SYNC_STATUS_REG0,
    O1,
    O2,
    O4,
    O5,
    SIGNAL_DETECT_MOD,
    userclk2,
    SR,
    LOOPBACK,
    I1,
    I2,
    I3,
    I4,
    K28p5_REG1,
    I5,
    I6,
    S2,
    I7,
    I8,
    RXNOTINTABLE_INT,
    RUNDISP_EN,
    RXDISPERR_INT,
    SRESET,
    RX_RUDI_INVALID);
  output RXEVEN;
  output RXSYNC_STATUS;
  output O3;
  output SYNC_STATUS_REG0;
  output O1;
  output O2;
  output O4;
  output O5;
  input SIGNAL_DETECT_MOD;
  input userclk2;
  input [0:0]SR;
  input LOOPBACK;
  input I1;
  input I2;
  input I3;
  input I4;
  input K28p5_REG1;
  input I5;
  input I6;
  input S2;
  input I7;
  input I8;
  input RXNOTINTABLE_INT;
  input RUNDISP_EN;
  input RXDISPERR_INT;
  input SRESET;
  input RX_RUDI_INVALID;

  wire \<const0> ;
  wire \<const1> ;
  wire [1:0]GOOD_CGS;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire K28p5_REG1;
  wire LOOPBACK;
  wire O1;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire RUNDISP_EN;
  wire RXDISPERR_INT;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire RX_RUDI_INVALID;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire SIGNAL_DETECT_REG;
  wire [0:0]SR;
  wire SRESET;
  wire SYNC_STATUS_REG0;
  wire n_0_ENCOMMAALIGN_i_1__2;
  wire n_0_EVEN_i_1__6;
  wire \n_0_FSM_onehot_STATE[0]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[0]_i_2__2 ;
  wire \n_0_FSM_onehot_STATE[0]_i_3__2 ;
  wire \n_0_FSM_onehot_STATE[10]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[10]_i_2__5 ;
  wire \n_0_FSM_onehot_STATE[11]_i_10__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_11__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_12__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_13__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_14__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_2__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_3__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_4__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_5__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_6__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_7__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_8__2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_9__2 ;
  wire \n_0_FSM_onehot_STATE[12]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[12]_i_2__2 ;
  wire \n_0_FSM_onehot_STATE[12]_i_3__2 ;
  wire \n_0_FSM_onehot_STATE[12]_i_4__2 ;
  wire \n_0_FSM_onehot_STATE[12]_i_5__2 ;
  wire \n_0_FSM_onehot_STATE[12]_i_7__2 ;
  wire \n_0_FSM_onehot_STATE[12]_i_8__2 ;
  wire \n_0_FSM_onehot_STATE[12]_i_9__2 ;
  wire \n_0_FSM_onehot_STATE[1]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[2]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[3]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[4]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[5]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[5]_i_2__6 ;
  wire \n_0_FSM_onehot_STATE[6]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[6]_i_2__2 ;
  wire \n_0_FSM_onehot_STATE[6]_i_3__2 ;
  wire \n_0_FSM_onehot_STATE[7]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[7]_i_2__6 ;
  wire \n_0_FSM_onehot_STATE[8]_i_1__5 ;
  wire \n_0_FSM_onehot_STATE[8]_i_2__2 ;
  wire \n_0_FSM_onehot_STATE[8]_i_3__5 ;
  wire \n_0_FSM_onehot_STATE[9]_i_1__2 ;
  wire \n_0_FSM_onehot_STATE[9]_i_2__6 ;
  wire \n_0_FSM_onehot_STATE_reg[0] ;
  wire \n_0_FSM_onehot_STATE_reg[10] ;
  wire \n_0_FSM_onehot_STATE_reg[11] ;
  wire \n_0_FSM_onehot_STATE_reg[12] ;
  wire \n_0_FSM_onehot_STATE_reg[1] ;
  wire \n_0_FSM_onehot_STATE_reg[2] ;
  wire \n_0_FSM_onehot_STATE_reg[3] ;
  wire \n_0_FSM_onehot_STATE_reg[4] ;
  wire \n_0_FSM_onehot_STATE_reg[5] ;
  wire \n_0_FSM_onehot_STATE_reg[6] ;
  wire \n_0_FSM_onehot_STATE_reg[7] ;
  wire \n_0_FSM_onehot_STATE_reg[8] ;
  wire \n_0_FSM_onehot_STATE_reg[9] ;
  wire \n_0_GOOD_CGS[0]_i_1__2 ;
  wire \n_0_GOOD_CGS[1]_i_1__2 ;
  wire \n_0_GOOD_CGS[1]_i_2__2 ;
  wire \n_0_GOOD_CGS[1]_i_3__2 ;
  wire \n_0_GOOD_CGS[1]_i_4__2 ;
  wire \n_0_GOOD_CGS[1]_i_5__2 ;
  wire n_0_SYNC_STATUS_i_1__2;
  wire n_0_SYNC_STATUS_i_2__2;
  wire n_0_SYNC_STATUS_i_3__2;
  wire userclk2;

(* SOFT_HLUTNM = "soft_lutpair501" *) 
   LUT3 #(
    .INIT(8'h0E)) 
     ENCOMMAALIGN_i_1__2
       (.I0(O3),
        .I1(n_0_SYNC_STATUS_i_2__2),
        .I2(n_0_SYNC_STATUS_i_3__2),
        .O(n_0_ENCOMMAALIGN_i_1__2));
FDRE ENCOMMAALIGN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ENCOMMAALIGN_i_1__2),
        .Q(O3),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair504" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     EVEN_i_1__6
       (.I0(RXSYNC_STATUS),
        .I1(I2),
        .I2(RXEVEN),
        .O(n_0_EVEN_i_1__6));
FDRE EVEN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EVEN_i_1__6),
        .Q(RXEVEN),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair504" *) 
   LUT2 #(
    .INIT(4'h2)) 
     EXTEND_i_2__2
       (.I0(RXSYNC_STATUS),
        .I1(SR),
        .O(O1));
LUT6 #(
    .INIT(64'h8888888888B8BBBB)) 
     \FSM_onehot_STATE[0]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[0]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[0]_i_3__2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .I5(I1),
        .O(\n_0_FSM_onehot_STATE[0]_i_1__2 ));
LUT6 #(
    .INIT(64'hFCFC407C00FC407C)) 
     \FSM_onehot_STATE[0]_i_2__2 
       (.I0(I2),
        .I1(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I5(I3),
        .O(\n_0_FSM_onehot_STATE[0]_i_2__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
     \FSM_onehot_STATE[0]_i_3__2 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_9__2 ),
        .I1(\n_0_FSM_onehot_STATE_reg[12] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[11] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .I5(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[0]_i_3__2 ));
LUT3 #(
    .INIT(8'h20)) 
     \FSM_onehot_STATE[10]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_2__2 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_2__5 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_1__5 ));
LUT6 #(
    .INIT(64'hAAAAAA0051515100)) 
     \FSM_onehot_STATE[10]_i_2__5 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I1(GOOD_CGS[1]),
        .I2(GOOD_CGS[0]),
        .I3(I4),
        .I4(\n_0_FSM_onehot_STATE[5]_i_2__6 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_2__5 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEE9)) 
     \FSM_onehot_STATE[11]_i_10__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[2] ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(\n_0_FSM_onehot_STATE_reg[6] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_10__2 ));
(* SOFT_HLUTNM = "soft_lutpair495" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_STATE[11]_i_11__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[4] ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_11__2 ));
(* SOFT_HLUTNM = "soft_lutpair500" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \FSM_onehot_STATE[11]_i_12__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_12__2 ));
LUT6 #(
    .INIT(64'h6666666F666F6FF6)) 
     \FSM_onehot_STATE[11]_i_13__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[11] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_13__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_STATE[11]_i_14__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[0] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .I5(\n_0_FSM_onehot_STATE_reg[12] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_14__2 ));
LUT5 #(
    .INIT(32'h00002002)) 
     \FSM_onehot_STATE[11]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_2__2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I4(I1),
        .O(\n_0_FSM_onehot_STATE[11]_i_1__2 ));
LUT6 #(
    .INIT(64'h0001000000000000)) 
     \FSM_onehot_STATE[11]_i_2__2 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_5__2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_6__2 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_7__2 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_7__2 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_8__2 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_9__2 ),
        .O(\n_0_FSM_onehot_STATE[11]_i_2__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
     \FSM_onehot_STATE[11]_i_3__2 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_10__2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_11__2 ),
        .I2(\n_0_FSM_onehot_STATE_reg[12] ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_8__2 ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .I5(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_3__2 ));
LUT6 #(
    .INIT(64'h00AB000000000000)) 
     \FSM_onehot_STATE[11]_i_4__2 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_12__2 ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[1] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_13__2 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_14__2 ),
        .O(\n_0_FSM_onehot_STATE[11]_i_4__2 ));
(* SOFT_HLUTNM = "soft_lutpair496" *) 
   LUT5 #(
    .INIT(32'hFFFCCCC8)) 
     \FSM_onehot_STATE[11]_i_5__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[12] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_5__2 ));
(* SOFT_HLUTNM = "soft_lutpair498" *) 
   LUT4 #(
    .INIT(16'hFAA8)) 
     \FSM_onehot_STATE[11]_i_6__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[12] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_6__2 ));
(* SOFT_HLUTNM = "soft_lutpair496" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_STATE[11]_i_7__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[12] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_7__2 ));
(* SOFT_HLUTNM = "soft_lutpair500" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[11]_i_8__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_8__2 ));
(* SOFT_HLUTNM = "soft_lutpair497" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[11]_i_9__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[11] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_9__2 ));
LUT3 #(
    .INIT(8'hAB)) 
     \FSM_onehot_STATE[12]_i_1__2 
       (.I0(SR),
        .I1(SIGNAL_DETECT_REG),
        .I2(LOOPBACK),
        .O(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
LUT6 #(
    .INIT(64'hB0B080B080808080)) 
     \FSM_onehot_STATE[12]_i_2__2 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_3__2 ),
        .I1(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .I3(GOOD_CGS[1]),
        .I4(GOOD_CGS[0]),
        .I5(I1),
        .O(\n_0_FSM_onehot_STATE[12]_i_2__2 ));
LUT5 #(
    .INIT(32'h00001300)) 
     \FSM_onehot_STATE[12]_i_3__2 
       (.I0(I2),
        .I1(S2),
        .I2(RXEVEN),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_3__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
     \FSM_onehot_STATE[12]_i_4__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[11] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[8] ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_7__2 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_8__2 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_4__2 ));
LUT6 #(
    .INIT(64'h0000000000010116)) 
     \FSM_onehot_STATE[12]_i_5__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[12] ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_9__2 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_5__2 ));
LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_STATE[12]_i_7__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[3] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[1] ),
        .I3(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_7__2 ));
(* SOFT_HLUTNM = "soft_lutpair498" *) 
   LUT5 #(
    .INIT(32'h00010116)) 
     \FSM_onehot_STATE[12]_i_8__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[4] ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[12] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_8__2 ));
(* SOFT_HLUTNM = "soft_lutpair495" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_STATE[12]_i_9__2 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_7__2 ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_9__2 ));
LUT5 #(
    .INIT(32'h00002000)) 
     \FSM_onehot_STATE[1]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I2(I2),
        .I3(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .O(\n_0_FSM_onehot_STATE[1]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000044300000)) 
     \FSM_onehot_STATE[2]_i_1__2 
       (.I0(I6),
        .I1(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I2(I4),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .O(\n_0_FSM_onehot_STATE[2]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000000400000)) 
     \FSM_onehot_STATE[3]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I1(\n_0_FSM_onehot_STATE[5]_i_2__6 ),
        .I2(I2),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .O(\n_0_FSM_onehot_STATE[3]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000000200C20)) 
     \FSM_onehot_STATE[4]_i_1__2 
       (.I0(I7),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I3(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .I4(I6),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .O(\n_0_FSM_onehot_STATE[4]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000004000000)) 
     \FSM_onehot_STATE[5]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I3(\n_0_FSM_onehot_STATE[5]_i_2__6 ),
        .I4(I2),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_1__5 ));
LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[5]_i_2__6 
       (.I0(RXEVEN),
        .I1(I8),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(\n_0_FSM_onehot_STATE[5]_i_2__6 ));
LUT6 #(
    .INIT(64'h0020FFFF00200000)) 
     \FSM_onehot_STATE[6]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[6]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_2__2 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .I5(\n_0_FSM_onehot_STATE[6]_i_3__2 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair502" *) 
   LUT3 #(
    .INIT(8'h20)) 
     \FSM_onehot_STATE[6]_i_2__2 
       (.I0(I1),
        .I1(GOOD_CGS[0]),
        .I2(GOOD_CGS[1]),
        .O(\n_0_FSM_onehot_STATE[6]_i_2__2 ));
LUT6 #(
    .INIT(64'h000000000054A854)) 
     \FSM_onehot_STATE[6]_i_3__2 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I1(I4),
        .I2(\n_0_FSM_onehot_STATE[5]_i_2__6 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I4(I3),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_3__2 ));
LUT6 #(
    .INIT(64'h888888888888888B)) 
     \FSM_onehot_STATE[7]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[7]_i_2__6 ),
        .I1(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I4(I1),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_1__2 ));
LUT6 #(
    .INIT(64'h0000000000000400)) 
     \FSM_onehot_STATE[7]_i_2__6 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I1(GOOD_CGS[1]),
        .I2(GOOD_CGS[0]),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_2__2 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_2__6 ));
LUT6 #(
    .INIT(64'h0020FFFF00200000)) 
     \FSM_onehot_STATE[8]_i_1__5 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_2__2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_2__2 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .I5(\n_0_FSM_onehot_STATE[8]_i_3__5 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_1__5 ));
(* SOFT_HLUTNM = "soft_lutpair499" *) 
   LUT3 #(
    .INIT(8'h8A)) 
     \FSM_onehot_STATE[8]_i_2__2 
       (.I0(I1),
        .I1(GOOD_CGS[0]),
        .I2(GOOD_CGS[1]),
        .O(\n_0_FSM_onehot_STATE[8]_i_2__2 ));
LUT6 #(
    .INIT(64'h0000000000040044)) 
     \FSM_onehot_STATE[8]_i_3__5 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I2(RXEVEN),
        .I3(S2),
        .I4(I2),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_3__5 ));
LUT6 #(
    .INIT(64'h400040A040054000)) 
     \FSM_onehot_STATE[9]_i_1__2 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_4__2 ),
        .I1(\n_0_FSM_onehot_STATE[9]_i_2__6 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_5__2 ),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4__2 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_3__2 ),
        .O(\n_0_FSM_onehot_STATE[9]_i_1__2 ));
LUT2 #(
    .INIT(4'h2)) 
     \FSM_onehot_STATE[9]_i_2__6 
       (.I0(GOOD_CGS[1]),
        .I1(GOOD_CGS[0]),
        .O(\n_0_FSM_onehot_STATE[9]_i_2__6 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[0]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[0] ),
        .S(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[10]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[10] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[11]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[11] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[12]_i_2__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[12] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[1]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[1] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[2]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[2] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[3]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[3] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[4]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[4] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[5]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[5] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[6]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[6] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[7]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[7] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[8]_i_1__5 ),
        .Q(\n_0_FSM_onehot_STATE_reg[8] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[9]_i_1__2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[9] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__2 ));
GND GND
       (.G(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair502" *) 
   LUT3 #(
    .INIT(8'h06)) 
     \GOOD_CGS[0]_i_1__2 
       (.I0(GOOD_CGS[0]),
        .I1(I1),
        .I2(\n_0_GOOD_CGS[1]_i_2__2 ),
        .O(\n_0_GOOD_CGS[0]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair499" *) 
   LUT4 #(
    .INIT(16'h006A)) 
     \GOOD_CGS[1]_i_1__2 
       (.I0(GOOD_CGS[1]),
        .I1(I1),
        .I2(GOOD_CGS[0]),
        .I3(\n_0_GOOD_CGS[1]_i_2__2 ),
        .O(\n_0_GOOD_CGS[1]_i_1__2 ));
LUT5 #(
    .INIT(32'hABBAAABA)) 
     \GOOD_CGS[1]_i_2__2 
       (.I0(SR),
        .I1(\n_0_GOOD_CGS[1]_i_3__2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_7__2 ),
        .I3(\n_0_GOOD_CGS[1]_i_4__2 ),
        .I4(\n_0_GOOD_CGS[1]_i_5__2 ),
        .O(\n_0_GOOD_CGS[1]_i_2__2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \GOOD_CGS[1]_i_3__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[11] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .I5(\n_0_FSM_onehot_STATE_reg[3] ),
        .O(\n_0_GOOD_CGS[1]_i_3__2 ));
(* SOFT_HLUTNM = "soft_lutpair497" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \GOOD_CGS[1]_i_4__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[12] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_GOOD_CGS[1]_i_4__2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \GOOD_CGS[1]_i_5__2 
       (.I0(\n_0_FSM_onehot_STATE_reg[3] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[10] ),
        .I5(\n_0_FSM_onehot_STATE_reg[11] ),
        .O(\n_0_GOOD_CGS[1]_i_5__2 ));
FDRE \GOOD_CGS_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_GOOD_CGS[0]_i_1__2 ),
        .Q(GOOD_CGS[0]),
        .R(\<const0> ));
FDRE \GOOD_CGS_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_GOOD_CGS[1]_i_1__2 ),
        .Q(GOOD_CGS[1]),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h8)) 
     RX_DATA_ERROR_i_3__2
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .O(O2));
LUT2 #(
    .INIT(4'h1)) 
     RX_DV_i_3__2
       (.I0(RXSYNC_STATUS),
        .I1(I5),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair503" *) 
   LUT3 #(
    .INIT(8'h40)) 
     RX_RUDI_INVALID_REG_i_1__2
       (.I0(SRESET),
        .I1(RXSYNC_STATUS),
        .I2(RX_RUDI_INVALID),
        .O(O5));
FDRE SIGNAL_DETECT_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SIGNAL_DETECT_MOD),
        .Q(SIGNAL_DETECT_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair503" *) 
   LUT2 #(
    .INIT(4'hB)) 
     SYNC_STATUS_REG_i_1__2
       (.I0(SR),
        .I1(RXSYNC_STATUS),
        .O(SYNC_STATUS_REG0));
(* SOFT_HLUTNM = "soft_lutpair501" *) 
   LUT3 #(
    .INIT(8'hF4)) 
     SYNC_STATUS_i_1__2
       (.I0(n_0_SYNC_STATUS_i_2__2),
        .I1(RXSYNC_STATUS),
        .I2(n_0_SYNC_STATUS_i_3__2),
        .O(n_0_SYNC_STATUS_i_1__2));
LUT5 #(
    .INIT(32'h00028084)) 
     SYNC_STATUS_i_2__2
       (.I0(\n_0_FSM_onehot_STATE[11]_i_7__2 ),
        .I1(\n_0_GOOD_CGS[1]_i_3__2 ),
        .I2(\n_0_GOOD_CGS[1]_i_4__2 ),
        .I3(I1),
        .I4(\n_0_GOOD_CGS[1]_i_5__2 ),
        .O(n_0_SYNC_STATUS_i_2__2));
LUT6 #(
    .INIT(64'h0000000000000200)) 
     SYNC_STATUS_i_3__2
       (.I0(I1),
        .I1(I3),
        .I2(\n_0_GOOD_CGS[1]_i_5__2 ),
        .I3(\n_0_GOOD_CGS[1]_i_4__2 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_7__2 ),
        .I5(\n_0_GOOD_CGS[1]_i_3__2 ),
        .O(n_0_SYNC_STATUS_i_3__2));
FDRE #(
    .INIT(1'b0)) 
     SYNC_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_STATUS_i_1__2),
        .Q(RXSYNC_STATUS),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "SYNCHRONISE" *) 
module quadsgmiiSYNCHRONISE_27
   (RXEVEN,
    RXSYNC_STATUS,
    O2,
    SYNC_STATUS_REG0,
    O1,
    O3,
    O4,
    O5,
    SIGNAL_DETECT_MOD,
    userclk2,
    I10,
    LOOPBACK,
    I1,
    I2,
    I3,
    I4,
    K28p5_REG1,
    I5,
    I6,
    S2,
    I7,
    I8,
    RXNOTINTABLE_INT,
    RUNDISP_EN,
    RXDISPERR_INT,
    SRESET,
    RX_RUDI_INVALID);
  output RXEVEN;
  output RXSYNC_STATUS;
  output O2;
  output SYNC_STATUS_REG0;
  output O1;
  output O3;
  output O4;
  output O5;
  input SIGNAL_DETECT_MOD;
  input userclk2;
  input [0:0]I10;
  input LOOPBACK;
  input I1;
  input I2;
  input I3;
  input I4;
  input K28p5_REG1;
  input I5;
  input I6;
  input S2;
  input I7;
  input I8;
  input RXNOTINTABLE_INT;
  input RUNDISP_EN;
  input RXDISPERR_INT;
  input SRESET;
  input RX_RUDI_INVALID;

  wire \<const0> ;
  wire \<const1> ;
  wire [1:0]GOOD_CGS;
  wire I1;
  wire [0:0]I10;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire K28p5_REG1;
  wire LOOPBACK;
  wire O1;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire RUNDISP_EN;
  wire RXDISPERR_INT;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire RX_RUDI_INVALID;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire SIGNAL_DETECT_REG;
  wire SRESET;
  wire SYNC_STATUS_REG0;
  wire n_0_ENCOMMAALIGN_i_1__1;
  wire n_0_EVEN_i_1__5;
  wire \n_0_FSM_onehot_STATE[0]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[0]_i_2__1 ;
  wire \n_0_FSM_onehot_STATE[0]_i_3__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[10]_i_2__3 ;
  wire \n_0_FSM_onehot_STATE[11]_i_10__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_11__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_12__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_13__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_14__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_2__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_3__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_4__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_5__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_6__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_7__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_8__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_9__1 ;
  wire \n_0_FSM_onehot_STATE[12]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[12]_i_2__1 ;
  wire \n_0_FSM_onehot_STATE[12]_i_3__1 ;
  wire \n_0_FSM_onehot_STATE[12]_i_4__1 ;
  wire \n_0_FSM_onehot_STATE[12]_i_5__1 ;
  wire \n_0_FSM_onehot_STATE[12]_i_7__1 ;
  wire \n_0_FSM_onehot_STATE[12]_i_8__1 ;
  wire \n_0_FSM_onehot_STATE[12]_i_9__1 ;
  wire \n_0_FSM_onehot_STATE[1]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[2]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[3]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[4]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[5]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[5]_i_2__5 ;
  wire \n_0_FSM_onehot_STATE[6]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[6]_i_2__1 ;
  wire \n_0_FSM_onehot_STATE[6]_i_3__1 ;
  wire \n_0_FSM_onehot_STATE[7]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[7]_i_2__5 ;
  wire \n_0_FSM_onehot_STATE[8]_i_1__3 ;
  wire \n_0_FSM_onehot_STATE[8]_i_2__1 ;
  wire \n_0_FSM_onehot_STATE[8]_i_3__3 ;
  wire \n_0_FSM_onehot_STATE[9]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[9]_i_2__4 ;
  wire \n_0_FSM_onehot_STATE_reg[0] ;
  wire \n_0_FSM_onehot_STATE_reg[10] ;
  wire \n_0_FSM_onehot_STATE_reg[11] ;
  wire \n_0_FSM_onehot_STATE_reg[12] ;
  wire \n_0_FSM_onehot_STATE_reg[1] ;
  wire \n_0_FSM_onehot_STATE_reg[2] ;
  wire \n_0_FSM_onehot_STATE_reg[3] ;
  wire \n_0_FSM_onehot_STATE_reg[4] ;
  wire \n_0_FSM_onehot_STATE_reg[5] ;
  wire \n_0_FSM_onehot_STATE_reg[6] ;
  wire \n_0_FSM_onehot_STATE_reg[7] ;
  wire \n_0_FSM_onehot_STATE_reg[8] ;
  wire \n_0_FSM_onehot_STATE_reg[9] ;
  wire \n_0_GOOD_CGS[0]_i_1__1 ;
  wire \n_0_GOOD_CGS[1]_i_1__1 ;
  wire \n_0_GOOD_CGS[1]_i_2__1 ;
  wire \n_0_GOOD_CGS[1]_i_3__1 ;
  wire \n_0_GOOD_CGS[1]_i_4__1 ;
  wire \n_0_GOOD_CGS[1]_i_5__1 ;
  wire n_0_SYNC_STATUS_i_1__1;
  wire n_0_SYNC_STATUS_i_2__1;
  wire n_0_SYNC_STATUS_i_3__1;
  wire userclk2;

(* SOFT_HLUTNM = "soft_lutpair371" *) 
   LUT3 #(
    .INIT(8'h0E)) 
     ENCOMMAALIGN_i_1__1
       (.I0(O2),
        .I1(n_0_SYNC_STATUS_i_2__1),
        .I2(n_0_SYNC_STATUS_i_3__1),
        .O(n_0_ENCOMMAALIGN_i_1__1));
FDRE ENCOMMAALIGN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ENCOMMAALIGN_i_1__1),
        .Q(O2),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair374" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     EVEN_i_1__5
       (.I0(RXSYNC_STATUS),
        .I1(I2),
        .I2(RXEVEN),
        .O(n_0_EVEN_i_1__5));
FDRE EVEN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EVEN_i_1__5),
        .Q(RXEVEN),
        .R(I10));
(* SOFT_HLUTNM = "soft_lutpair374" *) 
   LUT2 #(
    .INIT(4'h2)) 
     EXTEND_i_2__1
       (.I0(RXSYNC_STATUS),
        .I1(I10),
        .O(O1));
LUT6 #(
    .INIT(64'h8888888888B8BBBB)) 
     \FSM_onehot_STATE[0]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[0]_i_2__1 ),
        .I1(\n_0_FSM_onehot_STATE[0]_i_3__1 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .I5(I1),
        .O(\n_0_FSM_onehot_STATE[0]_i_1__1 ));
LUT6 #(
    .INIT(64'hFCFC407C00FC407C)) 
     \FSM_onehot_STATE[0]_i_2__1 
       (.I0(I2),
        .I1(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I5(I3),
        .O(\n_0_FSM_onehot_STATE[0]_i_2__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
     \FSM_onehot_STATE[0]_i_3__1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_9__1 ),
        .I1(\n_0_FSM_onehot_STATE_reg[12] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[11] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .I5(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[0]_i_3__1 ));
LUT3 #(
    .INIT(8'h20)) 
     \FSM_onehot_STATE[10]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_2__1 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_2__3 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_1__3 ));
LUT6 #(
    .INIT(64'hAAAAAA0051515100)) 
     \FSM_onehot_STATE[10]_i_2__3 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I1(GOOD_CGS[1]),
        .I2(GOOD_CGS[0]),
        .I3(I4),
        .I4(\n_0_FSM_onehot_STATE[5]_i_2__5 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_2__3 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEE9)) 
     \FSM_onehot_STATE[11]_i_10__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[2] ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(\n_0_FSM_onehot_STATE_reg[6] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_10__1 ));
(* SOFT_HLUTNM = "soft_lutpair365" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_STATE[11]_i_11__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[4] ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_11__1 ));
(* SOFT_HLUTNM = "soft_lutpair370" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \FSM_onehot_STATE[11]_i_12__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_12__1 ));
LUT6 #(
    .INIT(64'h6666666F666F6FF6)) 
     \FSM_onehot_STATE[11]_i_13__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[11] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_13__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_STATE[11]_i_14__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[0] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .I5(\n_0_FSM_onehot_STATE_reg[12] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_14__1 ));
LUT5 #(
    .INIT(32'h00002002)) 
     \FSM_onehot_STATE[11]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_2__1 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I4(I1),
        .O(\n_0_FSM_onehot_STATE[11]_i_1__1 ));
LUT6 #(
    .INIT(64'h0001000000000000)) 
     \FSM_onehot_STATE[11]_i_2__1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_5__1 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_6__1 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_7__1 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_7__1 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_8__1 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_9__1 ),
        .O(\n_0_FSM_onehot_STATE[11]_i_2__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
     \FSM_onehot_STATE[11]_i_3__1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_10__1 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_11__1 ),
        .I2(\n_0_FSM_onehot_STATE_reg[12] ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_8__1 ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .I5(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_3__1 ));
LUT6 #(
    .INIT(64'h00AB000000000000)) 
     \FSM_onehot_STATE[11]_i_4__1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_12__1 ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[1] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_13__1 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_14__1 ),
        .O(\n_0_FSM_onehot_STATE[11]_i_4__1 ));
(* SOFT_HLUTNM = "soft_lutpair366" *) 
   LUT5 #(
    .INIT(32'hFFFCCCC8)) 
     \FSM_onehot_STATE[11]_i_5__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[12] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_5__1 ));
(* SOFT_HLUTNM = "soft_lutpair368" *) 
   LUT4 #(
    .INIT(16'hFAA8)) 
     \FSM_onehot_STATE[11]_i_6__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[12] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_6__1 ));
(* SOFT_HLUTNM = "soft_lutpair366" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_STATE[11]_i_7__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[12] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_7__1 ));
(* SOFT_HLUTNM = "soft_lutpair370" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[11]_i_8__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_8__1 ));
(* SOFT_HLUTNM = "soft_lutpair367" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[11]_i_9__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[11] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_9__1 ));
LUT3 #(
    .INIT(8'hAB)) 
     \FSM_onehot_STATE[12]_i_1__1 
       (.I0(I10),
        .I1(SIGNAL_DETECT_REG),
        .I2(LOOPBACK),
        .O(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
LUT6 #(
    .INIT(64'hB0B080B080808080)) 
     \FSM_onehot_STATE[12]_i_2__1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_3__1 ),
        .I1(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .I3(GOOD_CGS[1]),
        .I4(GOOD_CGS[0]),
        .I5(I1),
        .O(\n_0_FSM_onehot_STATE[12]_i_2__1 ));
LUT5 #(
    .INIT(32'h00001300)) 
     \FSM_onehot_STATE[12]_i_3__1 
       (.I0(I2),
        .I1(S2),
        .I2(RXEVEN),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_3__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
     \FSM_onehot_STATE[12]_i_4__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[11] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[8] ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_7__1 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_8__1 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_4__1 ));
LUT6 #(
    .INIT(64'h0000000000010116)) 
     \FSM_onehot_STATE[12]_i_5__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[12] ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_9__1 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_5__1 ));
LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_STATE[12]_i_7__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[3] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[1] ),
        .I3(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_7__1 ));
(* SOFT_HLUTNM = "soft_lutpair368" *) 
   LUT5 #(
    .INIT(32'h00010116)) 
     \FSM_onehot_STATE[12]_i_8__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[4] ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[12] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_8__1 ));
(* SOFT_HLUTNM = "soft_lutpair365" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_STATE[12]_i_9__1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_7__1 ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_9__1 ));
LUT5 #(
    .INIT(32'h00002000)) 
     \FSM_onehot_STATE[1]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I2(I2),
        .I3(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .O(\n_0_FSM_onehot_STATE[1]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000044300000)) 
     \FSM_onehot_STATE[2]_i_1__1 
       (.I0(I6),
        .I1(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I2(I4),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .O(\n_0_FSM_onehot_STATE[2]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000000400000)) 
     \FSM_onehot_STATE[3]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I1(\n_0_FSM_onehot_STATE[5]_i_2__5 ),
        .I2(I2),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .O(\n_0_FSM_onehot_STATE[3]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000000200C20)) 
     \FSM_onehot_STATE[4]_i_1__1 
       (.I0(I7),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I3(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .I4(I6),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .O(\n_0_FSM_onehot_STATE[4]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000004000000)) 
     \FSM_onehot_STATE[5]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I3(\n_0_FSM_onehot_STATE[5]_i_2__5 ),
        .I4(I2),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_1__3 ));
LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[5]_i_2__5 
       (.I0(RXEVEN),
        .I1(I8),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(\n_0_FSM_onehot_STATE[5]_i_2__5 ));
LUT6 #(
    .INIT(64'h0020FFFF00200000)) 
     \FSM_onehot_STATE[6]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[6]_i_2__1 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_2__1 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .I5(\n_0_FSM_onehot_STATE[6]_i_3__1 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair372" *) 
   LUT3 #(
    .INIT(8'h20)) 
     \FSM_onehot_STATE[6]_i_2__1 
       (.I0(I1),
        .I1(GOOD_CGS[0]),
        .I2(GOOD_CGS[1]),
        .O(\n_0_FSM_onehot_STATE[6]_i_2__1 ));
LUT6 #(
    .INIT(64'h000000000054A854)) 
     \FSM_onehot_STATE[6]_i_3__1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I1(I4),
        .I2(\n_0_FSM_onehot_STATE[5]_i_2__5 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I4(I3),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_3__1 ));
LUT6 #(
    .INIT(64'h888888888888888B)) 
     \FSM_onehot_STATE[7]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[7]_i_2__5 ),
        .I1(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I4(I1),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_1__1 ));
LUT6 #(
    .INIT(64'h0000000000000400)) 
     \FSM_onehot_STATE[7]_i_2__5 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I1(GOOD_CGS[1]),
        .I2(GOOD_CGS[0]),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_2__1 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_2__5 ));
LUT6 #(
    .INIT(64'h0020FFFF00200000)) 
     \FSM_onehot_STATE[8]_i_1__3 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_2__1 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_2__1 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .I5(\n_0_FSM_onehot_STATE[8]_i_3__3 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_1__3 ));
(* SOFT_HLUTNM = "soft_lutpair369" *) 
   LUT3 #(
    .INIT(8'h8A)) 
     \FSM_onehot_STATE[8]_i_2__1 
       (.I0(I1),
        .I1(GOOD_CGS[0]),
        .I2(GOOD_CGS[1]),
        .O(\n_0_FSM_onehot_STATE[8]_i_2__1 ));
LUT6 #(
    .INIT(64'h0000000000040044)) 
     \FSM_onehot_STATE[8]_i_3__3 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I2(RXEVEN),
        .I3(S2),
        .I4(I2),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_3__3 ));
LUT6 #(
    .INIT(64'h400040A040054000)) 
     \FSM_onehot_STATE[9]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_4__1 ),
        .I1(\n_0_FSM_onehot_STATE[9]_i_2__4 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_5__1 ),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4__1 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_3__1 ),
        .O(\n_0_FSM_onehot_STATE[9]_i_1__1 ));
LUT2 #(
    .INIT(4'h2)) 
     \FSM_onehot_STATE[9]_i_2__4 
       (.I0(GOOD_CGS[1]),
        .I1(GOOD_CGS[0]),
        .O(\n_0_FSM_onehot_STATE[9]_i_2__4 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[0]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[0] ),
        .S(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[10]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[10] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[11]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[11] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[12]_i_2__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[12] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[1]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[1] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[2]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[2] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[3]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[3] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[4]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[4] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[5]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[5] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[6]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[6] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[7]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[7] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[8]_i_1__3 ),
        .Q(\n_0_FSM_onehot_STATE_reg[8] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[9]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[9] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__1 ));
GND GND
       (.G(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair372" *) 
   LUT3 #(
    .INIT(8'h06)) 
     \GOOD_CGS[0]_i_1__1 
       (.I0(GOOD_CGS[0]),
        .I1(I1),
        .I2(\n_0_GOOD_CGS[1]_i_2__1 ),
        .O(\n_0_GOOD_CGS[0]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair369" *) 
   LUT4 #(
    .INIT(16'h006A)) 
     \GOOD_CGS[1]_i_1__1 
       (.I0(GOOD_CGS[1]),
        .I1(I1),
        .I2(GOOD_CGS[0]),
        .I3(\n_0_GOOD_CGS[1]_i_2__1 ),
        .O(\n_0_GOOD_CGS[1]_i_1__1 ));
LUT5 #(
    .INIT(32'hABBAAABA)) 
     \GOOD_CGS[1]_i_2__1 
       (.I0(I10),
        .I1(\n_0_GOOD_CGS[1]_i_3__1 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_7__1 ),
        .I3(\n_0_GOOD_CGS[1]_i_4__1 ),
        .I4(\n_0_GOOD_CGS[1]_i_5__1 ),
        .O(\n_0_GOOD_CGS[1]_i_2__1 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \GOOD_CGS[1]_i_3__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[11] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .I5(\n_0_FSM_onehot_STATE_reg[3] ),
        .O(\n_0_GOOD_CGS[1]_i_3__1 ));
(* SOFT_HLUTNM = "soft_lutpair367" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \GOOD_CGS[1]_i_4__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[12] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_GOOD_CGS[1]_i_4__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \GOOD_CGS[1]_i_5__1 
       (.I0(\n_0_FSM_onehot_STATE_reg[3] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[10] ),
        .I5(\n_0_FSM_onehot_STATE_reg[11] ),
        .O(\n_0_GOOD_CGS[1]_i_5__1 ));
FDRE \GOOD_CGS_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_GOOD_CGS[0]_i_1__1 ),
        .Q(GOOD_CGS[0]),
        .R(\<const0> ));
FDRE \GOOD_CGS_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_GOOD_CGS[1]_i_1__1 ),
        .Q(GOOD_CGS[1]),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h8)) 
     RX_DATA_ERROR_i_3__1
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .O(O3));
LUT2 #(
    .INIT(4'h1)) 
     RX_DV_i_3__1
       (.I0(RXSYNC_STATUS),
        .I1(I5),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair373" *) 
   LUT3 #(
    .INIT(8'h40)) 
     RX_RUDI_INVALID_REG_i_1__1
       (.I0(SRESET),
        .I1(RXSYNC_STATUS),
        .I2(RX_RUDI_INVALID),
        .O(O5));
FDRE SIGNAL_DETECT_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SIGNAL_DETECT_MOD),
        .Q(SIGNAL_DETECT_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair373" *) 
   LUT2 #(
    .INIT(4'hB)) 
     SYNC_STATUS_REG_i_1__1
       (.I0(I10),
        .I1(RXSYNC_STATUS),
        .O(SYNC_STATUS_REG0));
(* SOFT_HLUTNM = "soft_lutpair371" *) 
   LUT3 #(
    .INIT(8'hF4)) 
     SYNC_STATUS_i_1__1
       (.I0(n_0_SYNC_STATUS_i_2__1),
        .I1(RXSYNC_STATUS),
        .I2(n_0_SYNC_STATUS_i_3__1),
        .O(n_0_SYNC_STATUS_i_1__1));
LUT5 #(
    .INIT(32'h00028084)) 
     SYNC_STATUS_i_2__1
       (.I0(\n_0_FSM_onehot_STATE[11]_i_7__1 ),
        .I1(\n_0_GOOD_CGS[1]_i_3__1 ),
        .I2(\n_0_GOOD_CGS[1]_i_4__1 ),
        .I3(I1),
        .I4(\n_0_GOOD_CGS[1]_i_5__1 ),
        .O(n_0_SYNC_STATUS_i_2__1));
LUT6 #(
    .INIT(64'h0000000000000200)) 
     SYNC_STATUS_i_3__1
       (.I0(I1),
        .I1(I3),
        .I2(\n_0_GOOD_CGS[1]_i_5__1 ),
        .I3(\n_0_GOOD_CGS[1]_i_4__1 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_7__1 ),
        .I5(\n_0_GOOD_CGS[1]_i_3__1 ),
        .O(n_0_SYNC_STATUS_i_3__1));
FDRE #(
    .INIT(1'b0)) 
     SYNC_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_STATUS_i_1__1),
        .Q(RXSYNC_STATUS),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "SYNCHRONISE" *) 
module quadsgmiiSYNCHRONISE_36
   (RXEVEN,
    RXSYNC_STATUS,
    SYNC_STATUS_REG0,
    O1,
    O2,
    O3,
    O4,
    ENABLEALIGN0,
    SIGNAL_DETECT_MOD,
    userclk2,
    I10,
    LOOPBACK,
    I1,
    I2,
    I3,
    I4,
    K28p5_REG1,
    I5,
    I6,
    S2,
    I7,
    I8,
    RXNOTINTABLE_INT,
    RUNDISP_EN,
    RXDISPERR_INT,
    SRESET,
    RX_RUDI_INVALID,
    I9,
    I11,
    I12);
  output RXEVEN;
  output RXSYNC_STATUS;
  output SYNC_STATUS_REG0;
  output O1;
  output O2;
  output O3;
  output O4;
  output ENABLEALIGN0;
  input SIGNAL_DETECT_MOD;
  input userclk2;
  input [0:0]I10;
  input LOOPBACK;
  input I1;
  input I2;
  input I3;
  input I4;
  input K28p5_REG1;
  input I5;
  input I6;
  input S2;
  input I7;
  input I8;
  input RXNOTINTABLE_INT;
  input RUNDISP_EN;
  input RXDISPERR_INT;
  input SRESET;
  input RX_RUDI_INVALID;
  input I9;
  input I11;
  input I12;

  wire \<const0> ;
  wire \<const1> ;
  wire ENABLEALIGN0;
  wire [1:0]GOOD_CGS;
  wire I1;
  wire [0:0]I10;
  wire I11;
  wire I12;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire I9;
  wire K28p5_REG1;
  wire LOOPBACK;
  wire O1;
  wire O2;
  wire O3;
  wire O4;
  wire RUNDISP_EN;
  wire RXDISPERR_INT;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire RX_RUDI_INVALID;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire SIGNAL_DETECT_REG;
  wire SRESET;
  wire SYNC_STATUS_REG0;
  wire n_0_ENCOMMAALIGN_i_1__0;
  wire n_0_ENCOMMAALIGN_reg;
  wire n_0_EVEN_i_1__4;
  wire \n_0_FSM_onehot_STATE[0]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[0]_i_2__0 ;
  wire \n_0_FSM_onehot_STATE[0]_i_3__0 ;
  wire \n_0_FSM_onehot_STATE[10]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_2__1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_10__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_11__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_12__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_13__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_14__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_2__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_3__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_4__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_5__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_6__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_7__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_8__0 ;
  wire \n_0_FSM_onehot_STATE[11]_i_9__0 ;
  wire \n_0_FSM_onehot_STATE[12]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[12]_i_2__0 ;
  wire \n_0_FSM_onehot_STATE[12]_i_3__0 ;
  wire \n_0_FSM_onehot_STATE[12]_i_4__0 ;
  wire \n_0_FSM_onehot_STATE[12]_i_5__0 ;
  wire \n_0_FSM_onehot_STATE[12]_i_7__0 ;
  wire \n_0_FSM_onehot_STATE[12]_i_8__0 ;
  wire \n_0_FSM_onehot_STATE[12]_i_9__0 ;
  wire \n_0_FSM_onehot_STATE[1]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[2]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[3]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[4]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[5]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[5]_i_2__4 ;
  wire \n_0_FSM_onehot_STATE[6]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[6]_i_2__0 ;
  wire \n_0_FSM_onehot_STATE[6]_i_3__0 ;
  wire \n_0_FSM_onehot_STATE[7]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[7]_i_2__4 ;
  wire \n_0_FSM_onehot_STATE[8]_i_1__1 ;
  wire \n_0_FSM_onehot_STATE[8]_i_2__0 ;
  wire \n_0_FSM_onehot_STATE[8]_i_3__1 ;
  wire \n_0_FSM_onehot_STATE[9]_i_1__0 ;
  wire \n_0_FSM_onehot_STATE[9]_i_2__2 ;
  wire \n_0_FSM_onehot_STATE_reg[0] ;
  wire \n_0_FSM_onehot_STATE_reg[10] ;
  wire \n_0_FSM_onehot_STATE_reg[11] ;
  wire \n_0_FSM_onehot_STATE_reg[12] ;
  wire \n_0_FSM_onehot_STATE_reg[1] ;
  wire \n_0_FSM_onehot_STATE_reg[2] ;
  wire \n_0_FSM_onehot_STATE_reg[3] ;
  wire \n_0_FSM_onehot_STATE_reg[4] ;
  wire \n_0_FSM_onehot_STATE_reg[5] ;
  wire \n_0_FSM_onehot_STATE_reg[6] ;
  wire \n_0_FSM_onehot_STATE_reg[7] ;
  wire \n_0_FSM_onehot_STATE_reg[8] ;
  wire \n_0_FSM_onehot_STATE_reg[9] ;
  wire \n_0_GOOD_CGS[0]_i_1__0 ;
  wire \n_0_GOOD_CGS[1]_i_1__0 ;
  wire \n_0_GOOD_CGS[1]_i_2__0 ;
  wire \n_0_GOOD_CGS[1]_i_3__0 ;
  wire \n_0_GOOD_CGS[1]_i_4__0 ;
  wire \n_0_GOOD_CGS[1]_i_5__0 ;
  wire n_0_SYNC_STATUS_i_1__0;
  wire n_0_SYNC_STATUS_i_2__0;
  wire n_0_SYNC_STATUS_i_3__0;
  wire userclk2;

LUT4 #(
    .INIT(16'hFFFE)) 
     ENABLEALIGN_i_1
       (.I0(n_0_ENCOMMAALIGN_reg),
        .I1(I9),
        .I2(I11),
        .I3(I12),
        .O(ENABLEALIGN0));
(* SOFT_HLUTNM = "soft_lutpair242" *) 
   LUT3 #(
    .INIT(8'h0E)) 
     ENCOMMAALIGN_i_1__0
       (.I0(n_0_ENCOMMAALIGN_reg),
        .I1(n_0_SYNC_STATUS_i_2__0),
        .I2(n_0_SYNC_STATUS_i_3__0),
        .O(n_0_ENCOMMAALIGN_i_1__0));
FDRE ENCOMMAALIGN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ENCOMMAALIGN_i_1__0),
        .Q(n_0_ENCOMMAALIGN_reg),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair244" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     EVEN_i_1__4
       (.I0(RXSYNC_STATUS),
        .I1(I2),
        .I2(RXEVEN),
        .O(n_0_EVEN_i_1__4));
FDRE EVEN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EVEN_i_1__4),
        .Q(RXEVEN),
        .R(I10));
(* SOFT_HLUTNM = "soft_lutpair245" *) 
   LUT2 #(
    .INIT(4'h2)) 
     EXTEND_i_2__0
       (.I0(RXSYNC_STATUS),
        .I1(I10),
        .O(O1));
LUT6 #(
    .INIT(64'h8888888888B8BBBB)) 
     \FSM_onehot_STATE[0]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[0]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[0]_i_3__0 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .I5(I1),
        .O(\n_0_FSM_onehot_STATE[0]_i_1__0 ));
LUT6 #(
    .INIT(64'hFCFC407C00FC407C)) 
     \FSM_onehot_STATE[0]_i_2__0 
       (.I0(I2),
        .I1(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I5(I3),
        .O(\n_0_FSM_onehot_STATE[0]_i_2__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
     \FSM_onehot_STATE[0]_i_3__0 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_9__0 ),
        .I1(\n_0_FSM_onehot_STATE_reg[12] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[11] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .I5(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[0]_i_3__0 ));
LUT3 #(
    .INIT(8'h20)) 
     \FSM_onehot_STATE[10]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_2__0 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_2__1 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_1__1 ));
LUT6 #(
    .INIT(64'hAAAAAA0051515100)) 
     \FSM_onehot_STATE[10]_i_2__1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I1(GOOD_CGS[1]),
        .I2(GOOD_CGS[0]),
        .I3(I4),
        .I4(\n_0_FSM_onehot_STATE[5]_i_2__4 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_2__1 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEE9)) 
     \FSM_onehot_STATE[11]_i_10__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[2] ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(\n_0_FSM_onehot_STATE_reg[6] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_10__0 ));
(* SOFT_HLUTNM = "soft_lutpair236" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_STATE[11]_i_11__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[4] ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_11__0 ));
(* SOFT_HLUTNM = "soft_lutpair240" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \FSM_onehot_STATE[11]_i_12__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_12__0 ));
LUT6 #(
    .INIT(64'h6666666F666F6FF6)) 
     \FSM_onehot_STATE[11]_i_13__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[11] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_13__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_STATE[11]_i_14__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[0] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .I5(\n_0_FSM_onehot_STATE_reg[12] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_14__0 ));
LUT5 #(
    .INIT(32'h00002002)) 
     \FSM_onehot_STATE[11]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_2__0 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I4(I1),
        .O(\n_0_FSM_onehot_STATE[11]_i_1__0 ));
LUT6 #(
    .INIT(64'h0001000000000000)) 
     \FSM_onehot_STATE[11]_i_2__0 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_5__0 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_6__0 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_7__0 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_7__0 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_8__0 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_9__0 ),
        .O(\n_0_FSM_onehot_STATE[11]_i_2__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
     \FSM_onehot_STATE[11]_i_3__0 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_10__0 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_11__0 ),
        .I2(\n_0_FSM_onehot_STATE_reg[12] ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_8__0 ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .I5(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_3__0 ));
LUT6 #(
    .INIT(64'h00AB000000000000)) 
     \FSM_onehot_STATE[11]_i_4__0 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_12__0 ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[1] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_13__0 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_14__0 ),
        .O(\n_0_FSM_onehot_STATE[11]_i_4__0 ));
(* SOFT_HLUTNM = "soft_lutpair237" *) 
   LUT5 #(
    .INIT(32'hFFFCCCC8)) 
     \FSM_onehot_STATE[11]_i_5__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[12] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_5__0 ));
(* SOFT_HLUTNM = "soft_lutpair238" *) 
   LUT4 #(
    .INIT(16'hFAA8)) 
     \FSM_onehot_STATE[11]_i_6__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[12] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_6__0 ));
(* SOFT_HLUTNM = "soft_lutpair237" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_STATE[11]_i_7__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[12] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_7__0 ));
(* SOFT_HLUTNM = "soft_lutpair240" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[11]_i_8__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_8__0 ));
(* SOFT_HLUTNM = "soft_lutpair239" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[11]_i_9__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[11] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_9__0 ));
LUT3 #(
    .INIT(8'hAB)) 
     \FSM_onehot_STATE[12]_i_1__0 
       (.I0(I10),
        .I1(SIGNAL_DETECT_REG),
        .I2(LOOPBACK),
        .O(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
LUT6 #(
    .INIT(64'hB0B080B080808080)) 
     \FSM_onehot_STATE[12]_i_2__0 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_3__0 ),
        .I1(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .I3(GOOD_CGS[1]),
        .I4(GOOD_CGS[0]),
        .I5(I1),
        .O(\n_0_FSM_onehot_STATE[12]_i_2__0 ));
LUT5 #(
    .INIT(32'h00001300)) 
     \FSM_onehot_STATE[12]_i_3__0 
       (.I0(I2),
        .I1(S2),
        .I2(RXEVEN),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_3__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
     \FSM_onehot_STATE[12]_i_4__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[11] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[8] ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_7__0 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_8__0 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_4__0 ));
LUT6 #(
    .INIT(64'h0000000000010116)) 
     \FSM_onehot_STATE[12]_i_5__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[12] ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_9__0 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_5__0 ));
LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_STATE[12]_i_7__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[3] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[1] ),
        .I3(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_7__0 ));
(* SOFT_HLUTNM = "soft_lutpair238" *) 
   LUT5 #(
    .INIT(32'h00010116)) 
     \FSM_onehot_STATE[12]_i_8__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[4] ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[12] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_8__0 ));
(* SOFT_HLUTNM = "soft_lutpair236" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_STATE[12]_i_9__0 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_7__0 ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_9__0 ));
LUT5 #(
    .INIT(32'h00002000)) 
     \FSM_onehot_STATE[1]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I2(I2),
        .I3(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .O(\n_0_FSM_onehot_STATE[1]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000044300000)) 
     \FSM_onehot_STATE[2]_i_1__0 
       (.I0(I6),
        .I1(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I2(I4),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .O(\n_0_FSM_onehot_STATE[2]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000000400000)) 
     \FSM_onehot_STATE[3]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I1(\n_0_FSM_onehot_STATE[5]_i_2__4 ),
        .I2(I2),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .O(\n_0_FSM_onehot_STATE[3]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000000200C20)) 
     \FSM_onehot_STATE[4]_i_1__0 
       (.I0(I7),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I3(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .I4(I6),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .O(\n_0_FSM_onehot_STATE[4]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000004000000)) 
     \FSM_onehot_STATE[5]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I3(\n_0_FSM_onehot_STATE[5]_i_2__4 ),
        .I4(I2),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_1__1 ));
LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[5]_i_2__4 
       (.I0(RXEVEN),
        .I1(I8),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(\n_0_FSM_onehot_STATE[5]_i_2__4 ));
LUT6 #(
    .INIT(64'h0020FFFF00200000)) 
     \FSM_onehot_STATE[6]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[6]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_2__0 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .I5(\n_0_FSM_onehot_STATE[6]_i_3__0 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair243" *) 
   LUT3 #(
    .INIT(8'h20)) 
     \FSM_onehot_STATE[6]_i_2__0 
       (.I0(I1),
        .I1(GOOD_CGS[0]),
        .I2(GOOD_CGS[1]),
        .O(\n_0_FSM_onehot_STATE[6]_i_2__0 ));
LUT6 #(
    .INIT(64'h000000000054A854)) 
     \FSM_onehot_STATE[6]_i_3__0 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I1(I4),
        .I2(\n_0_FSM_onehot_STATE[5]_i_2__4 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I4(I3),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_3__0 ));
LUT6 #(
    .INIT(64'h888888888888888B)) 
     \FSM_onehot_STATE[7]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[7]_i_2__4 ),
        .I1(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I4(I1),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_1__0 ));
LUT6 #(
    .INIT(64'h0000000000000400)) 
     \FSM_onehot_STATE[7]_i_2__4 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I1(GOOD_CGS[1]),
        .I2(GOOD_CGS[0]),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_2__0 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_2__4 ));
LUT6 #(
    .INIT(64'h0020FFFF00200000)) 
     \FSM_onehot_STATE[8]_i_1__1 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_2__0 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_2__0 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .I5(\n_0_FSM_onehot_STATE[8]_i_3__1 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair241" *) 
   LUT3 #(
    .INIT(8'h8A)) 
     \FSM_onehot_STATE[8]_i_2__0 
       (.I0(I1),
        .I1(GOOD_CGS[0]),
        .I2(GOOD_CGS[1]),
        .O(\n_0_FSM_onehot_STATE[8]_i_2__0 ));
LUT6 #(
    .INIT(64'h0000000000040044)) 
     \FSM_onehot_STATE[8]_i_3__1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I2(RXEVEN),
        .I3(S2),
        .I4(I2),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_3__1 ));
LUT6 #(
    .INIT(64'h400040A040054000)) 
     \FSM_onehot_STATE[9]_i_1__0 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_4__0 ),
        .I1(\n_0_FSM_onehot_STATE[9]_i_2__2 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_5__0 ),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4__0 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_3__0 ),
        .O(\n_0_FSM_onehot_STATE[9]_i_1__0 ));
LUT2 #(
    .INIT(4'h2)) 
     \FSM_onehot_STATE[9]_i_2__2 
       (.I0(GOOD_CGS[1]),
        .I1(GOOD_CGS[0]),
        .O(\n_0_FSM_onehot_STATE[9]_i_2__2 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[0]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[0] ),
        .S(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[10]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[10] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[11]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[11] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[12]_i_2__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[12] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[1]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[1] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[2]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[2] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[3]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[3] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[4]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[4] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[5]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[5] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[6]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[6] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[7]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[7] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[8]_i_1__1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[8] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[9]_i_1__0 ),
        .Q(\n_0_FSM_onehot_STATE_reg[9] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1__0 ));
GND GND
       (.G(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair243" *) 
   LUT3 #(
    .INIT(8'h06)) 
     \GOOD_CGS[0]_i_1__0 
       (.I0(GOOD_CGS[0]),
        .I1(I1),
        .I2(\n_0_GOOD_CGS[1]_i_2__0 ),
        .O(\n_0_GOOD_CGS[0]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair241" *) 
   LUT4 #(
    .INIT(16'h006A)) 
     \GOOD_CGS[1]_i_1__0 
       (.I0(GOOD_CGS[1]),
        .I1(I1),
        .I2(GOOD_CGS[0]),
        .I3(\n_0_GOOD_CGS[1]_i_2__0 ),
        .O(\n_0_GOOD_CGS[1]_i_1__0 ));
LUT5 #(
    .INIT(32'hABBAAABA)) 
     \GOOD_CGS[1]_i_2__0 
       (.I0(I10),
        .I1(\n_0_GOOD_CGS[1]_i_3__0 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_7__0 ),
        .I3(\n_0_GOOD_CGS[1]_i_4__0 ),
        .I4(\n_0_GOOD_CGS[1]_i_5__0 ),
        .O(\n_0_GOOD_CGS[1]_i_2__0 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \GOOD_CGS[1]_i_3__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[11] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .I5(\n_0_FSM_onehot_STATE_reg[3] ),
        .O(\n_0_GOOD_CGS[1]_i_3__0 ));
(* SOFT_HLUTNM = "soft_lutpair239" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \GOOD_CGS[1]_i_4__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[12] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_GOOD_CGS[1]_i_4__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \GOOD_CGS[1]_i_5__0 
       (.I0(\n_0_FSM_onehot_STATE_reg[3] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[10] ),
        .I5(\n_0_FSM_onehot_STATE_reg[11] ),
        .O(\n_0_GOOD_CGS[1]_i_5__0 ));
FDRE \GOOD_CGS_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_GOOD_CGS[0]_i_1__0 ),
        .Q(GOOD_CGS[0]),
        .R(\<const0> ));
FDRE \GOOD_CGS_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_GOOD_CGS[1]_i_1__0 ),
        .Q(GOOD_CGS[1]),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h8)) 
     RX_DATA_ERROR_i_3__0
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .O(O2));
LUT2 #(
    .INIT(4'h1)) 
     RX_DV_i_3__0
       (.I0(RXSYNC_STATUS),
        .I1(I5),
        .O(O3));
(* SOFT_HLUTNM = "soft_lutpair245" *) 
   LUT3 #(
    .INIT(8'h40)) 
     RX_RUDI_INVALID_REG_i_1__0
       (.I0(SRESET),
        .I1(RXSYNC_STATUS),
        .I2(RX_RUDI_INVALID),
        .O(O4));
FDRE SIGNAL_DETECT_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SIGNAL_DETECT_MOD),
        .Q(SIGNAL_DETECT_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair244" *) 
   LUT2 #(
    .INIT(4'hB)) 
     SYNC_STATUS_REG_i_1__0
       (.I0(I10),
        .I1(RXSYNC_STATUS),
        .O(SYNC_STATUS_REG0));
(* SOFT_HLUTNM = "soft_lutpair242" *) 
   LUT3 #(
    .INIT(8'hF4)) 
     SYNC_STATUS_i_1__0
       (.I0(n_0_SYNC_STATUS_i_2__0),
        .I1(RXSYNC_STATUS),
        .I2(n_0_SYNC_STATUS_i_3__0),
        .O(n_0_SYNC_STATUS_i_1__0));
LUT5 #(
    .INIT(32'h00028084)) 
     SYNC_STATUS_i_2__0
       (.I0(\n_0_FSM_onehot_STATE[11]_i_7__0 ),
        .I1(\n_0_GOOD_CGS[1]_i_3__0 ),
        .I2(\n_0_GOOD_CGS[1]_i_4__0 ),
        .I3(I1),
        .I4(\n_0_GOOD_CGS[1]_i_5__0 ),
        .O(n_0_SYNC_STATUS_i_2__0));
LUT6 #(
    .INIT(64'h0000000000000200)) 
     SYNC_STATUS_i_3__0
       (.I0(I1),
        .I1(I3),
        .I2(\n_0_GOOD_CGS[1]_i_5__0 ),
        .I3(\n_0_GOOD_CGS[1]_i_4__0 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_7__0 ),
        .I5(\n_0_GOOD_CGS[1]_i_3__0 ),
        .O(n_0_SYNC_STATUS_i_3__0));
FDRE #(
    .INIT(1'b0)) 
     SYNC_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_STATUS_i_1__0),
        .Q(RXSYNC_STATUS),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "SYNCHRONISE" *) 
module quadsgmiiSYNCHRONISE_45
   (RXEVEN,
    RXSYNC_STATUS,
    O4,
    SYNC_STATUS_REG0,
    O1,
    O2,
    O3,
    O5,
    SIGNAL_DETECT_MOD,
    userclk2,
    I10,
    LOOPBACK,
    I1,
    I2,
    I3,
    I4,
    K28p5_REG1,
    I5,
    I6,
    S2,
    I7,
    I8,
    RXNOTINTABLE_INT,
    RUNDISP_EN,
    RXDISPERR_INT,
    SRESET,
    RX_RUDI_INVALID);
  output RXEVEN;
  output RXSYNC_STATUS;
  output O4;
  output SYNC_STATUS_REG0;
  output O1;
  output O2;
  output O3;
  output O5;
  input SIGNAL_DETECT_MOD;
  input userclk2;
  input [0:0]I10;
  input LOOPBACK;
  input I1;
  input I2;
  input I3;
  input I4;
  input K28p5_REG1;
  input I5;
  input I6;
  input S2;
  input I7;
  input I8;
  input RXNOTINTABLE_INT;
  input RUNDISP_EN;
  input RXDISPERR_INT;
  input SRESET;
  input RX_RUDI_INVALID;

  wire \<const0> ;
  wire \<const1> ;
  wire [1:0]GOOD_CGS;
  wire I1;
  wire [0:0]I10;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire I6;
  wire I7;
  wire I8;
  wire K28p5_REG1;
  wire LOOPBACK;
  wire O1;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire RUNDISP_EN;
  wire RXDISPERR_INT;
  wire RXEVEN;
  wire RXNOTINTABLE_INT;
  wire RXSYNC_STATUS;
  wire RX_RUDI_INVALID;
  wire S2;
  wire SIGNAL_DETECT_MOD;
  wire SIGNAL_DETECT_REG;
  wire SRESET;
  wire SYNC_STATUS_REG0;
  wire n_0_ENCOMMAALIGN_i_1;
  wire n_0_EVEN_i_1__3;
  wire \n_0_FSM_onehot_STATE[0]_i_1 ;
  wire \n_0_FSM_onehot_STATE[0]_i_2 ;
  wire \n_0_FSM_onehot_STATE[0]_i_3 ;
  wire \n_0_FSM_onehot_STATE[10]_i_1 ;
  wire \n_0_FSM_onehot_STATE[10]_i_2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_1 ;
  wire \n_0_FSM_onehot_STATE[11]_i_10 ;
  wire \n_0_FSM_onehot_STATE[11]_i_11 ;
  wire \n_0_FSM_onehot_STATE[11]_i_12 ;
  wire \n_0_FSM_onehot_STATE[11]_i_13 ;
  wire \n_0_FSM_onehot_STATE[11]_i_14 ;
  wire \n_0_FSM_onehot_STATE[11]_i_2 ;
  wire \n_0_FSM_onehot_STATE[11]_i_3 ;
  wire \n_0_FSM_onehot_STATE[11]_i_4 ;
  wire \n_0_FSM_onehot_STATE[11]_i_5 ;
  wire \n_0_FSM_onehot_STATE[11]_i_6 ;
  wire \n_0_FSM_onehot_STATE[11]_i_7 ;
  wire \n_0_FSM_onehot_STATE[11]_i_8 ;
  wire \n_0_FSM_onehot_STATE[11]_i_9 ;
  wire \n_0_FSM_onehot_STATE[12]_i_1 ;
  wire \n_0_FSM_onehot_STATE[12]_i_2 ;
  wire \n_0_FSM_onehot_STATE[12]_i_3 ;
  wire \n_0_FSM_onehot_STATE[12]_i_4 ;
  wire \n_0_FSM_onehot_STATE[12]_i_5 ;
  wire \n_0_FSM_onehot_STATE[12]_i_7 ;
  wire \n_0_FSM_onehot_STATE[12]_i_8 ;
  wire \n_0_FSM_onehot_STATE[12]_i_9 ;
  wire \n_0_FSM_onehot_STATE[1]_i_1 ;
  wire \n_0_FSM_onehot_STATE[2]_i_1 ;
  wire \n_0_FSM_onehot_STATE[3]_i_1 ;
  wire \n_0_FSM_onehot_STATE[4]_i_1 ;
  wire \n_0_FSM_onehot_STATE[5]_i_1 ;
  wire \n_0_FSM_onehot_STATE[5]_i_2__3 ;
  wire \n_0_FSM_onehot_STATE[6]_i_1 ;
  wire \n_0_FSM_onehot_STATE[6]_i_2 ;
  wire \n_0_FSM_onehot_STATE[6]_i_3 ;
  wire \n_0_FSM_onehot_STATE[7]_i_1 ;
  wire \n_0_FSM_onehot_STATE[7]_i_2__3 ;
  wire \n_0_FSM_onehot_STATE[8]_i_1 ;
  wire \n_0_FSM_onehot_STATE[8]_i_2 ;
  wire \n_0_FSM_onehot_STATE[8]_i_3 ;
  wire \n_0_FSM_onehot_STATE[9]_i_1 ;
  wire \n_0_FSM_onehot_STATE[9]_i_2__0 ;
  wire \n_0_FSM_onehot_STATE_reg[0] ;
  wire \n_0_FSM_onehot_STATE_reg[10] ;
  wire \n_0_FSM_onehot_STATE_reg[11] ;
  wire \n_0_FSM_onehot_STATE_reg[12] ;
  wire \n_0_FSM_onehot_STATE_reg[1] ;
  wire \n_0_FSM_onehot_STATE_reg[2] ;
  wire \n_0_FSM_onehot_STATE_reg[3] ;
  wire \n_0_FSM_onehot_STATE_reg[4] ;
  wire \n_0_FSM_onehot_STATE_reg[5] ;
  wire \n_0_FSM_onehot_STATE_reg[6] ;
  wire \n_0_FSM_onehot_STATE_reg[7] ;
  wire \n_0_FSM_onehot_STATE_reg[8] ;
  wire \n_0_FSM_onehot_STATE_reg[9] ;
  wire \n_0_GOOD_CGS[0]_i_1 ;
  wire \n_0_GOOD_CGS[1]_i_1 ;
  wire \n_0_GOOD_CGS[1]_i_2 ;
  wire \n_0_GOOD_CGS[1]_i_3 ;
  wire \n_0_GOOD_CGS[1]_i_4 ;
  wire \n_0_GOOD_CGS[1]_i_5 ;
  wire n_0_SYNC_STATUS_i_1;
  wire n_0_SYNC_STATUS_i_2;
  wire n_0_SYNC_STATUS_i_3;
  wire userclk2;

(* SOFT_HLUTNM = "soft_lutpair110" *) 
   LUT3 #(
    .INIT(8'h0E)) 
     ENCOMMAALIGN_i_1
       (.I0(O4),
        .I1(n_0_SYNC_STATUS_i_2),
        .I2(n_0_SYNC_STATUS_i_3),
        .O(n_0_ENCOMMAALIGN_i_1));
FDRE ENCOMMAALIGN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_ENCOMMAALIGN_i_1),
        .Q(O4),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair113" *) 
   LUT3 #(
    .INIT(8'h4F)) 
     EVEN_i_1__3
       (.I0(RXSYNC_STATUS),
        .I1(I2),
        .I2(RXEVEN),
        .O(n_0_EVEN_i_1__3));
FDRE EVEN_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_EVEN_i_1__3),
        .Q(RXEVEN),
        .R(I10));
(* SOFT_HLUTNM = "soft_lutpair113" *) 
   LUT2 #(
    .INIT(4'h2)) 
     EXTEND_i_2
       (.I0(RXSYNC_STATUS),
        .I1(I10),
        .O(O1));
LUT6 #(
    .INIT(64'h8888888888B8BBBB)) 
     \FSM_onehot_STATE[0]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[0]_i_2 ),
        .I1(\n_0_FSM_onehot_STATE[0]_i_3 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .I5(I1),
        .O(\n_0_FSM_onehot_STATE[0]_i_1 ));
LUT6 #(
    .INIT(64'hFCFC407C00FC407C)) 
     \FSM_onehot_STATE[0]_i_2 
       (.I0(I2),
        .I1(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I5(I3),
        .O(\n_0_FSM_onehot_STATE[0]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
     \FSM_onehot_STATE[0]_i_3 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_9 ),
        .I1(\n_0_FSM_onehot_STATE_reg[12] ),
        .I2(\n_0_FSM_onehot_STATE_reg[10] ),
        .I3(\n_0_FSM_onehot_STATE_reg[11] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .I5(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[0]_i_3 ));
LUT3 #(
    .INIT(8'h20)) 
     \FSM_onehot_STATE[10]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_2 ),
        .I2(\n_0_FSM_onehot_STATE[10]_i_2 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_1 ));
LUT6 #(
    .INIT(64'hAAAAAA0051515100)) 
     \FSM_onehot_STATE[10]_i_2 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I1(GOOD_CGS[1]),
        .I2(GOOD_CGS[0]),
        .I3(I4),
        .I4(\n_0_FSM_onehot_STATE[5]_i_2__3 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .O(\n_0_FSM_onehot_STATE[10]_i_2 ));
LUT5 #(
    .INIT(32'h00002002)) 
     \FSM_onehot_STATE[11]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_2 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I4(I1),
        .O(\n_0_FSM_onehot_STATE[11]_i_1 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEE9)) 
     \FSM_onehot_STATE[11]_i_10 
       (.I0(\n_0_FSM_onehot_STATE_reg[2] ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(\n_0_FSM_onehot_STATE_reg[6] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_10 ));
(* SOFT_HLUTNM = "soft_lutpair104" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_STATE[11]_i_11 
       (.I0(\n_0_FSM_onehot_STATE_reg[4] ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_11 ));
(* SOFT_HLUTNM = "soft_lutpair109" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \FSM_onehot_STATE[11]_i_12 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[7] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_12 ));
LUT6 #(
    .INIT(64'h6666666F666F6FF6)) 
     \FSM_onehot_STATE[11]_i_13 
       (.I0(\n_0_FSM_onehot_STATE_reg[1] ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[11] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .I5(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_13 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_STATE[11]_i_14 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[0] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .I5(\n_0_FSM_onehot_STATE_reg[12] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_14 ));
LUT6 #(
    .INIT(64'h0001000000000000)) 
     \FSM_onehot_STATE[11]_i_2 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_5 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_6 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_7 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_7 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_8 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_9 ),
        .O(\n_0_FSM_onehot_STATE[11]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
     \FSM_onehot_STATE[11]_i_3 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_10 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_11 ),
        .I2(\n_0_FSM_onehot_STATE_reg[12] ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_8 ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .I5(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_3 ));
LUT6 #(
    .INIT(64'h00AB000000000000)) 
     \FSM_onehot_STATE[11]_i_4 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_12 ),
        .I1(\n_0_FSM_onehot_STATE_reg[3] ),
        .I2(\n_0_FSM_onehot_STATE_reg[1] ),
        .I3(\n_0_FSM_onehot_STATE_reg[2] ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_13 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_14 ),
        .O(\n_0_FSM_onehot_STATE[11]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair105" *) 
   LUT5 #(
    .INIT(32'hFFFCCCC8)) 
     \FSM_onehot_STATE[11]_i_5 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[4] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[6] ),
        .I4(\n_0_FSM_onehot_STATE_reg[12] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair107" *) 
   LUT4 #(
    .INIT(16'hFAA8)) 
     \FSM_onehot_STATE[11]_i_6 
       (.I0(\n_0_FSM_onehot_STATE_reg[5] ),
        .I1(\n_0_FSM_onehot_STATE_reg[12] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair105" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_STATE[11]_i_7 
       (.I0(\n_0_FSM_onehot_STATE_reg[12] ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[4] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair109" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[11]_i_8 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair106" *) 
   LUT2 #(
    .INIT(4'h1)) 
     \FSM_onehot_STATE[11]_i_9 
       (.I0(\n_0_FSM_onehot_STATE_reg[10] ),
        .I1(\n_0_FSM_onehot_STATE_reg[11] ),
        .O(\n_0_FSM_onehot_STATE[11]_i_9 ));
LUT3 #(
    .INIT(8'hAB)) 
     \FSM_onehot_STATE[12]_i_1 
       (.I0(I10),
        .I1(SIGNAL_DETECT_REG),
        .I2(LOOPBACK),
        .O(\n_0_FSM_onehot_STATE[12]_i_1 ));
LUT6 #(
    .INIT(64'hB0B080B080808080)) 
     \FSM_onehot_STATE[12]_i_2 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_3 ),
        .I1(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .I3(GOOD_CGS[1]),
        .I4(GOOD_CGS[0]),
        .I5(I1),
        .O(\n_0_FSM_onehot_STATE[12]_i_2 ));
LUT5 #(
    .INIT(32'h00001300)) 
     \FSM_onehot_STATE[12]_i_3 
       (.I0(I2),
        .I1(S2),
        .I2(RXEVEN),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
     \FSM_onehot_STATE[12]_i_4 
       (.I0(\n_0_FSM_onehot_STATE_reg[11] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[9] ),
        .I3(\n_0_FSM_onehot_STATE_reg[8] ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_7 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_8 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_4 ));
LUT6 #(
    .INIT(64'h0000000000010116)) 
     \FSM_onehot_STATE[12]_i_5 
       (.I0(\n_0_FSM_onehot_STATE_reg[8] ),
        .I1(\n_0_FSM_onehot_STATE_reg[9] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[10] ),
        .I4(\n_0_FSM_onehot_STATE_reg[12] ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_9 ),
        .O(\n_0_FSM_onehot_STATE[12]_i_5 ));
LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_STATE[12]_i_7 
       (.I0(\n_0_FSM_onehot_STATE_reg[3] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[1] ),
        .I3(\n_0_FSM_onehot_STATE_reg[0] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair107" *) 
   LUT5 #(
    .INIT(32'h00010116)) 
     \FSM_onehot_STATE[12]_i_8 
       (.I0(\n_0_FSM_onehot_STATE_reg[4] ),
        .I1(\n_0_FSM_onehot_STATE_reg[5] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[12] ),
        .I4(\n_0_FSM_onehot_STATE_reg[7] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_8 ));
(* SOFT_HLUTNM = "soft_lutpair104" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     \FSM_onehot_STATE[12]_i_9 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_7 ),
        .I1(\n_0_FSM_onehot_STATE_reg[6] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[4] ),
        .I4(\n_0_FSM_onehot_STATE_reg[5] ),
        .O(\n_0_FSM_onehot_STATE[12]_i_9 ));
LUT5 #(
    .INIT(32'h00002000)) 
     \FSM_onehot_STATE[1]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I2(I2),
        .I3(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .O(\n_0_FSM_onehot_STATE[1]_i_1 ));
LUT6 #(
    .INIT(64'h0000000044300000)) 
     \FSM_onehot_STATE[2]_i_1 
       (.I0(I6),
        .I1(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I2(I4),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .O(\n_0_FSM_onehot_STATE[2]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000400000)) 
     \FSM_onehot_STATE[3]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I1(\n_0_FSM_onehot_STATE[5]_i_2__3 ),
        .I2(I2),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .O(\n_0_FSM_onehot_STATE[3]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000200C20)) 
     \FSM_onehot_STATE[4]_i_1 
       (.I0(I7),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I3(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .I4(I6),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .O(\n_0_FSM_onehot_STATE[4]_i_1 ));
LUT6 #(
    .INIT(64'h0000000004000000)) 
     \FSM_onehot_STATE[5]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I3(\n_0_FSM_onehot_STATE[5]_i_2__3 ),
        .I4(I2),
        .I5(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .O(\n_0_FSM_onehot_STATE[5]_i_1 ));
LUT5 #(
    .INIT(32'h00010101)) 
     \FSM_onehot_STATE[5]_i_2__3 
       (.I0(RXEVEN),
        .I1(I8),
        .I2(RXNOTINTABLE_INT),
        .I3(RUNDISP_EN),
        .I4(RXDISPERR_INT),
        .O(\n_0_FSM_onehot_STATE[5]_i_2__3 ));
LUT6 #(
    .INIT(64'h0020FFFF00200000)) 
     \FSM_onehot_STATE[6]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[6]_i_2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_2 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .I5(\n_0_FSM_onehot_STATE[6]_i_3 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair111" *) 
   LUT3 #(
    .INIT(8'h20)) 
     \FSM_onehot_STATE[6]_i_2 
       (.I0(I1),
        .I1(GOOD_CGS[0]),
        .I2(GOOD_CGS[1]),
        .O(\n_0_FSM_onehot_STATE[6]_i_2 ));
LUT6 #(
    .INIT(64'h000000000054A854)) 
     \FSM_onehot_STATE[6]_i_3 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I1(I4),
        .I2(\n_0_FSM_onehot_STATE[5]_i_2__3 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I4(I3),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .O(\n_0_FSM_onehot_STATE[6]_i_3 ));
LUT6 #(
    .INIT(64'h888888888888888B)) 
     \FSM_onehot_STATE[7]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[7]_i_2__3 ),
        .I1(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I4(I1),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000000400)) 
     \FSM_onehot_STATE[7]_i_2__3 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I1(GOOD_CGS[1]),
        .I2(GOOD_CGS[0]),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_2 ),
        .O(\n_0_FSM_onehot_STATE[7]_i_2__3 ));
LUT6 #(
    .INIT(64'h0020FFFF00200000)) 
     \FSM_onehot_STATE[8]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[8]_i_2 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I3(\n_0_FSM_onehot_STATE[11]_i_2 ),
        .I4(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .I5(\n_0_FSM_onehot_STATE[8]_i_3 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair108" *) 
   LUT3 #(
    .INIT(8'h8A)) 
     \FSM_onehot_STATE[8]_i_2 
       (.I0(I1),
        .I1(GOOD_CGS[0]),
        .I2(GOOD_CGS[1]),
        .O(\n_0_FSM_onehot_STATE[8]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000040044)) 
     \FSM_onehot_STATE[8]_i_3 
       (.I0(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .I1(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I2(RXEVEN),
        .I3(S2),
        .I4(I2),
        .I5(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .O(\n_0_FSM_onehot_STATE[8]_i_3 ));
LUT6 #(
    .INIT(64'h400040A040054000)) 
     \FSM_onehot_STATE[9]_i_1 
       (.I0(\n_0_FSM_onehot_STATE[12]_i_4 ),
        .I1(\n_0_FSM_onehot_STATE[9]_i_2__0 ),
        .I2(\n_0_FSM_onehot_STATE[12]_i_5 ),
        .I3(I1),
        .I4(\n_0_FSM_onehot_STATE[11]_i_4 ),
        .I5(\n_0_FSM_onehot_STATE[11]_i_3 ),
        .O(\n_0_FSM_onehot_STATE[9]_i_1 ));
LUT2 #(
    .INIT(4'h2)) 
     \FSM_onehot_STATE[9]_i_2__0 
       (.I0(GOOD_CGS[1]),
        .I1(GOOD_CGS[0]),
        .O(\n_0_FSM_onehot_STATE[9]_i_2__0 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_STATE_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[0]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[0] ),
        .S(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[10] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[10]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[10] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[11] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[11]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[11] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[12] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[12]_i_2 ),
        .Q(\n_0_FSM_onehot_STATE_reg[12] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[1]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[1] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[2]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[2] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[3]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[3] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[4]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[4] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[5]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[5] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[6]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[6] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[7]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[7] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[8] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[8]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[8] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_STATE_reg[9] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_FSM_onehot_STATE[9]_i_1 ),
        .Q(\n_0_FSM_onehot_STATE_reg[9] ),
        .R(\n_0_FSM_onehot_STATE[12]_i_1 ));
GND GND
       (.G(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair111" *) 
   LUT3 #(
    .INIT(8'h06)) 
     \GOOD_CGS[0]_i_1 
       (.I0(GOOD_CGS[0]),
        .I1(I1),
        .I2(\n_0_GOOD_CGS[1]_i_2 ),
        .O(\n_0_GOOD_CGS[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair108" *) 
   LUT4 #(
    .INIT(16'h006A)) 
     \GOOD_CGS[1]_i_1 
       (.I0(GOOD_CGS[1]),
        .I1(I1),
        .I2(GOOD_CGS[0]),
        .I3(\n_0_GOOD_CGS[1]_i_2 ),
        .O(\n_0_GOOD_CGS[1]_i_1 ));
LUT5 #(
    .INIT(32'hABBAAABA)) 
     \GOOD_CGS[1]_i_2 
       (.I0(I10),
        .I1(\n_0_GOOD_CGS[1]_i_3 ),
        .I2(\n_0_FSM_onehot_STATE[11]_i_7 ),
        .I3(\n_0_GOOD_CGS[1]_i_4 ),
        .I4(\n_0_GOOD_CGS[1]_i_5 ),
        .O(\n_0_GOOD_CGS[1]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \GOOD_CGS[1]_i_3 
       (.I0(\n_0_FSM_onehot_STATE_reg[9] ),
        .I1(\n_0_FSM_onehot_STATE_reg[11] ),
        .I2(\n_0_FSM_onehot_STATE_reg[7] ),
        .I3(\n_0_FSM_onehot_STATE_reg[5] ),
        .I4(\n_0_FSM_onehot_STATE_reg[1] ),
        .I5(\n_0_FSM_onehot_STATE_reg[3] ),
        .O(\n_0_GOOD_CGS[1]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair106" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \GOOD_CGS[1]_i_4 
       (.I0(\n_0_FSM_onehot_STATE_reg[12] ),
        .I1(\n_0_FSM_onehot_STATE_reg[10] ),
        .I2(\n_0_FSM_onehot_STATE_reg[11] ),
        .I3(\n_0_FSM_onehot_STATE_reg[9] ),
        .I4(\n_0_FSM_onehot_STATE_reg[8] ),
        .O(\n_0_GOOD_CGS[1]_i_4 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \GOOD_CGS[1]_i_5 
       (.I0(\n_0_FSM_onehot_STATE_reg[3] ),
        .I1(\n_0_FSM_onehot_STATE_reg[2] ),
        .I2(\n_0_FSM_onehot_STATE_reg[6] ),
        .I3(\n_0_FSM_onehot_STATE_reg[7] ),
        .I4(\n_0_FSM_onehot_STATE_reg[10] ),
        .I5(\n_0_FSM_onehot_STATE_reg[11] ),
        .O(\n_0_GOOD_CGS[1]_i_5 ));
FDRE \GOOD_CGS_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_GOOD_CGS[0]_i_1 ),
        .Q(GOOD_CGS[0]),
        .R(\<const0> ));
FDRE \GOOD_CGS_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_GOOD_CGS[1]_i_1 ),
        .Q(GOOD_CGS[1]),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h8)) 
     RX_DATA_ERROR_i_3
       (.I0(RXEVEN),
        .I1(K28p5_REG1),
        .O(O2));
LUT2 #(
    .INIT(4'h1)) 
     RX_DV_i_3
       (.I0(RXSYNC_STATUS),
        .I1(I5),
        .O(O3));
(* SOFT_HLUTNM = "soft_lutpair112" *) 
   LUT3 #(
    .INIT(8'h40)) 
     RX_RUDI_INVALID_REG_i_1
       (.I0(SRESET),
        .I1(RXSYNC_STATUS),
        .I2(RX_RUDI_INVALID),
        .O(O5));
FDRE SIGNAL_DETECT_REG_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(SIGNAL_DETECT_MOD),
        .Q(SIGNAL_DETECT_REG),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair112" *) 
   LUT2 #(
    .INIT(4'hB)) 
     SYNC_STATUS_REG_i_1
       (.I0(I10),
        .I1(RXSYNC_STATUS),
        .O(SYNC_STATUS_REG0));
(* SOFT_HLUTNM = "soft_lutpair110" *) 
   LUT3 #(
    .INIT(8'hF4)) 
     SYNC_STATUS_i_1
       (.I0(n_0_SYNC_STATUS_i_2),
        .I1(RXSYNC_STATUS),
        .I2(n_0_SYNC_STATUS_i_3),
        .O(n_0_SYNC_STATUS_i_1));
LUT5 #(
    .INIT(32'h00028084)) 
     SYNC_STATUS_i_2
       (.I0(\n_0_FSM_onehot_STATE[11]_i_7 ),
        .I1(\n_0_GOOD_CGS[1]_i_3 ),
        .I2(\n_0_GOOD_CGS[1]_i_4 ),
        .I3(I1),
        .I4(\n_0_GOOD_CGS[1]_i_5 ),
        .O(n_0_SYNC_STATUS_i_2));
LUT6 #(
    .INIT(64'h0000000000000200)) 
     SYNC_STATUS_i_3
       (.I0(I1),
        .I1(I3),
        .I2(\n_0_GOOD_CGS[1]_i_5 ),
        .I3(\n_0_GOOD_CGS[1]_i_4 ),
        .I4(\n_0_FSM_onehot_STATE[11]_i_7 ),
        .I5(\n_0_GOOD_CGS[1]_i_3 ),
        .O(n_0_SYNC_STATUS_i_3));
FDRE #(
    .INIT(1'b0)) 
     SYNC_STATUS_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_SYNC_STATUS_i_1),
        .Q(RXSYNC_STATUS),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "TX" *) 
module quadsgmiiTX__parameterized0
   (O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    D,
    O7,
    O8,
    O9,
    O10,
    O11,
    gmii_tx_er_out_ch3,
    userclk2,
    gmii_tx_en_out_ch3,
    I1,
    I4,
    I2,
    LOOPBACK,
    RXCHARISK_USR,
    RXCHARISCOMMA_USR,
    Q,
    I3,
    XMIT_CONFIG_INT,
    I5,
    XMIT_DATA,
    I8,
    I6);
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output [7:0]D;
  output O7;
  output O8;
  output O9;
  output O10;
  output [2:0]O11;
  input gmii_tx_er_out_ch3;
  input userclk2;
  input gmii_tx_en_out_ch3;
  input I1;
  input I4;
  input I2;
  input LOOPBACK;
  input RXCHARISK_USR;
  input RXCHARISCOMMA_USR;
  input [7:0]Q;
  input I3;
  input XMIT_CONFIG_INT;
  input I5;
  input XMIT_DATA;
  input [7:0]I8;
  input [15:0]I6;

  wire \<const0> ;
  wire \<const1> ;
  wire [7:0]CODE_GRP;
  wire CODE_GRPISK;
  wire [7:0]D;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire [15:0]I6;
  wire [7:0]I8;
  wire INSERT_IDLE2_out;
  wire LOOPBACK;
  wire O1;
  wire O10;
  wire [2:0]O11;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [7:0]Q;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire S;
  wire S0;
  wire T;
  wire T0;
  wire TRIGGER_S;
  wire TRIGGER_S0;
  wire TRIGGER_T;
  wire TXCHARISK_INT;
  wire [7:0]TXD_REG1;
  wire [15:0]TX_CONFIG;
  wire TX_EN_REG1;
  wire TX_ER_REG1;
  wire TX_EVEN;
  wire XMIT_CONFIG_INT;
  wire XMIT_CONFIG_INT_0;
  wire XMIT_DATA;
  wire gmii_tx_en_out_ch3;
  wire gmii_tx_er_out_ch3;
  wire n_0_C1_OR_C2_i_1__2;
  wire n_0_C1_OR_C2_reg;
  wire n_0_CODE_GRPISK_i_1__2;
  wire n_0_CODE_GRPISK_i_2__2;
  wire \n_0_CODE_GRP[0]_i_1__2 ;
  wire \n_0_CODE_GRP[0]_i_2__2 ;
  wire \n_0_CODE_GRP[1]_i_1__2 ;
  wire \n_0_CODE_GRP[1]_i_2__2 ;
  wire \n_0_CODE_GRP[2]_i_1__2 ;
  wire \n_0_CODE_GRP[2]_i_2__2 ;
  wire \n_0_CODE_GRP[3]_i_1__2 ;
  wire \n_0_CODE_GRP[3]_i_2__2 ;
  wire \n_0_CODE_GRP[4]_i_1__2 ;
  wire \n_0_CODE_GRP[5]_i_1__2 ;
  wire \n_0_CODE_GRP[6]_i_1__2 ;
  wire \n_0_CODE_GRP[6]_i_2__2 ;
  wire \n_0_CODE_GRP[7]_i_1__2 ;
  wire \n_0_CODE_GRP[7]_i_2__2 ;
  wire \n_0_CODE_GRP_CNT_reg[1] ;
  wire \n_0_CONFIG_DATA[0]_i_1__2 ;
  wire \n_0_CONFIG_DATA[1]_i_1__2 ;
  wire \n_0_CONFIG_DATA[2]_i_1__2 ;
  wire \n_0_CONFIG_DATA[3]_i_1__2 ;
  wire \n_0_CONFIG_DATA[4]_i_1__2 ;
  wire \n_0_CONFIG_DATA[5]_i_1__2 ;
  wire \n_0_CONFIG_DATA[6]_i_1__2 ;
  wire \n_0_CONFIG_DATA[7]_i_1__2 ;
  wire \n_0_CONFIG_DATA_reg[0] ;
  wire \n_0_CONFIG_DATA_reg[1] ;
  wire \n_0_CONFIG_DATA_reg[2] ;
  wire \n_0_CONFIG_DATA_reg[3] ;
  wire \n_0_CONFIG_DATA_reg[4] ;
  wire \n_0_CONFIG_DATA_reg[5] ;
  wire \n_0_CONFIG_DATA_reg[6] ;
  wire \n_0_CONFIG_DATA_reg[7] ;
  wire n_0_INSERT_IDLE_i_2__2;
  wire n_0_INSERT_IDLE_reg;
  wire n_0_R_i_1__6;
  wire n_0_R_reg;
  wire \n_0_TX_CONFIG[15]_i_1__2 ;
  wire n_0_TX_PACKET_i_1__2;
  wire \n_0_USE_QSGMII_DATA.TXCHARISK_i_1__2 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[0]_i_1__2 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[1]_i_1__2 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[2]_i_1__2 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[3]_i_1__2 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[4]_i_1__2 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[5]_i_1__2 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[6]_i_1__2 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[7]_i_1__2 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[0] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[1] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[2] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[3] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[4] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[5] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[6] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[7] ;
  wire n_0_V_i_1__2;
  wire n_0_V_i_2__2;
  wire n_0_XMIT_CONFIG_INT_i_1__2;
  wire n_0_XMIT_DATA_INT_i_1__6;
  wire n_0_XMIT_DATA_INT_reg;
  wire p_20_in;
  wire [1:0]plusOp__0;
  wire userclk2;

LUT5 #(
    .INIT(32'h00006A2A)) 
     C1_OR_C2_i_1__2
       (.I0(n_0_C1_OR_C2_reg),
        .I1(TX_EVEN),
        .I2(\n_0_CODE_GRP_CNT_reg[1] ),
        .I3(XMIT_CONFIG_INT_0),
        .I4(I1),
        .O(n_0_C1_OR_C2_i_1__2));
FDRE C1_OR_C2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_C1_OR_C2_i_1__2),
        .Q(n_0_C1_OR_C2_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h30303030FFFF55FF)) 
     CODE_GRPISK_i_1__2
       (.I0(O1),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_EVEN),
        .I3(n_0_CODE_GRPISK_i_2__2),
        .I4(I3),
        .I5(XMIT_CONFIG_INT_0),
        .O(n_0_CODE_GRPISK_i_1__2));
(* SOFT_HLUTNM = "soft_lutpair427" *) 
   LUT3 #(
    .INIT(8'h01)) 
     CODE_GRPISK_i_2__2
       (.I0(S),
        .I1(n_0_R_reg),
        .I2(T),
        .O(n_0_CODE_GRPISK_i_2__2));
FDRE CODE_GRPISK_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_CODE_GRPISK_i_1__2),
        .Q(CODE_GRPISK),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h8B8B888B88888888)) 
     \CODE_GRP[0]_i_1__2 
       (.I0(\n_0_CONFIG_DATA_reg[0] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(I2),
        .I3(O2),
        .I4(S),
        .I5(\n_0_CODE_GRP[0]_i_2__2 ),
        .O(\n_0_CODE_GRP[0]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair427" *) 
   LUT5 #(
    .INIT(32'hFFFEFEFE)) 
     \CODE_GRP[0]_i_2__2 
       (.I0(T),
        .I1(n_0_R_reg),
        .I2(S),
        .I3(TXD_REG1[0]),
        .I4(O1),
        .O(\n_0_CODE_GRP[0]_i_2__2 ));
LUT4 #(
    .INIT(16'hAA03)) 
     \CODE_GRP[1]_i_1__2 
       (.I0(\n_0_CONFIG_DATA_reg[1] ),
        .I1(\n_0_CODE_GRP[1]_i_2__2 ),
        .I2(I2),
        .I3(XMIT_CONFIG_INT_0),
        .O(\n_0_CODE_GRP[1]_i_1__2 ));
LUT6 #(
    .INIT(64'h1010101110111011)) 
     \CODE_GRP[1]_i_2__2 
       (.I0(O2),
        .I1(S),
        .I2(T),
        .I3(n_0_R_reg),
        .I4(TXD_REG1[1]),
        .I5(O1),
        .O(\n_0_CODE_GRP[1]_i_2__2 ));
LUT4 #(
    .INIT(16'hFE0E)) 
     \CODE_GRP[2]_i_1__2 
       (.I0(I2),
        .I1(\n_0_CODE_GRP[2]_i_2__2 ),
        .I2(XMIT_CONFIG_INT_0),
        .I3(\n_0_CONFIG_DATA_reg[2] ),
        .O(\n_0_CODE_GRP[2]_i_1__2 ));
LUT6 #(
    .INIT(64'h00000000FFFFFFEF)) 
     \CODE_GRP[2]_i_2__2 
       (.I0(TXD_REG1[2]),
        .I1(O2),
        .I2(O1),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(S),
        .O(\n_0_CODE_GRP[2]_i_2__2 ));
LUT6 #(
    .INIT(64'hBBBBBBBB8B888B8B)) 
     \CODE_GRP[3]_i_1__2 
       (.I0(\n_0_CONFIG_DATA_reg[3] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(n_0_R_reg),
        .I3(TXD_REG1[3]),
        .I4(O1),
        .I5(\n_0_CODE_GRP[3]_i_2__2 ),
        .O(\n_0_CODE_GRP[3]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair429" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \CODE_GRP[3]_i_2__2 
       (.I0(T),
        .I1(S),
        .I2(O2),
        .I3(I2),
        .O(\n_0_CODE_GRP[3]_i_2__2 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[4]_i_1__2 
       (.I0(\n_0_CONFIG_DATA_reg[4] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2__2 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[4]),
        .O(\n_0_CODE_GRP[4]_i_1__2 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[5]_i_1__2 
       (.I0(\n_0_CONFIG_DATA_reg[5] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2__2 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[5]),
        .O(\n_0_CODE_GRP[5]_i_1__2 ));
LUT6 #(
    .INIT(64'hFFFF000000EA00EA)) 
     \CODE_GRP[6]_i_1__2 
       (.I0(\n_0_CODE_GRP[6]_i_2__2 ),
        .I1(TXD_REG1[6]),
        .I2(O1),
        .I3(I2),
        .I4(\n_0_CONFIG_DATA_reg[6] ),
        .I5(XMIT_CONFIG_INT_0),
        .O(\n_0_CODE_GRP[6]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair430" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \CODE_GRP[6]_i_2__2 
       (.I0(n_0_R_reg),
        .I1(T),
        .I2(O2),
        .I3(S),
        .O(\n_0_CODE_GRP[6]_i_2__2 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[7]_i_1__2 
       (.I0(\n_0_CONFIG_DATA_reg[7] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2__2 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[7]),
        .O(\n_0_CODE_GRP[7]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair429" *) 
   LUT4 #(
    .INIT(16'hFFEF)) 
     \CODE_GRP[7]_i_2__2 
       (.I0(O2),
        .I1(I2),
        .I2(O1),
        .I3(S),
        .O(\n_0_CODE_GRP[7]_i_2__2 ));
LUT1 #(
    .INIT(2'h1)) 
     \CODE_GRP_CNT[0]_i_1__2 
       (.I0(TX_EVEN),
        .O(plusOp__0[0]));
(* SOFT_HLUTNM = "soft_lutpair428" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \CODE_GRP_CNT[1]_i_1__2 
       (.I0(\n_0_CODE_GRP_CNT_reg[1] ),
        .I1(TX_EVEN),
        .O(plusOp__0[1]));
FDSE \CODE_GRP_CNT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp__0[0]),
        .Q(TX_EVEN),
        .S(I1));
FDSE \CODE_GRP_CNT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp__0[1]),
        .Q(\n_0_CODE_GRP_CNT_reg[1] ),
        .S(I1));
FDRE \CODE_GRP_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[0]_i_1__2 ),
        .Q(CODE_GRP[0]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[1]_i_1__2 ),
        .Q(CODE_GRP[1]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[2]_i_1__2 ),
        .Q(CODE_GRP[2]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[3]_i_1__2 ),
        .Q(CODE_GRP[3]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[4]_i_1__2 ),
        .Q(CODE_GRP[4]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[5]_i_1__2 ),
        .Q(CODE_GRP[5]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[6]_i_1__2 ),
        .Q(CODE_GRP[6]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[7]_i_1__2 ),
        .Q(CODE_GRP[7]),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hCF50C050)) 
     \CONFIG_DATA[0]_i_1__2 
       (.I0(n_0_C1_OR_C2_reg),
        .I1(TX_CONFIG[8]),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[0]),
        .O(\n_0_CONFIG_DATA[0]_i_1__2 ));
LUT5 #(
    .INIT(32'hAFC0A0C0)) 
     \CONFIG_DATA[1]_i_1__2 
       (.I0(TX_CONFIG[9]),
        .I1(n_0_C1_OR_C2_reg),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[1]),
        .O(\n_0_CONFIG_DATA[1]_i_1__2 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[2]_i_1__2 
       (.I0(TX_CONFIG[2]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[10]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[2]_i_1__2 ));
LUT4 #(
    .INIT(16'hB833)) 
     \CONFIG_DATA[3]_i_1__2 
       (.I0(TX_CONFIG[11]),
        .I1(TX_EVEN),
        .I2(TX_CONFIG[3]),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .O(\n_0_CONFIG_DATA[3]_i_1__2 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[4]_i_1__2 
       (.I0(TX_CONFIG[4]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[12]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[4]_i_1__2 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[5]_i_1__2 
       (.I0(TX_CONFIG[5]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[13]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[5]_i_1__2 ));
LUT5 #(
    .INIT(32'hAFC0A0C0)) 
     \CONFIG_DATA[6]_i_1__2 
       (.I0(TX_CONFIG[14]),
        .I1(n_0_C1_OR_C2_reg),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[6]),
        .O(\n_0_CONFIG_DATA[6]_i_1__2 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[7]_i_1__2 
       (.I0(TX_CONFIG[7]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[15]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[7]_i_1__2 ));
FDRE \CONFIG_DATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[0]_i_1__2 ),
        .Q(\n_0_CONFIG_DATA_reg[0] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[1]_i_1__2 ),
        .Q(\n_0_CONFIG_DATA_reg[1] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[2]_i_1__2 ),
        .Q(\n_0_CONFIG_DATA_reg[2] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[3]_i_1__2 ),
        .Q(\n_0_CONFIG_DATA_reg[3] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[4]_i_1__2 ),
        .Q(\n_0_CONFIG_DATA_reg[4] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[5]_i_1__2 ),
        .Q(\n_0_CONFIG_DATA_reg[5] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[6]_i_1__2 ),
        .Q(\n_0_CONFIG_DATA_reg[6] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[7]_i_1__2 ),
        .Q(\n_0_CONFIG_DATA_reg[7] ),
        .R(I1));
GND GND
       (.G(\<const0> ));
LUT6 #(
    .INIT(64'h0000AAAA0000AAAB)) 
     INSERT_IDLE_i_1__6
       (.I0(I2),
        .I1(n_0_INSERT_IDLE_i_2__2),
        .I2(O2),
        .I3(S),
        .I4(XMIT_CONFIG_INT_0),
        .I5(O1),
        .O(INSERT_IDLE2_out));
(* SOFT_HLUTNM = "soft_lutpair430" *) 
   LUT2 #(
    .INIT(4'hE)) 
     INSERT_IDLE_i_2__2
       (.I0(T),
        .I1(n_0_R_reg),
        .O(n_0_INSERT_IDLE_i_2__2));
FDRE INSERT_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(INSERT_IDLE2_out),
        .Q(n_0_INSERT_IDLE_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0D0D0D0C0C0C0C0C)) 
     R_i_1__6
       (.I0(S),
        .I1(T),
        .I2(I1),
        .I3(TX_ER_REG1),
        .I4(TX_EVEN),
        .I5(n_0_R_reg),
        .O(n_0_R_i_1__6));
FDRE R_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_R_i_1__6),
        .Q(n_0_R_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h8888A8AA88888888)) 
     S_i_1__6
       (.I0(n_0_XMIT_DATA_INT_reg),
        .I1(TRIGGER_S),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .I4(TX_EN_REG1),
        .I5(gmii_tx_en_out_ch3),
        .O(S0));
FDRE S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S0),
        .Q(S),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair431" *) 
   LUT4 #(
    .INIT(16'h0400)) 
     TRIGGER_S_i_1__2
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en_out_ch3),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .O(TRIGGER_S0));
FDRE TRIGGER_S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(TRIGGER_S0),
        .Q(TRIGGER_S),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair431" *) 
   LUT2 #(
    .INIT(4'h2)) 
     TRIGGER_T_i_1__2
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en_out_ch3),
        .O(p_20_in));
FDRE TRIGGER_T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_20_in),
        .Q(TRIGGER_T),
        .R(I1));
FDRE \TXD_REG1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I8[0]),
        .Q(TXD_REG1[0]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I8[1]),
        .Q(TXD_REG1[1]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I8[2]),
        .Q(TXD_REG1[2]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I8[3]),
        .Q(TXD_REG1[3]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I8[4]),
        .Q(TXD_REG1[4]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I8[5]),
        .Q(TXD_REG1[5]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I8[6]),
        .Q(TXD_REG1[6]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I8[7]),
        .Q(TXD_REG1[7]),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h1)) 
     \TX_CONFIG[15]_i_1__2 
       (.I0(\n_0_CODE_GRP_CNT_reg[1] ),
        .I1(TX_EVEN),
        .O(\n_0_TX_CONFIG[15]_i_1__2 ));
FDRE \TX_CONFIG_reg[0] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[0]),
        .Q(TX_CONFIG[0]),
        .R(I1));
FDRE \TX_CONFIG_reg[10] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[10]),
        .Q(TX_CONFIG[10]),
        .R(I1));
FDRE \TX_CONFIG_reg[11] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[11]),
        .Q(TX_CONFIG[11]),
        .R(I1));
FDRE \TX_CONFIG_reg[12] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[12]),
        .Q(TX_CONFIG[12]),
        .R(I1));
FDRE \TX_CONFIG_reg[13] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[13]),
        .Q(TX_CONFIG[13]),
        .R(I1));
FDRE \TX_CONFIG_reg[14] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[14]),
        .Q(TX_CONFIG[14]),
        .R(I1));
FDRE \TX_CONFIG_reg[15] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[15]),
        .Q(TX_CONFIG[15]),
        .R(I1));
FDRE \TX_CONFIG_reg[1] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[1]),
        .Q(TX_CONFIG[1]),
        .R(I1));
FDRE \TX_CONFIG_reg[2] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[2]),
        .Q(TX_CONFIG[2]),
        .R(I1));
FDRE \TX_CONFIG_reg[3] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[3]),
        .Q(TX_CONFIG[3]),
        .R(I1));
FDRE \TX_CONFIG_reg[4] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[4]),
        .Q(TX_CONFIG[4]),
        .R(I1));
FDRE \TX_CONFIG_reg[5] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[5]),
        .Q(TX_CONFIG[5]),
        .R(I1));
FDRE \TX_CONFIG_reg[6] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[6]),
        .Q(TX_CONFIG[6]),
        .R(I1));
FDRE \TX_CONFIG_reg[7] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[7]),
        .Q(TX_CONFIG[7]),
        .R(I1));
FDRE \TX_CONFIG_reg[8] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[8]),
        .Q(TX_CONFIG[8]),
        .R(I1));
FDRE \TX_CONFIG_reg[9] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__2 ),
        .D(I6[9]),
        .Q(TX_CONFIG[9]),
        .R(I1));
FDRE TX_EN_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_en_out_ch3),
        .Q(TX_EN_REG1),
        .R(\<const0> ));
FDRE TX_ER_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_er_out_ch3),
        .Q(TX_ER_REG1),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h5150)) 
     TX_PACKET_i_1__2
       (.I0(I1),
        .I1(T),
        .I2(S),
        .I3(O1),
        .O(n_0_TX_PACKET_i_1__2));
FDRE TX_PACKET_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TX_PACKET_i_1__2),
        .Q(O1),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFF00E000E000E0)) 
     T_i_1__6
       (.I0(S),
        .I1(O1),
        .I2(TX_EN_REG1),
        .I3(gmii_tx_en_out_ch3),
        .I4(TRIGGER_T),
        .I5(O2),
        .O(T0));
FDRE T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T0),
        .Q(T),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair432" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXCHARISK_i_1__2 
       (.I0(CODE_GRPISK),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXCHARISK_i_1__2 ));
FDRE \USE_QSGMII_DATA.TXCHARISK_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXCHARISK_i_1__2 ),
        .Q(TXCHARISK_INT),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair444" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[0]_i_1__2 
       (.I0(CODE_GRP[0]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[0]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair432" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[1]_i_1__2 
       (.I0(CODE_GRP[1]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[1]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair443" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[2]_i_1__2 
       (.I0(CODE_GRP[2]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[2]_i_1__2 ));
LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[3]_i_1__2 
       (.I0(CODE_GRP[3]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[3]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair433" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[4]_i_1__2 
       (.I0(CODE_GRP[4]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[4]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair433" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[5]_i_1__2 
       (.I0(CODE_GRP[5]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[5]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair444" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[6]_i_1__2 
       (.I0(CODE_GRP[6]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[6]_i_1__2 ));
(* SOFT_HLUTNM = "soft_lutpair443" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[7]_i_1__2 
       (.I0(CODE_GRP[7]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[7]_i_1__2 ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[0]_i_1__2 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .R(I1));
FDRE \USE_QSGMII_DATA.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[1]_i_1__2 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[2]_i_1__2 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .R(I1));
FDRE \USE_QSGMII_DATA.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[3]_i_1__2 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[4]_i_1__2 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[5]_i_1__2 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[6]_i_1__2 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .R(I1));
FDRE \USE_QSGMII_DATA.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[7]_i_1__2 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair441" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_i_1__2 
       (.I0(TXCHARISK_INT),
        .I1(LOOPBACK),
        .I2(RXCHARISCOMMA_USR),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair440" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISK_INT_i_1__2 
       (.I0(TXCHARISK_INT),
        .I1(LOOPBACK),
        .I2(RXCHARISK_USR),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair436" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[0]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .I1(LOOPBACK),
        .I2(Q[0]),
        .O(D[0]));
(* SOFT_HLUTNM = "soft_lutpair438" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[1]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .I1(LOOPBACK),
        .I2(Q[1]),
        .O(D[1]));
(* SOFT_HLUTNM = "soft_lutpair441" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[2]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .I1(LOOPBACK),
        .I2(Q[2]),
        .O(D[2]));
LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[3]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .I1(LOOPBACK),
        .I2(Q[3]),
        .O(D[3]));
(* SOFT_HLUTNM = "soft_lutpair439" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[4]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .I1(LOOPBACK),
        .I2(Q[4]),
        .O(D[4]));
(* SOFT_HLUTNM = "soft_lutpair440" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[5]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .I1(LOOPBACK),
        .I2(Q[5]),
        .O(D[5]));
(* SOFT_HLUTNM = "soft_lutpair442" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[6]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .I1(LOOPBACK),
        .I2(Q[6]),
        .O(D[6]));
(* SOFT_HLUTNM = "soft_lutpair442" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[7]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .I1(LOOPBACK),
        .I2(Q[7]),
        .O(D[7]));
(* SOFT_HLUTNM = "soft_lutpair434" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXCHARISK_i_1__2 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(TXCHARISK_INT),
        .O(O3));
(* SOFT_HLUTNM = "soft_lutpair436" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.TXDATA[0]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .I1(LOOPBACK),
        .I2(I1),
        .O(O11[0]));
(* SOFT_HLUTNM = "soft_lutpair438" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.TXDATA[1]_i_1__2 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .I1(LOOPBACK),
        .I2(I1),
        .O(O11[1]));
(* SOFT_HLUTNM = "soft_lutpair434" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[2]_i_1__2 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .O(O10));
(* SOFT_HLUTNM = "soft_lutpair435" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[3]_i_1__2 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair439" *) 
   LUT3 #(
    .INIT(8'h54)) 
     \USE_ROCKET_IO.TXDATA[4]_i_1__2 
       (.I0(I1),
        .I1(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .I2(LOOPBACK),
        .O(O11[2]));
(* SOFT_HLUTNM = "soft_lutpair437" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[5]_i_1__2 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair435" *) 
   LUT3 #(
    .INIT(8'h74)) 
     \USE_ROCKET_IO.TXDATA[6]_i_1__2 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .O(O6));
(* SOFT_HLUTNM = "soft_lutpair437" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[7]_i_1__2 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .O(O7));
VCC VCC
       (.P(\<const1> ));
LUT4 #(
    .INIT(16'h3222)) 
     V_i_1__2
       (.I0(n_0_V_i_2__2),
        .I1(I1),
        .I2(S),
        .I3(O2),
        .O(n_0_V_i_1__2));
LUT5 #(
    .INIT(32'h8A888888)) 
     V_i_2__2
       (.I0(n_0_XMIT_DATA_INT_reg),
        .I1(I4),
        .I2(O1),
        .I3(TX_ER_REG1),
        .I4(TX_EN_REG1),
        .O(n_0_V_i_2__2));
FDRE V_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_V_i_1__2),
        .Q(O2),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair428" *) 
   LUT5 #(
    .INIT(32'hFFF20002)) 
     XMIT_CONFIG_INT_i_1__2
       (.I0(XMIT_CONFIG_INT),
        .I1(I5),
        .I2(\n_0_CODE_GRP_CNT_reg[1] ),
        .I3(TX_EVEN),
        .I4(XMIT_CONFIG_INT_0),
        .O(n_0_XMIT_CONFIG_INT_i_1__2));
FDSE XMIT_CONFIG_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_CONFIG_INT_i_1__2),
        .Q(XMIT_CONFIG_INT_0),
        .S(I1));
LUT4 #(
    .INIT(16'hFE02)) 
     XMIT_DATA_INT_i_1__6
       (.I0(XMIT_DATA),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_EVEN),
        .I3(n_0_XMIT_DATA_INT_reg),
        .O(n_0_XMIT_DATA_INT_i_1__6));
FDRE XMIT_DATA_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_DATA_INT_i_1__6),
        .Q(n_0_XMIT_DATA_INT_reg),
        .R(I1));
endmodule

(* ORIG_REF_NAME = "TX" *) 
module quadsgmiiTX__parameterized0_24
   (O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    D,
    O7,
    O8,
    O9,
    O10,
    O11,
    gmii_tx_er_out_ch2,
    userclk2,
    gmii_tx_en_out_ch2,
    I1,
    I3,
    I2,
    LOOPBACK,
    RXCHARISK_USR,
    RXCHARISCOMMA_USR,
    Q,
    I4,
    XMIT_CONFIG_INT,
    I5,
    XMIT_DATA,
    I7,
    I6);
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output [7:0]D;
  output O7;
  output O8;
  output O9;
  output O10;
  output [2:0]O11;
  input gmii_tx_er_out_ch2;
  input userclk2;
  input gmii_tx_en_out_ch2;
  input I1;
  input I3;
  input I2;
  input LOOPBACK;
  input RXCHARISK_USR;
  input RXCHARISCOMMA_USR;
  input [7:0]Q;
  input I4;
  input XMIT_CONFIG_INT;
  input I5;
  input XMIT_DATA;
  input [7:0]I7;
  input [15:0]I6;

  wire \<const0> ;
  wire \<const1> ;
  wire [7:0]CODE_GRP;
  wire CODE_GRPISK;
  wire [7:0]D;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire [15:0]I6;
  wire [7:0]I7;
  wire INSERT_IDLE2_out;
  wire LOOPBACK;
  wire O1;
  wire O10;
  wire [2:0]O11;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [7:0]Q;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire S;
  wire S0;
  wire T;
  wire T0;
  wire TRIGGER_S;
  wire TRIGGER_S0;
  wire TRIGGER_T;
  wire TXCHARISK_INT;
  wire [7:0]TXD_REG1;
  wire [15:0]TX_CONFIG;
  wire TX_EN_REG1;
  wire TX_ER_REG1;
  wire TX_EVEN;
  wire XMIT_CONFIG_INT;
  wire XMIT_CONFIG_INT_0;
  wire XMIT_DATA;
  wire gmii_tx_en_out_ch2;
  wire gmii_tx_er_out_ch2;
  wire n_0_C1_OR_C2_i_1__1;
  wire n_0_C1_OR_C2_reg;
  wire n_0_CODE_GRPISK_i_1__1;
  wire n_0_CODE_GRPISK_i_2__1;
  wire \n_0_CODE_GRP[0]_i_1__1 ;
  wire \n_0_CODE_GRP[0]_i_2__1 ;
  wire \n_0_CODE_GRP[1]_i_1__1 ;
  wire \n_0_CODE_GRP[1]_i_2__1 ;
  wire \n_0_CODE_GRP[2]_i_1__1 ;
  wire \n_0_CODE_GRP[2]_i_2__1 ;
  wire \n_0_CODE_GRP[3]_i_1__1 ;
  wire \n_0_CODE_GRP[3]_i_2__1 ;
  wire \n_0_CODE_GRP[4]_i_1__1 ;
  wire \n_0_CODE_GRP[5]_i_1__1 ;
  wire \n_0_CODE_GRP[6]_i_1__1 ;
  wire \n_0_CODE_GRP[6]_i_2__1 ;
  wire \n_0_CODE_GRP[7]_i_1__1 ;
  wire \n_0_CODE_GRP[7]_i_2__1 ;
  wire \n_0_CODE_GRP_CNT_reg[1] ;
  wire \n_0_CONFIG_DATA[0]_i_1__1 ;
  wire \n_0_CONFIG_DATA[1]_i_1__1 ;
  wire \n_0_CONFIG_DATA[2]_i_1__1 ;
  wire \n_0_CONFIG_DATA[3]_i_1__1 ;
  wire \n_0_CONFIG_DATA[4]_i_1__1 ;
  wire \n_0_CONFIG_DATA[5]_i_1__1 ;
  wire \n_0_CONFIG_DATA[6]_i_1__1 ;
  wire \n_0_CONFIG_DATA[7]_i_1__1 ;
  wire \n_0_CONFIG_DATA_reg[0] ;
  wire \n_0_CONFIG_DATA_reg[1] ;
  wire \n_0_CONFIG_DATA_reg[2] ;
  wire \n_0_CONFIG_DATA_reg[3] ;
  wire \n_0_CONFIG_DATA_reg[4] ;
  wire \n_0_CONFIG_DATA_reg[5] ;
  wire \n_0_CONFIG_DATA_reg[6] ;
  wire \n_0_CONFIG_DATA_reg[7] ;
  wire n_0_INSERT_IDLE_i_2__1;
  wire n_0_INSERT_IDLE_reg;
  wire n_0_R_i_1__4;
  wire n_0_R_reg;
  wire \n_0_TX_CONFIG[15]_i_1__1 ;
  wire n_0_TX_PACKET_i_1__1;
  wire \n_0_USE_QSGMII_DATA.TXCHARISK_i_1__1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[0]_i_1__1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[1]_i_1__1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[2]_i_1__1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[3]_i_1__1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[4]_i_1__1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[5]_i_1__1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[6]_i_1__1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[7]_i_1__1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[0] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[1] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[2] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[3] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[4] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[5] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[6] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[7] ;
  wire n_0_V_i_1__1;
  wire n_0_V_i_2__1;
  wire n_0_XMIT_CONFIG_INT_i_1__1;
  wire n_0_XMIT_DATA_INT_i_1__4;
  wire n_0_XMIT_DATA_INT_reg;
  wire p_20_in;
  wire [1:0]plusOp__0;
  wire userclk2;

LUT5 #(
    .INIT(32'h00006A2A)) 
     C1_OR_C2_i_1__1
       (.I0(n_0_C1_OR_C2_reg),
        .I1(TX_EVEN),
        .I2(\n_0_CODE_GRP_CNT_reg[1] ),
        .I3(XMIT_CONFIG_INT_0),
        .I4(I1),
        .O(n_0_C1_OR_C2_i_1__1));
FDRE C1_OR_C2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_C1_OR_C2_i_1__1),
        .Q(n_0_C1_OR_C2_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h30303030FFFF55FF)) 
     CODE_GRPISK_i_1__1
       (.I0(O1),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_EVEN),
        .I3(n_0_CODE_GRPISK_i_2__1),
        .I4(I4),
        .I5(XMIT_CONFIG_INT_0),
        .O(n_0_CODE_GRPISK_i_1__1));
(* SOFT_HLUTNM = "soft_lutpair297" *) 
   LUT3 #(
    .INIT(8'h01)) 
     CODE_GRPISK_i_2__1
       (.I0(S),
        .I1(n_0_R_reg),
        .I2(T),
        .O(n_0_CODE_GRPISK_i_2__1));
FDRE CODE_GRPISK_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_CODE_GRPISK_i_1__1),
        .Q(CODE_GRPISK),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h8B8B888B88888888)) 
     \CODE_GRP[0]_i_1__1 
       (.I0(\n_0_CONFIG_DATA_reg[0] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(I2),
        .I3(O2),
        .I4(S),
        .I5(\n_0_CODE_GRP[0]_i_2__1 ),
        .O(\n_0_CODE_GRP[0]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair297" *) 
   LUT5 #(
    .INIT(32'hFFFEFEFE)) 
     \CODE_GRP[0]_i_2__1 
       (.I0(T),
        .I1(n_0_R_reg),
        .I2(S),
        .I3(TXD_REG1[0]),
        .I4(O1),
        .O(\n_0_CODE_GRP[0]_i_2__1 ));
LUT4 #(
    .INIT(16'hAA03)) 
     \CODE_GRP[1]_i_1__1 
       (.I0(\n_0_CONFIG_DATA_reg[1] ),
        .I1(\n_0_CODE_GRP[1]_i_2__1 ),
        .I2(I2),
        .I3(XMIT_CONFIG_INT_0),
        .O(\n_0_CODE_GRP[1]_i_1__1 ));
LUT6 #(
    .INIT(64'h1010101110111011)) 
     \CODE_GRP[1]_i_2__1 
       (.I0(O2),
        .I1(S),
        .I2(T),
        .I3(n_0_R_reg),
        .I4(TXD_REG1[1]),
        .I5(O1),
        .O(\n_0_CODE_GRP[1]_i_2__1 ));
LUT4 #(
    .INIT(16'hFE0E)) 
     \CODE_GRP[2]_i_1__1 
       (.I0(I2),
        .I1(\n_0_CODE_GRP[2]_i_2__1 ),
        .I2(XMIT_CONFIG_INT_0),
        .I3(\n_0_CONFIG_DATA_reg[2] ),
        .O(\n_0_CODE_GRP[2]_i_1__1 ));
LUT6 #(
    .INIT(64'h00000000FFFFFFEF)) 
     \CODE_GRP[2]_i_2__1 
       (.I0(TXD_REG1[2]),
        .I1(O2),
        .I2(O1),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(S),
        .O(\n_0_CODE_GRP[2]_i_2__1 ));
LUT6 #(
    .INIT(64'hBBBBBBBB8B888B8B)) 
     \CODE_GRP[3]_i_1__1 
       (.I0(\n_0_CONFIG_DATA_reg[3] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(n_0_R_reg),
        .I3(TXD_REG1[3]),
        .I4(O1),
        .I5(\n_0_CODE_GRP[3]_i_2__1 ),
        .O(\n_0_CODE_GRP[3]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair299" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \CODE_GRP[3]_i_2__1 
       (.I0(T),
        .I1(S),
        .I2(O2),
        .I3(I2),
        .O(\n_0_CODE_GRP[3]_i_2__1 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[4]_i_1__1 
       (.I0(\n_0_CONFIG_DATA_reg[4] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2__1 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[4]),
        .O(\n_0_CODE_GRP[4]_i_1__1 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[5]_i_1__1 
       (.I0(\n_0_CONFIG_DATA_reg[5] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2__1 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[5]),
        .O(\n_0_CODE_GRP[5]_i_1__1 ));
LUT6 #(
    .INIT(64'hFFFF000000EA00EA)) 
     \CODE_GRP[6]_i_1__1 
       (.I0(\n_0_CODE_GRP[6]_i_2__1 ),
        .I1(TXD_REG1[6]),
        .I2(O1),
        .I3(I2),
        .I4(\n_0_CONFIG_DATA_reg[6] ),
        .I5(XMIT_CONFIG_INT_0),
        .O(\n_0_CODE_GRP[6]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair300" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \CODE_GRP[6]_i_2__1 
       (.I0(n_0_R_reg),
        .I1(T),
        .I2(O2),
        .I3(S),
        .O(\n_0_CODE_GRP[6]_i_2__1 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[7]_i_1__1 
       (.I0(\n_0_CONFIG_DATA_reg[7] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2__1 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[7]),
        .O(\n_0_CODE_GRP[7]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair299" *) 
   LUT4 #(
    .INIT(16'hFFEF)) 
     \CODE_GRP[7]_i_2__1 
       (.I0(O2),
        .I1(I2),
        .I2(O1),
        .I3(S),
        .O(\n_0_CODE_GRP[7]_i_2__1 ));
LUT1 #(
    .INIT(2'h1)) 
     \CODE_GRP_CNT[0]_i_1__1 
       (.I0(TX_EVEN),
        .O(plusOp__0[0]));
(* SOFT_HLUTNM = "soft_lutpair298" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \CODE_GRP_CNT[1]_i_1__1 
       (.I0(\n_0_CODE_GRP_CNT_reg[1] ),
        .I1(TX_EVEN),
        .O(plusOp__0[1]));
FDSE \CODE_GRP_CNT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp__0[0]),
        .Q(TX_EVEN),
        .S(I1));
FDSE \CODE_GRP_CNT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp__0[1]),
        .Q(\n_0_CODE_GRP_CNT_reg[1] ),
        .S(I1));
FDRE \CODE_GRP_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[0]_i_1__1 ),
        .Q(CODE_GRP[0]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[1]_i_1__1 ),
        .Q(CODE_GRP[1]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[2]_i_1__1 ),
        .Q(CODE_GRP[2]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[3]_i_1__1 ),
        .Q(CODE_GRP[3]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[4]_i_1__1 ),
        .Q(CODE_GRP[4]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[5]_i_1__1 ),
        .Q(CODE_GRP[5]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[6]_i_1__1 ),
        .Q(CODE_GRP[6]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[7]_i_1__1 ),
        .Q(CODE_GRP[7]),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hCF50C050)) 
     \CONFIG_DATA[0]_i_1__1 
       (.I0(n_0_C1_OR_C2_reg),
        .I1(TX_CONFIG[8]),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[0]),
        .O(\n_0_CONFIG_DATA[0]_i_1__1 ));
LUT5 #(
    .INIT(32'hAFC0A0C0)) 
     \CONFIG_DATA[1]_i_1__1 
       (.I0(TX_CONFIG[9]),
        .I1(n_0_C1_OR_C2_reg),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[1]),
        .O(\n_0_CONFIG_DATA[1]_i_1__1 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[2]_i_1__1 
       (.I0(TX_CONFIG[2]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[10]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[2]_i_1__1 ));
LUT4 #(
    .INIT(16'hB833)) 
     \CONFIG_DATA[3]_i_1__1 
       (.I0(TX_CONFIG[11]),
        .I1(TX_EVEN),
        .I2(TX_CONFIG[3]),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .O(\n_0_CONFIG_DATA[3]_i_1__1 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[4]_i_1__1 
       (.I0(TX_CONFIG[4]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[12]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[4]_i_1__1 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[5]_i_1__1 
       (.I0(TX_CONFIG[5]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[13]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[5]_i_1__1 ));
LUT5 #(
    .INIT(32'hAFC0A0C0)) 
     \CONFIG_DATA[6]_i_1__1 
       (.I0(TX_CONFIG[14]),
        .I1(n_0_C1_OR_C2_reg),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[6]),
        .O(\n_0_CONFIG_DATA[6]_i_1__1 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[7]_i_1__1 
       (.I0(TX_CONFIG[7]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[15]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[7]_i_1__1 ));
FDRE \CONFIG_DATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[0]_i_1__1 ),
        .Q(\n_0_CONFIG_DATA_reg[0] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[1]_i_1__1 ),
        .Q(\n_0_CONFIG_DATA_reg[1] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[2]_i_1__1 ),
        .Q(\n_0_CONFIG_DATA_reg[2] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[3]_i_1__1 ),
        .Q(\n_0_CONFIG_DATA_reg[3] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[4]_i_1__1 ),
        .Q(\n_0_CONFIG_DATA_reg[4] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[5]_i_1__1 ),
        .Q(\n_0_CONFIG_DATA_reg[5] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[6]_i_1__1 ),
        .Q(\n_0_CONFIG_DATA_reg[6] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[7]_i_1__1 ),
        .Q(\n_0_CONFIG_DATA_reg[7] ),
        .R(I1));
GND GND
       (.G(\<const0> ));
LUT6 #(
    .INIT(64'h0000AAAA0000AAAB)) 
     INSERT_IDLE_i_1__4
       (.I0(I2),
        .I1(n_0_INSERT_IDLE_i_2__1),
        .I2(O2),
        .I3(S),
        .I4(XMIT_CONFIG_INT_0),
        .I5(O1),
        .O(INSERT_IDLE2_out));
(* SOFT_HLUTNM = "soft_lutpair300" *) 
   LUT2 #(
    .INIT(4'hE)) 
     INSERT_IDLE_i_2__1
       (.I0(T),
        .I1(n_0_R_reg),
        .O(n_0_INSERT_IDLE_i_2__1));
FDRE INSERT_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(INSERT_IDLE2_out),
        .Q(n_0_INSERT_IDLE_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0D0D0D0C0C0C0C0C)) 
     R_i_1__4
       (.I0(S),
        .I1(T),
        .I2(I1),
        .I3(TX_ER_REG1),
        .I4(TX_EVEN),
        .I5(n_0_R_reg),
        .O(n_0_R_i_1__4));
FDRE R_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_R_i_1__4),
        .Q(n_0_R_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h8888A8AA88888888)) 
     S_i_1__4
       (.I0(n_0_XMIT_DATA_INT_reg),
        .I1(TRIGGER_S),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .I4(TX_EN_REG1),
        .I5(gmii_tx_en_out_ch2),
        .O(S0));
FDRE S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S0),
        .Q(S),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair301" *) 
   LUT4 #(
    .INIT(16'h0400)) 
     TRIGGER_S_i_1__1
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en_out_ch2),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .O(TRIGGER_S0));
FDRE TRIGGER_S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(TRIGGER_S0),
        .Q(TRIGGER_S),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair301" *) 
   LUT2 #(
    .INIT(4'h2)) 
     TRIGGER_T_i_1__1
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en_out_ch2),
        .O(p_20_in));
FDRE TRIGGER_T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_20_in),
        .Q(TRIGGER_T),
        .R(I1));
FDRE \TXD_REG1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I7[0]),
        .Q(TXD_REG1[0]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I7[1]),
        .Q(TXD_REG1[1]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I7[2]),
        .Q(TXD_REG1[2]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I7[3]),
        .Q(TXD_REG1[3]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I7[4]),
        .Q(TXD_REG1[4]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I7[5]),
        .Q(TXD_REG1[5]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I7[6]),
        .Q(TXD_REG1[6]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I7[7]),
        .Q(TXD_REG1[7]),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h1)) 
     \TX_CONFIG[15]_i_1__1 
       (.I0(\n_0_CODE_GRP_CNT_reg[1] ),
        .I1(TX_EVEN),
        .O(\n_0_TX_CONFIG[15]_i_1__1 ));
FDRE \TX_CONFIG_reg[0] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[0]),
        .Q(TX_CONFIG[0]),
        .R(I1));
FDRE \TX_CONFIG_reg[10] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[10]),
        .Q(TX_CONFIG[10]),
        .R(I1));
FDRE \TX_CONFIG_reg[11] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[11]),
        .Q(TX_CONFIG[11]),
        .R(I1));
FDRE \TX_CONFIG_reg[12] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[12]),
        .Q(TX_CONFIG[12]),
        .R(I1));
FDRE \TX_CONFIG_reg[13] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[13]),
        .Q(TX_CONFIG[13]),
        .R(I1));
FDRE \TX_CONFIG_reg[14] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[14]),
        .Q(TX_CONFIG[14]),
        .R(I1));
FDRE \TX_CONFIG_reg[15] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[15]),
        .Q(TX_CONFIG[15]),
        .R(I1));
FDRE \TX_CONFIG_reg[1] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[1]),
        .Q(TX_CONFIG[1]),
        .R(I1));
FDRE \TX_CONFIG_reg[2] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[2]),
        .Q(TX_CONFIG[2]),
        .R(I1));
FDRE \TX_CONFIG_reg[3] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[3]),
        .Q(TX_CONFIG[3]),
        .R(I1));
FDRE \TX_CONFIG_reg[4] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[4]),
        .Q(TX_CONFIG[4]),
        .R(I1));
FDRE \TX_CONFIG_reg[5] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[5]),
        .Q(TX_CONFIG[5]),
        .R(I1));
FDRE \TX_CONFIG_reg[6] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[6]),
        .Q(TX_CONFIG[6]),
        .R(I1));
FDRE \TX_CONFIG_reg[7] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[7]),
        .Q(TX_CONFIG[7]),
        .R(I1));
FDRE \TX_CONFIG_reg[8] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[8]),
        .Q(TX_CONFIG[8]),
        .R(I1));
FDRE \TX_CONFIG_reg[9] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__1 ),
        .D(I6[9]),
        .Q(TX_CONFIG[9]),
        .R(I1));
FDRE TX_EN_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_en_out_ch2),
        .Q(TX_EN_REG1),
        .R(\<const0> ));
FDRE TX_ER_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_er_out_ch2),
        .Q(TX_ER_REG1),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h5150)) 
     TX_PACKET_i_1__1
       (.I0(I1),
        .I1(T),
        .I2(S),
        .I3(O1),
        .O(n_0_TX_PACKET_i_1__1));
FDRE TX_PACKET_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TX_PACKET_i_1__1),
        .Q(O1),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFF00E000E000E0)) 
     T_i_1__4
       (.I0(S),
        .I1(O1),
        .I2(TX_EN_REG1),
        .I3(gmii_tx_en_out_ch2),
        .I4(TRIGGER_T),
        .I5(O2),
        .O(T0));
FDRE T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T0),
        .Q(T),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair302" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXCHARISK_i_1__1 
       (.I0(CODE_GRPISK),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXCHARISK_i_1__1 ));
FDRE \USE_QSGMII_DATA.TXCHARISK_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXCHARISK_i_1__1 ),
        .Q(TXCHARISK_INT),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair314" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[0]_i_1__1 
       (.I0(CODE_GRP[0]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[0]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair302" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[1]_i_1__1 
       (.I0(CODE_GRP[1]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[1]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair313" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[2]_i_1__1 
       (.I0(CODE_GRP[2]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[2]_i_1__1 ));
LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[3]_i_1__1 
       (.I0(CODE_GRP[3]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[3]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair303" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[4]_i_1__1 
       (.I0(CODE_GRP[4]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[4]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair303" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[5]_i_1__1 
       (.I0(CODE_GRP[5]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[5]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair314" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[6]_i_1__1 
       (.I0(CODE_GRP[6]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[6]_i_1__1 ));
(* SOFT_HLUTNM = "soft_lutpair313" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[7]_i_1__1 
       (.I0(CODE_GRP[7]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[7]_i_1__1 ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[0]_i_1__1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .R(I1));
FDRE \USE_QSGMII_DATA.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[1]_i_1__1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[2]_i_1__1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .R(I1));
FDRE \USE_QSGMII_DATA.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[3]_i_1__1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[4]_i_1__1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[5]_i_1__1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[6]_i_1__1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .R(I1));
FDRE \USE_QSGMII_DATA.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[7]_i_1__1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair311" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_i_1__1 
       (.I0(TXCHARISK_INT),
        .I1(LOOPBACK),
        .I2(RXCHARISCOMMA_USR),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair310" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISK_INT_i_1__1 
       (.I0(TXCHARISK_INT),
        .I1(LOOPBACK),
        .I2(RXCHARISK_USR),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair306" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[0]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .I1(LOOPBACK),
        .I2(Q[0]),
        .O(D[0]));
(* SOFT_HLUTNM = "soft_lutpair308" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[1]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .I1(LOOPBACK),
        .I2(Q[1]),
        .O(D[1]));
(* SOFT_HLUTNM = "soft_lutpair311" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[2]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .I1(LOOPBACK),
        .I2(Q[2]),
        .O(D[2]));
LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[3]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .I1(LOOPBACK),
        .I2(Q[3]),
        .O(D[3]));
(* SOFT_HLUTNM = "soft_lutpair309" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[4]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .I1(LOOPBACK),
        .I2(Q[4]),
        .O(D[4]));
(* SOFT_HLUTNM = "soft_lutpair310" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[5]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .I1(LOOPBACK),
        .I2(Q[5]),
        .O(D[5]));
(* SOFT_HLUTNM = "soft_lutpair312" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[6]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .I1(LOOPBACK),
        .I2(Q[6]),
        .O(D[6]));
(* SOFT_HLUTNM = "soft_lutpair312" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[7]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .I1(LOOPBACK),
        .I2(Q[7]),
        .O(D[7]));
(* SOFT_HLUTNM = "soft_lutpair304" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXCHARISK_i_1__1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(TXCHARISK_INT),
        .O(O3));
(* SOFT_HLUTNM = "soft_lutpair306" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.TXDATA[0]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .I1(LOOPBACK),
        .I2(I1),
        .O(O11[0]));
(* SOFT_HLUTNM = "soft_lutpair308" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.TXDATA[1]_i_1__1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .I1(LOOPBACK),
        .I2(I1),
        .O(O11[1]));
(* SOFT_HLUTNM = "soft_lutpair304" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[2]_i_1__1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .O(O10));
(* SOFT_HLUTNM = "soft_lutpair305" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[3]_i_1__1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair309" *) 
   LUT3 #(
    .INIT(8'h54)) 
     \USE_ROCKET_IO.TXDATA[4]_i_1__1 
       (.I0(I1),
        .I1(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .I2(LOOPBACK),
        .O(O11[2]));
(* SOFT_HLUTNM = "soft_lutpair307" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[5]_i_1__1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair305" *) 
   LUT3 #(
    .INIT(8'h74)) 
     \USE_ROCKET_IO.TXDATA[6]_i_1__1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .O(O6));
(* SOFT_HLUTNM = "soft_lutpair307" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[7]_i_1__1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .O(O7));
VCC VCC
       (.P(\<const1> ));
LUT4 #(
    .INIT(16'h3222)) 
     V_i_1__1
       (.I0(n_0_V_i_2__1),
        .I1(I1),
        .I2(S),
        .I3(O2),
        .O(n_0_V_i_1__1));
LUT5 #(
    .INIT(32'h8A888888)) 
     V_i_2__1
       (.I0(n_0_XMIT_DATA_INT_reg),
        .I1(I3),
        .I2(O1),
        .I3(TX_ER_REG1),
        .I4(TX_EN_REG1),
        .O(n_0_V_i_2__1));
FDRE V_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_V_i_1__1),
        .Q(O2),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair298" *) 
   LUT5 #(
    .INIT(32'hFFF20002)) 
     XMIT_CONFIG_INT_i_1__1
       (.I0(XMIT_CONFIG_INT),
        .I1(I5),
        .I2(\n_0_CODE_GRP_CNT_reg[1] ),
        .I3(TX_EVEN),
        .I4(XMIT_CONFIG_INT_0),
        .O(n_0_XMIT_CONFIG_INT_i_1__1));
FDSE XMIT_CONFIG_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_CONFIG_INT_i_1__1),
        .Q(XMIT_CONFIG_INT_0),
        .S(I1));
LUT4 #(
    .INIT(16'hFE02)) 
     XMIT_DATA_INT_i_1__4
       (.I0(XMIT_DATA),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_EVEN),
        .I3(n_0_XMIT_DATA_INT_reg),
        .O(n_0_XMIT_DATA_INT_i_1__4));
FDRE XMIT_DATA_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_DATA_INT_i_1__4),
        .Q(n_0_XMIT_DATA_INT_reg),
        .R(I1));
endmodule

(* ORIG_REF_NAME = "TX" *) 
module quadsgmiiTX__parameterized0_33
   (O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    D,
    O7,
    O8,
    O9,
    O10,
    O11,
    gmii_tx_er_out_ch1,
    userclk2,
    gmii_tx_en_out_ch1,
    I1,
    I2,
    I3,
    LOOPBACK,
    RXCHARISK_USR,
    RXCHARISCOMMA_USR,
    Q,
    I4,
    XMIT_CONFIG_INT,
    I5,
    XMIT_DATA,
    I10,
    I6);
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output [7:0]D;
  output O7;
  output O8;
  output O9;
  output O10;
  output [2:0]O11;
  input gmii_tx_er_out_ch1;
  input userclk2;
  input gmii_tx_en_out_ch1;
  input I1;
  input I2;
  input I3;
  input LOOPBACK;
  input RXCHARISK_USR;
  input RXCHARISCOMMA_USR;
  input [7:0]Q;
  input I4;
  input XMIT_CONFIG_INT;
  input I5;
  input XMIT_DATA;
  input [7:0]I10;
  input [15:0]I6;

  wire \<const0> ;
  wire \<const1> ;
  wire [7:0]CODE_GRP;
  wire CODE_GRPISK;
  wire [7:0]D;
  wire I1;
  wire [7:0]I10;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire [15:0]I6;
  wire INSERT_IDLE2_out;
  wire LOOPBACK;
  wire O1;
  wire O10;
  wire [2:0]O11;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [7:0]Q;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire S;
  wire S0;
  wire T;
  wire T0;
  wire TRIGGER_S;
  wire TRIGGER_S0;
  wire TRIGGER_T;
  wire TXCHARISK_INT;
  wire [7:0]TXD_REG1;
  wire [15:0]TX_CONFIG;
  wire TX_EN_REG1;
  wire TX_ER_REG1;
  wire TX_EVEN;
  wire XMIT_CONFIG_INT;
  wire XMIT_CONFIG_INT_0;
  wire XMIT_DATA;
  wire gmii_tx_en_out_ch1;
  wire gmii_tx_er_out_ch1;
  wire n_0_C1_OR_C2_i_1__0;
  wire n_0_C1_OR_C2_reg;
  wire n_0_CODE_GRPISK_i_1__0;
  wire n_0_CODE_GRPISK_i_2__0;
  wire \n_0_CODE_GRP[0]_i_1__0 ;
  wire \n_0_CODE_GRP[0]_i_2__0 ;
  wire \n_0_CODE_GRP[1]_i_1__0 ;
  wire \n_0_CODE_GRP[1]_i_2__0 ;
  wire \n_0_CODE_GRP[2]_i_1__0 ;
  wire \n_0_CODE_GRP[2]_i_2__0 ;
  wire \n_0_CODE_GRP[3]_i_1__0 ;
  wire \n_0_CODE_GRP[3]_i_2__0 ;
  wire \n_0_CODE_GRP[4]_i_1__0 ;
  wire \n_0_CODE_GRP[5]_i_1__0 ;
  wire \n_0_CODE_GRP[6]_i_1__0 ;
  wire \n_0_CODE_GRP[6]_i_2__0 ;
  wire \n_0_CODE_GRP[7]_i_1__0 ;
  wire \n_0_CODE_GRP[7]_i_2__0 ;
  wire \n_0_CODE_GRP_CNT_reg[1] ;
  wire \n_0_CONFIG_DATA[0]_i_1__0 ;
  wire \n_0_CONFIG_DATA[1]_i_1__0 ;
  wire \n_0_CONFIG_DATA[2]_i_1__0 ;
  wire \n_0_CONFIG_DATA[3]_i_1__0 ;
  wire \n_0_CONFIG_DATA[4]_i_1__0 ;
  wire \n_0_CONFIG_DATA[5]_i_1__0 ;
  wire \n_0_CONFIG_DATA[6]_i_1__0 ;
  wire \n_0_CONFIG_DATA[7]_i_1__0 ;
  wire \n_0_CONFIG_DATA_reg[0] ;
  wire \n_0_CONFIG_DATA_reg[1] ;
  wire \n_0_CONFIG_DATA_reg[2] ;
  wire \n_0_CONFIG_DATA_reg[3] ;
  wire \n_0_CONFIG_DATA_reg[4] ;
  wire \n_0_CONFIG_DATA_reg[5] ;
  wire \n_0_CONFIG_DATA_reg[6] ;
  wire \n_0_CONFIG_DATA_reg[7] ;
  wire n_0_INSERT_IDLE_i_2__0;
  wire n_0_INSERT_IDLE_reg;
  wire n_0_R_i_1__2;
  wire n_0_R_reg;
  wire \n_0_TX_CONFIG[15]_i_1__0 ;
  wire n_0_TX_PACKET_i_1__0;
  wire \n_0_USE_QSGMII_DATA.TXCHARISK_i_1__0 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[0]_i_1__0 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[1]_i_1__0 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[2]_i_1__0 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[3]_i_1__0 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[4]_i_1__0 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[5]_i_1__0 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[6]_i_1__0 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[7]_i_1__0 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[0] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[1] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[2] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[3] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[4] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[5] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[6] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[7] ;
  wire n_0_V_i_1__0;
  wire n_0_V_i_2__0;
  wire n_0_XMIT_CONFIG_INT_i_1__0;
  wire n_0_XMIT_DATA_INT_i_1__2;
  wire n_0_XMIT_DATA_INT_reg;
  wire p_20_in;
  wire [1:0]plusOp__0;
  wire userclk2;

LUT5 #(
    .INIT(32'h00006A2A)) 
     C1_OR_C2_i_1__0
       (.I0(n_0_C1_OR_C2_reg),
        .I1(TX_EVEN),
        .I2(\n_0_CODE_GRP_CNT_reg[1] ),
        .I3(XMIT_CONFIG_INT_0),
        .I4(I1),
        .O(n_0_C1_OR_C2_i_1__0));
FDRE C1_OR_C2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_C1_OR_C2_i_1__0),
        .Q(n_0_C1_OR_C2_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h30303030FFFF55FF)) 
     CODE_GRPISK_i_1__0
       (.I0(O1),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_EVEN),
        .I3(n_0_CODE_GRPISK_i_2__0),
        .I4(I4),
        .I5(XMIT_CONFIG_INT_0),
        .O(n_0_CODE_GRPISK_i_1__0));
(* SOFT_HLUTNM = "soft_lutpair167" *) 
   LUT3 #(
    .INIT(8'h01)) 
     CODE_GRPISK_i_2__0
       (.I0(S),
        .I1(n_0_R_reg),
        .I2(T),
        .O(n_0_CODE_GRPISK_i_2__0));
FDRE CODE_GRPISK_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_CODE_GRPISK_i_1__0),
        .Q(CODE_GRPISK),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h8B8B888B88888888)) 
     \CODE_GRP[0]_i_1__0 
       (.I0(\n_0_CONFIG_DATA_reg[0] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(I3),
        .I3(O2),
        .I4(S),
        .I5(\n_0_CODE_GRP[0]_i_2__0 ),
        .O(\n_0_CODE_GRP[0]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair167" *) 
   LUT5 #(
    .INIT(32'hFFFEFEFE)) 
     \CODE_GRP[0]_i_2__0 
       (.I0(T),
        .I1(n_0_R_reg),
        .I2(S),
        .I3(TXD_REG1[0]),
        .I4(O1),
        .O(\n_0_CODE_GRP[0]_i_2__0 ));
LUT4 #(
    .INIT(16'hAA03)) 
     \CODE_GRP[1]_i_1__0 
       (.I0(\n_0_CONFIG_DATA_reg[1] ),
        .I1(\n_0_CODE_GRP[1]_i_2__0 ),
        .I2(I3),
        .I3(XMIT_CONFIG_INT_0),
        .O(\n_0_CODE_GRP[1]_i_1__0 ));
LUT6 #(
    .INIT(64'h1010101110111011)) 
     \CODE_GRP[1]_i_2__0 
       (.I0(O2),
        .I1(S),
        .I2(T),
        .I3(n_0_R_reg),
        .I4(TXD_REG1[1]),
        .I5(O1),
        .O(\n_0_CODE_GRP[1]_i_2__0 ));
LUT4 #(
    .INIT(16'hFE0E)) 
     \CODE_GRP[2]_i_1__0 
       (.I0(I3),
        .I1(\n_0_CODE_GRP[2]_i_2__0 ),
        .I2(XMIT_CONFIG_INT_0),
        .I3(\n_0_CONFIG_DATA_reg[2] ),
        .O(\n_0_CODE_GRP[2]_i_1__0 ));
LUT6 #(
    .INIT(64'h00000000FFFFFFEF)) 
     \CODE_GRP[2]_i_2__0 
       (.I0(TXD_REG1[2]),
        .I1(O2),
        .I2(O1),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(S),
        .O(\n_0_CODE_GRP[2]_i_2__0 ));
LUT6 #(
    .INIT(64'hBBBBBBBB8B888B8B)) 
     \CODE_GRP[3]_i_1__0 
       (.I0(\n_0_CONFIG_DATA_reg[3] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(n_0_R_reg),
        .I3(TXD_REG1[3]),
        .I4(O1),
        .I5(\n_0_CODE_GRP[3]_i_2__0 ),
        .O(\n_0_CODE_GRP[3]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair169" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \CODE_GRP[3]_i_2__0 
       (.I0(T),
        .I1(S),
        .I2(O2),
        .I3(I3),
        .O(\n_0_CODE_GRP[3]_i_2__0 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[4]_i_1__0 
       (.I0(\n_0_CONFIG_DATA_reg[4] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2__0 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[4]),
        .O(\n_0_CODE_GRP[4]_i_1__0 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[5]_i_1__0 
       (.I0(\n_0_CONFIG_DATA_reg[5] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2__0 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[5]),
        .O(\n_0_CODE_GRP[5]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFF000000EA00EA)) 
     \CODE_GRP[6]_i_1__0 
       (.I0(\n_0_CODE_GRP[6]_i_2__0 ),
        .I1(TXD_REG1[6]),
        .I2(O1),
        .I3(I3),
        .I4(\n_0_CONFIG_DATA_reg[6] ),
        .I5(XMIT_CONFIG_INT_0),
        .O(\n_0_CODE_GRP[6]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair170" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \CODE_GRP[6]_i_2__0 
       (.I0(n_0_R_reg),
        .I1(T),
        .I2(O2),
        .I3(S),
        .O(\n_0_CODE_GRP[6]_i_2__0 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[7]_i_1__0 
       (.I0(\n_0_CONFIG_DATA_reg[7] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2__0 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[7]),
        .O(\n_0_CODE_GRP[7]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair169" *) 
   LUT4 #(
    .INIT(16'hFFEF)) 
     \CODE_GRP[7]_i_2__0 
       (.I0(O2),
        .I1(I3),
        .I2(O1),
        .I3(S),
        .O(\n_0_CODE_GRP[7]_i_2__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \CODE_GRP_CNT[0]_i_1__0 
       (.I0(TX_EVEN),
        .O(plusOp__0[0]));
(* SOFT_HLUTNM = "soft_lutpair168" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \CODE_GRP_CNT[1]_i_1__0 
       (.I0(\n_0_CODE_GRP_CNT_reg[1] ),
        .I1(TX_EVEN),
        .O(plusOp__0[1]));
FDSE \CODE_GRP_CNT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp__0[0]),
        .Q(TX_EVEN),
        .S(I1));
FDSE \CODE_GRP_CNT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp__0[1]),
        .Q(\n_0_CODE_GRP_CNT_reg[1] ),
        .S(I1));
FDRE \CODE_GRP_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[0]_i_1__0 ),
        .Q(CODE_GRP[0]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[1]_i_1__0 ),
        .Q(CODE_GRP[1]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[2]_i_1__0 ),
        .Q(CODE_GRP[2]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[3]_i_1__0 ),
        .Q(CODE_GRP[3]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[4]_i_1__0 ),
        .Q(CODE_GRP[4]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[5]_i_1__0 ),
        .Q(CODE_GRP[5]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[6]_i_1__0 ),
        .Q(CODE_GRP[6]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[7]_i_1__0 ),
        .Q(CODE_GRP[7]),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hCF50C050)) 
     \CONFIG_DATA[0]_i_1__0 
       (.I0(n_0_C1_OR_C2_reg),
        .I1(TX_CONFIG[8]),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[0]),
        .O(\n_0_CONFIG_DATA[0]_i_1__0 ));
LUT5 #(
    .INIT(32'hAFC0A0C0)) 
     \CONFIG_DATA[1]_i_1__0 
       (.I0(TX_CONFIG[9]),
        .I1(n_0_C1_OR_C2_reg),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[1]),
        .O(\n_0_CONFIG_DATA[1]_i_1__0 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[2]_i_1__0 
       (.I0(TX_CONFIG[2]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[10]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[2]_i_1__0 ));
LUT4 #(
    .INIT(16'hB833)) 
     \CONFIG_DATA[3]_i_1__0 
       (.I0(TX_CONFIG[11]),
        .I1(TX_EVEN),
        .I2(TX_CONFIG[3]),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .O(\n_0_CONFIG_DATA[3]_i_1__0 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[4]_i_1__0 
       (.I0(TX_CONFIG[4]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[12]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[4]_i_1__0 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[5]_i_1__0 
       (.I0(TX_CONFIG[5]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[13]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[5]_i_1__0 ));
LUT5 #(
    .INIT(32'hAFC0A0C0)) 
     \CONFIG_DATA[6]_i_1__0 
       (.I0(TX_CONFIG[14]),
        .I1(n_0_C1_OR_C2_reg),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[6]),
        .O(\n_0_CONFIG_DATA[6]_i_1__0 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[7]_i_1__0 
       (.I0(TX_CONFIG[7]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[15]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[7]_i_1__0 ));
FDRE \CONFIG_DATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[0]_i_1__0 ),
        .Q(\n_0_CONFIG_DATA_reg[0] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[1]_i_1__0 ),
        .Q(\n_0_CONFIG_DATA_reg[1] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[2]_i_1__0 ),
        .Q(\n_0_CONFIG_DATA_reg[2] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[3]_i_1__0 ),
        .Q(\n_0_CONFIG_DATA_reg[3] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[4]_i_1__0 ),
        .Q(\n_0_CONFIG_DATA_reg[4] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[5]_i_1__0 ),
        .Q(\n_0_CONFIG_DATA_reg[5] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[6]_i_1__0 ),
        .Q(\n_0_CONFIG_DATA_reg[6] ),
        .R(I1));
FDRE \CONFIG_DATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[7]_i_1__0 ),
        .Q(\n_0_CONFIG_DATA_reg[7] ),
        .R(I1));
GND GND
       (.G(\<const0> ));
LUT6 #(
    .INIT(64'h0000AAAA0000AAAB)) 
     INSERT_IDLE_i_1__2
       (.I0(I3),
        .I1(n_0_INSERT_IDLE_i_2__0),
        .I2(O2),
        .I3(S),
        .I4(XMIT_CONFIG_INT_0),
        .I5(O1),
        .O(INSERT_IDLE2_out));
(* SOFT_HLUTNM = "soft_lutpair170" *) 
   LUT2 #(
    .INIT(4'hE)) 
     INSERT_IDLE_i_2__0
       (.I0(T),
        .I1(n_0_R_reg),
        .O(n_0_INSERT_IDLE_i_2__0));
FDRE INSERT_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(INSERT_IDLE2_out),
        .Q(n_0_INSERT_IDLE_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0D0D0D0C0C0C0C0C)) 
     R_i_1__2
       (.I0(S),
        .I1(T),
        .I2(I1),
        .I3(TX_ER_REG1),
        .I4(TX_EVEN),
        .I5(n_0_R_reg),
        .O(n_0_R_i_1__2));
FDRE R_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_R_i_1__2),
        .Q(n_0_R_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h8888A8AA88888888)) 
     S_i_1__2
       (.I0(n_0_XMIT_DATA_INT_reg),
        .I1(TRIGGER_S),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .I4(TX_EN_REG1),
        .I5(gmii_tx_en_out_ch1),
        .O(S0));
FDRE S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S0),
        .Q(S),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair171" *) 
   LUT4 #(
    .INIT(16'h0400)) 
     TRIGGER_S_i_1__0
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en_out_ch1),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .O(TRIGGER_S0));
FDRE TRIGGER_S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(TRIGGER_S0),
        .Q(TRIGGER_S),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair171" *) 
   LUT2 #(
    .INIT(4'h2)) 
     TRIGGER_T_i_1__0
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en_out_ch1),
        .O(p_20_in));
FDRE TRIGGER_T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_20_in),
        .Q(TRIGGER_T),
        .R(I1));
FDRE \TXD_REG1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I10[0]),
        .Q(TXD_REG1[0]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I10[1]),
        .Q(TXD_REG1[1]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I10[2]),
        .Q(TXD_REG1[2]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I10[3]),
        .Q(TXD_REG1[3]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I10[4]),
        .Q(TXD_REG1[4]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I10[5]),
        .Q(TXD_REG1[5]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I10[6]),
        .Q(TXD_REG1[6]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I10[7]),
        .Q(TXD_REG1[7]),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h1)) 
     \TX_CONFIG[15]_i_1__0 
       (.I0(\n_0_CODE_GRP_CNT_reg[1] ),
        .I1(TX_EVEN),
        .O(\n_0_TX_CONFIG[15]_i_1__0 ));
FDRE \TX_CONFIG_reg[0] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[0]),
        .Q(TX_CONFIG[0]),
        .R(I1));
FDRE \TX_CONFIG_reg[10] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[10]),
        .Q(TX_CONFIG[10]),
        .R(I1));
FDRE \TX_CONFIG_reg[11] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[11]),
        .Q(TX_CONFIG[11]),
        .R(I1));
FDRE \TX_CONFIG_reg[12] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[12]),
        .Q(TX_CONFIG[12]),
        .R(I1));
FDRE \TX_CONFIG_reg[13] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[13]),
        .Q(TX_CONFIG[13]),
        .R(I1));
FDRE \TX_CONFIG_reg[14] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[14]),
        .Q(TX_CONFIG[14]),
        .R(I1));
FDRE \TX_CONFIG_reg[15] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[15]),
        .Q(TX_CONFIG[15]),
        .R(I1));
FDRE \TX_CONFIG_reg[1] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[1]),
        .Q(TX_CONFIG[1]),
        .R(I1));
FDRE \TX_CONFIG_reg[2] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[2]),
        .Q(TX_CONFIG[2]),
        .R(I1));
FDRE \TX_CONFIG_reg[3] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[3]),
        .Q(TX_CONFIG[3]),
        .R(I1));
FDRE \TX_CONFIG_reg[4] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[4]),
        .Q(TX_CONFIG[4]),
        .R(I1));
FDRE \TX_CONFIG_reg[5] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[5]),
        .Q(TX_CONFIG[5]),
        .R(I1));
FDRE \TX_CONFIG_reg[6] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[6]),
        .Q(TX_CONFIG[6]),
        .R(I1));
FDRE \TX_CONFIG_reg[7] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[7]),
        .Q(TX_CONFIG[7]),
        .R(I1));
FDRE \TX_CONFIG_reg[8] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[8]),
        .Q(TX_CONFIG[8]),
        .R(I1));
FDRE \TX_CONFIG_reg[9] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1__0 ),
        .D(I6[9]),
        .Q(TX_CONFIG[9]),
        .R(I1));
FDRE TX_EN_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_en_out_ch1),
        .Q(TX_EN_REG1),
        .R(\<const0> ));
FDRE TX_ER_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_er_out_ch1),
        .Q(TX_ER_REG1),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h5150)) 
     TX_PACKET_i_1__0
       (.I0(I1),
        .I1(T),
        .I2(S),
        .I3(O1),
        .O(n_0_TX_PACKET_i_1__0));
FDRE TX_PACKET_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TX_PACKET_i_1__0),
        .Q(O1),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFF00E000E000E0)) 
     T_i_1__2
       (.I0(S),
        .I1(O1),
        .I2(TX_EN_REG1),
        .I3(gmii_tx_en_out_ch1),
        .I4(TRIGGER_T),
        .I5(O2),
        .O(T0));
FDRE T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T0),
        .Q(T),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair172" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXCHARISK_i_1__0 
       (.I0(CODE_GRPISK),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXCHARISK_i_1__0 ));
FDRE \USE_QSGMII_DATA.TXCHARISK_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXCHARISK_i_1__0 ),
        .Q(TXCHARISK_INT),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair184" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[0]_i_1__0 
       (.I0(CODE_GRP[0]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[0]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair172" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[1]_i_1__0 
       (.I0(CODE_GRP[1]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[1]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair183" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[2]_i_1__0 
       (.I0(CODE_GRP[2]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[2]_i_1__0 ));
LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[3]_i_1__0 
       (.I0(CODE_GRP[3]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[3]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair173" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[4]_i_1__0 
       (.I0(CODE_GRP[4]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[4]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair173" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[5]_i_1__0 
       (.I0(CODE_GRP[5]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(I1),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[5]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair184" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[6]_i_1__0 
       (.I0(CODE_GRP[6]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[6]_i_1__0 ));
(* SOFT_HLUTNM = "soft_lutpair183" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[7]_i_1__0 
       (.I0(CODE_GRP[7]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[7]_i_1__0 ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[0]_i_1__0 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .R(I1));
FDRE \USE_QSGMII_DATA.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[1]_i_1__0 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[2]_i_1__0 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .R(I1));
FDRE \USE_QSGMII_DATA.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[3]_i_1__0 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[4]_i_1__0 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[5]_i_1__0 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[6]_i_1__0 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .R(I1));
FDRE \USE_QSGMII_DATA.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[7]_i_1__0 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .R(I1));
(* SOFT_HLUTNM = "soft_lutpair181" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_i_1__0 
       (.I0(TXCHARISK_INT),
        .I1(LOOPBACK),
        .I2(RXCHARISCOMMA_USR),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair180" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISK_INT_i_1__0 
       (.I0(TXCHARISK_INT),
        .I1(LOOPBACK),
        .I2(RXCHARISK_USR),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair176" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[0]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .I1(LOOPBACK),
        .I2(Q[0]),
        .O(D[0]));
(* SOFT_HLUTNM = "soft_lutpair178" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[1]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .I1(LOOPBACK),
        .I2(Q[1]),
        .O(D[1]));
(* SOFT_HLUTNM = "soft_lutpair181" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[2]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .I1(LOOPBACK),
        .I2(Q[2]),
        .O(D[2]));
LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[3]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .I1(LOOPBACK),
        .I2(Q[3]),
        .O(D[3]));
(* SOFT_HLUTNM = "soft_lutpair179" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[4]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .I1(LOOPBACK),
        .I2(Q[4]),
        .O(D[4]));
(* SOFT_HLUTNM = "soft_lutpair180" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[5]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .I1(LOOPBACK),
        .I2(Q[5]),
        .O(D[5]));
(* SOFT_HLUTNM = "soft_lutpair182" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[6]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .I1(LOOPBACK),
        .I2(Q[6]),
        .O(D[6]));
(* SOFT_HLUTNM = "soft_lutpair182" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[7]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .I1(LOOPBACK),
        .I2(Q[7]),
        .O(D[7]));
(* SOFT_HLUTNM = "soft_lutpair174" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXCHARISK_i_1__0 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(TXCHARISK_INT),
        .O(O3));
(* SOFT_HLUTNM = "soft_lutpair176" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.TXDATA[0]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .I1(LOOPBACK),
        .I2(I1),
        .O(O11[0]));
(* SOFT_HLUTNM = "soft_lutpair178" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.TXDATA[1]_i_1__0 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .I1(LOOPBACK),
        .I2(I1),
        .O(O11[1]));
(* SOFT_HLUTNM = "soft_lutpair174" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[2]_i_1__0 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .O(O10));
(* SOFT_HLUTNM = "soft_lutpair175" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[3]_i_1__0 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair179" *) 
   LUT3 #(
    .INIT(8'h54)) 
     \USE_ROCKET_IO.TXDATA[4]_i_1__0 
       (.I0(I1),
        .I1(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .I2(LOOPBACK),
        .O(O11[2]));
(* SOFT_HLUTNM = "soft_lutpair177" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[5]_i_1__0 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair175" *) 
   LUT3 #(
    .INIT(8'h74)) 
     \USE_ROCKET_IO.TXDATA[6]_i_1__0 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .O(O6));
(* SOFT_HLUTNM = "soft_lutpair177" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[7]_i_1__0 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .O(O7));
VCC VCC
       (.P(\<const1> ));
LUT4 #(
    .INIT(16'h3222)) 
     V_i_1__0
       (.I0(n_0_V_i_2__0),
        .I1(I1),
        .I2(S),
        .I3(O2),
        .O(n_0_V_i_1__0));
LUT5 #(
    .INIT(32'h8A888888)) 
     V_i_2__0
       (.I0(n_0_XMIT_DATA_INT_reg),
        .I1(I2),
        .I2(O1),
        .I3(TX_ER_REG1),
        .I4(TX_EN_REG1),
        .O(n_0_V_i_2__0));
FDRE V_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_V_i_1__0),
        .Q(O2),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair168" *) 
   LUT5 #(
    .INIT(32'hFFF20002)) 
     XMIT_CONFIG_INT_i_1__0
       (.I0(XMIT_CONFIG_INT),
        .I1(I5),
        .I2(\n_0_CODE_GRP_CNT_reg[1] ),
        .I3(TX_EVEN),
        .I4(XMIT_CONFIG_INT_0),
        .O(n_0_XMIT_CONFIG_INT_i_1__0));
FDSE XMIT_CONFIG_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_CONFIG_INT_i_1__0),
        .Q(XMIT_CONFIG_INT_0),
        .S(I1));
LUT4 #(
    .INIT(16'hFE02)) 
     XMIT_DATA_INT_i_1__2
       (.I0(XMIT_DATA),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_EVEN),
        .I3(n_0_XMIT_DATA_INT_reg),
        .O(n_0_XMIT_DATA_INT_i_1__2));
FDRE XMIT_DATA_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_DATA_INT_i_1__2),
        .Q(n_0_XMIT_DATA_INT_reg),
        .R(I1));
endmodule

(* ORIG_REF_NAME = "TX" *) 
module quadsgmiiTX__parameterized0_42
   (O1,
    O2,
    O3,
    O4,
    O5,
    O6,
    D,
    O7,
    O8,
    O9,
    O10,
    O11,
    gmii_tx_er_out_ch0,
    userclk2,
    gmii_tx_en_out_ch0,
    SR,
    I1,
    I2,
    LOOPBACK,
    RXCHARISK_USR,
    RXCHARISCOMMA_USR,
    Q,
    I3,
    XMIT_CONFIG_INT,
    I4,
    XMIT_DATA,
    I5,
    I6);
  output O1;
  output O2;
  output O3;
  output O4;
  output O5;
  output O6;
  output [7:0]D;
  output O7;
  output O8;
  output O9;
  output O10;
  output [2:0]O11;
  input gmii_tx_er_out_ch0;
  input userclk2;
  input gmii_tx_en_out_ch0;
  input [0:0]SR;
  input I1;
  input I2;
  input LOOPBACK;
  input RXCHARISK_USR;
  input RXCHARISCOMMA_USR;
  input [7:0]Q;
  input I3;
  input XMIT_CONFIG_INT;
  input I4;
  input XMIT_DATA;
  input [7:0]I5;
  input [15:0]I6;

  wire \<const0> ;
  wire \<const1> ;
  wire [7:0]CODE_GRP;
  wire CODE_GRPISK;
  wire [7:0]D;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire [7:0]I5;
  wire [15:0]I6;
  wire INSERT_IDLE2_out;
  wire LOOPBACK;
  wire O1;
  wire O10;
  wire [2:0]O11;
  wire O2;
  wire O3;
  wire O4;
  wire O5;
  wire O6;
  wire O7;
  wire O8;
  wire O9;
  wire [7:0]Q;
  wire RXCHARISCOMMA_USR;
  wire RXCHARISK_USR;
  wire S;
  wire S0;
  wire [0:0]SR;
  wire T;
  wire T0;
  wire TRIGGER_S;
  wire TRIGGER_S0;
  wire TRIGGER_T;
  wire TXCHARISK_INT;
  wire [7:0]TXD_REG1;
  wire [15:0]TX_CONFIG;
  wire TX_EN_REG1;
  wire TX_ER_REG1;
  wire TX_EVEN;
  wire XMIT_CONFIG_INT;
  wire XMIT_CONFIG_INT_0;
  wire XMIT_DATA;
  wire gmii_tx_en_out_ch0;
  wire gmii_tx_er_out_ch0;
  wire n_0_C1_OR_C2_i_1;
  wire n_0_C1_OR_C2_reg;
  wire n_0_CODE_GRPISK_i_1;
  wire n_0_CODE_GRPISK_i_2;
  wire \n_0_CODE_GRP[0]_i_1 ;
  wire \n_0_CODE_GRP[0]_i_2 ;
  wire \n_0_CODE_GRP[1]_i_1 ;
  wire \n_0_CODE_GRP[1]_i_2 ;
  wire \n_0_CODE_GRP[2]_i_1 ;
  wire \n_0_CODE_GRP[2]_i_2 ;
  wire \n_0_CODE_GRP[3]_i_1 ;
  wire \n_0_CODE_GRP[3]_i_2 ;
  wire \n_0_CODE_GRP[4]_i_1 ;
  wire \n_0_CODE_GRP[5]_i_1 ;
  wire \n_0_CODE_GRP[6]_i_1 ;
  wire \n_0_CODE_GRP[6]_i_2 ;
  wire \n_0_CODE_GRP[7]_i_1 ;
  wire \n_0_CODE_GRP[7]_i_2 ;
  wire \n_0_CODE_GRP_CNT_reg[1] ;
  wire \n_0_CONFIG_DATA[0]_i_1 ;
  wire \n_0_CONFIG_DATA[1]_i_1 ;
  wire \n_0_CONFIG_DATA[2]_i_1 ;
  wire \n_0_CONFIG_DATA[3]_i_1 ;
  wire \n_0_CONFIG_DATA[4]_i_1 ;
  wire \n_0_CONFIG_DATA[5]_i_1 ;
  wire \n_0_CONFIG_DATA[6]_i_1 ;
  wire \n_0_CONFIG_DATA[7]_i_1 ;
  wire \n_0_CONFIG_DATA_reg[0] ;
  wire \n_0_CONFIG_DATA_reg[1] ;
  wire \n_0_CONFIG_DATA_reg[2] ;
  wire \n_0_CONFIG_DATA_reg[3] ;
  wire \n_0_CONFIG_DATA_reg[4] ;
  wire \n_0_CONFIG_DATA_reg[5] ;
  wire \n_0_CONFIG_DATA_reg[6] ;
  wire \n_0_CONFIG_DATA_reg[7] ;
  wire n_0_INSERT_IDLE_i_2;
  wire n_0_INSERT_IDLE_reg;
  wire n_0_R_i_1__0;
  wire n_0_R_reg;
  wire \n_0_TX_CONFIG[15]_i_1 ;
  wire n_0_TX_PACKET_i_1;
  wire \n_0_USE_QSGMII_DATA.TXCHARISK_i_1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[0]_i_1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[1]_i_1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[2]_i_1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[3]_i_1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[4]_i_1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[5]_i_1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[6]_i_1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA[7]_i_1 ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[0] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[1] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[2] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[3] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[4] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[5] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[6] ;
  wire \n_0_USE_QSGMII_DATA.TXDATA_reg[7] ;
  wire n_0_V_i_1;
  wire n_0_V_i_2;
  wire n_0_XMIT_CONFIG_INT_i_1;
  wire n_0_XMIT_DATA_INT_i_1__0;
  wire n_0_XMIT_DATA_INT_reg;
  wire p_20_in;
  wire [1:0]plusOp__0;
  wire userclk2;

LUT5 #(
    .INIT(32'h00006A2A)) 
     C1_OR_C2_i_1
       (.I0(n_0_C1_OR_C2_reg),
        .I1(TX_EVEN),
        .I2(\n_0_CODE_GRP_CNT_reg[1] ),
        .I3(XMIT_CONFIG_INT_0),
        .I4(SR),
        .O(n_0_C1_OR_C2_i_1));
FDRE C1_OR_C2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_C1_OR_C2_i_1),
        .Q(n_0_C1_OR_C2_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h30303030FFFF55FF)) 
     CODE_GRPISK_i_1
       (.I0(O1),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_EVEN),
        .I3(n_0_CODE_GRPISK_i_2),
        .I4(I3),
        .I5(XMIT_CONFIG_INT_0),
        .O(n_0_CODE_GRPISK_i_1));
(* SOFT_HLUTNM = "soft_lutpair36" *) 
   LUT3 #(
    .INIT(8'h01)) 
     CODE_GRPISK_i_2
       (.I0(S),
        .I1(n_0_R_reg),
        .I2(T),
        .O(n_0_CODE_GRPISK_i_2));
FDRE CODE_GRPISK_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_CODE_GRPISK_i_1),
        .Q(CODE_GRPISK),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h8B8B888B88888888)) 
     \CODE_GRP[0]_i_1 
       (.I0(\n_0_CONFIG_DATA_reg[0] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(I2),
        .I3(O2),
        .I4(S),
        .I5(\n_0_CODE_GRP[0]_i_2 ),
        .O(\n_0_CODE_GRP[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair36" *) 
   LUT5 #(
    .INIT(32'hFFFEFEFE)) 
     \CODE_GRP[0]_i_2 
       (.I0(T),
        .I1(n_0_R_reg),
        .I2(S),
        .I3(TXD_REG1[0]),
        .I4(O1),
        .O(\n_0_CODE_GRP[0]_i_2 ));
LUT4 #(
    .INIT(16'hAA03)) 
     \CODE_GRP[1]_i_1 
       (.I0(\n_0_CONFIG_DATA_reg[1] ),
        .I1(\n_0_CODE_GRP[1]_i_2 ),
        .I2(I2),
        .I3(XMIT_CONFIG_INT_0),
        .O(\n_0_CODE_GRP[1]_i_1 ));
LUT6 #(
    .INIT(64'h1010101110111011)) 
     \CODE_GRP[1]_i_2 
       (.I0(O2),
        .I1(S),
        .I2(T),
        .I3(n_0_R_reg),
        .I4(TXD_REG1[1]),
        .I5(O1),
        .O(\n_0_CODE_GRP[1]_i_2 ));
LUT4 #(
    .INIT(16'hFE0E)) 
     \CODE_GRP[2]_i_1 
       (.I0(I2),
        .I1(\n_0_CODE_GRP[2]_i_2 ),
        .I2(XMIT_CONFIG_INT_0),
        .I3(\n_0_CONFIG_DATA_reg[2] ),
        .O(\n_0_CODE_GRP[2]_i_1 ));
LUT6 #(
    .INIT(64'h00000000FFFFFFEF)) 
     \CODE_GRP[2]_i_2 
       (.I0(TXD_REG1[2]),
        .I1(O2),
        .I2(O1),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(S),
        .O(\n_0_CODE_GRP[2]_i_2 ));
LUT6 #(
    .INIT(64'hBBBBBBBB8B888B8B)) 
     \CODE_GRP[3]_i_1 
       (.I0(\n_0_CONFIG_DATA_reg[3] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(n_0_R_reg),
        .I3(TXD_REG1[3]),
        .I4(O1),
        .I5(\n_0_CODE_GRP[3]_i_2 ),
        .O(\n_0_CODE_GRP[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair38" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \CODE_GRP[3]_i_2 
       (.I0(T),
        .I1(S),
        .I2(O2),
        .I3(I2),
        .O(\n_0_CODE_GRP[3]_i_2 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[4]_i_1 
       (.I0(\n_0_CONFIG_DATA_reg[4] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[4]),
        .O(\n_0_CODE_GRP[4]_i_1 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[5]_i_1 
       (.I0(\n_0_CONFIG_DATA_reg[5] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[5]),
        .O(\n_0_CODE_GRP[5]_i_1 ));
LUT6 #(
    .INIT(64'hFFFF000000EA00EA)) 
     \CODE_GRP[6]_i_1 
       (.I0(\n_0_CODE_GRP[6]_i_2 ),
        .I1(TXD_REG1[6]),
        .I2(O1),
        .I3(I2),
        .I4(\n_0_CONFIG_DATA_reg[6] ),
        .I5(XMIT_CONFIG_INT_0),
        .O(\n_0_CODE_GRP[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair39" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \CODE_GRP[6]_i_2 
       (.I0(n_0_R_reg),
        .I1(T),
        .I2(O2),
        .I3(S),
        .O(\n_0_CODE_GRP[6]_i_2 ));
LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBB8)) 
     \CODE_GRP[7]_i_1 
       (.I0(\n_0_CONFIG_DATA_reg[7] ),
        .I1(XMIT_CONFIG_INT_0),
        .I2(\n_0_CODE_GRP[7]_i_2 ),
        .I3(T),
        .I4(n_0_R_reg),
        .I5(TXD_REG1[7]),
        .O(\n_0_CODE_GRP[7]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair38" *) 
   LUT4 #(
    .INIT(16'hFFEF)) 
     \CODE_GRP[7]_i_2 
       (.I0(O2),
        .I1(I2),
        .I2(O1),
        .I3(S),
        .O(\n_0_CODE_GRP[7]_i_2 ));
LUT1 #(
    .INIT(2'h1)) 
     \CODE_GRP_CNT[0]_i_1 
       (.I0(TX_EVEN),
        .O(plusOp__0[0]));
(* SOFT_HLUTNM = "soft_lutpair37" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \CODE_GRP_CNT[1]_i_1 
       (.I0(\n_0_CODE_GRP_CNT_reg[1] ),
        .I1(TX_EVEN),
        .O(plusOp__0[1]));
FDSE \CODE_GRP_CNT_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp__0[0]),
        .Q(TX_EVEN),
        .S(SR));
FDSE \CODE_GRP_CNT_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(plusOp__0[1]),
        .Q(\n_0_CODE_GRP_CNT_reg[1] ),
        .S(SR));
FDRE \CODE_GRP_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[0]_i_1 ),
        .Q(CODE_GRP[0]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[1]_i_1 ),
        .Q(CODE_GRP[1]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[2]_i_1 ),
        .Q(CODE_GRP[2]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[3]_i_1 ),
        .Q(CODE_GRP[3]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[4]_i_1 ),
        .Q(CODE_GRP[4]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[5]_i_1 ),
        .Q(CODE_GRP[5]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[6]_i_1 ),
        .Q(CODE_GRP[6]),
        .R(\<const0> ));
FDRE \CODE_GRP_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CODE_GRP[7]_i_1 ),
        .Q(CODE_GRP[7]),
        .R(\<const0> ));
LUT5 #(
    .INIT(32'hCF50C050)) 
     \CONFIG_DATA[0]_i_1 
       (.I0(n_0_C1_OR_C2_reg),
        .I1(TX_CONFIG[8]),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[0]),
        .O(\n_0_CONFIG_DATA[0]_i_1 ));
LUT5 #(
    .INIT(32'hAFC0A0C0)) 
     \CONFIG_DATA[1]_i_1 
       (.I0(TX_CONFIG[9]),
        .I1(n_0_C1_OR_C2_reg),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[1]),
        .O(\n_0_CONFIG_DATA[1]_i_1 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[2]_i_1 
       (.I0(TX_CONFIG[2]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[10]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[2]_i_1 ));
LUT4 #(
    .INIT(16'hB833)) 
     \CONFIG_DATA[3]_i_1 
       (.I0(TX_CONFIG[11]),
        .I1(TX_EVEN),
        .I2(TX_CONFIG[3]),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .O(\n_0_CONFIG_DATA[3]_i_1 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[4]_i_1 
       (.I0(TX_CONFIG[4]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[12]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[4]_i_1 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[5]_i_1 
       (.I0(TX_CONFIG[5]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[13]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[5]_i_1 ));
LUT5 #(
    .INIT(32'hAFC0A0C0)) 
     \CONFIG_DATA[6]_i_1 
       (.I0(TX_CONFIG[14]),
        .I1(n_0_C1_OR_C2_reg),
        .I2(TX_EVEN),
        .I3(\n_0_CODE_GRP_CNT_reg[1] ),
        .I4(TX_CONFIG[6]),
        .O(\n_0_CONFIG_DATA[6]_i_1 ));
LUT5 #(
    .INIT(32'hC0BBF3BB)) 
     \CONFIG_DATA[7]_i_1 
       (.I0(TX_CONFIG[7]),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_CONFIG[15]),
        .I3(TX_EVEN),
        .I4(n_0_C1_OR_C2_reg),
        .O(\n_0_CONFIG_DATA[7]_i_1 ));
FDRE \CONFIG_DATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[0]_i_1 ),
        .Q(\n_0_CONFIG_DATA_reg[0] ),
        .R(SR));
FDRE \CONFIG_DATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[1]_i_1 ),
        .Q(\n_0_CONFIG_DATA_reg[1] ),
        .R(SR));
FDRE \CONFIG_DATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[2]_i_1 ),
        .Q(\n_0_CONFIG_DATA_reg[2] ),
        .R(SR));
FDRE \CONFIG_DATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[3]_i_1 ),
        .Q(\n_0_CONFIG_DATA_reg[3] ),
        .R(SR));
FDRE \CONFIG_DATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[4]_i_1 ),
        .Q(\n_0_CONFIG_DATA_reg[4] ),
        .R(SR));
FDRE \CONFIG_DATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[5]_i_1 ),
        .Q(\n_0_CONFIG_DATA_reg[5] ),
        .R(SR));
FDRE \CONFIG_DATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[6]_i_1 ),
        .Q(\n_0_CONFIG_DATA_reg[6] ),
        .R(SR));
FDRE \CONFIG_DATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_CONFIG_DATA[7]_i_1 ),
        .Q(\n_0_CONFIG_DATA_reg[7] ),
        .R(SR));
GND GND
       (.G(\<const0> ));
LUT6 #(
    .INIT(64'h0000AAAA0000AAAB)) 
     INSERT_IDLE_i_1__0
       (.I0(I2),
        .I1(n_0_INSERT_IDLE_i_2),
        .I2(O2),
        .I3(S),
        .I4(XMIT_CONFIG_INT_0),
        .I5(O1),
        .O(INSERT_IDLE2_out));
(* SOFT_HLUTNM = "soft_lutpair39" *) 
   LUT2 #(
    .INIT(4'hE)) 
     INSERT_IDLE_i_2
       (.I0(T),
        .I1(n_0_R_reg),
        .O(n_0_INSERT_IDLE_i_2));
FDRE INSERT_IDLE_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(INSERT_IDLE2_out),
        .Q(n_0_INSERT_IDLE_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h0D0D0D0C0C0C0C0C)) 
     R_i_1__0
       (.I0(S),
        .I1(T),
        .I2(SR),
        .I3(TX_ER_REG1),
        .I4(TX_EVEN),
        .I5(n_0_R_reg),
        .O(n_0_R_i_1__0));
FDRE R_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_R_i_1__0),
        .Q(n_0_R_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h8888A8AA88888888)) 
     S_i_1__0
       (.I0(n_0_XMIT_DATA_INT_reg),
        .I1(TRIGGER_S),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .I4(TX_EN_REG1),
        .I5(gmii_tx_en_out_ch0),
        .O(S0));
FDRE S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(S0),
        .Q(S),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair40" *) 
   LUT4 #(
    .INIT(16'h0400)) 
     TRIGGER_S_i_1
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en_out_ch0),
        .I2(TX_ER_REG1),
        .I3(TX_EVEN),
        .O(TRIGGER_S0));
FDRE TRIGGER_S_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(TRIGGER_S0),
        .Q(TRIGGER_S),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair40" *) 
   LUT2 #(
    .INIT(4'h2)) 
     TRIGGER_T_i_1
       (.I0(TX_EN_REG1),
        .I1(gmii_tx_en_out_ch0),
        .O(p_20_in));
FDRE TRIGGER_T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(p_20_in),
        .Q(TRIGGER_T),
        .R(SR));
FDRE \TXD_REG1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I5[0]),
        .Q(TXD_REG1[0]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I5[1]),
        .Q(TXD_REG1[1]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I5[2]),
        .Q(TXD_REG1[2]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I5[3]),
        .Q(TXD_REG1[3]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I5[4]),
        .Q(TXD_REG1[4]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I5[5]),
        .Q(TXD_REG1[5]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I5[6]),
        .Q(TXD_REG1[6]),
        .R(\<const0> ));
FDRE \TXD_REG1_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(I5[7]),
        .Q(TXD_REG1[7]),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h1)) 
     \TX_CONFIG[15]_i_1 
       (.I0(\n_0_CODE_GRP_CNT_reg[1] ),
        .I1(TX_EVEN),
        .O(\n_0_TX_CONFIG[15]_i_1 ));
FDRE \TX_CONFIG_reg[0] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[0]),
        .Q(TX_CONFIG[0]),
        .R(SR));
FDRE \TX_CONFIG_reg[10] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[10]),
        .Q(TX_CONFIG[10]),
        .R(SR));
FDRE \TX_CONFIG_reg[11] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[11]),
        .Q(TX_CONFIG[11]),
        .R(SR));
FDRE \TX_CONFIG_reg[12] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[12]),
        .Q(TX_CONFIG[12]),
        .R(SR));
FDRE \TX_CONFIG_reg[13] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[13]),
        .Q(TX_CONFIG[13]),
        .R(SR));
FDRE \TX_CONFIG_reg[14] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[14]),
        .Q(TX_CONFIG[14]),
        .R(SR));
FDRE \TX_CONFIG_reg[15] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[15]),
        .Q(TX_CONFIG[15]),
        .R(SR));
FDRE \TX_CONFIG_reg[1] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[1]),
        .Q(TX_CONFIG[1]),
        .R(SR));
FDRE \TX_CONFIG_reg[2] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[2]),
        .Q(TX_CONFIG[2]),
        .R(SR));
FDRE \TX_CONFIG_reg[3] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[3]),
        .Q(TX_CONFIG[3]),
        .R(SR));
FDRE \TX_CONFIG_reg[4] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[4]),
        .Q(TX_CONFIG[4]),
        .R(SR));
FDRE \TX_CONFIG_reg[5] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[5]),
        .Q(TX_CONFIG[5]),
        .R(SR));
FDRE \TX_CONFIG_reg[6] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[6]),
        .Q(TX_CONFIG[6]),
        .R(SR));
FDRE \TX_CONFIG_reg[7] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[7]),
        .Q(TX_CONFIG[7]),
        .R(SR));
FDRE \TX_CONFIG_reg[8] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[8]),
        .Q(TX_CONFIG[8]),
        .R(SR));
FDRE \TX_CONFIG_reg[9] 
       (.C(userclk2),
        .CE(\n_0_TX_CONFIG[15]_i_1 ),
        .D(I6[9]),
        .Q(TX_CONFIG[9]),
        .R(SR));
FDRE TX_EN_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_en_out_ch0),
        .Q(TX_EN_REG1),
        .R(\<const0> ));
FDRE TX_ER_REG1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_er_out_ch0),
        .Q(TX_ER_REG1),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'h5150)) 
     TX_PACKET_i_1
       (.I0(SR),
        .I1(T),
        .I2(S),
        .I3(O1),
        .O(n_0_TX_PACKET_i_1));
FDRE TX_PACKET_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_TX_PACKET_i_1),
        .Q(O1),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFF00E000E000E0)) 
     T_i_1__0
       (.I0(S),
        .I1(O1),
        .I2(TX_EN_REG1),
        .I3(gmii_tx_en_out_ch0),
        .I4(TRIGGER_T),
        .I5(O2),
        .O(T0));
FDRE T_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(T0),
        .Q(T),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair41" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXCHARISK_i_1 
       (.I0(CODE_GRPISK),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(SR),
        .O(\n_0_USE_QSGMII_DATA.TXCHARISK_i_1 ));
FDRE \USE_QSGMII_DATA.TXCHARISK_reg 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXCHARISK_i_1 ),
        .Q(TXCHARISK_INT),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair53" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[0]_i_1 
       (.I0(CODE_GRP[0]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[0]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair41" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[1]_i_1 
       (.I0(CODE_GRP[1]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(SR),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair52" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[2]_i_1 
       (.I0(CODE_GRP[2]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[2]_i_1 ));
LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[3]_i_1 
       (.I0(CODE_GRP[3]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(SR),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair42" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[4]_i_1 
       (.I0(CODE_GRP[4]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(SR),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair42" *) 
   LUT4 #(
    .INIT(16'h002A)) 
     \USE_QSGMII_DATA.TXDATA[5]_i_1 
       (.I0(CODE_GRP[5]),
        .I1(TX_EVEN),
        .I2(n_0_INSERT_IDLE_reg),
        .I3(SR),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair53" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[6]_i_1 
       (.I0(CODE_GRP[6]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair52" *) 
   LUT3 #(
    .INIT(8'hEA)) 
     \USE_QSGMII_DATA.TXDATA[7]_i_1 
       (.I0(CODE_GRP[7]),
        .I1(n_0_INSERT_IDLE_reg),
        .I2(TX_EVEN),
        .O(\n_0_USE_QSGMII_DATA.TXDATA[7]_i_1 ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[0]_i_1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .R(SR));
FDRE \USE_QSGMII_DATA.TXDATA_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[1]_i_1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[2]_i_1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .R(SR));
FDRE \USE_QSGMII_DATA.TXDATA_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[3]_i_1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[4]_i_1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[5]_i_1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .R(\<const0> ));
FDRE \USE_QSGMII_DATA.TXDATA_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[6]_i_1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .R(SR));
FDRE \USE_QSGMII_DATA.TXDATA_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_USE_QSGMII_DATA.TXDATA[7]_i_1 ),
        .Q(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .R(SR));
(* SOFT_HLUTNM = "soft_lutpair50" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISCOMMA_INT_i_1 
       (.I0(TXCHARISK_INT),
        .I1(LOOPBACK),
        .I2(RXCHARISCOMMA_USR),
        .O(O5));
(* SOFT_HLUTNM = "soft_lutpair49" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXCHARISK_INT_i_1 
       (.I0(TXCHARISK_INT),
        .I1(LOOPBACK),
        .I2(RXCHARISK_USR),
        .O(O4));
(* SOFT_HLUTNM = "soft_lutpair45" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[0]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .I1(LOOPBACK),
        .I2(Q[0]),
        .O(D[0]));
(* SOFT_HLUTNM = "soft_lutpair47" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[1]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .I1(LOOPBACK),
        .I2(Q[1]),
        .O(D[1]));
(* SOFT_HLUTNM = "soft_lutpair50" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[2]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .I1(LOOPBACK),
        .I2(Q[2]),
        .O(D[2]));
LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[3]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .I1(LOOPBACK),
        .I2(Q[3]),
        .O(D[3]));
(* SOFT_HLUTNM = "soft_lutpair48" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[4]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .I1(LOOPBACK),
        .I2(Q[4]),
        .O(D[4]));
(* SOFT_HLUTNM = "soft_lutpair49" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[5]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .I1(LOOPBACK),
        .I2(Q[5]),
        .O(D[5]));
(* SOFT_HLUTNM = "soft_lutpair51" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[6]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .I1(LOOPBACK),
        .I2(Q[6]),
        .O(D[6]));
(* SOFT_HLUTNM = "soft_lutpair51" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.NO_1588.RXDATA_INT[7]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .I1(LOOPBACK),
        .I2(Q[7]),
        .O(D[7]));
(* SOFT_HLUTNM = "soft_lutpair43" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXCHARISK_i_1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(TXCHARISK_INT),
        .O(O3));
(* SOFT_HLUTNM = "soft_lutpair45" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.TXDATA[0]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[0] ),
        .I1(LOOPBACK),
        .I2(SR),
        .O(O11[0]));
(* SOFT_HLUTNM = "soft_lutpair47" *) 
   LUT3 #(
    .INIT(8'h02)) 
     \USE_ROCKET_IO.TXDATA[1]_i_1 
       (.I0(\n_0_USE_QSGMII_DATA.TXDATA_reg[1] ),
        .I1(LOOPBACK),
        .I2(SR),
        .O(O11[1]));
(* SOFT_HLUTNM = "soft_lutpair43" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[2]_i_1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[2] ),
        .O(O10));
(* SOFT_HLUTNM = "soft_lutpair44" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[3]_i_1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[3] ),
        .O(O9));
(* SOFT_HLUTNM = "soft_lutpair48" *) 
   LUT3 #(
    .INIT(8'h54)) 
     \USE_ROCKET_IO.TXDATA[4]_i_1 
       (.I0(SR),
        .I1(\n_0_USE_QSGMII_DATA.TXDATA_reg[4] ),
        .I2(LOOPBACK),
        .O(O11[2]));
(* SOFT_HLUTNM = "soft_lutpair46" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[5]_i_1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[5] ),
        .O(O8));
(* SOFT_HLUTNM = "soft_lutpair44" *) 
   LUT3 #(
    .INIT(8'h74)) 
     \USE_ROCKET_IO.TXDATA[6]_i_1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[6] ),
        .O(O6));
(* SOFT_HLUTNM = "soft_lutpair46" *) 
   LUT3 #(
    .INIT(8'hB8)) 
     \USE_ROCKET_IO.TXDATA[7]_i_1 
       (.I0(TX_EVEN),
        .I1(LOOPBACK),
        .I2(\n_0_USE_QSGMII_DATA.TXDATA_reg[7] ),
        .O(O7));
VCC VCC
       (.P(\<const1> ));
LUT4 #(
    .INIT(16'h3222)) 
     V_i_1
       (.I0(n_0_V_i_2),
        .I1(SR),
        .I2(S),
        .I3(O2),
        .O(n_0_V_i_1));
LUT5 #(
    .INIT(32'h8A888888)) 
     V_i_2
       (.I0(n_0_XMIT_DATA_INT_reg),
        .I1(I1),
        .I2(O1),
        .I3(TX_ER_REG1),
        .I4(TX_EN_REG1),
        .O(n_0_V_i_2));
FDRE V_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_V_i_1),
        .Q(O2),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair37" *) 
   LUT5 #(
    .INIT(32'hFFF20002)) 
     XMIT_CONFIG_INT_i_1
       (.I0(XMIT_CONFIG_INT),
        .I1(I4),
        .I2(\n_0_CODE_GRP_CNT_reg[1] ),
        .I3(TX_EVEN),
        .I4(XMIT_CONFIG_INT_0),
        .O(n_0_XMIT_CONFIG_INT_i_1));
FDSE XMIT_CONFIG_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_CONFIG_INT_i_1),
        .Q(XMIT_CONFIG_INT_0),
        .S(SR));
LUT4 #(
    .INIT(16'hFE02)) 
     XMIT_DATA_INT_i_1__0
       (.I0(XMIT_DATA),
        .I1(\n_0_CODE_GRP_CNT_reg[1] ),
        .I2(TX_EVEN),
        .I3(n_0_XMIT_DATA_INT_reg),
        .O(n_0_XMIT_DATA_INT_i_1__0));
FDRE XMIT_DATA_INT_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_XMIT_DATA_INT_i_1__0),
        .Q(n_0_XMIT_DATA_INT_reg),
        .R(SR));
endmodule

(* INITIALISE = "2'b11" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_reset_sync
   (RESET_IN,
    CLK,
    RESET_OUT);
  input RESET_IN;
  input CLK;
  output RESET_OUT;

  wire \<const0> ;
  wire CLK;
  wire GND_2;
  wire RESET_IN;
  wire RESET_OUT;
  wire RESET_SYNC_REG1;
  wire RESET_SYNC_REG2;
  wire RESET_SYNC_REG3;
  wire RESET_SYNC_REG4;
  wire RESET_SYNC_REG5;
  wire VCC_1;

GND GND
       (.G(\<const0> ));
GND GND_1
       (.G(GND_2));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC1
       (.C(CLK),
        .CE(VCC_1),
        .D(\<const0> ),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC2
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG1),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG2));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC3
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG2),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG3));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC4
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG3),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG4));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC5
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG4),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG5));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b1)) 
     RESET_SYNC6
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG5),
        .Q(RESET_OUT),
        .R(GND_2));
VCC VCC
       (.P(VCC_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_reset_sync" *) (* INITIALISE = "2'b11" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_reset_sync__4
   (RESET_IN,
    CLK,
    RESET_OUT);
  input RESET_IN;
  input CLK;
  output RESET_OUT;

  wire \<const0> ;
  wire CLK;
  wire GND_2;
  wire RESET_IN;
  wire RESET_OUT;
  wire RESET_SYNC_REG1;
  wire RESET_SYNC_REG2;
  wire RESET_SYNC_REG3;
  wire RESET_SYNC_REG4;
  wire RESET_SYNC_REG5;
  wire VCC_1;

GND GND
       (.G(\<const0> ));
GND GND_1
       (.G(GND_2));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC1
       (.C(CLK),
        .CE(VCC_1),
        .D(\<const0> ),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC2
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG1),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG2));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC3
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG2),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG3));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC4
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG3),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG4));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC5
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG4),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG5));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b1)) 
     RESET_SYNC6
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG5),
        .Q(RESET_OUT),
        .R(GND_2));
VCC VCC
       (.P(VCC_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_reset_sync" *) (* INITIALISE = "2'b11" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_reset_sync__5
   (RESET_IN,
    CLK,
    RESET_OUT);
  input RESET_IN;
  input CLK;
  output RESET_OUT;

  wire \<const0> ;
  wire CLK;
  wire GND_2;
  wire RESET_IN;
  wire RESET_OUT;
  wire RESET_SYNC_REG1;
  wire RESET_SYNC_REG2;
  wire RESET_SYNC_REG3;
  wire RESET_SYNC_REG4;
  wire RESET_SYNC_REG5;
  wire VCC_1;

GND GND
       (.G(\<const0> ));
GND GND_1
       (.G(GND_2));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC1
       (.C(CLK),
        .CE(VCC_1),
        .D(\<const0> ),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC2
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG1),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG2));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC3
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG2),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG3));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC4
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG3),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG4));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC5
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG4),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG5));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b1)) 
     RESET_SYNC6
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG5),
        .Q(RESET_OUT),
        .R(GND_2));
VCC VCC
       (.P(VCC_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_reset_sync" *) (* INITIALISE = "2'b11" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_reset_sync__6
   (RESET_IN,
    CLK,
    RESET_OUT);
  input RESET_IN;
  input CLK;
  output RESET_OUT;

  wire \<const0> ;
  wire CLK;
  wire GND_2;
  wire RESET_IN;
  wire RESET_OUT;
  wire RESET_SYNC_REG1;
  wire RESET_SYNC_REG2;
  wire RESET_SYNC_REG3;
  wire RESET_SYNC_REG4;
  wire RESET_SYNC_REG5;
  wire VCC_1;

GND GND
       (.G(\<const0> ));
GND GND_1
       (.G(GND_2));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC1
       (.C(CLK),
        .CE(VCC_1),
        .D(\<const0> ),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC2
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG1),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG2));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC3
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG2),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG3));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC4
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG3),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG4));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     RESET_SYNC5
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG4),
        .PRE(RESET_IN),
        .Q(RESET_SYNC_REG5));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b1)) 
     RESET_SYNC6
       (.C(CLK),
        .CE(VCC_1),
        .D(RESET_SYNC_REG5),
        .Q(RESET_OUT),
        .R(GND_2));
VCC VCC
       (.P(VCC_1));
endmodule

(* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__100
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__101
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__102
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__103
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__104
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__105
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__106
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__107
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__108
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__109
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__110
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__56
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__57
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__58
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__59
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__60
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__61
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__62
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__63
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__64
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__65
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__66
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__67
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__68
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__69
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__70
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__71
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__72
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__73
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__74
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__75
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__76
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__77
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__78
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__79
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__80
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__81
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__82
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__83
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__84
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__85
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__86
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__87
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__88
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__89
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__90
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__91
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__92
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__93
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__94
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__95
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__96
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__97
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__98
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "qsgmii_sync_block" *) (* INITIALISE = "2'b00" *) (* dont_touch = "yes" *) 
module quadsgmiiqsgmii_sync_block__99
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   (* msgon = "FALSE" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

module quadsgmiiquadsgmii_GTWIZARD
   (O1,
    gt0_drprdy_out,
    gt0_eyescandataerror_out,
    txn,
    txp,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    rxoutclk,
    gt0_rxprbserr_out,
    gt0_rxratedone_out,
    txoutclk,
    gt0_drpdo_out,
    gt0_txbufstatus_out,
    gt0_rxbufstatus_out,
    rxdata,
    gt0_rxmonitorout_out,
    gt0_dmonitorout_out,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    O2,
    O3,
    p_3_out,
    p_3_out_0,
    p_3_out_1,
    p_3_out_2,
    independent_clock_bufg,
    gt0_drpclk_in,
    gt0_drpen_in,
    gt0_drpwe_in,
    gt0_eyescanreset_in,
    gt0_eyescantrigger_in,
    gtrefclk,
    rxn,
    rxp,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    gt0_rxbufreset_in,
    gt0_rxcdrhold_in,
    gt0_rxdfeagcovrden_in,
    gt0_rxdfelpmreset_in,
    gt0_rxlpmen_in,
    encommaalign_rec,
    gt0_rxpcsreset_in,
    gt0_rxpmareset_in,
    gt0_rxpolarity_in,
    gt0_rxprbscntreset_in,
    rxuserclk,
    rxuserclk2,
    TXPD,
    gt0_txpcsreset_in,
    gt0_txpmareset_in,
    gt0_txpolarity_in,
    gt0_txprbsforceerr_in,
    userclk,
    gt0_drpdi_in,
    gt0_rxmonitorsel_in,
    gt0_loopback_in,
    gt0_rxprbssel_in,
    gt0_rxrate_in,
    gt0_txprbssel_in,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    txdata,
    Q,
    gt0_drpaddr_in,
    data_valid_reg2,
    pma_reset,
    SOFT_RESET,
    reset,
    SOFT_RESET_3,
    SOFT_RESET_4,
    SOFT_RESET_5,
    mgt_rx_reset,
    gt0_gtrxreset_in,
    mgt_tx_reset,
    gt0_gttxreset_in);
  output O1;
  output gt0_drprdy_out;
  output gt0_eyescandataerror_out;
  output txn;
  output txp;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  output rxoutclk;
  output gt0_rxprbserr_out;
  output gt0_rxratedone_out;
  output txoutclk;
  output [15:0]gt0_drpdo_out;
  output [1:0]gt0_txbufstatus_out;
  output [2:0]gt0_rxbufstatus_out;
  output [31:0]rxdata;
  output [6:0]gt0_rxmonitorout_out;
  output [7:0]gt0_dmonitorout_out;
  output [3:0]gt0_rxchariscomma_out;
  output [3:0]gt0_rxcharisk_out;
  output [3:0]gt0_rxdisperr_out;
  output [3:0]gt0_rxnotintable_out;
  output O2;
  output O3;
  output p_3_out;
  output p_3_out_0;
  output p_3_out_1;
  output p_3_out_2;
  input independent_clock_bufg;
  input gt0_drpclk_in;
  input gt0_drpen_in;
  input gt0_drpwe_in;
  input gt0_eyescanreset_in;
  input gt0_eyescantrigger_in;
  input gtrefclk;
  input rxn;
  input rxp;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input gt0_rxbufreset_in;
  input gt0_rxcdrhold_in;
  input gt0_rxdfeagcovrden_in;
  input gt0_rxdfelpmreset_in;
  input gt0_rxlpmen_in;
  input encommaalign_rec;
  input gt0_rxpcsreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxpolarity_in;
  input gt0_rxprbscntreset_in;
  input rxuserclk;
  input rxuserclk2;
  input [1:0]TXPD;
  input gt0_txpcsreset_in;
  input gt0_txpmareset_in;
  input gt0_txpolarity_in;
  input gt0_txprbsforceerr_in;
  input userclk;
  input [15:0]gt0_drpdi_in;
  input [1:0]gt0_rxmonitorsel_in;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_rxrate_in;
  input [2:0]gt0_txprbssel_in;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [31:0]txdata;
  input [3:0]Q;
  input [8:0]gt0_drpaddr_in;
  input data_valid_reg2;
  input pma_reset;
  input SOFT_RESET;
  input reset;
  input SOFT_RESET_3;
  input SOFT_RESET_4;
  input SOFT_RESET_5;
  input mgt_rx_reset;
  input gt0_gtrxreset_in;
  input mgt_tx_reset;
  input gt0_gttxreset_in;

  wire O1;
  wire O2;
  wire O3;
  wire [3:0]Q;
  wire SOFT_RESET;
  wire SOFT_RESET_3;
  wire SOFT_RESET_4;
  wire SOFT_RESET_5;
  wire [1:0]TXPD;
  wire data_valid_reg2;
  wire encommaalign_rec;
  wire [7:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gtrxreset_in;
  wire gt0_gttxreset_in;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire gt0_rxcommadet_out;
  wire gt0_rxdfeagcovrden_in;
  wire gt0_rxdfelpmreset_in;
  wire [3:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [3:0]gt0_rxnotintable_out;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire [1:0]gt0_txbufstatus_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txpcsreset_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gtrefclk;
  wire independent_clock_bufg;
  wire mgt_rx_reset;
  wire mgt_tx_reset;
  wire p_3_out;
  wire p_3_out_0;
  wire p_3_out_1;
  wire p_3_out_2;
  wire pma_reset;
  wire reset;
  wire [31:0]rxdata;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk;
  wire rxuserclk2;
  wire [31:0]txdata;
  wire txn;
  wire txoutclk;
  wire txp;
  wire userclk;

quadsgmiiquadsgmii_GTWIZARD_init inst
       (.O1(O1),
        .O2(O2),
        .O3(O3),
        .Q(Q),
        .SOFT_RESET(SOFT_RESET),
        .SOFT_RESET_3(SOFT_RESET_3),
        .SOFT_RESET_4(SOFT_RESET_4),
        .SOFT_RESET_5(SOFT_RESET_5),
        .TXPD(TXPD),
        .data_valid_reg2(data_valid_reg2),
        .encommaalign_rec(encommaalign_rec),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drpaddr_in(gt0_drpaddr_in),
        .gt0_drpclk_in(gt0_drpclk_in),
        .gt0_drpdi_in(gt0_drpdi_in),
        .gt0_drpdo_out(gt0_drpdo_out),
        .gt0_drpen_in(gt0_drpen_in),
        .gt0_drprdy_out(gt0_drprdy_out),
        .gt0_drpwe_in(gt0_drpwe_in),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_gtrxreset_in(gt0_gtrxreset_in),
        .gt0_gttxreset_in(gt0_gttxreset_in),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt0_rxbufreset_in(gt0_rxbufreset_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxbyteisaligned_out(gt0_rxbyteisaligned_out),
        .gt0_rxbyterealign_out(gt0_rxbyterealign_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdfeagcovrden_in(gt0_rxdfeagcovrden_in),
        .gt0_rxdfelpmreset_in(gt0_rxdfelpmreset_in),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmen_in(gt0_rxlpmen_in),
        .gt0_rxmonitorout_out(gt0_rxmonitorout_out),
        .gt0_rxmonitorsel_in(gt0_rxmonitorsel_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxratedone_out(gt0_rxratedone_out),
        .gt0_txbufstatus_out(gt0_txbufstatus_out),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gtrefclk(gtrefclk),
        .independent_clock_bufg(independent_clock_bufg),
        .mgt_rx_reset(mgt_rx_reset),
        .mgt_tx_reset(mgt_tx_reset),
        .p_3_out(p_3_out),
        .p_3_out_0(p_3_out_0),
        .p_3_out_1(p_3_out_1),
        .p_3_out_2(p_3_out_2),
        .pma_reset(pma_reset),
        .reset(reset),
        .rxdata(rxdata),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk(rxuserclk),
        .rxuserclk2(rxuserclk2),
        .txdata(txdata),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .userclk(userclk));
endmodule

module quadsgmiiquadsgmii_GTWIZARD_GT
   (O1,
    gt0_cpllrefclklost_i,
    gt0_drprdy_out,
    gt0_eyescandataerror_out,
    txn,
    txp,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    rxoutclk,
    gt0_rxprbserr_out,
    gt0_rxratedone_out,
    O2,
    txoutclk,
    O3,
    gt0_drpdo_out,
    gt0_txbufstatus_out,
    gt0_rxbufstatus_out,
    rxdata,
    gt0_rxmonitorout_out,
    gt0_dmonitorout_out,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    p_3_out,
    p_3_out_0,
    p_3_out_1,
    p_3_out_2,
    independent_clock_bufg,
    gt0_cpllreset_t,
    gt0_drpclk_in,
    gt0_drpen_in,
    gt0_drpwe_in,
    gt0_eyescanreset_in,
    gt0_eyescantrigger_in,
    gtrefclk,
    gt0_gtrxreset_i,
    gt0_gttxreset_i,
    rxn,
    rxp,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    gt0_rxbufreset_in,
    gt0_rxcdrhold_in,
    gt0_rxdfelfhold_i,
    gt0_rxdfeagcovrden_in,
    gt0_rxdfelpmreset_in,
    gt0_rxlpmen_in,
    encommaalign_rec,
    gt0_rxpcsreset_in,
    gt0_rxpmareset_in,
    gt0_rxpolarity_in,
    gt0_rxprbscntreset_in,
    gt0_rxuserrdy_t,
    rxuserclk,
    rxuserclk2,
    TXPD,
    gt0_txpcsreset_in,
    gt0_txpmareset_in,
    gt0_txpolarity_in,
    gt0_txprbsforceerr_in,
    gt0_txuserrdy_t,
    userclk,
    gt0_drpdi_in,
    gt0_rxmonitorsel_in,
    gt0_loopback_in,
    gt0_rxprbssel_in,
    gt0_rxrate_in,
    gt0_txprbssel_in,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    txdata,
    Q,
    gt0_drpaddr_in,
    SOFT_RESET,
    reset,
    SOFT_RESET_3,
    SOFT_RESET_4,
    SOFT_RESET_5);
  output O1;
  output gt0_cpllrefclklost_i;
  output gt0_drprdy_out;
  output gt0_eyescandataerror_out;
  output txn;
  output txp;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  output rxoutclk;
  output gt0_rxprbserr_out;
  output gt0_rxratedone_out;
  output O2;
  output txoutclk;
  output O3;
  output [15:0]gt0_drpdo_out;
  output [1:0]gt0_txbufstatus_out;
  output [2:0]gt0_rxbufstatus_out;
  output [31:0]rxdata;
  output [6:0]gt0_rxmonitorout_out;
  output [7:0]gt0_dmonitorout_out;
  output [3:0]gt0_rxchariscomma_out;
  output [3:0]gt0_rxcharisk_out;
  output [3:0]gt0_rxdisperr_out;
  output [3:0]gt0_rxnotintable_out;
  output p_3_out;
  output p_3_out_0;
  output p_3_out_1;
  output p_3_out_2;
  input independent_clock_bufg;
  input gt0_cpllreset_t;
  input gt0_drpclk_in;
  input gt0_drpen_in;
  input gt0_drpwe_in;
  input gt0_eyescanreset_in;
  input gt0_eyescantrigger_in;
  input gtrefclk;
  input gt0_gtrxreset_i;
  input gt0_gttxreset_i;
  input rxn;
  input rxp;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input gt0_rxbufreset_in;
  input gt0_rxcdrhold_in;
  input gt0_rxdfelfhold_i;
  input gt0_rxdfeagcovrden_in;
  input gt0_rxdfelpmreset_in;
  input gt0_rxlpmen_in;
  input encommaalign_rec;
  input gt0_rxpcsreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxpolarity_in;
  input gt0_rxprbscntreset_in;
  input gt0_rxuserrdy_t;
  input rxuserclk;
  input rxuserclk2;
  input [1:0]TXPD;
  input gt0_txpcsreset_in;
  input gt0_txpmareset_in;
  input gt0_txpolarity_in;
  input gt0_txprbsforceerr_in;
  input gt0_txuserrdy_t;
  input userclk;
  input [15:0]gt0_drpdi_in;
  input [1:0]gt0_rxmonitorsel_in;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_rxrate_in;
  input [2:0]gt0_txprbssel_in;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [31:0]txdata;
  input [3:0]Q;
  input [8:0]gt0_drpaddr_in;
  input SOFT_RESET;
  input reset;
  input SOFT_RESET_3;
  input SOFT_RESET_4;
  input SOFT_RESET_5;

  wire \<const0> ;
  wire \<const1> ;
  wire O1;
  wire O2;
  wire O3;
  wire [3:0]Q;
  wire SOFT_RESET;
  wire SOFT_RESET_3;
  wire SOFT_RESET_4;
  wire SOFT_RESET_5;
  wire [1:0]TXPD;
  wire encommaalign_rec;
  wire gt0_cpllrefclklost_i;
  wire gt0_cpllreset_t;
  wire [7:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gtrxreset_i;
  wire gt0_gttxreset_i;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire gt0_rxcommadet_out;
  wire gt0_rxdfeagcovrden_in;
  wire gt0_rxdfelfhold_i;
  wire gt0_rxdfelpmreset_in;
  wire [3:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [3:0]gt0_rxnotintable_out;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire gt0_rxuserrdy_t;
  wire [1:0]gt0_txbufstatus_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txpcsreset_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txuserrdy_t;
  wire gtrefclk;
  wire independent_clock_bufg;
  wire n_0_gtxe2_i;
  wire n_11_gtxe2_i;
  wire n_38_gtxe2_i;
  wire n_39_gtxe2_i;
  wire p_3_out;
  wire p_3_out_0;
  wire p_3_out_1;
  wire p_3_out_2;
  wire reset;
  wire [31:0]rxdata;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk;
  wire rxuserclk2;
  wire [31:0]txdata;
  wire txn;
  wire txoutclk;
  wire txp;
  wire userclk;
  wire NLW_gtxe2_i_GTREFCLKMONITOR_UNCONNECTED;
  wire NLW_gtxe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANBONDSEQ_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANISALIGNED_UNCONNECTED;
  wire NLW_gtxe2_i_RXCHANREALIGN_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gtxe2_i_RXDATAVALID_UNCONNECTED;
  wire NLW_gtxe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtxe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gtxe2_i_RXHEADERVALID_UNCONNECTED;
  wire NLW_gtxe2_i_RXOUTCLKFABRIC_UNCONNECTED;
  wire NLW_gtxe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtxe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtxe2_i_RXQPISENN_UNCONNECTED;
  wire NLW_gtxe2_i_RXQPISENP_UNCONNECTED;
  wire NLW_gtxe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire NLW_gtxe2_i_RXVALID_UNCONNECTED;
  wire NLW_gtxe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gtxe2_i_TXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtxe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gtxe2_i_TXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtxe2_i_TXPHINITDONE_UNCONNECTED;
  wire NLW_gtxe2_i_TXQPISENN_UNCONNECTED;
  wire NLW_gtxe2_i_TXQPISENP_UNCONNECTED;
  wire NLW_gtxe2_i_TXRATEDONE_UNCONNECTED;
  wire [15:0]NLW_gtxe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [7:4]NLW_gtxe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [7:4]NLW_gtxe2_i_RXCHARISK_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXCHBONDO_UNCONNECTED;
  wire [1:0]NLW_gtxe2_i_RXCLKCORCNT_UNCONNECTED;
  wire [63:32]NLW_gtxe2_i_RXDATA_UNCONNECTED;
  wire [7:4]NLW_gtxe2_i_RXDISPERR_UNCONNECTED;
  wire [2:0]NLW_gtxe2_i_RXHEADER_UNCONNECTED;
  wire [7:4]NLW_gtxe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gtxe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [2:0]NLW_gtxe2_i_RXSTATUS_UNCONNECTED;
  wire [9:0]NLW_gtxe2_i_TSTOUT_UNCONNECTED;

GND GND
       (.G(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair0" *) 
   LUT3 #(
    .INIT(8'hFD)) 
     \MGT_RESET.RESET_INT_i_1 
       (.I0(O1),
        .I1(SOFT_RESET),
        .I2(reset),
        .O(p_3_out));
(* SOFT_HLUTNM = "soft_lutpair0" *) 
   LUT3 #(
    .INIT(8'hFD)) 
     \MGT_RESET.RESET_INT_i_1__0 
       (.I0(O1),
        .I1(SOFT_RESET_3),
        .I2(reset),
        .O(p_3_out_0));
(* SOFT_HLUTNM = "soft_lutpair1" *) 
   LUT3 #(
    .INIT(8'hFD)) 
     \MGT_RESET.RESET_INT_i_1__1 
       (.I0(O1),
        .I1(SOFT_RESET_4),
        .I2(reset),
        .O(p_3_out_1));
(* SOFT_HLUTNM = "soft_lutpair1" *) 
   LUT3 #(
    .INIT(8'hFD)) 
     \MGT_RESET.RESET_INT_i_1__2 
       (.I0(O1),
        .I1(SOFT_RESET_5),
        .I2(reset),
        .O(p_3_out_2));
VCC VCC
       (.P(\<const1> ));
(* BOX_TYPE = "PRIMITIVE" *) 
   GTXE2_CHANNEL #(
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(19),
    .CLK_COR_MIN_LAT(15),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0100000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(24'hBC07DC),
    .CPLL_FBDIV(4),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("TRUE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("TRUE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b000),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'h00018480),
    .PMA_RSV2(16'h2050),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(32'h00000000),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(72'h03000023FF20400020),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00000011110000),
    .RXLPM_LF_CFG(14'b00000011110000),
    .RXOOB_CFG(7'b0000110),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'h000000),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b1),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RX_BIAS_CFG(12'b000000000100),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(5),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(3'b010),
    .RX_DATA_WIDTH(40),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(12'b000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFE_GAIN_CFG(23'h020FEA),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011110000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_KL_CFG(13'b0000011111110),
    .RX_DFE_KL_CFG2(32'h301148AC),
    .RX_DFE_LPM_CFG(16'h0954),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DFE_UT_CFG(17'b10001111000000000),
    .RX_DFE_VP_CFG(17'b00011111100000011),
    .RX_DFE_XYD_CFG(13'b0000000000000),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(1),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("4.0"),
    .TERM_RCAL_CFG(5'b10000),
    .TERM_RCAL_OVRD(1'b0),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPMARESET_TIME(5'b00001),
    .TX_CLK25_DIV(5),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(40),
    .TX_DEEMPH0(5'b00000),
    .TX_DEEMPH1(5'b00000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(1),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXOUT"),
    .UCODEER_CLR(1'b0)) 
     gtxe2_i
       (.CFGRESET(\<const0> ),
        .CLKRSVD({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .CPLLFBCLKLOST(n_0_gtxe2_i),
        .CPLLLOCK(O1),
        .CPLLLOCKDETCLK(independent_clock_bufg),
        .CPLLLOCKEN(\<const1> ),
        .CPLLPD(\<const0> ),
        .CPLLREFCLKLOST(gt0_cpllrefclklost_i),
        .CPLLREFCLKSEL({\<const0> ,\<const0> ,\<const1> }),
        .CPLLRESET(gt0_cpllreset_t),
        .DMONITOROUT(gt0_dmonitorout_out),
        .DRPADDR(gt0_drpaddr_in),
        .DRPCLK(gt0_drpclk_in),
        .DRPDI(gt0_drpdi_in),
        .DRPDO(gt0_drpdo_out),
        .DRPEN(gt0_drpen_in),
        .DRPRDY(gt0_drprdy_out),
        .DRPWE(gt0_drpwe_in),
        .EYESCANDATAERROR(gt0_eyescandataerror_out),
        .EYESCANMODE(\<const0> ),
        .EYESCANRESET(gt0_eyescanreset_in),
        .EYESCANTRIGGER(gt0_eyescantrigger_in),
        .GTGREFCLK(\<const0> ),
        .GTNORTHREFCLK0(\<const0> ),
        .GTNORTHREFCLK1(\<const0> ),
        .GTREFCLK0(gtrefclk),
        .GTREFCLK1(\<const0> ),
        .GTREFCLKMONITOR(NLW_gtxe2_i_GTREFCLKMONITOR_UNCONNECTED),
        .GTRESETSEL(\<const0> ),
        .GTRSVD({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .GTRXRESET(gt0_gtrxreset_i),
        .GTSOUTHREFCLK0(\<const0> ),
        .GTSOUTHREFCLK1(\<const0> ),
        .GTTXRESET(gt0_gttxreset_i),
        .GTXRXN(rxn),
        .GTXRXP(rxp),
        .GTXTXN(txn),
        .GTXTXP(txp),
        .LOOPBACK(gt0_loopback_in),
        .PCSRSVDIN({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .PCSRSVDIN2({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .PCSRSVDOUT(NLW_gtxe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gtxe2_i_PHYSTATUS_UNCONNECTED),
        .PMARSVDIN({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .PMARSVDIN2({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .QPLLCLK(gt0_qplloutclk_in),
        .QPLLREFCLK(gt0_qplloutrefclk_in),
        .RESETOVRD(\<const0> ),
        .RX8B10BEN(\<const1> ),
        .RXBUFRESET(gt0_rxbufreset_in),
        .RXBUFSTATUS(gt0_rxbufstatus_out),
        .RXBYTEISALIGNED(gt0_rxbyteisaligned_out),
        .RXBYTEREALIGN(gt0_rxbyterealign_out),
        .RXCDRFREQRESET(\<const0> ),
        .RXCDRHOLD(gt0_rxcdrhold_in),
        .RXCDRLOCK(n_11_gtxe2_i),
        .RXCDROVRDEN(\<const0> ),
        .RXCDRRESET(\<const0> ),
        .RXCDRRESETRSV(\<const0> ),
        .RXCHANBONDSEQ(NLW_gtxe2_i_RXCHANBONDSEQ_UNCONNECTED),
        .RXCHANISALIGNED(NLW_gtxe2_i_RXCHANISALIGNED_UNCONNECTED),
        .RXCHANREALIGN(NLW_gtxe2_i_RXCHANREALIGN_UNCONNECTED),
        .RXCHARISCOMMA({NLW_gtxe2_i_RXCHARISCOMMA_UNCONNECTED[7:4],gt0_rxchariscomma_out}),
        .RXCHARISK({NLW_gtxe2_i_RXCHARISK_UNCONNECTED[7:4],gt0_rxcharisk_out}),
        .RXCHBONDEN(\<const0> ),
        .RXCHBONDI({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .RXCHBONDLEVEL({\<const0> ,\<const0> ,\<const0> }),
        .RXCHBONDMASTER(\<const0> ),
        .RXCHBONDO(NLW_gtxe2_i_RXCHBONDO_UNCONNECTED[4:0]),
        .RXCHBONDSLAVE(\<const0> ),
        .RXCLKCORCNT(NLW_gtxe2_i_RXCLKCORCNT_UNCONNECTED[1:0]),
        .RXCOMINITDET(NLW_gtxe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(gt0_rxcommadet_out),
        .RXCOMMADETEN(\<const1> ),
        .RXCOMSASDET(NLW_gtxe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gtxe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gtxe2_i_RXDATA_UNCONNECTED[63:32],rxdata}),
        .RXDATAVALID(NLW_gtxe2_i_RXDATAVALID_UNCONNECTED),
        .RXDDIEN(\<const0> ),
        .RXDFEAGCHOLD(gt0_rxdfelfhold_i),
        .RXDFEAGCOVRDEN(gt0_rxdfeagcovrden_in),
        .RXDFECM1EN(\<const0> ),
        .RXDFELFHOLD(gt0_rxdfelfhold_i),
        .RXDFELFOVRDEN(\<const1> ),
        .RXDFELPMRESET(gt0_rxdfelpmreset_in),
        .RXDFETAP2HOLD(\<const0> ),
        .RXDFETAP2OVRDEN(\<const0> ),
        .RXDFETAP3HOLD(\<const0> ),
        .RXDFETAP3OVRDEN(\<const0> ),
        .RXDFETAP4HOLD(\<const0> ),
        .RXDFETAP4OVRDEN(\<const0> ),
        .RXDFETAP5HOLD(\<const0> ),
        .RXDFETAP5OVRDEN(\<const0> ),
        .RXDFEUTHOLD(\<const0> ),
        .RXDFEUTOVRDEN(\<const0> ),
        .RXDFEVPHOLD(\<const0> ),
        .RXDFEVPOVRDEN(\<const0> ),
        .RXDFEVSEN(\<const0> ),
        .RXDFEXYDEN(\<const1> ),
        .RXDFEXYDHOLD(\<const0> ),
        .RXDFEXYDOVRDEN(\<const0> ),
        .RXDISPERR({NLW_gtxe2_i_RXDISPERR_UNCONNECTED[7:4],gt0_rxdisperr_out}),
        .RXDLYBYPASS(\<const1> ),
        .RXDLYEN(\<const0> ),
        .RXDLYOVRDEN(\<const0> ),
        .RXDLYSRESET(\<const0> ),
        .RXDLYSRESETDONE(NLW_gtxe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gtxe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({\<const1> ,\<const1> }),
        .RXGEARBOXSLIP(\<const0> ),
        .RXHEADER(NLW_gtxe2_i_RXHEADER_UNCONNECTED[2:0]),
        .RXHEADERVALID(NLW_gtxe2_i_RXHEADERVALID_UNCONNECTED),
        .RXLPMEN(gt0_rxlpmen_in),
        .RXLPMHFHOLD(\<const0> ),
        .RXLPMHFOVRDEN(\<const0> ),
        .RXLPMLFHOLD(\<const0> ),
        .RXLPMLFKLOVRDEN(\<const0> ),
        .RXMCOMMAALIGNEN(encommaalign_rec),
        .RXMONITOROUT(gt0_rxmonitorout_out),
        .RXMONITORSEL(gt0_rxmonitorsel_in),
        .RXNOTINTABLE({NLW_gtxe2_i_RXNOTINTABLE_UNCONNECTED[7:4],gt0_rxnotintable_out}),
        .RXOOBRESET(\<const0> ),
        .RXOSHOLD(\<const0> ),
        .RXOSOVRDEN(\<const0> ),
        .RXOUTCLK(rxoutclk),
        .RXOUTCLKFABRIC(NLW_gtxe2_i_RXOUTCLKFABRIC_UNCONNECTED),
        .RXOUTCLKPCS(NLW_gtxe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({\<const0> ,\<const1> ,\<const0> }),
        .RXPCOMMAALIGNEN(encommaalign_rec),
        .RXPCSRESET(gt0_rxpcsreset_in),
        .RXPD({TXPD[1],TXPD[1]}),
        .RXPHALIGN(\<const0> ),
        .RXPHALIGNDONE(NLW_gtxe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(\<const0> ),
        .RXPHDLYPD(\<const0> ),
        .RXPHDLYRESET(\<const0> ),
        .RXPHMONITOR(NLW_gtxe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(\<const0> ),
        .RXPHSLIPMONITOR(NLW_gtxe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(gt0_rxpmareset_in),
        .RXPOLARITY(gt0_rxpolarity_in),
        .RXPRBSCNTRESET(gt0_rxprbscntreset_in),
        .RXPRBSERR(gt0_rxprbserr_out),
        .RXPRBSSEL(gt0_rxprbssel_in),
        .RXQPIEN(\<const0> ),
        .RXQPISENN(NLW_gtxe2_i_RXQPISENN_UNCONNECTED),
        .RXQPISENP(NLW_gtxe2_i_RXQPISENP_UNCONNECTED),
        .RXRATE(gt0_rxrate_in),
        .RXRATEDONE(gt0_rxratedone_out),
        .RXRESETDONE(O2),
        .RXSLIDE(\<const0> ),
        .RXSTARTOFSEQ(NLW_gtxe2_i_RXSTARTOFSEQ_UNCONNECTED),
        .RXSTATUS(NLW_gtxe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYSCLKSEL({\<const0> ,\<const0> }),
        .RXUSERRDY(gt0_rxuserrdy_t),
        .RXUSRCLK(rxuserclk),
        .RXUSRCLK2(rxuserclk2),
        .RXVALID(NLW_gtxe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(\<const0> ),
        .TSTIN({\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> ,\<const1> }),
        .TSTOUT(NLW_gtxe2_i_TSTOUT_UNCONNECTED[9:0]),
        .TX8B10BBYPASS({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .TX8B10BEN(\<const1> ),
        .TXBUFDIFFCTRL({\<const1> ,\<const0> ,\<const0> }),
        .TXBUFSTATUS(gt0_txbufstatus_out),
        .TXCHARDISPMODE({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .TXCHARDISPVAL({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .TXCHARISK({\<const0> ,\<const0> ,\<const0> ,\<const0> ,Q}),
        .TXCOMFINISH(NLW_gtxe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(\<const0> ),
        .TXCOMSAS(\<const0> ),
        .TXCOMWAKE(\<const0> ),
        .TXDATA({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,txdata}),
        .TXDEEMPH(\<const0> ),
        .TXDETECTRX(\<const0> ),
        .TXDIFFCTRL(gt0_txdiffctrl_in),
        .TXDIFFPD(\<const0> ),
        .TXDLYBYPASS(\<const1> ),
        .TXDLYEN(\<const0> ),
        .TXDLYHOLD(\<const0> ),
        .TXDLYOVRDEN(\<const0> ),
        .TXDLYSRESET(\<const0> ),
        .TXDLYSRESETDONE(NLW_gtxe2_i_TXDLYSRESETDONE_UNCONNECTED),
        .TXDLYUPDOWN(\<const0> ),
        .TXELECIDLE(TXPD[1]),
        .TXGEARBOXREADY(NLW_gtxe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({\<const0> ,\<const0> ,\<const0> }),
        .TXINHIBIT(\<const0> ),
        .TXMAINCURSOR({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .TXMARGIN({\<const0> ,\<const0> ,\<const0> }),
        .TXOUTCLK(txoutclk),
        .TXOUTCLKFABRIC(n_38_gtxe2_i),
        .TXOUTCLKPCS(n_39_gtxe2_i),
        .TXOUTCLKSEL({\<const0> ,\<const1> ,\<const1> }),
        .TXPCSRESET(gt0_txpcsreset_in),
        .TXPD(TXPD),
        .TXPDELECIDLEMODE(\<const0> ),
        .TXPHALIGN(\<const0> ),
        .TXPHALIGNDONE(NLW_gtxe2_i_TXPHALIGNDONE_UNCONNECTED),
        .TXPHALIGNEN(\<const0> ),
        .TXPHDLYPD(\<const0> ),
        .TXPHDLYRESET(\<const0> ),
        .TXPHDLYTSTCLK(\<const0> ),
        .TXPHINIT(\<const0> ),
        .TXPHINITDONE(NLW_gtxe2_i_TXPHINITDONE_UNCONNECTED),
        .TXPHOVRDEN(\<const0> ),
        .TXPISOPD(\<const0> ),
        .TXPMARESET(gt0_txpmareset_in),
        .TXPOLARITY(gt0_txpolarity_in),
        .TXPOSTCURSOR(gt0_txpostcursor_in),
        .TXPOSTCURSORINV(\<const0> ),
        .TXPRBSFORCEERR(gt0_txprbsforceerr_in),
        .TXPRBSSEL(gt0_txprbssel_in),
        .TXPRECURSOR(gt0_txprecursor_in),
        .TXPRECURSORINV(\<const0> ),
        .TXQPIBIASEN(\<const0> ),
        .TXQPISENN(NLW_gtxe2_i_TXQPISENN_UNCONNECTED),
        .TXQPISENP(NLW_gtxe2_i_TXQPISENP_UNCONNECTED),
        .TXQPISTRONGPDOWN(\<const0> ),
        .TXQPIWEAKPUP(\<const0> ),
        .TXRATE({\<const0> ,\<const0> ,\<const0> }),
        .TXRATEDONE(NLW_gtxe2_i_TXRATEDONE_UNCONNECTED),
        .TXRESETDONE(O3),
        .TXSEQUENCE({\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .TXSTARTSEQ(\<const0> ),
        .TXSWING(\<const0> ),
        .TXSYSCLKSEL({\<const0> ,\<const0> }),
        .TXUSERRDY(gt0_txuserrdy_t),
        .TXUSRCLK(userclk),
        .TXUSRCLK2(userclk));
endmodule

module quadsgmiiquadsgmii_GTWIZARD_RX_STARTUP_FSM
   (O1,
    gt0_rxuserrdy_t,
    gt0_rxdfelfhold_i,
    gt0_gtrxreset_i,
    rxuserclk,
    independent_clock_bufg,
    I1,
    data_valid_reg2,
    I2,
    gt0_cpllrefclklost_i,
    pma_reset,
    mgt_rx_reset,
    gt0_gtrxreset_in,
    rx_cdrlocked);
  output O1;
  output gt0_rxuserrdy_t;
  output gt0_rxdfelfhold_i;
  output gt0_gtrxreset_i;
  input rxuserclk;
  input independent_clock_bufg;
  input I1;
  input data_valid_reg2;
  input I2;
  input gt0_cpllrefclklost_i;
  input pma_reset;
  input mgt_rx_reset;
  input gt0_gtrxreset_in;
  input rx_cdrlocked;

  wire \<const0> ;
  wire \<const1> ;
  wire I1;
  wire I2;
  wire O1;
  wire [31:0]adapt_count_reg;
  wire cplllock_sync;
  wire data_valid_reg2;
  wire data_valid_sync;
  wire gt0_cpllrefclklost_i;
  wire gt0_gtrxreset_i;
  wire gt0_gtrxreset_in;
  wire gt0_gtrxreset_t;
  wire gt0_rxdfelfhold_i;
  wire gt0_rxuserrdy_t;
  wire independent_clock_bufg;
  wire [7:0]init_wait_count_reg__0;
  wire init_wait_done;
  wire mgt_rx_reset;
  wire [9:0]mmcm_lock_count_reg__0;
  wire mmcm_lock_i;
  wire mmcm_lock_reclocked;
  wire \n_0_FSM_onehot_rx_state[10]_i_1 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_10 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_11 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_12 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_13 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_14 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_15 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_16 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_2 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_3 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_4 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_5 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_6 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_7 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_8 ;
  wire \n_0_FSM_onehot_rx_state[10]_i_9 ;
  wire \n_0_FSM_onehot_rx_state[1]_i_1 ;
  wire \n_0_FSM_onehot_rx_state[1]_i_2 ;
  wire \n_0_FSM_onehot_rx_state[1]_i_3 ;
  wire \n_0_FSM_onehot_rx_state[1]_i_4 ;
  wire \n_0_FSM_onehot_rx_state[1]_i_5 ;
  wire \n_0_FSM_onehot_rx_state[1]_i_7 ;
  wire \n_0_FSM_onehot_rx_state[2]_i_1 ;
  wire \n_0_FSM_onehot_rx_state[3]_i_1 ;
  wire \n_0_FSM_onehot_rx_state[4]_i_1 ;
  wire \n_0_FSM_onehot_rx_state[4]_i_2 ;
  wire \n_0_FSM_onehot_rx_state[4]_i_3 ;
  wire \n_0_FSM_onehot_rx_state[5]_i_1 ;
  wire \n_0_FSM_onehot_rx_state[6]_i_1 ;
  wire \n_0_FSM_onehot_rx_state[7]_i_1 ;
  wire \n_0_FSM_onehot_rx_state[8]_i_1 ;
  wire \n_0_FSM_onehot_rx_state[8]_i_2 ;
  wire \n_0_FSM_onehot_rx_state[8]_i_3 ;
  wire \n_0_FSM_onehot_rx_state[8]_i_4 ;
  wire \n_0_FSM_onehot_rx_state[9]_i_1 ;
  wire \n_0_FSM_onehot_rx_state_reg[0] ;
  wire \n_0_FSM_onehot_rx_state_reg[10] ;
  wire \n_0_FSM_onehot_rx_state_reg[1] ;
  wire \n_0_FSM_onehot_rx_state_reg[2] ;
  wire \n_0_FSM_onehot_rx_state_reg[3] ;
  wire \n_0_FSM_onehot_rx_state_reg[4] ;
  wire \n_0_FSM_onehot_rx_state_reg[5] ;
  wire \n_0_FSM_onehot_rx_state_reg[6] ;
  wire \n_0_FSM_onehot_rx_state_reg[7] ;
  wire \n_0_FSM_onehot_rx_state_reg[8] ;
  wire \n_0_FSM_onehot_rx_state_reg[9] ;
  wire n_0_RXDFEAGCHOLD_i_1;
  wire n_0_RXDFEAGCHOLD_i_2;
  wire n_0_RXUSERRDY_i_1;
  wire \n_0_adapt_count[0]_i_1 ;
  wire \n_0_adapt_count[0]_i_3 ;
  wire \n_0_adapt_count[0]_i_4 ;
  wire \n_0_adapt_count[0]_i_5 ;
  wire \n_0_adapt_count[0]_i_6 ;
  wire \n_0_adapt_count[12]_i_2 ;
  wire \n_0_adapt_count[12]_i_3 ;
  wire \n_0_adapt_count[12]_i_4 ;
  wire \n_0_adapt_count[12]_i_5 ;
  wire \n_0_adapt_count[16]_i_2 ;
  wire \n_0_adapt_count[16]_i_3 ;
  wire \n_0_adapt_count[16]_i_4 ;
  wire \n_0_adapt_count[16]_i_5 ;
  wire \n_0_adapt_count[20]_i_2 ;
  wire \n_0_adapt_count[20]_i_3 ;
  wire \n_0_adapt_count[20]_i_4 ;
  wire \n_0_adapt_count[20]_i_5 ;
  wire \n_0_adapt_count[24]_i_2 ;
  wire \n_0_adapt_count[24]_i_3 ;
  wire \n_0_adapt_count[24]_i_4 ;
  wire \n_0_adapt_count[24]_i_5 ;
  wire \n_0_adapt_count[28]_i_2 ;
  wire \n_0_adapt_count[28]_i_3 ;
  wire \n_0_adapt_count[28]_i_4 ;
  wire \n_0_adapt_count[28]_i_5 ;
  wire \n_0_adapt_count[4]_i_2 ;
  wire \n_0_adapt_count[4]_i_3 ;
  wire \n_0_adapt_count[4]_i_4 ;
  wire \n_0_adapt_count[4]_i_5 ;
  wire \n_0_adapt_count[8]_i_2 ;
  wire \n_0_adapt_count[8]_i_3 ;
  wire \n_0_adapt_count[8]_i_4 ;
  wire \n_0_adapt_count[8]_i_5 ;
  wire \n_0_adapt_count_reg[0]_i_2 ;
  wire \n_0_adapt_count_reg[12]_i_1 ;
  wire \n_0_adapt_count_reg[16]_i_1 ;
  wire \n_0_adapt_count_reg[20]_i_1 ;
  wire \n_0_adapt_count_reg[24]_i_1 ;
  wire \n_0_adapt_count_reg[4]_i_1 ;
  wire \n_0_adapt_count_reg[8]_i_1 ;
  wire n_0_adapt_count_reset_i_1;
  wire n_0_check_tlock_max_i_1;
  wire n_0_check_tlock_max_i_2;
  wire n_0_check_tlock_max_reg;
  wire n_0_gtrxreset_i_i_1;
  wire \n_0_init_wait_count[6]_i_2__0 ;
  wire \n_0_init_wait_count[7]_i_1__0 ;
  wire \n_0_init_wait_count[7]_i_3__0 ;
  wire \n_0_init_wait_count[7]_i_4__0 ;
  wire n_0_init_wait_done_i_1__0;
  wire \n_0_mmcm_lock_count[9]_i_1__0 ;
  wire \n_0_mmcm_lock_count[9]_i_2__0 ;
  wire \n_0_mmcm_lock_count[9]_i_4__0 ;
  wire n_0_mmcm_lock_reclocked_i_1__0;
  wire n_0_mmcm_lock_reclocked_i_2__0;
  wire n_0_reset_time_out_i_1__0;
  wire n_0_reset_time_out_i_2__0;
  wire n_0_reset_time_out_i_3;
  wire n_0_reset_time_out_i_4;
  wire n_0_reset_time_out_i_5;
  wire n_0_reset_time_out_reg;
  wire n_0_run_phase_alignment_int_i_1__0;
  wire n_0_run_phase_alignment_int_reg;
  wire n_0_run_phase_alignment_int_s3_reg;
  wire n_0_rx_fsm_reset_done_int_i_1;
  wire n_0_rx_fsm_reset_done_int_i_2;
  wire n_0_rx_fsm_reset_done_int_i_3;
  wire n_0_rx_fsm_reset_done_int_i_4;
  wire n_0_time_out_1us_i_1;
  wire n_0_time_out_1us_i_2;
  wire n_0_time_out_1us_i_3;
  wire n_0_time_out_1us_i_4;
  wire n_0_time_out_2ms_i_1;
  wire n_0_time_out_2ms_i_2;
  wire n_0_time_out_2ms_i_3;
  wire n_0_time_out_2ms_i_4;
  wire n_0_time_out_2ms_i_5;
  wire n_0_time_out_adapt_i_1;
  wire n_0_time_out_adapt_i_2;
  wire n_0_time_out_adapt_i_3;
  wire n_0_time_out_adapt_i_4;
  wire n_0_time_out_adapt_i_5;
  wire n_0_time_out_adapt_i_6;
  wire n_0_time_out_adapt_i_7;
  wire n_0_time_out_adapt_i_8;
  wire \n_0_time_out_counter[0]_i_1__0 ;
  wire \n_0_time_out_counter[0]_i_3 ;
  wire \n_0_time_out_counter[0]_i_4 ;
  wire \n_0_time_out_counter[0]_i_5__0 ;
  wire \n_0_time_out_counter[0]_i_6__0 ;
  wire \n_0_time_out_counter[0]_i_7 ;
  wire \n_0_time_out_counter[0]_i_8 ;
  wire \n_0_time_out_counter[12]_i_2__0 ;
  wire \n_0_time_out_counter[12]_i_3__0 ;
  wire \n_0_time_out_counter[12]_i_4__0 ;
  wire \n_0_time_out_counter[12]_i_5__0 ;
  wire \n_0_time_out_counter[16]_i_2__0 ;
  wire \n_0_time_out_counter[16]_i_3__0 ;
  wire \n_0_time_out_counter[16]_i_4__0 ;
  wire \n_0_time_out_counter[4]_i_2__0 ;
  wire \n_0_time_out_counter[4]_i_3__0 ;
  wire \n_0_time_out_counter[4]_i_4__0 ;
  wire \n_0_time_out_counter[4]_i_5__0 ;
  wire \n_0_time_out_counter[8]_i_2__0 ;
  wire \n_0_time_out_counter[8]_i_3__0 ;
  wire \n_0_time_out_counter[8]_i_4__0 ;
  wire \n_0_time_out_counter[8]_i_5__0 ;
  wire \n_0_time_out_counter_reg[0]_i_2__0 ;
  wire \n_0_time_out_counter_reg[12]_i_1__0 ;
  wire \n_0_time_out_counter_reg[4]_i_1__0 ;
  wire \n_0_time_out_counter_reg[8]_i_1__0 ;
  wire n_0_time_out_wait_bypass_i_1__0;
  wire n_0_time_out_wait_bypass_i_2__0;
  wire n_0_time_out_wait_bypass_i_3__0;
  wire n_0_time_out_wait_bypass_reg;
  wire n_0_time_tlock_max_i_1;
  wire n_0_time_tlock_max_i_3;
  wire n_0_time_tlock_max_i_4__0;
  wire n_0_time_tlock_max_i_5;
  wire \n_0_wait_bypass_count[0]_i_1__0 ;
  wire \n_0_wait_bypass_count[0]_i_2__0 ;
  wire \n_0_wait_bypass_count[0]_i_4__0 ;
  wire \n_0_wait_bypass_count[0]_i_5__0 ;
  wire \n_0_wait_bypass_count[0]_i_6__0 ;
  wire \n_0_wait_bypass_count[0]_i_7__0 ;
  wire \n_0_wait_bypass_count[12]_i_2__0 ;
  wire \n_0_wait_bypass_count[4]_i_2__0 ;
  wire \n_0_wait_bypass_count[4]_i_3__0 ;
  wire \n_0_wait_bypass_count[4]_i_4__0 ;
  wire \n_0_wait_bypass_count[4]_i_5__0 ;
  wire \n_0_wait_bypass_count[8]_i_2__0 ;
  wire \n_0_wait_bypass_count[8]_i_3__0 ;
  wire \n_0_wait_bypass_count[8]_i_4__0 ;
  wire \n_0_wait_bypass_count[8]_i_5__0 ;
  wire \n_0_wait_bypass_count_reg[0]_i_3__0 ;
  wire \n_0_wait_bypass_count_reg[4]_i_1__0 ;
  wire \n_0_wait_bypass_count_reg[8]_i_1__0 ;
  wire \n_0_wait_time_cnt[0]_i_10__0 ;
  wire \n_0_wait_time_cnt[0]_i_1__0 ;
  wire \n_0_wait_time_cnt[0]_i_2__0 ;
  wire \n_0_wait_time_cnt[0]_i_4__0 ;
  wire \n_0_wait_time_cnt[0]_i_5__0 ;
  wire \n_0_wait_time_cnt[0]_i_6__0 ;
  wire \n_0_wait_time_cnt[0]_i_7 ;
  wire \n_0_wait_time_cnt[0]_i_8__0 ;
  wire \n_0_wait_time_cnt[0]_i_9__0 ;
  wire \n_0_wait_time_cnt[12]_i_2__0 ;
  wire \n_0_wait_time_cnt[12]_i_3__0 ;
  wire \n_0_wait_time_cnt[12]_i_4__0 ;
  wire \n_0_wait_time_cnt[12]_i_5__0 ;
  wire \n_0_wait_time_cnt[4]_i_2__0 ;
  wire \n_0_wait_time_cnt[4]_i_3__0 ;
  wire \n_0_wait_time_cnt[4]_i_4__0 ;
  wire \n_0_wait_time_cnt[4]_i_5__0 ;
  wire \n_0_wait_time_cnt[8]_i_2__0 ;
  wire \n_0_wait_time_cnt[8]_i_3__0 ;
  wire \n_0_wait_time_cnt[8]_i_4__0 ;
  wire \n_0_wait_time_cnt[8]_i_5__0 ;
  wire \n_0_wait_time_cnt_reg[0]_i_3__0 ;
  wire \n_0_wait_time_cnt_reg[4]_i_1__0 ;
  wire \n_0_wait_time_cnt_reg[8]_i_1__0 ;
  wire \n_1_adapt_count_reg[0]_i_2 ;
  wire \n_1_adapt_count_reg[12]_i_1 ;
  wire \n_1_adapt_count_reg[16]_i_1 ;
  wire \n_1_adapt_count_reg[20]_i_1 ;
  wire \n_1_adapt_count_reg[24]_i_1 ;
  wire \n_1_adapt_count_reg[28]_i_1 ;
  wire \n_1_adapt_count_reg[4]_i_1 ;
  wire \n_1_adapt_count_reg[8]_i_1 ;
  wire \n_1_time_out_counter_reg[0]_i_2__0 ;
  wire \n_1_time_out_counter_reg[12]_i_1__0 ;
  wire \n_1_time_out_counter_reg[4]_i_1__0 ;
  wire \n_1_time_out_counter_reg[8]_i_1__0 ;
  wire \n_1_wait_bypass_count_reg[0]_i_3__0 ;
  wire \n_1_wait_bypass_count_reg[4]_i_1__0 ;
  wire \n_1_wait_bypass_count_reg[8]_i_1__0 ;
  wire \n_1_wait_time_cnt_reg[0]_i_3__0 ;
  wire \n_1_wait_time_cnt_reg[12]_i_1__0 ;
  wire \n_1_wait_time_cnt_reg[4]_i_1__0 ;
  wire \n_1_wait_time_cnt_reg[8]_i_1__0 ;
  wire \n_2_adapt_count_reg[0]_i_2 ;
  wire \n_2_adapt_count_reg[12]_i_1 ;
  wire \n_2_adapt_count_reg[16]_i_1 ;
  wire \n_2_adapt_count_reg[20]_i_1 ;
  wire \n_2_adapt_count_reg[24]_i_1 ;
  wire \n_2_adapt_count_reg[28]_i_1 ;
  wire \n_2_adapt_count_reg[4]_i_1 ;
  wire \n_2_adapt_count_reg[8]_i_1 ;
  wire \n_2_time_out_counter_reg[0]_i_2__0 ;
  wire \n_2_time_out_counter_reg[12]_i_1__0 ;
  wire \n_2_time_out_counter_reg[16]_i_1__0 ;
  wire \n_2_time_out_counter_reg[4]_i_1__0 ;
  wire \n_2_time_out_counter_reg[8]_i_1__0 ;
  wire \n_2_wait_bypass_count_reg[0]_i_3__0 ;
  wire \n_2_wait_bypass_count_reg[4]_i_1__0 ;
  wire \n_2_wait_bypass_count_reg[8]_i_1__0 ;
  wire \n_2_wait_time_cnt_reg[0]_i_3__0 ;
  wire \n_2_wait_time_cnt_reg[12]_i_1__0 ;
  wire \n_2_wait_time_cnt_reg[4]_i_1__0 ;
  wire \n_2_wait_time_cnt_reg[8]_i_1__0 ;
  wire \n_3_adapt_count_reg[0]_i_2 ;
  wire \n_3_adapt_count_reg[12]_i_1 ;
  wire \n_3_adapt_count_reg[16]_i_1 ;
  wire \n_3_adapt_count_reg[20]_i_1 ;
  wire \n_3_adapt_count_reg[24]_i_1 ;
  wire \n_3_adapt_count_reg[28]_i_1 ;
  wire \n_3_adapt_count_reg[4]_i_1 ;
  wire \n_3_adapt_count_reg[8]_i_1 ;
  wire \n_3_time_out_counter_reg[0]_i_2__0 ;
  wire \n_3_time_out_counter_reg[12]_i_1__0 ;
  wire \n_3_time_out_counter_reg[16]_i_1__0 ;
  wire \n_3_time_out_counter_reg[4]_i_1__0 ;
  wire \n_3_time_out_counter_reg[8]_i_1__0 ;
  wire \n_3_wait_bypass_count_reg[0]_i_3__0 ;
  wire \n_3_wait_bypass_count_reg[4]_i_1__0 ;
  wire \n_3_wait_bypass_count_reg[8]_i_1__0 ;
  wire \n_3_wait_time_cnt_reg[0]_i_3__0 ;
  wire \n_3_wait_time_cnt_reg[12]_i_1__0 ;
  wire \n_3_wait_time_cnt_reg[4]_i_1__0 ;
  wire \n_3_wait_time_cnt_reg[8]_i_1__0 ;
  wire \n_4_adapt_count_reg[0]_i_2 ;
  wire \n_4_adapt_count_reg[12]_i_1 ;
  wire \n_4_adapt_count_reg[16]_i_1 ;
  wire \n_4_adapt_count_reg[20]_i_1 ;
  wire \n_4_adapt_count_reg[24]_i_1 ;
  wire \n_4_adapt_count_reg[28]_i_1 ;
  wire \n_4_adapt_count_reg[4]_i_1 ;
  wire \n_4_adapt_count_reg[8]_i_1 ;
  wire \n_4_time_out_counter_reg[0]_i_2__0 ;
  wire \n_4_time_out_counter_reg[12]_i_1__0 ;
  wire \n_4_time_out_counter_reg[4]_i_1__0 ;
  wire \n_4_time_out_counter_reg[8]_i_1__0 ;
  wire \n_4_wait_bypass_count_reg[0]_i_3__0 ;
  wire \n_4_wait_bypass_count_reg[4]_i_1__0 ;
  wire \n_4_wait_bypass_count_reg[8]_i_1__0 ;
  wire \n_4_wait_time_cnt_reg[0]_i_3__0 ;
  wire \n_4_wait_time_cnt_reg[12]_i_1__0 ;
  wire \n_4_wait_time_cnt_reg[4]_i_1__0 ;
  wire \n_4_wait_time_cnt_reg[8]_i_1__0 ;
  wire \n_5_adapt_count_reg[0]_i_2 ;
  wire \n_5_adapt_count_reg[12]_i_1 ;
  wire \n_5_adapt_count_reg[16]_i_1 ;
  wire \n_5_adapt_count_reg[20]_i_1 ;
  wire \n_5_adapt_count_reg[24]_i_1 ;
  wire \n_5_adapt_count_reg[28]_i_1 ;
  wire \n_5_adapt_count_reg[4]_i_1 ;
  wire \n_5_adapt_count_reg[8]_i_1 ;
  wire \n_5_time_out_counter_reg[0]_i_2__0 ;
  wire \n_5_time_out_counter_reg[12]_i_1__0 ;
  wire \n_5_time_out_counter_reg[16]_i_1__0 ;
  wire \n_5_time_out_counter_reg[4]_i_1__0 ;
  wire \n_5_time_out_counter_reg[8]_i_1__0 ;
  wire \n_5_wait_bypass_count_reg[0]_i_3__0 ;
  wire \n_5_wait_bypass_count_reg[4]_i_1__0 ;
  wire \n_5_wait_bypass_count_reg[8]_i_1__0 ;
  wire \n_5_wait_time_cnt_reg[0]_i_3__0 ;
  wire \n_5_wait_time_cnt_reg[12]_i_1__0 ;
  wire \n_5_wait_time_cnt_reg[4]_i_1__0 ;
  wire \n_5_wait_time_cnt_reg[8]_i_1__0 ;
  wire \n_6_adapt_count_reg[0]_i_2 ;
  wire \n_6_adapt_count_reg[12]_i_1 ;
  wire \n_6_adapt_count_reg[16]_i_1 ;
  wire \n_6_adapt_count_reg[20]_i_1 ;
  wire \n_6_adapt_count_reg[24]_i_1 ;
  wire \n_6_adapt_count_reg[28]_i_1 ;
  wire \n_6_adapt_count_reg[4]_i_1 ;
  wire \n_6_adapt_count_reg[8]_i_1 ;
  wire \n_6_time_out_counter_reg[0]_i_2__0 ;
  wire \n_6_time_out_counter_reg[12]_i_1__0 ;
  wire \n_6_time_out_counter_reg[16]_i_1__0 ;
  wire \n_6_time_out_counter_reg[4]_i_1__0 ;
  wire \n_6_time_out_counter_reg[8]_i_1__0 ;
  wire \n_6_wait_bypass_count_reg[0]_i_3__0 ;
  wire \n_6_wait_bypass_count_reg[4]_i_1__0 ;
  wire \n_6_wait_bypass_count_reg[8]_i_1__0 ;
  wire \n_6_wait_time_cnt_reg[0]_i_3__0 ;
  wire \n_6_wait_time_cnt_reg[12]_i_1__0 ;
  wire \n_6_wait_time_cnt_reg[4]_i_1__0 ;
  wire \n_6_wait_time_cnt_reg[8]_i_1__0 ;
  wire \n_7_adapt_count_reg[0]_i_2 ;
  wire \n_7_adapt_count_reg[12]_i_1 ;
  wire \n_7_adapt_count_reg[16]_i_1 ;
  wire \n_7_adapt_count_reg[20]_i_1 ;
  wire \n_7_adapt_count_reg[24]_i_1 ;
  wire \n_7_adapt_count_reg[28]_i_1 ;
  wire \n_7_adapt_count_reg[4]_i_1 ;
  wire \n_7_adapt_count_reg[8]_i_1 ;
  wire \n_7_time_out_counter_reg[0]_i_2__0 ;
  wire \n_7_time_out_counter_reg[12]_i_1__0 ;
  wire \n_7_time_out_counter_reg[16]_i_1__0 ;
  wire \n_7_time_out_counter_reg[4]_i_1__0 ;
  wire \n_7_time_out_counter_reg[8]_i_1__0 ;
  wire \n_7_wait_bypass_count_reg[0]_i_3__0 ;
  wire \n_7_wait_bypass_count_reg[12]_i_1__0 ;
  wire \n_7_wait_bypass_count_reg[4]_i_1__0 ;
  wire \n_7_wait_bypass_count_reg[8]_i_1__0 ;
  wire \n_7_wait_time_cnt_reg[0]_i_3__0 ;
  wire \n_7_wait_time_cnt_reg[12]_i_1__0 ;
  wire \n_7_wait_time_cnt_reg[4]_i_1__0 ;
  wire \n_7_wait_time_cnt_reg[8]_i_1__0 ;
  wire [7:0]p_0_in__0;
  wire [9:0]p_0_in__2;
  wire pma_reset;
  wire recclk_mon_count_reset;
  wire run_phase_alignment_int_s2;
  wire rx_cdrlocked;
  wire rx_fsm_reset_done_int_s2;
  wire rx_fsm_reset_done_int_s3;
  wire rx_state15_out;
  wire [2:2]rx_state_reg;
  wire rxresetdone_s2;
  wire rxresetdone_s3;
  wire rxuserclk;
  wire time_out_1us;
  wire time_out_2ms;
  wire time_out_adapt;
  wire [18:0]time_out_counter_reg;
  wire time_out_wait_bypass_s2;
  wire time_out_wait_bypass_s3;
  wire time_tlock_max;
  wire time_tlock_max0;
  wire [12:0]wait_bypass_count_reg;
  wire [15:0]wait_time_cnt_reg;
  wire [3:3]\NLW_adapt_count_reg[28]_i_1_CO_UNCONNECTED ;
  wire NLW_sync_cpllrefclklost_data_out_UNCONNECTED;
  wire [3:2]\NLW_time_out_counter_reg[16]_i_1__0_CO_UNCONNECTED ;
  wire [3:3]\NLW_time_out_counter_reg[16]_i_1__0_O_UNCONNECTED ;
  wire [3:0]\NLW_wait_bypass_count_reg[12]_i_1__0_CO_UNCONNECTED ;
  wire [3:1]\NLW_wait_bypass_count_reg[12]_i_1__0_O_UNCONNECTED ;
  wire [3:3]\NLW_wait_time_cnt_reg[12]_i_1__0_CO_UNCONNECTED ;

LUT5 #(
    .INIT(32'hFBEAFBFB)) 
     \FSM_onehot_rx_state[10]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[10]_i_3 ),
        .I1(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_5 ),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_6 ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_7 ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_1 ));
LUT6 #(
    .INIT(64'h0000000100000116)) 
     \FSM_onehot_rx_state[10]_i_10 
       (.I0(\n_0_FSM_onehot_rx_state_reg[3] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[5] ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_16 ),
        .I5(\n_0_FSM_onehot_rx_state_reg[1] ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_10 ));
(* SOFT_HLUTNM = "soft_lutpair6" *) 
   LUT5 #(
    .INIT(32'hFFFFFEEB)) 
     \FSM_onehot_rx_state[10]_i_11 
       (.I0(rx_state_reg),
        .I1(\n_0_FSM_onehot_rx_state_reg[10] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[8] ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_15 ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_11 ));
LUT4 #(
    .INIT(16'h0DFF)) 
     \FSM_onehot_rx_state[10]_i_12 
       (.I0(time_out_2ms),
        .I1(n_0_reset_time_out_reg),
        .I2(rxresetdone_s3),
        .I3(rx_state_reg),
        .O(\n_0_FSM_onehot_rx_state[10]_i_12 ));
(* SOFT_HLUTNM = "soft_lutpair3" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_rx_state[10]_i_13 
       (.I0(\n_0_FSM_onehot_rx_state_reg[3] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[10] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[6] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[7] ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_13 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_rx_state[10]_i_14 
       (.I0(\n_0_FSM_onehot_rx_state_reg[5] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[4] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[8] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[0] ),
        .I5(\n_0_FSM_onehot_rx_state_reg[1] ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_14 ));
LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_rx_state[10]_i_15 
       (.I0(\n_0_FSM_onehot_rx_state_reg[1] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[3] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[2] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[0] ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_15 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_rx_state[10]_i_16 
       (.I0(\n_0_FSM_onehot_rx_state_reg[4] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[6] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[0] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[2] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[8] ),
        .I5(\n_0_FSM_onehot_rx_state_reg[10] ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_16 ));
LUT4 #(
    .INIT(16'h0080)) 
     \FSM_onehot_rx_state[10]_i_2 
       (.I0(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .I1(\n_0_FSM_onehot_rx_state[10]_i_9 ),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_10 ),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_11 ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_2 ));
LUT5 #(
    .INIT(32'h38303833)) 
     \FSM_onehot_rx_state[10]_i_3 
       (.I0(init_wait_done),
        .I1(n_0_check_tlock_max_i_2),
        .I2(rx_state_reg),
        .I3(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I4(data_valid_sync),
        .O(\n_0_FSM_onehot_rx_state[10]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair5" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \FSM_onehot_rx_state[10]_i_4 
       (.I0(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[5] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[1] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[3] ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_4 ));
LUT5 #(
    .INIT(32'h80F08FF0)) 
     \FSM_onehot_rx_state[10]_i_5 
       (.I0(rx_cdrlocked),
        .I1(rx_state_reg),
        .I2(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I3(n_0_check_tlock_max_i_2),
        .I4(\n_0_wait_time_cnt[0]_i_2__0 ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_5 ));
LUT6 #(
    .INIT(64'hF2FFF20000FF00FF)) 
     \FSM_onehot_rx_state[10]_i_6 
       (.I0(time_tlock_max),
        .I1(n_0_reset_time_out_reg),
        .I2(mmcm_lock_reclocked),
        .I3(n_0_check_tlock_max_i_2),
        .I4(data_valid_sync),
        .I5(\n_0_wait_time_cnt[0]_i_4__0 ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_6 ));
LUT6 #(
    .INIT(64'hF100F100F100F0F0)) 
     \FSM_onehot_rx_state[10]_i_7 
       (.I0(time_out_2ms),
        .I1(cplllock_sync),
        .I2(n_0_reset_time_out_i_4),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_12 ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_13 ),
        .I5(\n_0_FSM_onehot_rx_state_reg[2] ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
     \FSM_onehot_rx_state[10]_i_8 
       (.I0(\n_0_FSM_onehot_rx_state[10]_i_14 ),
        .I1(\n_0_FSM_onehot_rx_state_reg[2] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[3] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[6] ),
        .I5(\n_0_FSM_onehot_rx_state_reg[10] ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFFFDFFFDFDDF)) 
     \FSM_onehot_rx_state[10]_i_9 
       (.I0(n_0_check_tlock_max_i_2),
        .I1(\n_0_FSM_onehot_rx_state[10]_i_15 ),
        .I2(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[6] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[5] ),
        .I5(\n_0_FSM_onehot_rx_state_reg[4] ),
        .O(\n_0_FSM_onehot_rx_state[10]_i_9 ));
LUT5 #(
    .INIT(32'hB8FFB800)) 
     \FSM_onehot_rx_state[1]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[1]_i_2 ),
        .I1(\n_0_FSM_onehot_rx_state[8]_i_3 ),
        .I2(\n_0_FSM_onehot_rx_state[1]_i_3 ),
        .I3(\n_0_FSM_onehot_rx_state[8]_i_2 ),
        .I4(\n_0_FSM_onehot_rx_state[1]_i_4 ),
        .O(\n_0_FSM_onehot_rx_state[1]_i_1 ));
LUT5 #(
    .INIT(32'hAAAAA4AA)) 
     \FSM_onehot_rx_state[1]_i_2 
       (.I0(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .I1(time_out_2ms),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I3(\n_0_FSM_onehot_rx_state[1]_i_5 ),
        .I4(\n_0_FSM_onehot_rx_state[4]_i_3 ),
        .O(\n_0_FSM_onehot_rx_state[1]_i_2 ));
LUT6 #(
    .INIT(64'h0000000000B80000)) 
     \FSM_onehot_rx_state[1]_i_3 
       (.I0(rx_state15_out),
        .I1(\n_0_FSM_onehot_rx_state[8]_i_4 ),
        .I2(\n_0_FSM_onehot_rx_state[1]_i_7 ),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I4(\n_0_FSM_onehot_rx_state[1]_i_5 ),
        .I5(\n_0_FSM_onehot_rx_state[4]_i_3 ),
        .O(\n_0_FSM_onehot_rx_state[1]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair2" *) 
   LUT5 #(
    .INIT(32'h40404000)) 
     \FSM_onehot_rx_state[1]_i_4 
       (.I0(\n_0_FSM_onehot_rx_state[10]_i_10 ),
        .I1(time_out_wait_bypass_s3),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_9 ),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_11 ),
        .O(\n_0_FSM_onehot_rx_state[1]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair5" *) 
   LUT5 #(
    .INIT(32'h03030337)) 
     \FSM_onehot_rx_state[1]_i_5 
       (.I0(\n_0_FSM_onehot_rx_state_reg[3] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[1] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[5] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[9] ),
        .O(\n_0_FSM_onehot_rx_state[1]_i_5 ));
LUT2 #(
    .INIT(4'h2)) 
     \FSM_onehot_rx_state[1]_i_6 
       (.I0(time_out_2ms),
        .I1(n_0_reset_time_out_reg),
        .O(rx_state15_out));
(* SOFT_HLUTNM = "soft_lutpair17" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \FSM_onehot_rx_state[1]_i_7 
       (.I0(time_tlock_max),
        .I1(n_0_reset_time_out_reg),
        .O(\n_0_FSM_onehot_rx_state[1]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair9" *) 
   LUT4 #(
    .INIT(16'h8000)) 
     \FSM_onehot_rx_state[2]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_rx_state[8]_i_3 ),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_10 ),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .O(\n_0_FSM_onehot_rx_state[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair11" *) 
   LUT4 #(
    .INIT(16'h0008)) 
     \FSM_onehot_rx_state[3]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_rx_state[8]_i_3 ),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_10 ),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .O(\n_0_FSM_onehot_rx_state[3]_i_1 ));
LUT5 #(
    .INIT(32'h00000800)) 
     \FSM_onehot_rx_state[4]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_rx_state[8]_i_3 ),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .I3(\n_0_FSM_onehot_rx_state[4]_i_2 ),
        .I4(\n_0_FSM_onehot_rx_state[4]_i_3 ),
        .O(\n_0_FSM_onehot_rx_state[4]_i_1 ));
LUT6 #(
    .INIT(64'h0000015500010154)) 
     \FSM_onehot_rx_state[4]_i_2 
       (.I0(time_out_2ms),
        .I1(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[5] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[1] ),
        .I5(\n_0_FSM_onehot_rx_state_reg[3] ),
        .O(\n_0_FSM_onehot_rx_state[4]_i_2 ));
LUT5 #(
    .INIT(32'hFFFFEAE8)) 
     \FSM_onehot_rx_state[4]_i_3 
       (.I0(\n_0_FSM_onehot_rx_state_reg[3] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[5] ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_16 ),
        .O(\n_0_FSM_onehot_rx_state[4]_i_3 ));
(* SOFT_HLUTNM = "soft_lutpair11" *) 
   LUT4 #(
    .INIT(16'h0020)) 
     \FSM_onehot_rx_state[5]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_rx_state[10]_i_10 ),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .I3(\n_0_FSM_onehot_rx_state[8]_i_3 ),
        .O(\n_0_FSM_onehot_rx_state[5]_i_1 ));
LUT6 #(
    .INIT(64'h00000000A2000000)) 
     \FSM_onehot_rx_state[6]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[8]_i_2 ),
        .I1(time_tlock_max),
        .I2(n_0_reset_time_out_reg),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_10 ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .I5(\n_0_FSM_onehot_rx_state[8]_i_3 ),
        .O(\n_0_FSM_onehot_rx_state[6]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair9" *) 
   LUT4 #(
    .INIT(16'h0002)) 
     \FSM_onehot_rx_state[7]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_rx_state[10]_i_10 ),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .I3(\n_0_FSM_onehot_rx_state[8]_i_3 ),
        .O(\n_0_FSM_onehot_rx_state[7]_i_1 ));
LUT6 #(
    .INIT(64'h000000000000A200)) 
     \FSM_onehot_rx_state[8]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[8]_i_2 ),
        .I1(time_out_2ms),
        .I2(n_0_reset_time_out_reg),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_10 ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .I5(\n_0_FSM_onehot_rx_state[8]_i_3 ),
        .O(\n_0_FSM_onehot_rx_state[8]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair6" *) 
   LUT5 #(
    .INIT(32'hFFFFFFE9)) 
     \FSM_onehot_rx_state[8]_i_2 
       (.I0(\n_0_FSM_onehot_rx_state_reg[10] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[8] ),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_15 ),
        .I4(rx_state_reg),
        .O(\n_0_FSM_onehot_rx_state[8]_i_2 ));
LUT3 #(
    .INIT(8'h8A)) 
     \FSM_onehot_rx_state[8]_i_3 
       (.I0(\n_0_FSM_onehot_rx_state[10]_i_9 ),
        .I1(\n_0_FSM_onehot_rx_state[8]_i_2 ),
        .I2(\n_0_FSM_onehot_rx_state[8]_i_4 ),
        .O(\n_0_FSM_onehot_rx_state[8]_i_3 ));
LUT6 #(
    .INIT(64'h0000000100010114)) 
     \FSM_onehot_rx_state[8]_i_4 
       (.I0(\n_0_FSM_onehot_rx_state[10]_i_14 ),
        .I1(\n_0_FSM_onehot_rx_state_reg[2] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[3] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[6] ),
        .I5(\n_0_FSM_onehot_rx_state_reg[10] ),
        .O(\n_0_FSM_onehot_rx_state[8]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair2" *) 
   LUT5 #(
    .INIT(32'h00001FFF)) 
     \FSM_onehot_rx_state[9]_i_1 
       (.I0(\n_0_FSM_onehot_rx_state[10]_i_10 ),
        .I1(time_out_wait_bypass_s3),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_8 ),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_9 ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_11 ),
        .O(\n_0_FSM_onehot_rx_state[9]_i_1 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_rx_state_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_rx_state_reg[0] ),
        .S(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[10] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[10]_i_2 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[10] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[1]_i_1 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[1] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[2]_i_1 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[2] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[3]_i_1 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[3] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[4]_i_1 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[4] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[5]_i_1 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[5] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[6]_i_1 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[6] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[7]_i_1 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[7] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[8]_i_1 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[8] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_rx_state_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_rx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_rx_state[9]_i_1 ),
        .Q(\n_0_FSM_onehot_rx_state_reg[9] ),
        .R(pma_reset));
GND GND
       (.G(\<const0> ));
LUT6 #(
    .INIT(64'h00000000AABAAAAA)) 
     RXDFEAGCHOLD_i_1
       (.I0(gt0_rxdfelfhold_i),
        .I1(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I2(time_out_adapt),
        .I3(rx_state_reg),
        .I4(n_0_RXDFEAGCHOLD_i_2),
        .I5(pma_reset),
        .O(n_0_RXDFEAGCHOLD_i_1));
(* SOFT_HLUTNM = "soft_lutpair12" *) 
   LUT4 #(
    .INIT(16'hAAA8)) 
     RXDFEAGCHOLD_i_2
       (.I0(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I1(\n_0_FSM_onehot_rx_state_reg[8] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[10] ),
        .O(n_0_RXDFEAGCHOLD_i_2));
FDRE #(
    .INIT(1'b0)) 
     RXDFEAGCHOLD_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_RXDFEAGCHOLD_i_1),
        .Q(gt0_rxdfelfhold_i),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000AAAAB2AA)) 
     RXUSERRDY_i_1
       (.I0(gt0_rxuserrdy_t),
        .I1(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I2(rx_state_reg),
        .I3(n_0_check_tlock_max_i_2),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I5(pma_reset),
        .O(n_0_RXUSERRDY_i_1));
FDRE #(
    .INIT(1'b0)) 
     RXUSERRDY_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_RXUSERRDY_i_1),
        .Q(gt0_rxuserrdy_t),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT1 #(
    .INIT(2'h1)) 
     \adapt_count[0]_i_1 
       (.I0(n_0_time_out_adapt_i_2),
        .O(\n_0_adapt_count[0]_i_1 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[0]_i_3 
       (.I0(adapt_count_reg[3]),
        .O(\n_0_adapt_count[0]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[0]_i_4 
       (.I0(adapt_count_reg[2]),
        .O(\n_0_adapt_count[0]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[0]_i_5 
       (.I0(adapt_count_reg[1]),
        .O(\n_0_adapt_count[0]_i_5 ));
LUT1 #(
    .INIT(2'h1)) 
     \adapt_count[0]_i_6 
       (.I0(adapt_count_reg[0]),
        .O(\n_0_adapt_count[0]_i_6 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[12]_i_2 
       (.I0(adapt_count_reg[15]),
        .O(\n_0_adapt_count[12]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[12]_i_3 
       (.I0(adapt_count_reg[14]),
        .O(\n_0_adapt_count[12]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[12]_i_4 
       (.I0(adapt_count_reg[13]),
        .O(\n_0_adapt_count[12]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[12]_i_5 
       (.I0(adapt_count_reg[12]),
        .O(\n_0_adapt_count[12]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[16]_i_2 
       (.I0(adapt_count_reg[19]),
        .O(\n_0_adapt_count[16]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[16]_i_3 
       (.I0(adapt_count_reg[18]),
        .O(\n_0_adapt_count[16]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[16]_i_4 
       (.I0(adapt_count_reg[17]),
        .O(\n_0_adapt_count[16]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[16]_i_5 
       (.I0(adapt_count_reg[16]),
        .O(\n_0_adapt_count[16]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[20]_i_2 
       (.I0(adapt_count_reg[23]),
        .O(\n_0_adapt_count[20]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[20]_i_3 
       (.I0(adapt_count_reg[22]),
        .O(\n_0_adapt_count[20]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[20]_i_4 
       (.I0(adapt_count_reg[21]),
        .O(\n_0_adapt_count[20]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[20]_i_5 
       (.I0(adapt_count_reg[20]),
        .O(\n_0_adapt_count[20]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[24]_i_2 
       (.I0(adapt_count_reg[27]),
        .O(\n_0_adapt_count[24]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[24]_i_3 
       (.I0(adapt_count_reg[26]),
        .O(\n_0_adapt_count[24]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[24]_i_4 
       (.I0(adapt_count_reg[25]),
        .O(\n_0_adapt_count[24]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[24]_i_5 
       (.I0(adapt_count_reg[24]),
        .O(\n_0_adapt_count[24]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[28]_i_2 
       (.I0(adapt_count_reg[31]),
        .O(\n_0_adapt_count[28]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[28]_i_3 
       (.I0(adapt_count_reg[30]),
        .O(\n_0_adapt_count[28]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[28]_i_4 
       (.I0(adapt_count_reg[29]),
        .O(\n_0_adapt_count[28]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[28]_i_5 
       (.I0(adapt_count_reg[28]),
        .O(\n_0_adapt_count[28]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[4]_i_2 
       (.I0(adapt_count_reg[7]),
        .O(\n_0_adapt_count[4]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[4]_i_3 
       (.I0(adapt_count_reg[6]),
        .O(\n_0_adapt_count[4]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[4]_i_4 
       (.I0(adapt_count_reg[5]),
        .O(\n_0_adapt_count[4]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[4]_i_5 
       (.I0(adapt_count_reg[4]),
        .O(\n_0_adapt_count[4]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[8]_i_2 
       (.I0(adapt_count_reg[11]),
        .O(\n_0_adapt_count[8]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[8]_i_3 
       (.I0(adapt_count_reg[10]),
        .O(\n_0_adapt_count[8]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[8]_i_4 
       (.I0(adapt_count_reg[9]),
        .O(\n_0_adapt_count[8]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \adapt_count[8]_i_5 
       (.I0(adapt_count_reg[8]),
        .O(\n_0_adapt_count[8]_i_5 ));
(* counter = "43" *) 
   FDRE \adapt_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_7_adapt_count_reg[0]_i_2 ),
        .Q(adapt_count_reg[0]),
        .R(recclk_mon_count_reset));
CARRY4 \adapt_count_reg[0]_i_2 
       (.CI(\<const0> ),
        .CO({\n_0_adapt_count_reg[0]_i_2 ,\n_1_adapt_count_reg[0]_i_2 ,\n_2_adapt_count_reg[0]_i_2 ,\n_3_adapt_count_reg[0]_i_2 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .O({\n_4_adapt_count_reg[0]_i_2 ,\n_5_adapt_count_reg[0]_i_2 ,\n_6_adapt_count_reg[0]_i_2 ,\n_7_adapt_count_reg[0]_i_2 }),
        .S({\n_0_adapt_count[0]_i_3 ,\n_0_adapt_count[0]_i_4 ,\n_0_adapt_count[0]_i_5 ,\n_0_adapt_count[0]_i_6 }));
(* counter = "43" *) 
   FDRE \adapt_count_reg[10] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_5_adapt_count_reg[8]_i_1 ),
        .Q(adapt_count_reg[10]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[11] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_4_adapt_count_reg[8]_i_1 ),
        .Q(adapt_count_reg[11]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[12] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_7_adapt_count_reg[12]_i_1 ),
        .Q(adapt_count_reg[12]),
        .R(recclk_mon_count_reset));
CARRY4 \adapt_count_reg[12]_i_1 
       (.CI(\n_0_adapt_count_reg[8]_i_1 ),
        .CO({\n_0_adapt_count_reg[12]_i_1 ,\n_1_adapt_count_reg[12]_i_1 ,\n_2_adapt_count_reg[12]_i_1 ,\n_3_adapt_count_reg[12]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_adapt_count_reg[12]_i_1 ,\n_5_adapt_count_reg[12]_i_1 ,\n_6_adapt_count_reg[12]_i_1 ,\n_7_adapt_count_reg[12]_i_1 }),
        .S({\n_0_adapt_count[12]_i_2 ,\n_0_adapt_count[12]_i_3 ,\n_0_adapt_count[12]_i_4 ,\n_0_adapt_count[12]_i_5 }));
(* counter = "43" *) 
   FDRE \adapt_count_reg[13] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_6_adapt_count_reg[12]_i_1 ),
        .Q(adapt_count_reg[13]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[14] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_5_adapt_count_reg[12]_i_1 ),
        .Q(adapt_count_reg[14]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[15] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_4_adapt_count_reg[12]_i_1 ),
        .Q(adapt_count_reg[15]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[16] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_7_adapt_count_reg[16]_i_1 ),
        .Q(adapt_count_reg[16]),
        .R(recclk_mon_count_reset));
CARRY4 \adapt_count_reg[16]_i_1 
       (.CI(\n_0_adapt_count_reg[12]_i_1 ),
        .CO({\n_0_adapt_count_reg[16]_i_1 ,\n_1_adapt_count_reg[16]_i_1 ,\n_2_adapt_count_reg[16]_i_1 ,\n_3_adapt_count_reg[16]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_adapt_count_reg[16]_i_1 ,\n_5_adapt_count_reg[16]_i_1 ,\n_6_adapt_count_reg[16]_i_1 ,\n_7_adapt_count_reg[16]_i_1 }),
        .S({\n_0_adapt_count[16]_i_2 ,\n_0_adapt_count[16]_i_3 ,\n_0_adapt_count[16]_i_4 ,\n_0_adapt_count[16]_i_5 }));
(* counter = "43" *) 
   FDRE \adapt_count_reg[17] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_6_adapt_count_reg[16]_i_1 ),
        .Q(adapt_count_reg[17]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[18] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_5_adapt_count_reg[16]_i_1 ),
        .Q(adapt_count_reg[18]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[19] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_4_adapt_count_reg[16]_i_1 ),
        .Q(adapt_count_reg[19]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_6_adapt_count_reg[0]_i_2 ),
        .Q(adapt_count_reg[1]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[20] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_7_adapt_count_reg[20]_i_1 ),
        .Q(adapt_count_reg[20]),
        .R(recclk_mon_count_reset));
CARRY4 \adapt_count_reg[20]_i_1 
       (.CI(\n_0_adapt_count_reg[16]_i_1 ),
        .CO({\n_0_adapt_count_reg[20]_i_1 ,\n_1_adapt_count_reg[20]_i_1 ,\n_2_adapt_count_reg[20]_i_1 ,\n_3_adapt_count_reg[20]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_adapt_count_reg[20]_i_1 ,\n_5_adapt_count_reg[20]_i_1 ,\n_6_adapt_count_reg[20]_i_1 ,\n_7_adapt_count_reg[20]_i_1 }),
        .S({\n_0_adapt_count[20]_i_2 ,\n_0_adapt_count[20]_i_3 ,\n_0_adapt_count[20]_i_4 ,\n_0_adapt_count[20]_i_5 }));
(* counter = "43" *) 
   FDRE \adapt_count_reg[21] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_6_adapt_count_reg[20]_i_1 ),
        .Q(adapt_count_reg[21]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[22] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_5_adapt_count_reg[20]_i_1 ),
        .Q(adapt_count_reg[22]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[23] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_4_adapt_count_reg[20]_i_1 ),
        .Q(adapt_count_reg[23]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[24] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_7_adapt_count_reg[24]_i_1 ),
        .Q(adapt_count_reg[24]),
        .R(recclk_mon_count_reset));
CARRY4 \adapt_count_reg[24]_i_1 
       (.CI(\n_0_adapt_count_reg[20]_i_1 ),
        .CO({\n_0_adapt_count_reg[24]_i_1 ,\n_1_adapt_count_reg[24]_i_1 ,\n_2_adapt_count_reg[24]_i_1 ,\n_3_adapt_count_reg[24]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_adapt_count_reg[24]_i_1 ,\n_5_adapt_count_reg[24]_i_1 ,\n_6_adapt_count_reg[24]_i_1 ,\n_7_adapt_count_reg[24]_i_1 }),
        .S({\n_0_adapt_count[24]_i_2 ,\n_0_adapt_count[24]_i_3 ,\n_0_adapt_count[24]_i_4 ,\n_0_adapt_count[24]_i_5 }));
(* counter = "43" *) 
   FDRE \adapt_count_reg[25] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_6_adapt_count_reg[24]_i_1 ),
        .Q(adapt_count_reg[25]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[26] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_5_adapt_count_reg[24]_i_1 ),
        .Q(adapt_count_reg[26]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[27] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_4_adapt_count_reg[24]_i_1 ),
        .Q(adapt_count_reg[27]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[28] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_7_adapt_count_reg[28]_i_1 ),
        .Q(adapt_count_reg[28]),
        .R(recclk_mon_count_reset));
CARRY4 \adapt_count_reg[28]_i_1 
       (.CI(\n_0_adapt_count_reg[24]_i_1 ),
        .CO({\NLW_adapt_count_reg[28]_i_1_CO_UNCONNECTED [3],\n_1_adapt_count_reg[28]_i_1 ,\n_2_adapt_count_reg[28]_i_1 ,\n_3_adapt_count_reg[28]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_adapt_count_reg[28]_i_1 ,\n_5_adapt_count_reg[28]_i_1 ,\n_6_adapt_count_reg[28]_i_1 ,\n_7_adapt_count_reg[28]_i_1 }),
        .S({\n_0_adapt_count[28]_i_2 ,\n_0_adapt_count[28]_i_3 ,\n_0_adapt_count[28]_i_4 ,\n_0_adapt_count[28]_i_5 }));
(* counter = "43" *) 
   FDRE \adapt_count_reg[29] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_6_adapt_count_reg[28]_i_1 ),
        .Q(adapt_count_reg[29]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_5_adapt_count_reg[0]_i_2 ),
        .Q(adapt_count_reg[2]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[30] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_5_adapt_count_reg[28]_i_1 ),
        .Q(adapt_count_reg[30]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[31] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_4_adapt_count_reg[28]_i_1 ),
        .Q(adapt_count_reg[31]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_4_adapt_count_reg[0]_i_2 ),
        .Q(adapt_count_reg[3]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_7_adapt_count_reg[4]_i_1 ),
        .Q(adapt_count_reg[4]),
        .R(recclk_mon_count_reset));
CARRY4 \adapt_count_reg[4]_i_1 
       (.CI(\n_0_adapt_count_reg[0]_i_2 ),
        .CO({\n_0_adapt_count_reg[4]_i_1 ,\n_1_adapt_count_reg[4]_i_1 ,\n_2_adapt_count_reg[4]_i_1 ,\n_3_adapt_count_reg[4]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_adapt_count_reg[4]_i_1 ,\n_5_adapt_count_reg[4]_i_1 ,\n_6_adapt_count_reg[4]_i_1 ,\n_7_adapt_count_reg[4]_i_1 }),
        .S({\n_0_adapt_count[4]_i_2 ,\n_0_adapt_count[4]_i_3 ,\n_0_adapt_count[4]_i_4 ,\n_0_adapt_count[4]_i_5 }));
(* counter = "43" *) 
   FDRE \adapt_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_6_adapt_count_reg[4]_i_1 ),
        .Q(adapt_count_reg[5]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_5_adapt_count_reg[4]_i_1 ),
        .Q(adapt_count_reg[6]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_4_adapt_count_reg[4]_i_1 ),
        .Q(adapt_count_reg[7]),
        .R(recclk_mon_count_reset));
(* counter = "43" *) 
   FDRE \adapt_count_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_7_adapt_count_reg[8]_i_1 ),
        .Q(adapt_count_reg[8]),
        .R(recclk_mon_count_reset));
CARRY4 \adapt_count_reg[8]_i_1 
       (.CI(\n_0_adapt_count_reg[4]_i_1 ),
        .CO({\n_0_adapt_count_reg[8]_i_1 ,\n_1_adapt_count_reg[8]_i_1 ,\n_2_adapt_count_reg[8]_i_1 ,\n_3_adapt_count_reg[8]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_adapt_count_reg[8]_i_1 ,\n_5_adapt_count_reg[8]_i_1 ,\n_6_adapt_count_reg[8]_i_1 ,\n_7_adapt_count_reg[8]_i_1 }),
        .S({\n_0_adapt_count[8]_i_2 ,\n_0_adapt_count[8]_i_3 ,\n_0_adapt_count[8]_i_4 ,\n_0_adapt_count[8]_i_5 }));
(* counter = "43" *) 
   FDRE \adapt_count_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\n_0_adapt_count[0]_i_1 ),
        .D(\n_6_adapt_count_reg[8]_i_1 ),
        .Q(adapt_count_reg[9]),
        .R(recclk_mon_count_reset));
LUT6 #(
    .INIT(64'hFFFFFFFFABABA8AA)) 
     adapt_count_reset_i_1
       (.I0(recclk_mon_count_reset),
        .I1(n_0_reset_time_out_i_4),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I3(cplllock_sync),
        .I4(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I5(pma_reset),
        .O(n_0_adapt_count_reset_i_1));
FDRE #(
    .INIT(1'b0)) 
     adapt_count_reset_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_adapt_count_reset_i_1),
        .Q(recclk_mon_count_reset),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000AEAAA2AA)) 
     check_tlock_max_i_1
       (.I0(n_0_check_tlock_max_reg),
        .I1(n_0_check_tlock_max_i_2),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I3(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I4(rx_state_reg),
        .I5(pma_reset),
        .O(n_0_check_tlock_max_i_1));
(* SOFT_HLUTNM = "soft_lutpair12" *) 
   LUT3 #(
    .INIT(8'h01)) 
     check_tlock_max_i_2
       (.I0(\n_0_FSM_onehot_rx_state_reg[10] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[8] ),
        .O(n_0_check_tlock_max_i_2));
LUT4 #(
    .INIT(16'hFFFE)) 
     check_tlock_max_i_3
       (.I0(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[6] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[5] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[4] ),
        .O(rx_state_reg));
FDRE #(
    .INIT(1'b0)) 
     check_tlock_max_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_check_tlock_max_i_1),
        .Q(n_0_check_tlock_max_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h000000002BAAAAAA)) 
     gtrxreset_i_i_1
       (.I0(gt0_gtrxreset_t),
        .I1(rx_state_reg),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I3(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I4(n_0_check_tlock_max_i_2),
        .I5(pma_reset),
        .O(n_0_gtrxreset_i_i_1));
FDRE #(
    .INIT(1'b0)) 
     gtrxreset_i_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_gtrxreset_i_i_1),
        .Q(gt0_gtrxreset_t),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'hFFEA)) 
     gtxe2_i_i_1
       (.I0(gt0_gtrxreset_t),
        .I1(mgt_rx_reset),
        .I2(O1),
        .I3(gt0_gtrxreset_in),
        .O(gt0_gtrxreset_i));
(* RETAIN_INVERTER *) 
   (* SOFT_HLUTNM = "soft_lutpair18" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \init_wait_count[0]_i_1__0 
       (.I0(init_wait_count_reg__0[0]),
        .O(p_0_in__0[0]));
(* SOFT_HLUTNM = "soft_lutpair18" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \init_wait_count[1]_i_1__0 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(p_0_in__0[1]));
(* SOFT_HLUTNM = "soft_lutpair15" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \init_wait_count[2]_i_1__0 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .O(p_0_in__0[2]));
(* SOFT_HLUTNM = "soft_lutpair7" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \init_wait_count[3]_i_1__0 
       (.I0(init_wait_count_reg__0[3]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[1]),
        .I3(init_wait_count_reg__0[2]),
        .O(p_0_in__0[3]));
(* SOFT_HLUTNM = "soft_lutpair7" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \init_wait_count[4]_i_1__0 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[0]),
        .I4(init_wait_count_reg__0[1]),
        .O(p_0_in__0[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \init_wait_count[5]_i_1__0 
       (.I0(init_wait_count_reg__0[5]),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[3]),
        .I4(init_wait_count_reg__0[2]),
        .I5(init_wait_count_reg__0[4]),
        .O(p_0_in__0[5]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \init_wait_count[6]_i_1__0 
       (.I0(init_wait_count_reg__0[6]),
        .I1(init_wait_count_reg__0[4]),
        .I2(init_wait_count_reg__0[2]),
        .I3(init_wait_count_reg__0[3]),
        .I4(\n_0_init_wait_count[6]_i_2__0 ),
        .I5(init_wait_count_reg__0[5]),
        .O(p_0_in__0[6]));
(* SOFT_HLUTNM = "soft_lutpair15" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \init_wait_count[6]_i_2__0 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(\n_0_init_wait_count[6]_i_2__0 ));
LUT3 #(
    .INIT(8'h7F)) 
     \init_wait_count[7]_i_1__0 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[3]),
        .I2(\n_0_init_wait_count[7]_i_3__0 ),
        .O(\n_0_init_wait_count[7]_i_1__0 ));
LUT3 #(
    .INIT(8'h6A)) 
     \init_wait_count[7]_i_2__0 
       (.I0(init_wait_count_reg__0[7]),
        .I1(\n_0_init_wait_count[7]_i_4__0 ),
        .I2(init_wait_count_reg__0[6]),
        .O(p_0_in__0[7]));
LUT6 #(
    .INIT(64'h0000000000400000)) 
     \init_wait_count[7]_i_3__0 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[5]),
        .I3(init_wait_count_reg__0[4]),
        .I4(init_wait_count_reg__0[6]),
        .I5(init_wait_count_reg__0[7]),
        .O(\n_0_init_wait_count[7]_i_3__0 ));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     \init_wait_count[7]_i_4__0 
       (.I0(init_wait_count_reg__0[5]),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[3]),
        .I4(init_wait_count_reg__0[2]),
        .I5(init_wait_count_reg__0[4]),
        .O(\n_0_init_wait_count[7]_i_4__0 ));
(* counter = "42" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1__0 ),
        .CLR(pma_reset),
        .D(p_0_in__0[0]),
        .Q(init_wait_count_reg__0[0]));
(* counter = "42" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1__0 ),
        .CLR(pma_reset),
        .D(p_0_in__0[1]),
        .Q(init_wait_count_reg__0[1]));
(* counter = "42" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1__0 ),
        .CLR(pma_reset),
        .D(p_0_in__0[2]),
        .Q(init_wait_count_reg__0[2]));
(* counter = "42" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1__0 ),
        .CLR(pma_reset),
        .D(p_0_in__0[3]),
        .Q(init_wait_count_reg__0[3]));
(* counter = "42" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1__0 ),
        .CLR(pma_reset),
        .D(p_0_in__0[4]),
        .Q(init_wait_count_reg__0[4]));
(* counter = "42" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1__0 ),
        .CLR(pma_reset),
        .D(p_0_in__0[5]),
        .Q(init_wait_count_reg__0[5]));
(* counter = "42" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1__0 ),
        .CLR(pma_reset),
        .D(p_0_in__0[6]),
        .Q(init_wait_count_reg__0[6]));
(* counter = "42" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1__0 ),
        .CLR(pma_reset),
        .D(p_0_in__0[7]),
        .Q(init_wait_count_reg__0[7]));
LUT4 #(
    .INIT(16'hFF80)) 
     init_wait_done_i_1__0
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[3]),
        .I2(\n_0_init_wait_count[7]_i_3__0 ),
        .I3(init_wait_done),
        .O(n_0_init_wait_done_i_1__0));
FDCE #(
    .INIT(1'b0)) 
     init_wait_done_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .CLR(pma_reset),
        .D(n_0_init_wait_done_i_1__0),
        .Q(init_wait_done));
LUT1 #(
    .INIT(2'h1)) 
     \mmcm_lock_count[0]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[0]),
        .O(p_0_in__2[0]));
(* SOFT_HLUTNM = "soft_lutpair14" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \mmcm_lock_count[1]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[0]),
        .I1(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__2[1]));
(* SOFT_HLUTNM = "soft_lutpair14" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \mmcm_lock_count[2]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[2]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__2[2]));
(* SOFT_HLUTNM = "soft_lutpair8" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \mmcm_lock_count[3]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[3]),
        .I1(mmcm_lock_count_reg__0[1]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[2]),
        .O(p_0_in__2[3]));
(* SOFT_HLUTNM = "soft_lutpair8" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \mmcm_lock_count[4]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[3]),
        .I2(mmcm_lock_count_reg__0[2]),
        .I3(mmcm_lock_count_reg__0[0]),
        .I4(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__2[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \mmcm_lock_count[5]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[5]),
        .I1(mmcm_lock_count_reg__0[1]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[2]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[4]),
        .O(p_0_in__2[5]));
LUT2 #(
    .INIT(4'h9)) 
     \mmcm_lock_count[6]_i_1__0 
       (.I0(\n_0_mmcm_lock_count[9]_i_4__0 ),
        .I1(mmcm_lock_count_reg__0[6]),
        .O(p_0_in__2[6]));
(* SOFT_HLUTNM = "soft_lutpair13" *) 
   LUT3 #(
    .INIT(8'h9A)) 
     \mmcm_lock_count[7]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[7]),
        .I1(\n_0_mmcm_lock_count[9]_i_4__0 ),
        .I2(mmcm_lock_count_reg__0[6]),
        .O(p_0_in__2[7]));
(* SOFT_HLUTNM = "soft_lutpair13" *) 
   LUT4 #(
    .INIT(16'hA6AA)) 
     \mmcm_lock_count[8]_i_1__0 
       (.I0(mmcm_lock_count_reg__0[8]),
        .I1(mmcm_lock_count_reg__0[6]),
        .I2(\n_0_mmcm_lock_count[9]_i_4__0 ),
        .I3(mmcm_lock_count_reg__0[7]),
        .O(p_0_in__2[8]));
LUT1 #(
    .INIT(2'h1)) 
     \mmcm_lock_count[9]_i_1__0 
       (.I0(mmcm_lock_i),
        .O(\n_0_mmcm_lock_count[9]_i_1__0 ));
LUT5 #(
    .INIT(32'hF7FFFFFF)) 
     \mmcm_lock_count[9]_i_2__0 
       (.I0(mmcm_lock_count_reg__0[8]),
        .I1(mmcm_lock_count_reg__0[6]),
        .I2(\n_0_mmcm_lock_count[9]_i_4__0 ),
        .I3(mmcm_lock_count_reg__0[7]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(\n_0_mmcm_lock_count[9]_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair4" *) 
   LUT5 #(
    .INIT(32'hA6AAAAAA)) 
     \mmcm_lock_count[9]_i_3__0 
       (.I0(mmcm_lock_count_reg__0[9]),
        .I1(mmcm_lock_count_reg__0[7]),
        .I2(\n_0_mmcm_lock_count[9]_i_4__0 ),
        .I3(mmcm_lock_count_reg__0[6]),
        .I4(mmcm_lock_count_reg__0[8]),
        .O(p_0_in__2[9]));
LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
     \mmcm_lock_count[9]_i_4__0 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[3]),
        .I2(mmcm_lock_count_reg__0[2]),
        .I3(mmcm_lock_count_reg__0[0]),
        .I4(mmcm_lock_count_reg__0[1]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\n_0_mmcm_lock_count[9]_i_4__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[0]),
        .Q(mmcm_lock_count_reg__0[0]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[1]),
        .Q(mmcm_lock_count_reg__0[1]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[2]),
        .Q(mmcm_lock_count_reg__0[2]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[3]),
        .Q(mmcm_lock_count_reg__0[3]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[4]),
        .Q(mmcm_lock_count_reg__0[4]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[5]),
        .Q(mmcm_lock_count_reg__0[5]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[6]),
        .Q(mmcm_lock_count_reg__0[6]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[7]),
        .Q(mmcm_lock_count_reg__0[7]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[8]),
        .Q(mmcm_lock_count_reg__0[8]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
(* counter = "47" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2__0 ),
        .D(p_0_in__2[9]),
        .Q(mmcm_lock_count_reg__0[9]),
        .R(\n_0_mmcm_lock_count[9]_i_1__0 ));
LUT3 #(
    .INIT(8'hA8)) 
     mmcm_lock_reclocked_i_1__0
       (.I0(mmcm_lock_i),
        .I1(mmcm_lock_reclocked),
        .I2(n_0_mmcm_lock_reclocked_i_2__0),
        .O(n_0_mmcm_lock_reclocked_i_1__0));
(* SOFT_HLUTNM = "soft_lutpair4" *) 
   LUT5 #(
    .INIT(32'h08000000)) 
     mmcm_lock_reclocked_i_2__0
       (.I0(mmcm_lock_count_reg__0[9]),
        .I1(mmcm_lock_count_reg__0[7]),
        .I2(\n_0_mmcm_lock_count[9]_i_4__0 ),
        .I3(mmcm_lock_count_reg__0[6]),
        .I4(mmcm_lock_count_reg__0[8]),
        .O(n_0_mmcm_lock_reclocked_i_2__0));
FDRE #(
    .INIT(1'b0)) 
     mmcm_lock_reclocked_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_mmcm_lock_reclocked_i_1__0),
        .Q(mmcm_lock_reclocked),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFFFFFFE2E2EEE2)) 
     reset_time_out_i_1__0
       (.I0(n_0_reset_time_out_reg),
        .I1(n_0_reset_time_out_i_2__0),
        .I2(n_0_reset_time_out_i_3),
        .I3(cplllock_sync),
        .I4(n_0_reset_time_out_i_4),
        .I5(pma_reset),
        .O(n_0_reset_time_out_i_1__0));
LUT5 #(
    .INIT(32'h8303F3F0)) 
     reset_time_out_i_2__0
       (.I0(rx_cdrlocked),
        .I1(rx_state_reg),
        .I2(n_0_check_tlock_max_i_2),
        .I3(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I4(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .O(n_0_reset_time_out_i_2__0));
LUT6 #(
    .INIT(64'hB8CCB888B8CCBBBB)) 
     reset_time_out_i_3
       (.I0(n_0_reset_time_out_i_5),
        .I1(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I2(rxresetdone_s3),
        .I3(rx_state_reg),
        .I4(n_0_check_tlock_max_i_2),
        .I5(data_valid_sync),
        .O(n_0_reset_time_out_i_3));
(* SOFT_HLUTNM = "soft_lutpair10" *) 
   LUT4 #(
    .INIT(16'hFFFE)) 
     reset_time_out_i_4
       (.I0(rx_state_reg),
        .I1(\n_0_FSM_onehot_rx_state_reg[8] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[10] ),
        .O(n_0_reset_time_out_i_4));
LUT5 #(
    .INIT(32'hB8FFB8CC)) 
     reset_time_out_i_5
       (.I0(rx_cdrlocked),
        .I1(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I2(mmcm_lock_reclocked),
        .I3(rx_state_reg),
        .I4(data_valid_sync),
        .O(n_0_reset_time_out_i_5));
FDRE #(
    .INIT(1'b0)) 
     reset_time_out_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_reset_time_out_i_1__0),
        .Q(n_0_reset_time_out_reg),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000AAAAB2AA)) 
     run_phase_alignment_int_i_1__0
       (.I0(n_0_run_phase_alignment_int_reg),
        .I1(n_0_check_tlock_max_i_2),
        .I2(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I3(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I4(rx_state_reg),
        .I5(pma_reset),
        .O(n_0_run_phase_alignment_int_i_1__0));
FDRE #(
    .INIT(1'b0)) 
     run_phase_alignment_int_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_run_phase_alignment_int_i_1__0),
        .Q(n_0_run_phase_alignment_int_reg),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     run_phase_alignment_int_s3_reg
       (.C(rxuserclk),
        .CE(\<const1> ),
        .D(run_phase_alignment_int_s2),
        .Q(n_0_run_phase_alignment_int_s3_reg),
        .R(\<const0> ));
LUT2 #(
    .INIT(4'h2)) 
     rx_fsm_reset_done_int_i_1
       (.I0(n_0_rx_fsm_reset_done_int_i_2),
        .I1(pma_reset),
        .O(n_0_rx_fsm_reset_done_int_i_1));
LUT6 #(
    .INIT(64'hFF5FF5FF00008000)) 
     rx_fsm_reset_done_int_i_2
       (.I0(n_0_rx_fsm_reset_done_int_i_3),
        .I1(n_0_rx_fsm_reset_done_int_i_4),
        .I2(data_valid_sync),
        .I3(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I4(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I5(O1),
        .O(n_0_rx_fsm_reset_done_int_i_2));
(* SOFT_HLUTNM = "soft_lutpair10" *) 
   LUT4 #(
    .INIT(16'h5554)) 
     rx_fsm_reset_done_int_i_3
       (.I0(rx_state_reg),
        .I1(\n_0_FSM_onehot_rx_state_reg[8] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[10] ),
        .O(n_0_rx_fsm_reset_done_int_i_3));
(* SOFT_HLUTNM = "soft_lutpair16" *) 
   LUT2 #(
    .INIT(4'h2)) 
     rx_fsm_reset_done_int_i_4
       (.I0(time_out_1us),
        .I1(n_0_reset_time_out_reg),
        .O(n_0_rx_fsm_reset_done_int_i_4));
FDRE #(
    .INIT(1'b0)) 
     rx_fsm_reset_done_int_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_rx_fsm_reset_done_int_i_1),
        .Q(O1),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     rx_fsm_reset_done_int_s3_reg
       (.C(rxuserclk),
        .CE(\<const1> ),
        .D(rx_fsm_reset_done_int_s2),
        .Q(rx_fsm_reset_done_int_s3),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     rxresetdone_s3_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(rxresetdone_s2),
        .Q(rxresetdone_s3),
        .R(\<const0> ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__33 sync_RXRESETDONE
       (.clk(independent_clock_bufg),
        .data_in(I1),
        .data_out(rxresetdone_s2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__36 sync_cplllock
       (.clk(independent_clock_bufg),
        .data_in(I2),
        .data_out(cplllock_sync));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block sync_cpllrefclklost
       (.clk(independent_clock_bufg),
        .data_in(gt0_cpllrefclklost_i),
        .data_out(NLW_sync_cpllrefclklost_data_out_UNCONNECTED));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__35 sync_data_valid
       (.clk(independent_clock_bufg),
        .data_in(data_valid_reg2),
        .data_out(data_valid_sync));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__34 sync_mmcm_lock_reclocked
       (.clk(independent_clock_bufg),
        .data_in(\<const1> ),
        .data_out(mmcm_lock_i));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__30 sync_run_phase_alignment_int
       (.clk(rxuserclk),
        .data_in(n_0_run_phase_alignment_int_reg),
        .data_out(run_phase_alignment_int_s2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__31 sync_rx_fsm_reset_done_int
       (.clk(rxuserclk),
        .data_in(O1),
        .data_out(rx_fsm_reset_done_int_s2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__32 sync_time_out_wait_bypass
       (.clk(independent_clock_bufg),
        .data_in(n_0_time_out_wait_bypass_reg),
        .data_out(time_out_wait_bypass_s2));
(* SOFT_HLUTNM = "soft_lutpair16" *) 
   LUT3 #(
    .INIT(8'h0E)) 
     time_out_1us_i_1
       (.I0(time_out_1us),
        .I1(n_0_time_out_1us_i_2),
        .I2(n_0_reset_time_out_reg),
        .O(n_0_time_out_1us_i_1));
LUT6 #(
    .INIT(64'h0002000000000000)) 
     time_out_1us_i_2
       (.I0(n_0_time_out_1us_i_3),
        .I1(time_out_counter_reg[8]),
        .I2(time_out_counter_reg[10]),
        .I3(time_out_counter_reg[11]),
        .I4(time_out_counter_reg[3]),
        .I5(n_0_time_out_1us_i_4),
        .O(n_0_time_out_1us_i_2));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     time_out_1us_i_3
       (.I0(time_out_counter_reg[4]),
        .I1(time_out_counter_reg[2]),
        .I2(time_out_counter_reg[1]),
        .I3(n_0_time_out_2ms_i_4),
        .I4(time_out_counter_reg[18]),
        .I5(time_out_counter_reg[17]),
        .O(n_0_time_out_1us_i_3));
LUT6 #(
    .INIT(64'h0000000000040000)) 
     time_out_1us_i_4
       (.I0(time_out_counter_reg[0]),
        .I1(time_out_counter_reg[6]),
        .I2(time_out_counter_reg[9]),
        .I3(time_out_counter_reg[12]),
        .I4(time_out_counter_reg[7]),
        .I5(time_out_counter_reg[5]),
        .O(n_0_time_out_1us_i_4));
FDRE #(
    .INIT(1'b0)) 
     time_out_1us_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_time_out_1us_i_1),
        .Q(time_out_1us),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000FFFF0002)) 
     time_out_2ms_i_1
       (.I0(n_0_time_out_2ms_i_2),
        .I1(n_0_time_out_2ms_i_3),
        .I2(n_0_time_out_2ms_i_4),
        .I3(n_0_time_out_2ms_i_5),
        .I4(time_out_2ms),
        .I5(n_0_reset_time_out_reg),
        .O(n_0_time_out_2ms_i_1));
LUT5 #(
    .INIT(32'h00000001)) 
     time_out_2ms_i_2
       (.I0(time_out_counter_reg[3]),
        .I1(time_out_counter_reg[0]),
        .I2(time_out_counter_reg[1]),
        .I3(time_out_counter_reg[2]),
        .I4(time_out_counter_reg[4]),
        .O(n_0_time_out_2ms_i_2));
LUT4 #(
    .INIT(16'hFFDF)) 
     time_out_2ms_i_3
       (.I0(time_out_counter_reg[7]),
        .I1(time_out_counter_reg[6]),
        .I2(time_out_counter_reg[9]),
        .I3(time_out_counter_reg[5]),
        .O(n_0_time_out_2ms_i_3));
LUT4 #(
    .INIT(16'hFFFE)) 
     time_out_2ms_i_4
       (.I0(time_out_counter_reg[13]),
        .I1(time_out_counter_reg[14]),
        .I2(time_out_counter_reg[16]),
        .I3(time_out_counter_reg[15]),
        .O(n_0_time_out_2ms_i_4));
LUT6 #(
    .INIT(64'hFFF7FFFFFFFFFFFF)) 
     time_out_2ms_i_5
       (.I0(time_out_counter_reg[11]),
        .I1(time_out_counter_reg[18]),
        .I2(time_out_counter_reg[8]),
        .I3(time_out_counter_reg[10]),
        .I4(time_out_counter_reg[17]),
        .I5(time_out_counter_reg[12]),
        .O(n_0_time_out_2ms_i_5));
FDRE #(
    .INIT(1'b0)) 
     time_out_2ms_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_time_out_2ms_i_1),
        .Q(time_out_2ms),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'h0E)) 
     time_out_adapt_i_1
       (.I0(time_out_adapt),
        .I1(n_0_time_out_adapt_i_2),
        .I2(recclk_mon_count_reset),
        .O(n_0_time_out_adapt_i_1));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     time_out_adapt_i_2
       (.I0(n_0_time_out_adapt_i_3),
        .I1(n_0_time_out_adapt_i_4),
        .I2(n_0_time_out_adapt_i_5),
        .I3(n_0_time_out_adapt_i_6),
        .I4(n_0_time_out_adapt_i_7),
        .I5(n_0_time_out_adapt_i_8),
        .O(n_0_time_out_adapt_i_2));
LUT6 #(
    .INIT(64'h0040000000000000)) 
     time_out_adapt_i_3
       (.I0(adapt_count_reg[11]),
        .I1(adapt_count_reg[12]),
        .I2(adapt_count_reg[10]),
        .I3(adapt_count_reg[21]),
        .I4(adapt_count_reg[18]),
        .I5(adapt_count_reg[20]),
        .O(n_0_time_out_adapt_i_3));
LUT2 #(
    .INIT(4'h1)) 
     time_out_adapt_i_4
       (.I0(adapt_count_reg[7]),
        .I1(adapt_count_reg[16]),
        .O(n_0_time_out_adapt_i_4));
LUT6 #(
    .INIT(64'h0000000000000004)) 
     time_out_adapt_i_5
       (.I0(adapt_count_reg[14]),
        .I1(adapt_count_reg[17]),
        .I2(adapt_count_reg[28]),
        .I3(adapt_count_reg[26]),
        .I4(adapt_count_reg[23]),
        .I5(adapt_count_reg[19]),
        .O(n_0_time_out_adapt_i_5));
LUT6 #(
    .INIT(64'h0001000000000000)) 
     time_out_adapt_i_6
       (.I0(adapt_count_reg[13]),
        .I1(adapt_count_reg[22]),
        .I2(adapt_count_reg[29]),
        .I3(adapt_count_reg[25]),
        .I4(adapt_count_reg[1]),
        .I5(adapt_count_reg[4]),
        .O(n_0_time_out_adapt_i_6));
LUT6 #(
    .INIT(64'h0000000000800000)) 
     time_out_adapt_i_7
       (.I0(adapt_count_reg[5]),
        .I1(adapt_count_reg[3]),
        .I2(adapt_count_reg[2]),
        .I3(adapt_count_reg[6]),
        .I4(adapt_count_reg[0]),
        .I5(adapt_count_reg[30]),
        .O(n_0_time_out_adapt_i_7));
LUT6 #(
    .INIT(64'h0000000000000040)) 
     time_out_adapt_i_8
       (.I0(adapt_count_reg[9]),
        .I1(adapt_count_reg[15]),
        .I2(adapt_count_reg[8]),
        .I3(adapt_count_reg[27]),
        .I4(adapt_count_reg[31]),
        .I5(adapt_count_reg[24]),
        .O(n_0_time_out_adapt_i_8));
FDRE time_out_adapt_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_time_out_adapt_i_1),
        .Q(time_out_adapt),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF7F)) 
     \time_out_counter[0]_i_1__0 
       (.I0(n_0_time_out_2ms_i_2),
        .I1(time_out_counter_reg[18]),
        .I2(time_out_counter_reg[11]),
        .I3(n_0_time_out_2ms_i_3),
        .I4(\n_0_time_out_counter[0]_i_3 ),
        .I5(\n_0_time_out_counter[0]_i_4 ),
        .O(\n_0_time_out_counter[0]_i_1__0 ));
LUT4 #(
    .INIT(16'hFFFE)) 
     \time_out_counter[0]_i_3 
       (.I0(time_out_counter_reg[10]),
        .I1(time_out_counter_reg[8]),
        .I2(time_out_counter_reg[16]),
        .I3(time_out_counter_reg[15]),
        .O(\n_0_time_out_counter[0]_i_3 ));
LUT4 #(
    .INIT(16'hFFF7)) 
     \time_out_counter[0]_i_4 
       (.I0(time_out_counter_reg[12]),
        .I1(time_out_counter_reg[17]),
        .I2(time_out_counter_reg[13]),
        .I3(time_out_counter_reg[14]),
        .O(\n_0_time_out_counter[0]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[0]_i_5__0 
       (.I0(time_out_counter_reg[3]),
        .O(\n_0_time_out_counter[0]_i_5__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[0]_i_6__0 
       (.I0(time_out_counter_reg[2]),
        .O(\n_0_time_out_counter[0]_i_6__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[0]_i_7 
       (.I0(time_out_counter_reg[1]),
        .O(\n_0_time_out_counter[0]_i_7 ));
LUT1 #(
    .INIT(2'h1)) 
     \time_out_counter[0]_i_8 
       (.I0(time_out_counter_reg[0]),
        .O(\n_0_time_out_counter[0]_i_8 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[12]_i_2__0 
       (.I0(time_out_counter_reg[15]),
        .O(\n_0_time_out_counter[12]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[12]_i_3__0 
       (.I0(time_out_counter_reg[14]),
        .O(\n_0_time_out_counter[12]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[12]_i_4__0 
       (.I0(time_out_counter_reg[13]),
        .O(\n_0_time_out_counter[12]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[12]_i_5__0 
       (.I0(time_out_counter_reg[12]),
        .O(\n_0_time_out_counter[12]_i_5__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[16]_i_2__0 
       (.I0(time_out_counter_reg[18]),
        .O(\n_0_time_out_counter[16]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[16]_i_3__0 
       (.I0(time_out_counter_reg[17]),
        .O(\n_0_time_out_counter[16]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[16]_i_4__0 
       (.I0(time_out_counter_reg[16]),
        .O(\n_0_time_out_counter[16]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[4]_i_2__0 
       (.I0(time_out_counter_reg[7]),
        .O(\n_0_time_out_counter[4]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[4]_i_3__0 
       (.I0(time_out_counter_reg[6]),
        .O(\n_0_time_out_counter[4]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[4]_i_4__0 
       (.I0(time_out_counter_reg[5]),
        .O(\n_0_time_out_counter[4]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[4]_i_5__0 
       (.I0(time_out_counter_reg[4]),
        .O(\n_0_time_out_counter[4]_i_5__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[8]_i_2__0 
       (.I0(time_out_counter_reg[11]),
        .O(\n_0_time_out_counter[8]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[8]_i_3__0 
       (.I0(time_out_counter_reg[10]),
        .O(\n_0_time_out_counter[8]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[8]_i_4__0 
       (.I0(time_out_counter_reg[9]),
        .O(\n_0_time_out_counter[8]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[8]_i_5__0 
       (.I0(time_out_counter_reg[8]),
        .O(\n_0_time_out_counter[8]_i_5__0 ));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_7_time_out_counter_reg[0]_i_2__0 ),
        .Q(time_out_counter_reg[0]),
        .R(n_0_reset_time_out_reg));
CARRY4 \time_out_counter_reg[0]_i_2__0 
       (.CI(\<const0> ),
        .CO({\n_0_time_out_counter_reg[0]_i_2__0 ,\n_1_time_out_counter_reg[0]_i_2__0 ,\n_2_time_out_counter_reg[0]_i_2__0 ,\n_3_time_out_counter_reg[0]_i_2__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .O({\n_4_time_out_counter_reg[0]_i_2__0 ,\n_5_time_out_counter_reg[0]_i_2__0 ,\n_6_time_out_counter_reg[0]_i_2__0 ,\n_7_time_out_counter_reg[0]_i_2__0 }),
        .S({\n_0_time_out_counter[0]_i_5__0 ,\n_0_time_out_counter[0]_i_6__0 ,\n_0_time_out_counter[0]_i_7 ,\n_0_time_out_counter[0]_i_8 }));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[10] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_5_time_out_counter_reg[8]_i_1__0 ),
        .Q(time_out_counter_reg[10]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[11] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_4_time_out_counter_reg[8]_i_1__0 ),
        .Q(time_out_counter_reg[11]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[12] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_7_time_out_counter_reg[12]_i_1__0 ),
        .Q(time_out_counter_reg[12]),
        .R(n_0_reset_time_out_reg));
CARRY4 \time_out_counter_reg[12]_i_1__0 
       (.CI(\n_0_time_out_counter_reg[8]_i_1__0 ),
        .CO({\n_0_time_out_counter_reg[12]_i_1__0 ,\n_1_time_out_counter_reg[12]_i_1__0 ,\n_2_time_out_counter_reg[12]_i_1__0 ,\n_3_time_out_counter_reg[12]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_time_out_counter_reg[12]_i_1__0 ,\n_5_time_out_counter_reg[12]_i_1__0 ,\n_6_time_out_counter_reg[12]_i_1__0 ,\n_7_time_out_counter_reg[12]_i_1__0 }),
        .S({\n_0_time_out_counter[12]_i_2__0 ,\n_0_time_out_counter[12]_i_3__0 ,\n_0_time_out_counter[12]_i_4__0 ,\n_0_time_out_counter[12]_i_5__0 }));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[13] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_6_time_out_counter_reg[12]_i_1__0 ),
        .Q(time_out_counter_reg[13]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[14] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_5_time_out_counter_reg[12]_i_1__0 ),
        .Q(time_out_counter_reg[14]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[15] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_4_time_out_counter_reg[12]_i_1__0 ),
        .Q(time_out_counter_reg[15]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[16] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_7_time_out_counter_reg[16]_i_1__0 ),
        .Q(time_out_counter_reg[16]),
        .R(n_0_reset_time_out_reg));
CARRY4 \time_out_counter_reg[16]_i_1__0 
       (.CI(\n_0_time_out_counter_reg[12]_i_1__0 ),
        .CO({\NLW_time_out_counter_reg[16]_i_1__0_CO_UNCONNECTED [3:2],\n_2_time_out_counter_reg[16]_i_1__0 ,\n_3_time_out_counter_reg[16]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\NLW_time_out_counter_reg[16]_i_1__0_O_UNCONNECTED [3],\n_5_time_out_counter_reg[16]_i_1__0 ,\n_6_time_out_counter_reg[16]_i_1__0 ,\n_7_time_out_counter_reg[16]_i_1__0 }),
        .S({\<const0> ,\n_0_time_out_counter[16]_i_2__0 ,\n_0_time_out_counter[16]_i_3__0 ,\n_0_time_out_counter[16]_i_4__0 }));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[17] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_6_time_out_counter_reg[16]_i_1__0 ),
        .Q(time_out_counter_reg[17]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[18] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_5_time_out_counter_reg[16]_i_1__0 ),
        .Q(time_out_counter_reg[18]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_6_time_out_counter_reg[0]_i_2__0 ),
        .Q(time_out_counter_reg[1]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_5_time_out_counter_reg[0]_i_2__0 ),
        .Q(time_out_counter_reg[2]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_4_time_out_counter_reg[0]_i_2__0 ),
        .Q(time_out_counter_reg[3]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_7_time_out_counter_reg[4]_i_1__0 ),
        .Q(time_out_counter_reg[4]),
        .R(n_0_reset_time_out_reg));
CARRY4 \time_out_counter_reg[4]_i_1__0 
       (.CI(\n_0_time_out_counter_reg[0]_i_2__0 ),
        .CO({\n_0_time_out_counter_reg[4]_i_1__0 ,\n_1_time_out_counter_reg[4]_i_1__0 ,\n_2_time_out_counter_reg[4]_i_1__0 ,\n_3_time_out_counter_reg[4]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_time_out_counter_reg[4]_i_1__0 ,\n_5_time_out_counter_reg[4]_i_1__0 ,\n_6_time_out_counter_reg[4]_i_1__0 ,\n_7_time_out_counter_reg[4]_i_1__0 }),
        .S({\n_0_time_out_counter[4]_i_2__0 ,\n_0_time_out_counter[4]_i_3__0 ,\n_0_time_out_counter[4]_i_4__0 ,\n_0_time_out_counter[4]_i_5__0 }));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_6_time_out_counter_reg[4]_i_1__0 ),
        .Q(time_out_counter_reg[5]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_5_time_out_counter_reg[4]_i_1__0 ),
        .Q(time_out_counter_reg[6]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_4_time_out_counter_reg[4]_i_1__0 ),
        .Q(time_out_counter_reg[7]),
        .R(n_0_reset_time_out_reg));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_7_time_out_counter_reg[8]_i_1__0 ),
        .Q(time_out_counter_reg[8]),
        .R(n_0_reset_time_out_reg));
CARRY4 \time_out_counter_reg[8]_i_1__0 
       (.CI(\n_0_time_out_counter_reg[4]_i_1__0 ),
        .CO({\n_0_time_out_counter_reg[8]_i_1__0 ,\n_1_time_out_counter_reg[8]_i_1__0 ,\n_2_time_out_counter_reg[8]_i_1__0 ,\n_3_time_out_counter_reg[8]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_time_out_counter_reg[8]_i_1__0 ,\n_5_time_out_counter_reg[8]_i_1__0 ,\n_6_time_out_counter_reg[8]_i_1__0 ,\n_7_time_out_counter_reg[8]_i_1__0 }),
        .S({\n_0_time_out_counter[8]_i_2__0 ,\n_0_time_out_counter[8]_i_3__0 ,\n_0_time_out_counter[8]_i_4__0 ,\n_0_time_out_counter[8]_i_5__0 }));
(* counter = "40" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1__0 ),
        .D(\n_6_time_out_counter_reg[8]_i_1__0 ),
        .Q(time_out_counter_reg[9]),
        .R(n_0_reset_time_out_reg));
LUT6 #(
    .INIT(64'hFFFF000000040000)) 
     time_out_wait_bypass_i_1__0
       (.I0(n_0_time_out_wait_bypass_i_2__0),
        .I1(wait_bypass_count_reg[8]),
        .I2(n_0_time_out_wait_bypass_i_3__0),
        .I3(rx_fsm_reset_done_int_s3),
        .I4(n_0_run_phase_alignment_int_s3_reg),
        .I5(n_0_time_out_wait_bypass_reg),
        .O(n_0_time_out_wait_bypass_i_1__0));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFDFFF)) 
     time_out_wait_bypass_i_2__0
       (.I0(wait_bypass_count_reg[12]),
        .I1(wait_bypass_count_reg[5]),
        .I2(wait_bypass_count_reg[1]),
        .I3(wait_bypass_count_reg[7]),
        .I4(wait_bypass_count_reg[11]),
        .I5(wait_bypass_count_reg[4]),
        .O(n_0_time_out_wait_bypass_i_2__0));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFDFFF)) 
     time_out_wait_bypass_i_3__0
       (.I0(wait_bypass_count_reg[0]),
        .I1(wait_bypass_count_reg[3]),
        .I2(wait_bypass_count_reg[9]),
        .I3(wait_bypass_count_reg[2]),
        .I4(wait_bypass_count_reg[10]),
        .I5(wait_bypass_count_reg[6]),
        .O(n_0_time_out_wait_bypass_i_3__0));
FDRE #(
    .INIT(1'b0)) 
     time_out_wait_bypass_reg
       (.C(rxuserclk),
        .CE(\<const1> ),
        .D(n_0_time_out_wait_bypass_i_1__0),
        .Q(n_0_time_out_wait_bypass_reg),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     time_out_wait_bypass_s3_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(time_out_wait_bypass_s2),
        .Q(time_out_wait_bypass_s3),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair17" *) 
   LUT3 #(
    .INIT(8'h0E)) 
     time_tlock_max_i_1
       (.I0(time_tlock_max),
        .I1(time_tlock_max0),
        .I2(n_0_reset_time_out_reg),
        .O(n_0_time_tlock_max_i_1));
LUT6 #(
    .INIT(64'h80888080AAAAAAAA)) 
     time_tlock_max_i_2
       (.I0(n_0_check_tlock_max_reg),
        .I1(n_0_time_tlock_max_i_3),
        .I2(n_0_time_tlock_max_i_4__0),
        .I3(n_0_time_out_2ms_i_2),
        .I4(time_out_counter_reg[5]),
        .I5(n_0_time_tlock_max_i_5),
        .O(time_tlock_max0));
LUT6 #(
    .INIT(64'hF0E0E0E0E0E0E0E0)) 
     time_tlock_max_i_3
       (.I0(time_out_counter_reg[13]),
        .I1(time_out_counter_reg[12]),
        .I2(time_out_counter_reg[14]),
        .I3(time_out_counter_reg[10]),
        .I4(time_out_counter_reg[9]),
        .I5(time_out_counter_reg[11]),
        .O(n_0_time_tlock_max_i_3));
LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     time_tlock_max_i_4__0
       (.I0(time_out_counter_reg[7]),
        .I1(time_out_counter_reg[8]),
        .I2(time_out_counter_reg[13]),
        .I3(time_out_counter_reg[12]),
        .I4(time_out_counter_reg[6]),
        .O(n_0_time_tlock_max_i_4__0));
LUT4 #(
    .INIT(16'h0001)) 
     time_tlock_max_i_5
       (.I0(time_out_counter_reg[16]),
        .I1(time_out_counter_reg[15]),
        .I2(time_out_counter_reg[18]),
        .I3(time_out_counter_reg[17]),
        .O(n_0_time_tlock_max_i_5));
FDRE #(
    .INIT(1'b0)) 
     time_tlock_max_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_time_tlock_max_i_1),
        .Q(time_tlock_max),
        .R(\<const0> ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_bypass_count[0]_i_1__0 
       (.I0(n_0_run_phase_alignment_int_s3_reg),
        .O(\n_0_wait_bypass_count[0]_i_1__0 ));
LUT4 #(
    .INIT(16'h00FB)) 
     \wait_bypass_count[0]_i_2__0 
       (.I0(n_0_time_out_wait_bypass_i_2__0),
        .I1(wait_bypass_count_reg[8]),
        .I2(n_0_time_out_wait_bypass_i_3__0),
        .I3(rx_fsm_reset_done_int_s3),
        .O(\n_0_wait_bypass_count[0]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[0]_i_4__0 
       (.I0(wait_bypass_count_reg[3]),
        .O(\n_0_wait_bypass_count[0]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[0]_i_5__0 
       (.I0(wait_bypass_count_reg[2]),
        .O(\n_0_wait_bypass_count[0]_i_5__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[0]_i_6__0 
       (.I0(wait_bypass_count_reg[1]),
        .O(\n_0_wait_bypass_count[0]_i_6__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_bypass_count[0]_i_7__0 
       (.I0(wait_bypass_count_reg[0]),
        .O(\n_0_wait_bypass_count[0]_i_7__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[12]_i_2__0 
       (.I0(wait_bypass_count_reg[12]),
        .O(\n_0_wait_bypass_count[12]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[4]_i_2__0 
       (.I0(wait_bypass_count_reg[7]),
        .O(\n_0_wait_bypass_count[4]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[4]_i_3__0 
       (.I0(wait_bypass_count_reg[6]),
        .O(\n_0_wait_bypass_count[4]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[4]_i_4__0 
       (.I0(wait_bypass_count_reg[5]),
        .O(\n_0_wait_bypass_count[4]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[4]_i_5__0 
       (.I0(wait_bypass_count_reg[4]),
        .O(\n_0_wait_bypass_count[4]_i_5__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[8]_i_2__0 
       (.I0(wait_bypass_count_reg[11]),
        .O(\n_0_wait_bypass_count[8]_i_2__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[8]_i_3__0 
       (.I0(wait_bypass_count_reg[10]),
        .O(\n_0_wait_bypass_count[8]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[8]_i_4__0 
       (.I0(wait_bypass_count_reg[9]),
        .O(\n_0_wait_bypass_count[8]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[8]_i_5__0 
       (.I0(wait_bypass_count_reg[8]),
        .O(\n_0_wait_bypass_count[8]_i_5__0 ));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[0] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_7_wait_bypass_count_reg[0]_i_3__0 ),
        .Q(wait_bypass_count_reg[0]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
CARRY4 \wait_bypass_count_reg[0]_i_3__0 
       (.CI(\<const0> ),
        .CO({\n_0_wait_bypass_count_reg[0]_i_3__0 ,\n_1_wait_bypass_count_reg[0]_i_3__0 ,\n_2_wait_bypass_count_reg[0]_i_3__0 ,\n_3_wait_bypass_count_reg[0]_i_3__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .O({\n_4_wait_bypass_count_reg[0]_i_3__0 ,\n_5_wait_bypass_count_reg[0]_i_3__0 ,\n_6_wait_bypass_count_reg[0]_i_3__0 ,\n_7_wait_bypass_count_reg[0]_i_3__0 }),
        .S({\n_0_wait_bypass_count[0]_i_4__0 ,\n_0_wait_bypass_count[0]_i_5__0 ,\n_0_wait_bypass_count[0]_i_6__0 ,\n_0_wait_bypass_count[0]_i_7__0 }));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[10] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_5_wait_bypass_count_reg[8]_i_1__0 ),
        .Q(wait_bypass_count_reg[10]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[11] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_4_wait_bypass_count_reg[8]_i_1__0 ),
        .Q(wait_bypass_count_reg[11]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[12] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_7_wait_bypass_count_reg[12]_i_1__0 ),
        .Q(wait_bypass_count_reg[12]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
CARRY4 \wait_bypass_count_reg[12]_i_1__0 
       (.CI(\n_0_wait_bypass_count_reg[8]_i_1__0 ),
        .CO(\NLW_wait_bypass_count_reg[12]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\NLW_wait_bypass_count_reg[12]_i_1__0_O_UNCONNECTED [3:1],\n_7_wait_bypass_count_reg[12]_i_1__0 }),
        .S({\<const0> ,\<const0> ,\<const0> ,\n_0_wait_bypass_count[12]_i_2__0 }));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[1] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_6_wait_bypass_count_reg[0]_i_3__0 ),
        .Q(wait_bypass_count_reg[1]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[2] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_5_wait_bypass_count_reg[0]_i_3__0 ),
        .Q(wait_bypass_count_reg[2]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[3] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_4_wait_bypass_count_reg[0]_i_3__0 ),
        .Q(wait_bypass_count_reg[3]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[4] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_7_wait_bypass_count_reg[4]_i_1__0 ),
        .Q(wait_bypass_count_reg[4]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
CARRY4 \wait_bypass_count_reg[4]_i_1__0 
       (.CI(\n_0_wait_bypass_count_reg[0]_i_3__0 ),
        .CO({\n_0_wait_bypass_count_reg[4]_i_1__0 ,\n_1_wait_bypass_count_reg[4]_i_1__0 ,\n_2_wait_bypass_count_reg[4]_i_1__0 ,\n_3_wait_bypass_count_reg[4]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_wait_bypass_count_reg[4]_i_1__0 ,\n_5_wait_bypass_count_reg[4]_i_1__0 ,\n_6_wait_bypass_count_reg[4]_i_1__0 ,\n_7_wait_bypass_count_reg[4]_i_1__0 }),
        .S({\n_0_wait_bypass_count[4]_i_2__0 ,\n_0_wait_bypass_count[4]_i_3__0 ,\n_0_wait_bypass_count[4]_i_4__0 ,\n_0_wait_bypass_count[4]_i_5__0 }));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[5] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_6_wait_bypass_count_reg[4]_i_1__0 ),
        .Q(wait_bypass_count_reg[5]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[6] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_5_wait_bypass_count_reg[4]_i_1__0 ),
        .Q(wait_bypass_count_reg[6]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[7] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_4_wait_bypass_count_reg[4]_i_1__0 ),
        .Q(wait_bypass_count_reg[7]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[8] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_7_wait_bypass_count_reg[8]_i_1__0 ),
        .Q(wait_bypass_count_reg[8]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
CARRY4 \wait_bypass_count_reg[8]_i_1__0 
       (.CI(\n_0_wait_bypass_count_reg[4]_i_1__0 ),
        .CO({\n_0_wait_bypass_count_reg[8]_i_1__0 ,\n_1_wait_bypass_count_reg[8]_i_1__0 ,\n_2_wait_bypass_count_reg[8]_i_1__0 ,\n_3_wait_bypass_count_reg[8]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_wait_bypass_count_reg[8]_i_1__0 ,\n_5_wait_bypass_count_reg[8]_i_1__0 ,\n_6_wait_bypass_count_reg[8]_i_1__0 ,\n_7_wait_bypass_count_reg[8]_i_1__0 }),
        .S({\n_0_wait_bypass_count[8]_i_2__0 ,\n_0_wait_bypass_count[8]_i_3__0 ,\n_0_wait_bypass_count[8]_i_4__0 ,\n_0_wait_bypass_count[8]_i_5__0 }));
(* counter = "44" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[9] 
       (.C(rxuserclk),
        .CE(\n_0_wait_bypass_count[0]_i_2__0 ),
        .D(\n_6_wait_bypass_count_reg[8]_i_1__0 ),
        .Q(wait_bypass_count_reg[9]),
        .R(\n_0_wait_bypass_count[0]_i_1__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[0]_i_10__0 
       (.I0(wait_time_cnt_reg[0]),
        .O(\n_0_wait_time_cnt[0]_i_10__0 ));
LUT5 #(
    .INIT(32'h00000002)) 
     \wait_time_cnt[0]_i_1__0 
       (.I0(\n_0_wait_time_cnt[0]_i_4__0 ),
        .I1(\n_0_FSM_onehot_rx_state[10]_i_4 ),
        .I2(\n_0_FSM_onehot_rx_state_reg[10] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[9] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[8] ),
        .O(\n_0_wait_time_cnt[0]_i_1__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \wait_time_cnt[0]_i_2__0 
       (.I0(wait_time_cnt_reg[2]),
        .I1(wait_time_cnt_reg[6]),
        .I2(wait_time_cnt_reg[10]),
        .I3(wait_time_cnt_reg[3]),
        .I4(\n_0_wait_time_cnt[0]_i_5__0 ),
        .I5(\n_0_wait_time_cnt[0]_i_6__0 ),
        .O(\n_0_wait_time_cnt[0]_i_2__0 ));
(* SOFT_HLUTNM = "soft_lutpair3" *) 
   LUT5 #(
    .INIT(32'h00000001)) 
     \wait_time_cnt[0]_i_4__0 
       (.I0(\n_0_FSM_onehot_rx_state_reg[2] ),
        .I1(\n_0_FSM_onehot_rx_state_reg[7] ),
        .I2(\n_0_FSM_onehot_rx_state_reg[6] ),
        .I3(\n_0_FSM_onehot_rx_state_reg[10] ),
        .I4(\n_0_FSM_onehot_rx_state_reg[3] ),
        .O(\n_0_wait_time_cnt[0]_i_4__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \wait_time_cnt[0]_i_5__0 
       (.I0(wait_time_cnt_reg[14]),
        .I1(wait_time_cnt_reg[11]),
        .I2(wait_time_cnt_reg[9]),
        .I3(wait_time_cnt_reg[13]),
        .I4(wait_time_cnt_reg[8]),
        .I5(wait_time_cnt_reg[12]),
        .O(\n_0_wait_time_cnt[0]_i_5__0 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \wait_time_cnt[0]_i_6__0 
       (.I0(wait_time_cnt_reg[5]),
        .I1(wait_time_cnt_reg[1]),
        .I2(wait_time_cnt_reg[0]),
        .I3(wait_time_cnt_reg[4]),
        .I4(wait_time_cnt_reg[15]),
        .I5(wait_time_cnt_reg[7]),
        .O(\n_0_wait_time_cnt[0]_i_6__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[0]_i_7 
       (.I0(wait_time_cnt_reg[3]),
        .O(\n_0_wait_time_cnt[0]_i_7 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[0]_i_8__0 
       (.I0(wait_time_cnt_reg[2]),
        .O(\n_0_wait_time_cnt[0]_i_8__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[0]_i_9__0 
       (.I0(wait_time_cnt_reg[1]),
        .O(\n_0_wait_time_cnt[0]_i_9__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[12]_i_2__0 
       (.I0(wait_time_cnt_reg[15]),
        .O(\n_0_wait_time_cnt[12]_i_2__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[12]_i_3__0 
       (.I0(wait_time_cnt_reg[14]),
        .O(\n_0_wait_time_cnt[12]_i_3__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[12]_i_4__0 
       (.I0(wait_time_cnt_reg[13]),
        .O(\n_0_wait_time_cnt[12]_i_4__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[12]_i_5__0 
       (.I0(wait_time_cnt_reg[12]),
        .O(\n_0_wait_time_cnt[12]_i_5__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[4]_i_2__0 
       (.I0(wait_time_cnt_reg[7]),
        .O(\n_0_wait_time_cnt[4]_i_2__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[4]_i_3__0 
       (.I0(wait_time_cnt_reg[6]),
        .O(\n_0_wait_time_cnt[4]_i_3__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[4]_i_4__0 
       (.I0(wait_time_cnt_reg[5]),
        .O(\n_0_wait_time_cnt[4]_i_4__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[4]_i_5__0 
       (.I0(wait_time_cnt_reg[4]),
        .O(\n_0_wait_time_cnt[4]_i_5__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[8]_i_2__0 
       (.I0(wait_time_cnt_reg[11]),
        .O(\n_0_wait_time_cnt[8]_i_2__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[8]_i_3__0 
       (.I0(wait_time_cnt_reg[10]),
        .O(\n_0_wait_time_cnt[8]_i_3__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[8]_i_4__0 
       (.I0(wait_time_cnt_reg[9]),
        .O(\n_0_wait_time_cnt[8]_i_4__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[8]_i_5__0 
       (.I0(wait_time_cnt_reg[8]),
        .O(\n_0_wait_time_cnt[8]_i_5__0 ));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_7_wait_time_cnt_reg[0]_i_3__0 ),
        .Q(wait_time_cnt_reg[0]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
CARRY4 \wait_time_cnt_reg[0]_i_3__0 
       (.CI(\<const0> ),
        .CO({\n_0_wait_time_cnt_reg[0]_i_3__0 ,\n_1_wait_time_cnt_reg[0]_i_3__0 ,\n_2_wait_time_cnt_reg[0]_i_3__0 ,\n_3_wait_time_cnt_reg[0]_i_3__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const1> ,\<const1> ,\<const1> ,\<const1> }),
        .O({\n_4_wait_time_cnt_reg[0]_i_3__0 ,\n_5_wait_time_cnt_reg[0]_i_3__0 ,\n_6_wait_time_cnt_reg[0]_i_3__0 ,\n_7_wait_time_cnt_reg[0]_i_3__0 }),
        .S({\n_0_wait_time_cnt[0]_i_7 ,\n_0_wait_time_cnt[0]_i_8__0 ,\n_0_wait_time_cnt[0]_i_9__0 ,\n_0_wait_time_cnt[0]_i_10__0 }));
(* counter = "41" *) 
   FDSE \wait_time_cnt_reg[10] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_5_wait_time_cnt_reg[8]_i_1__0 ),
        .Q(wait_time_cnt_reg[10]),
        .S(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[11] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_4_wait_time_cnt_reg[8]_i_1__0 ),
        .Q(wait_time_cnt_reg[11]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[12] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_7_wait_time_cnt_reg[12]_i_1__0 ),
        .Q(wait_time_cnt_reg[12]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
CARRY4 \wait_time_cnt_reg[12]_i_1__0 
       (.CI(\n_0_wait_time_cnt_reg[8]_i_1__0 ),
        .CO({\NLW_wait_time_cnt_reg[12]_i_1__0_CO_UNCONNECTED [3],\n_1_wait_time_cnt_reg[12]_i_1__0 ,\n_2_wait_time_cnt_reg[12]_i_1__0 ,\n_3_wait_time_cnt_reg[12]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const1> ,\<const1> ,\<const1> }),
        .O({\n_4_wait_time_cnt_reg[12]_i_1__0 ,\n_5_wait_time_cnt_reg[12]_i_1__0 ,\n_6_wait_time_cnt_reg[12]_i_1__0 ,\n_7_wait_time_cnt_reg[12]_i_1__0 }),
        .S({\n_0_wait_time_cnt[12]_i_2__0 ,\n_0_wait_time_cnt[12]_i_3__0 ,\n_0_wait_time_cnt[12]_i_4__0 ,\n_0_wait_time_cnt[12]_i_5__0 }));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[13] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_6_wait_time_cnt_reg[12]_i_1__0 ),
        .Q(wait_time_cnt_reg[13]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[14] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_5_wait_time_cnt_reg[12]_i_1__0 ),
        .Q(wait_time_cnt_reg[14]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[15] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_4_wait_time_cnt_reg[12]_i_1__0 ),
        .Q(wait_time_cnt_reg[15]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_6_wait_time_cnt_reg[0]_i_3__0 ),
        .Q(wait_time_cnt_reg[1]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_5_wait_time_cnt_reg[0]_i_3__0 ),
        .Q(wait_time_cnt_reg[2]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_4_wait_time_cnt_reg[0]_i_3__0 ),
        .Q(wait_time_cnt_reg[3]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDSE \wait_time_cnt_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_7_wait_time_cnt_reg[4]_i_1__0 ),
        .Q(wait_time_cnt_reg[4]),
        .S(\n_0_wait_time_cnt[0]_i_1__0 ));
CARRY4 \wait_time_cnt_reg[4]_i_1__0 
       (.CI(\n_0_wait_time_cnt_reg[0]_i_3__0 ),
        .CO({\n_0_wait_time_cnt_reg[4]_i_1__0 ,\n_1_wait_time_cnt_reg[4]_i_1__0 ,\n_2_wait_time_cnt_reg[4]_i_1__0 ,\n_3_wait_time_cnt_reg[4]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const1> ,\<const1> ,\<const1> ,\<const1> }),
        .O({\n_4_wait_time_cnt_reg[4]_i_1__0 ,\n_5_wait_time_cnt_reg[4]_i_1__0 ,\n_6_wait_time_cnt_reg[4]_i_1__0 ,\n_7_wait_time_cnt_reg[4]_i_1__0 }),
        .S({\n_0_wait_time_cnt[4]_i_2__0 ,\n_0_wait_time_cnt[4]_i_3__0 ,\n_0_wait_time_cnt[4]_i_4__0 ,\n_0_wait_time_cnt[4]_i_5__0 }));
(* counter = "41" *) 
   FDRE \wait_time_cnt_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_6_wait_time_cnt_reg[4]_i_1__0 ),
        .Q(wait_time_cnt_reg[5]),
        .R(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDSE \wait_time_cnt_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_5_wait_time_cnt_reg[4]_i_1__0 ),
        .Q(wait_time_cnt_reg[6]),
        .S(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDSE \wait_time_cnt_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_4_wait_time_cnt_reg[4]_i_1__0 ),
        .Q(wait_time_cnt_reg[7]),
        .S(\n_0_wait_time_cnt[0]_i_1__0 ));
(* counter = "41" *) 
   FDSE \wait_time_cnt_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_7_wait_time_cnt_reg[8]_i_1__0 ),
        .Q(wait_time_cnt_reg[8]),
        .S(\n_0_wait_time_cnt[0]_i_1__0 ));
CARRY4 \wait_time_cnt_reg[8]_i_1__0 
       (.CI(\n_0_wait_time_cnt_reg[4]_i_1__0 ),
        .CO({\n_0_wait_time_cnt_reg[8]_i_1__0 ,\n_1_wait_time_cnt_reg[8]_i_1__0 ,\n_2_wait_time_cnt_reg[8]_i_1__0 ,\n_3_wait_time_cnt_reg[8]_i_1__0 }),
        .CYINIT(\<const0> ),
        .DI({\<const1> ,\<const1> ,\<const1> ,\<const1> }),
        .O({\n_4_wait_time_cnt_reg[8]_i_1__0 ,\n_5_wait_time_cnt_reg[8]_i_1__0 ,\n_6_wait_time_cnt_reg[8]_i_1__0 ,\n_7_wait_time_cnt_reg[8]_i_1__0 }),
        .S({\n_0_wait_time_cnt[8]_i_2__0 ,\n_0_wait_time_cnt[8]_i_3__0 ,\n_0_wait_time_cnt[8]_i_4__0 ,\n_0_wait_time_cnt[8]_i_5__0 }));
(* counter = "41" *) 
   FDSE \wait_time_cnt_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\n_0_wait_time_cnt[0]_i_2__0 ),
        .D(\n_6_wait_time_cnt_reg[8]_i_1__0 ),
        .Q(wait_time_cnt_reg[9]),
        .S(\n_0_wait_time_cnt[0]_i_1__0 ));
endmodule

module quadsgmiiquadsgmii_GTWIZARD_TX_STARTUP_FSM
   (O1,
    gt0_cpllreset_t,
    gt0_txuserrdy_t,
    gt0_gttxreset_i,
    userclk,
    independent_clock_bufg,
    I1,
    I2,
    gt0_cpllrefclklost_i,
    pma_reset,
    mgt_tx_reset,
    gt0_gttxreset_in);
  output O1;
  output gt0_cpllreset_t;
  output gt0_txuserrdy_t;
  output gt0_gttxreset_i;
  input userclk;
  input independent_clock_bufg;
  input I1;
  input I2;
  input gt0_cpllrefclklost_i;
  input pma_reset;
  input mgt_tx_reset;
  input gt0_gttxreset_in;

  wire \<const0> ;
  wire \<const1> ;
  wire I1;
  wire I2;
  wire O1;
  wire clear;
  wire cplllock_sync;
  wire gt0_cpllrefclklost_i;
  wire gt0_cpllreset_t;
  wire gt0_gttxreset_i;
  wire gt0_gttxreset_in;
  wire gt0_gttxreset_t;
  wire gt0_txuserrdy_t;
  wire independent_clock_bufg;
  wire [7:0]init_wait_count_reg__0;
  wire init_wait_done;
  wire mgt_tx_reset;
  wire [9:0]mmcm_lock_count_reg__0;
  wire mmcm_lock_i;
  wire mmcm_lock_reclocked;
  wire n_0_CPLL_RESET_i_1;
  wire \n_0_FSM_onehot_tx_state[10]_i_1 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_10 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_11 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_12 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_13 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_14 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_2 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_4 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_5 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_6 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_7 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_8 ;
  wire \n_0_FSM_onehot_tx_state[10]_i_9 ;
  wire \n_0_FSM_onehot_tx_state[1]_i_1 ;
  wire \n_0_FSM_onehot_tx_state[1]_i_2 ;
  wire \n_0_FSM_onehot_tx_state[1]_i_3 ;
  wire \n_0_FSM_onehot_tx_state[1]_i_4 ;
  wire \n_0_FSM_onehot_tx_state[1]_i_5 ;
  wire \n_0_FSM_onehot_tx_state[2]_i_1 ;
  wire \n_0_FSM_onehot_tx_state[3]_i_1 ;
  wire \n_0_FSM_onehot_tx_state[4]_i_1 ;
  wire \n_0_FSM_onehot_tx_state[5]_i_1 ;
  wire \n_0_FSM_onehot_tx_state[6]_i_1 ;
  wire \n_0_FSM_onehot_tx_state[6]_i_2 ;
  wire \n_0_FSM_onehot_tx_state[7]_i_1 ;
  wire \n_0_FSM_onehot_tx_state[8]_i_1 ;
  wire \n_0_FSM_onehot_tx_state[8]_i_2 ;
  wire \n_0_FSM_onehot_tx_state[8]_i_3 ;
  wire \n_0_FSM_onehot_tx_state[8]_i_4 ;
  wire \n_0_FSM_onehot_tx_state[8]_i_5 ;
  wire \n_0_FSM_onehot_tx_state[8]_i_6 ;
  wire \n_0_FSM_onehot_tx_state[8]_i_7 ;
  wire \n_0_FSM_onehot_tx_state[8]_i_8 ;
  wire \n_0_FSM_onehot_tx_state[8]_i_9 ;
  wire \n_0_FSM_onehot_tx_state[9]_i_1 ;
  wire \n_0_FSM_onehot_tx_state_reg[0] ;
  wire \n_0_FSM_onehot_tx_state_reg[10] ;
  wire \n_0_FSM_onehot_tx_state_reg[1] ;
  wire \n_0_FSM_onehot_tx_state_reg[2] ;
  wire \n_0_FSM_onehot_tx_state_reg[3] ;
  wire \n_0_FSM_onehot_tx_state_reg[4] ;
  wire \n_0_FSM_onehot_tx_state_reg[5] ;
  wire \n_0_FSM_onehot_tx_state_reg[6] ;
  wire \n_0_FSM_onehot_tx_state_reg[7] ;
  wire \n_0_FSM_onehot_tx_state_reg[8] ;
  wire \n_0_FSM_onehot_tx_state_reg[9] ;
  wire n_0_TXUSERRDY_i_1;
  wire n_0_gttxreset_i_i_1;
  wire \n_0_init_wait_count[6]_i_2 ;
  wire \n_0_init_wait_count[7]_i_1 ;
  wire \n_0_init_wait_count[7]_i_3 ;
  wire \n_0_init_wait_count[7]_i_4 ;
  wire n_0_init_wait_done_i_1;
  wire \n_0_mmcm_lock_count[9]_i_1 ;
  wire \n_0_mmcm_lock_count[9]_i_2 ;
  wire \n_0_mmcm_lock_count[9]_i_4 ;
  wire n_0_mmcm_lock_reclocked_i_1;
  wire n_0_mmcm_lock_reclocked_i_2;
  wire n_0_pll_reset_asserted_i_1;
  wire n_0_pll_reset_asserted_i_2;
  wire n_0_reset_time_out_i_1;
  wire n_0_reset_time_out_i_2;
  wire n_0_run_phase_alignment_int_i_1;
  wire n_0_run_phase_alignment_int_reg;
  wire n_0_time_out_2ms_i_1;
  wire n_0_time_out_2ms_i_2__0;
  wire n_0_time_out_2ms_i_3__0;
  wire n_0_time_out_2ms_i_4__0;
  wire n_0_time_out_2ms_i_5__0;
  wire n_0_time_out_500us_i_1;
  wire n_0_time_out_500us_i_2;
  wire n_0_time_out_500us_i_3;
  wire n_0_time_out_500us_i_4;
  wire n_0_time_out_500us_i_5;
  wire n_0_time_out_500us_i_6;
  wire \n_0_time_out_counter[0]_i_1 ;
  wire \n_0_time_out_counter[0]_i_3__0 ;
  wire \n_0_time_out_counter[0]_i_4__0 ;
  wire \n_0_time_out_counter[0]_i_5 ;
  wire \n_0_time_out_counter[0]_i_6 ;
  wire \n_0_time_out_counter[12]_i_2 ;
  wire \n_0_time_out_counter[12]_i_3 ;
  wire \n_0_time_out_counter[12]_i_4 ;
  wire \n_0_time_out_counter[12]_i_5 ;
  wire \n_0_time_out_counter[16]_i_2 ;
  wire \n_0_time_out_counter[16]_i_3 ;
  wire \n_0_time_out_counter[16]_i_4 ;
  wire \n_0_time_out_counter[4]_i_2 ;
  wire \n_0_time_out_counter[4]_i_3 ;
  wire \n_0_time_out_counter[4]_i_4 ;
  wire \n_0_time_out_counter[4]_i_5 ;
  wire \n_0_time_out_counter[8]_i_2 ;
  wire \n_0_time_out_counter[8]_i_3 ;
  wire \n_0_time_out_counter[8]_i_4 ;
  wire \n_0_time_out_counter[8]_i_5 ;
  wire \n_0_time_out_counter_reg[0]_i_2 ;
  wire \n_0_time_out_counter_reg[12]_i_1 ;
  wire \n_0_time_out_counter_reg[4]_i_1 ;
  wire \n_0_time_out_counter_reg[8]_i_1 ;
  wire n_0_time_out_wait_bypass_i_1;
  wire n_0_time_out_wait_bypass_i_2;
  wire n_0_time_out_wait_bypass_i_3;
  wire n_0_time_out_wait_bypass_i_4;
  wire n_0_time_out_wait_bypass_reg;
  wire n_0_time_tlock_max_i_1;
  wire n_0_time_tlock_max_i_2__0;
  wire n_0_time_tlock_max_i_3__0;
  wire n_0_time_tlock_max_i_4;
  wire n_0_tx_fsm_reset_done_int_i_1;
  wire n_0_tx_fsm_reset_done_int_i_2;
  wire n_0_tx_fsm_reset_done_int_i_3;
  wire \n_0_wait_bypass_count[0]_i_1 ;
  wire \n_0_wait_bypass_count[0]_i_2 ;
  wire \n_0_wait_bypass_count[0]_i_4 ;
  wire \n_0_wait_bypass_count[0]_i_5 ;
  wire \n_0_wait_bypass_count[0]_i_6 ;
  wire \n_0_wait_bypass_count[0]_i_7 ;
  wire \n_0_wait_bypass_count[12]_i_2 ;
  wire \n_0_wait_bypass_count[12]_i_3 ;
  wire \n_0_wait_bypass_count[12]_i_4 ;
  wire \n_0_wait_bypass_count[12]_i_5 ;
  wire \n_0_wait_bypass_count[16]_i_2 ;
  wire \n_0_wait_bypass_count[4]_i_2 ;
  wire \n_0_wait_bypass_count[4]_i_3 ;
  wire \n_0_wait_bypass_count[4]_i_4 ;
  wire \n_0_wait_bypass_count[4]_i_5 ;
  wire \n_0_wait_bypass_count[8]_i_2 ;
  wire \n_0_wait_bypass_count[8]_i_3 ;
  wire \n_0_wait_bypass_count[8]_i_4 ;
  wire \n_0_wait_bypass_count[8]_i_5 ;
  wire \n_0_wait_bypass_count_reg[0]_i_3 ;
  wire \n_0_wait_bypass_count_reg[12]_i_1 ;
  wire \n_0_wait_bypass_count_reg[4]_i_1 ;
  wire \n_0_wait_bypass_count_reg[8]_i_1 ;
  wire \n_0_wait_time_cnt[0]_i_10 ;
  wire \n_0_wait_time_cnt[0]_i_11 ;
  wire \n_0_wait_time_cnt[0]_i_4 ;
  wire \n_0_wait_time_cnt[0]_i_5 ;
  wire \n_0_wait_time_cnt[0]_i_6 ;
  wire \n_0_wait_time_cnt[0]_i_7__0 ;
  wire \n_0_wait_time_cnt[0]_i_8 ;
  wire \n_0_wait_time_cnt[0]_i_9 ;
  wire \n_0_wait_time_cnt[12]_i_2 ;
  wire \n_0_wait_time_cnt[12]_i_3 ;
  wire \n_0_wait_time_cnt[12]_i_4 ;
  wire \n_0_wait_time_cnt[12]_i_5 ;
  wire \n_0_wait_time_cnt[4]_i_2 ;
  wire \n_0_wait_time_cnt[4]_i_3 ;
  wire \n_0_wait_time_cnt[4]_i_4 ;
  wire \n_0_wait_time_cnt[4]_i_5 ;
  wire \n_0_wait_time_cnt[8]_i_2 ;
  wire \n_0_wait_time_cnt[8]_i_3 ;
  wire \n_0_wait_time_cnt[8]_i_4 ;
  wire \n_0_wait_time_cnt[8]_i_5 ;
  wire \n_0_wait_time_cnt_reg[0]_i_3 ;
  wire \n_0_wait_time_cnt_reg[4]_i_1 ;
  wire \n_0_wait_time_cnt_reg[8]_i_1 ;
  wire \n_1_time_out_counter_reg[0]_i_2 ;
  wire \n_1_time_out_counter_reg[12]_i_1 ;
  wire \n_1_time_out_counter_reg[4]_i_1 ;
  wire \n_1_time_out_counter_reg[8]_i_1 ;
  wire \n_1_wait_bypass_count_reg[0]_i_3 ;
  wire \n_1_wait_bypass_count_reg[12]_i_1 ;
  wire \n_1_wait_bypass_count_reg[4]_i_1 ;
  wire \n_1_wait_bypass_count_reg[8]_i_1 ;
  wire \n_1_wait_time_cnt_reg[0]_i_3 ;
  wire \n_1_wait_time_cnt_reg[12]_i_1 ;
  wire \n_1_wait_time_cnt_reg[4]_i_1 ;
  wire \n_1_wait_time_cnt_reg[8]_i_1 ;
  wire \n_2_time_out_counter_reg[0]_i_2 ;
  wire \n_2_time_out_counter_reg[12]_i_1 ;
  wire \n_2_time_out_counter_reg[16]_i_1 ;
  wire \n_2_time_out_counter_reg[4]_i_1 ;
  wire \n_2_time_out_counter_reg[8]_i_1 ;
  wire \n_2_wait_bypass_count_reg[0]_i_3 ;
  wire \n_2_wait_bypass_count_reg[12]_i_1 ;
  wire \n_2_wait_bypass_count_reg[4]_i_1 ;
  wire \n_2_wait_bypass_count_reg[8]_i_1 ;
  wire \n_2_wait_time_cnt_reg[0]_i_3 ;
  wire \n_2_wait_time_cnt_reg[12]_i_1 ;
  wire \n_2_wait_time_cnt_reg[4]_i_1 ;
  wire \n_2_wait_time_cnt_reg[8]_i_1 ;
  wire \n_3_time_out_counter_reg[0]_i_2 ;
  wire \n_3_time_out_counter_reg[12]_i_1 ;
  wire \n_3_time_out_counter_reg[16]_i_1 ;
  wire \n_3_time_out_counter_reg[4]_i_1 ;
  wire \n_3_time_out_counter_reg[8]_i_1 ;
  wire \n_3_wait_bypass_count_reg[0]_i_3 ;
  wire \n_3_wait_bypass_count_reg[12]_i_1 ;
  wire \n_3_wait_bypass_count_reg[4]_i_1 ;
  wire \n_3_wait_bypass_count_reg[8]_i_1 ;
  wire \n_3_wait_time_cnt_reg[0]_i_3 ;
  wire \n_3_wait_time_cnt_reg[12]_i_1 ;
  wire \n_3_wait_time_cnt_reg[4]_i_1 ;
  wire \n_3_wait_time_cnt_reg[8]_i_1 ;
  wire \n_4_time_out_counter_reg[0]_i_2 ;
  wire \n_4_time_out_counter_reg[12]_i_1 ;
  wire \n_4_time_out_counter_reg[4]_i_1 ;
  wire \n_4_time_out_counter_reg[8]_i_1 ;
  wire \n_4_wait_bypass_count_reg[0]_i_3 ;
  wire \n_4_wait_bypass_count_reg[12]_i_1 ;
  wire \n_4_wait_bypass_count_reg[4]_i_1 ;
  wire \n_4_wait_bypass_count_reg[8]_i_1 ;
  wire \n_4_wait_time_cnt_reg[0]_i_3 ;
  wire \n_4_wait_time_cnt_reg[12]_i_1 ;
  wire \n_4_wait_time_cnt_reg[4]_i_1 ;
  wire \n_4_wait_time_cnt_reg[8]_i_1 ;
  wire \n_5_time_out_counter_reg[0]_i_2 ;
  wire \n_5_time_out_counter_reg[12]_i_1 ;
  wire \n_5_time_out_counter_reg[16]_i_1 ;
  wire \n_5_time_out_counter_reg[4]_i_1 ;
  wire \n_5_time_out_counter_reg[8]_i_1 ;
  wire \n_5_wait_bypass_count_reg[0]_i_3 ;
  wire \n_5_wait_bypass_count_reg[12]_i_1 ;
  wire \n_5_wait_bypass_count_reg[4]_i_1 ;
  wire \n_5_wait_bypass_count_reg[8]_i_1 ;
  wire \n_5_wait_time_cnt_reg[0]_i_3 ;
  wire \n_5_wait_time_cnt_reg[12]_i_1 ;
  wire \n_5_wait_time_cnt_reg[4]_i_1 ;
  wire \n_5_wait_time_cnt_reg[8]_i_1 ;
  wire \n_6_time_out_counter_reg[0]_i_2 ;
  wire \n_6_time_out_counter_reg[12]_i_1 ;
  wire \n_6_time_out_counter_reg[16]_i_1 ;
  wire \n_6_time_out_counter_reg[4]_i_1 ;
  wire \n_6_time_out_counter_reg[8]_i_1 ;
  wire \n_6_wait_bypass_count_reg[0]_i_3 ;
  wire \n_6_wait_bypass_count_reg[12]_i_1 ;
  wire \n_6_wait_bypass_count_reg[4]_i_1 ;
  wire \n_6_wait_bypass_count_reg[8]_i_1 ;
  wire \n_6_wait_time_cnt_reg[0]_i_3 ;
  wire \n_6_wait_time_cnt_reg[12]_i_1 ;
  wire \n_6_wait_time_cnt_reg[4]_i_1 ;
  wire \n_6_wait_time_cnt_reg[8]_i_1 ;
  wire \n_7_time_out_counter_reg[0]_i_2 ;
  wire \n_7_time_out_counter_reg[12]_i_1 ;
  wire \n_7_time_out_counter_reg[16]_i_1 ;
  wire \n_7_time_out_counter_reg[4]_i_1 ;
  wire \n_7_time_out_counter_reg[8]_i_1 ;
  wire \n_7_wait_bypass_count_reg[0]_i_3 ;
  wire \n_7_wait_bypass_count_reg[12]_i_1 ;
  wire \n_7_wait_bypass_count_reg[16]_i_1 ;
  wire \n_7_wait_bypass_count_reg[4]_i_1 ;
  wire \n_7_wait_bypass_count_reg[8]_i_1 ;
  wire \n_7_wait_time_cnt_reg[0]_i_3 ;
  wire \n_7_wait_time_cnt_reg[12]_i_1 ;
  wire \n_7_wait_time_cnt_reg[4]_i_1 ;
  wire \n_7_wait_time_cnt_reg[8]_i_1 ;
  wire [7:0]p_0_in;
  wire [9:0]p_0_in__1;
  wire pll_reset_asserted;
  wire pma_reset;
  wire reset_time_out;
  wire run_phase_alignment_int_s2;
  wire run_phase_alignment_int_s3;
  wire sel;
  wire time_out_2ms;
  wire time_out_500us;
  wire [18:0]time_out_counter_reg;
  wire time_out_wait_bypass_s2;
  wire time_out_wait_bypass_s3;
  wire time_tlock_max;
  wire tx_fsm_reset_done_int_s2;
  wire tx_fsm_reset_done_int_s3;
  wire tx_state12_out;
  wire [3:3]tx_state_reg;
  wire txresetdone_s2;
  wire txresetdone_s3;
  wire userclk;
  wire [16:0]wait_bypass_count_reg;
  wire [15:0]wait_time_cnt_reg;
  wire NLW_sync_cpllrefclklost_data_out_UNCONNECTED;
  wire [3:2]\NLW_time_out_counter_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_time_out_counter_reg[16]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_wait_bypass_count_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_wait_bypass_count_reg[16]_i_1_O_UNCONNECTED ;
  wire [3:3]\NLW_wait_time_cnt_reg[12]_i_1_CO_UNCONNECTED ;

LUT6 #(
    .INIT(64'h00000000AA2AAAEA)) 
     CPLL_RESET_i_1
       (.I0(gt0_cpllreset_t),
        .I1(n_0_tx_fsm_reset_done_int_i_3),
        .I2(n_0_tx_fsm_reset_done_int_i_2),
        .I3(tx_state_reg),
        .I4(pll_reset_asserted),
        .I5(pma_reset),
        .O(n_0_CPLL_RESET_i_1));
FDRE #(
    .INIT(1'b0)) 
     CPLL_RESET_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_CPLL_RESET_i_1),
        .Q(gt0_cpllreset_t),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h3030FDF1FFFFFDF1)) 
     \FSM_onehot_tx_state[10]_i_1 
       (.I0(sel),
        .I1(n_0_tx_fsm_reset_done_int_i_3),
        .I2(tx_state_reg),
        .I3(init_wait_done),
        .I4(n_0_tx_fsm_reset_done_int_i_2),
        .I5(\n_0_FSM_onehot_tx_state[10]_i_4 ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_1 ));
LUT6 #(
    .INIT(64'h5554555455540054)) 
     \FSM_onehot_tx_state[10]_i_10 
       (.I0(\n_0_wait_time_cnt[0]_i_5 ),
        .I1(tx_state12_out),
        .I2(txresetdone_s3),
        .I3(\n_0_wait_time_cnt[0]_i_4 ),
        .I4(time_out_2ms),
        .I5(cplllock_sync),
        .O(\n_0_FSM_onehot_tx_state[10]_i_10 ));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     \FSM_onehot_tx_state[10]_i_11 
       (.I0(\n_0_FSM_onehot_tx_state_reg[6] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[0] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[10] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[8] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[2] ),
        .I5(\n_0_FSM_onehot_tx_state_reg[4] ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_11 ));
(* SOFT_HLUTNM = "soft_lutpair25" *) 
   LUT3 #(
    .INIT(8'hFE)) 
     \FSM_onehot_tx_state[10]_i_12 
       (.I0(\n_0_FSM_onehot_tx_state_reg[10] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[8] ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_12 ));
LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_tx_state[10]_i_13 
       (.I0(\n_0_FSM_onehot_tx_state_reg[3] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[2] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[1] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[0] ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_13 ));
LUT4 #(
    .INIT(16'hFFFE)) 
     \FSM_onehot_tx_state[10]_i_14 
       (.I0(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[4] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[1] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[0] ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_14 ));
LUT5 #(
    .INIT(32'h0000FF02)) 
     \FSM_onehot_tx_state[10]_i_2 
       (.I0(n_0_tx_fsm_reset_done_int_i_2),
        .I1(\n_0_FSM_onehot_tx_state[10]_i_5 ),
        .I2(\n_0_FSM_onehot_tx_state[10]_i_6 ),
        .I3(\n_0_FSM_onehot_tx_state[10]_i_7 ),
        .I4(\n_0_FSM_onehot_tx_state[10]_i_8 ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair20" *) 
   LUT2 #(
    .INIT(4'hE)) 
     \FSM_onehot_tx_state[10]_i_3 
       (.I0(\n_0_FSM_onehot_tx_state_reg[8] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[9] ),
        .O(tx_state_reg));
LUT6 #(
    .INIT(64'h00000000AAAAAAFB)) 
     \FSM_onehot_tx_state[10]_i_4 
       (.I0(\n_0_FSM_onehot_tx_state[10]_i_9 ),
        .I1(time_tlock_max),
        .I2(reset_time_out),
        .I3(\n_0_wait_time_cnt[0]_i_4 ),
        .I4(mmcm_lock_reclocked),
        .I5(\n_0_FSM_onehot_tx_state[10]_i_10 ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair22" *) 
   LUT5 #(
    .INIT(32'hFEAAFEA8)) 
     \FSM_onehot_tx_state[10]_i_5 
       (.I0(\n_0_FSM_onehot_tx_state_reg[1] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[3] ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_5 ));
LUT5 #(
    .INIT(32'hEAE8FFFF)) 
     \FSM_onehot_tx_state[10]_i_6 
       (.I0(\n_0_FSM_onehot_tx_state_reg[3] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I4(\n_0_FSM_onehot_tx_state[10]_i_11 ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_6 ));
LUT6 #(
    .INIT(64'h0000000000000116)) 
     \FSM_onehot_tx_state[10]_i_7 
       (.I0(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[4] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[6] ),
        .I4(\n_0_FSM_onehot_tx_state[10]_i_12 ),
        .I5(\n_0_FSM_onehot_tx_state[10]_i_13 ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_7 ));
(* SOFT_HLUTNM = "soft_lutpair25" *) 
   LUT5 #(
    .INIT(32'hFFFFF9FF)) 
     \FSM_onehot_tx_state[10]_i_8 
       (.I0(\n_0_FSM_onehot_tx_state_reg[8] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[10] ),
        .I3(\n_0_wait_time_cnt[0]_i_5 ),
        .I4(\n_0_FSM_onehot_tx_state[10]_i_14 ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFDFFFDFDFDFD)) 
     \FSM_onehot_tx_state[10]_i_9 
       (.I0(\n_0_wait_time_cnt[0]_i_5 ),
        .I1(\n_0_FSM_onehot_tx_state_reg[8] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I3(pll_reset_asserted),
        .I4(cplllock_sync),
        .I5(\n_0_wait_time_cnt[0]_i_4 ),
        .O(\n_0_FSM_onehot_tx_state[10]_i_9 ));
LUT5 #(
    .INIT(32'hFFFF0047)) 
     \FSM_onehot_tx_state[1]_i_1 
       (.I0(\n_0_FSM_onehot_tx_state[1]_i_2 ),
        .I1(\n_0_FSM_onehot_tx_state[8]_i_5 ),
        .I2(\n_0_FSM_onehot_tx_state[1]_i_3 ),
        .I3(\n_0_FSM_onehot_tx_state[8]_i_2 ),
        .I4(\n_0_FSM_onehot_tx_state[1]_i_4 ),
        .O(\n_0_FSM_onehot_tx_state[1]_i_1 ));
LUT5 #(
    .INIT(32'h5555559D)) 
     \FSM_onehot_tx_state[1]_i_2 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_4 ),
        .I1(n_0_tx_fsm_reset_done_int_i_2),
        .I2(time_out_2ms),
        .I3(\n_0_FSM_onehot_tx_state[10]_i_5 ),
        .I4(\n_0_FSM_onehot_tx_state[10]_i_6 ),
        .O(\n_0_FSM_onehot_tx_state[1]_i_2 ));
LUT6 #(
    .INIT(64'hFFFFFF5FFFFFFF3F)) 
     \FSM_onehot_tx_state[1]_i_3 
       (.I0(\n_0_FSM_onehot_tx_state[1]_i_5 ),
        .I1(tx_state12_out),
        .I2(n_0_tx_fsm_reset_done_int_i_2),
        .I3(\n_0_FSM_onehot_tx_state[10]_i_5 ),
        .I4(\n_0_FSM_onehot_tx_state[10]_i_6 ),
        .I5(\n_0_FSM_onehot_tx_state[8]_i_4 ),
        .O(\n_0_FSM_onehot_tx_state[1]_i_3 ));
LUT6 #(
    .INIT(64'h0000000054550000)) 
     \FSM_onehot_tx_state[1]_i_4 
       (.I0(\n_0_FSM_onehot_tx_state[10]_i_7 ),
        .I1(\n_0_FSM_onehot_tx_state[10]_i_6 ),
        .I2(\n_0_FSM_onehot_tx_state[10]_i_5 ),
        .I3(n_0_tx_fsm_reset_done_int_i_2),
        .I4(time_out_wait_bypass_s3),
        .I5(\n_0_FSM_onehot_tx_state[10]_i_8 ),
        .O(\n_0_FSM_onehot_tx_state[1]_i_4 ));
(* SOFT_HLUTNM = "soft_lutpair33" *) 
   LUT3 #(
    .INIT(8'h04)) 
     \FSM_onehot_tx_state[1]_i_5 
       (.I0(mmcm_lock_reclocked),
        .I1(time_tlock_max),
        .I2(reset_time_out),
        .O(\n_0_FSM_onehot_tx_state[1]_i_5 ));
(* SOFT_HLUTNM = "soft_lutpair34" *) 
   LUT2 #(
    .INIT(4'h2)) 
     \FSM_onehot_tx_state[1]_i_6 
       (.I0(time_out_500us),
        .I1(reset_time_out),
        .O(tx_state12_out));
(* SOFT_HLUTNM = "soft_lutpair29" *) 
   LUT4 #(
    .INIT(16'h4000)) 
     \FSM_onehot_tx_state[2]_i_1 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_tx_state[8]_i_5 ),
        .I2(\n_0_FSM_onehot_tx_state[8]_i_3 ),
        .I3(\n_0_FSM_onehot_tx_state[8]_i_4 ),
        .O(\n_0_FSM_onehot_tx_state[2]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair29" *) 
   LUT4 #(
    .INIT(16'h0100)) 
     \FSM_onehot_tx_state[3]_i_1 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_tx_state[8]_i_3 ),
        .I2(\n_0_FSM_onehot_tx_state[8]_i_4 ),
        .I3(\n_0_FSM_onehot_tx_state[8]_i_5 ),
        .O(\n_0_FSM_onehot_tx_state[3]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair21" *) 
   LUT5 #(
    .INIT(32'h00100000)) 
     \FSM_onehot_tx_state[4]_i_1 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_2 ),
        .I1(time_out_2ms),
        .I2(\n_0_FSM_onehot_tx_state[8]_i_3 ),
        .I3(\n_0_FSM_onehot_tx_state[8]_i_4 ),
        .I4(\n_0_FSM_onehot_tx_state[8]_i_5 ),
        .O(\n_0_FSM_onehot_tx_state[4]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair27" *) 
   LUT4 #(
    .INIT(16'h0010)) 
     \FSM_onehot_tx_state[5]_i_1 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_tx_state[8]_i_3 ),
        .I2(\n_0_FSM_onehot_tx_state[8]_i_4 ),
        .I3(\n_0_FSM_onehot_tx_state[8]_i_5 ),
        .O(\n_0_FSM_onehot_tx_state[5]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair27" *) 
   LUT4 #(
    .INIT(16'h0040)) 
     \FSM_onehot_tx_state[6]_i_1 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_tx_state[6]_i_2 ),
        .I2(\n_0_FSM_onehot_tx_state[8]_i_4 ),
        .I3(\n_0_FSM_onehot_tx_state[8]_i_5 ),
        .O(\n_0_FSM_onehot_tx_state[6]_i_1 ));
LUT6 #(
    .INIT(64'h000000000000FB00)) 
     \FSM_onehot_tx_state[6]_i_2 
       (.I0(reset_time_out),
        .I1(time_tlock_max),
        .I2(mmcm_lock_reclocked),
        .I3(n_0_tx_fsm_reset_done_int_i_2),
        .I4(\n_0_FSM_onehot_tx_state[10]_i_5 ),
        .I5(\n_0_FSM_onehot_tx_state[10]_i_6 ),
        .O(\n_0_FSM_onehot_tx_state[6]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair21" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \FSM_onehot_tx_state[7]_i_1 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_2 ),
        .I1(\n_0_FSM_onehot_tx_state[8]_i_3 ),
        .I2(\n_0_FSM_onehot_tx_state[8]_i_4 ),
        .I3(\n_0_FSM_onehot_tx_state[8]_i_5 ),
        .O(\n_0_FSM_onehot_tx_state[7]_i_1 ));
LUT6 #(
    .INIT(64'h0000000000005100)) 
     \FSM_onehot_tx_state[8]_i_1 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_2 ),
        .I1(time_out_500us),
        .I2(reset_time_out),
        .I3(\n_0_FSM_onehot_tx_state[8]_i_3 ),
        .I4(\n_0_FSM_onehot_tx_state[8]_i_4 ),
        .I5(\n_0_FSM_onehot_tx_state[8]_i_5 ),
        .O(\n_0_FSM_onehot_tx_state[8]_i_1 ));
LUT4 #(
    .INIT(16'h0004)) 
     \FSM_onehot_tx_state[8]_i_2 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_6 ),
        .I1(\n_0_wait_time_cnt[0]_i_4 ),
        .I2(\n_0_FSM_onehot_tx_state_reg[10] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[0] ),
        .O(\n_0_FSM_onehot_tx_state[8]_i_2 ));
LUT6 #(
    .INIT(64'h0001111100011114)) 
     \FSM_onehot_tx_state[8]_i_3 
       (.I0(\n_0_FSM_onehot_tx_state[10]_i_6 ),
        .I1(\n_0_FSM_onehot_tx_state_reg[1] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I5(\n_0_FSM_onehot_tx_state_reg[3] ),
        .O(\n_0_FSM_onehot_tx_state[8]_i_3 ));
LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEF)) 
     \FSM_onehot_tx_state[8]_i_4 
       (.I0(\n_0_FSM_onehot_tx_state[10]_i_12 ),
        .I1(\n_0_FSM_onehot_tx_state[10]_i_14 ),
        .I2(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[6] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[3] ),
        .I5(\n_0_FSM_onehot_tx_state_reg[2] ),
        .O(\n_0_FSM_onehot_tx_state[8]_i_4 ));
LUT4 #(
    .INIT(16'hE0EE)) 
     \FSM_onehot_tx_state[8]_i_5 
       (.I0(\n_0_FSM_onehot_tx_state[8]_i_7 ),
        .I1(\n_0_FSM_onehot_tx_state[8]_i_8 ),
        .I2(\n_0_FSM_onehot_tx_state[8]_i_9 ),
        .I3(\n_0_FSM_onehot_tx_state[8]_i_2 ),
        .O(\n_0_FSM_onehot_tx_state[8]_i_5 ));
LUT5 #(
    .INIT(32'hFFFFFEEF)) 
     \FSM_onehot_tx_state[8]_i_6 
       (.I0(\n_0_FSM_onehot_tx_state_reg[3] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[2] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[8] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[1] ),
        .O(\n_0_FSM_onehot_tx_state[8]_i_6 ));
(* SOFT_HLUTNM = "soft_lutpair28" *) 
   LUT4 #(
    .INIT(16'hFEE9)) 
     \FSM_onehot_tx_state[8]_i_7 
       (.I0(\n_0_FSM_onehot_tx_state_reg[4] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[6] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[7] ),
        .O(\n_0_FSM_onehot_tx_state[8]_i_7 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \FSM_onehot_tx_state[8]_i_8 
       (.I0(tx_state_reg),
        .I1(\n_0_FSM_onehot_tx_state_reg[10] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[0] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[1] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[2] ),
        .I5(\n_0_FSM_onehot_tx_state_reg[3] ),
        .O(\n_0_FSM_onehot_tx_state[8]_i_8 ));
LUT6 #(
    .INIT(64'hFFFFFFFDFFFDFDD7)) 
     \FSM_onehot_tx_state[8]_i_9 
       (.I0(\n_0_FSM_onehot_tx_state[10]_i_11 ),
        .I1(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[3] ),
        .I5(\n_0_FSM_onehot_tx_state_reg[1] ),
        .O(\n_0_FSM_onehot_tx_state[8]_i_9 ));
LUT6 #(
    .INIT(64'h0000000011101111)) 
     \FSM_onehot_tx_state[9]_i_1 
       (.I0(time_out_wait_bypass_s3),
        .I1(\n_0_FSM_onehot_tx_state[10]_i_7 ),
        .I2(\n_0_FSM_onehot_tx_state[10]_i_6 ),
        .I3(\n_0_FSM_onehot_tx_state[10]_i_5 ),
        .I4(n_0_tx_fsm_reset_done_int_i_2),
        .I5(\n_0_FSM_onehot_tx_state[10]_i_8 ),
        .O(\n_0_FSM_onehot_tx_state[9]_i_1 ));
FDSE #(
    .INIT(1'b1)) 
     \FSM_onehot_tx_state_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\<const0> ),
        .Q(\n_0_FSM_onehot_tx_state_reg[0] ),
        .S(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[10] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[10]_i_2 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[10] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[1]_i_1 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[1] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[2]_i_1 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[2] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[3]_i_1 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[3] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[4]_i_1 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[4] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[5]_i_1 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[5] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[6]_i_1 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[6] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[7]_i_1 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[7] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[8]_i_1 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[8] ),
        .R(pma_reset));
FDRE #(
    .INIT(1'b0)) 
     \FSM_onehot_tx_state_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\n_0_FSM_onehot_tx_state[10]_i_1 ),
        .D(\n_0_FSM_onehot_tx_state[9]_i_1 ),
        .Q(\n_0_FSM_onehot_tx_state_reg[9] ),
        .R(pma_reset));
GND GND
       (.G(\<const0> ));
LUT6 #(
    .INIT(64'h00000000AAAA2BAA)) 
     TXUSERRDY_i_1
       (.I0(gt0_txuserrdy_t),
        .I1(\n_0_wait_time_cnt[0]_i_5 ),
        .I2(\n_0_wait_time_cnt[0]_i_4 ),
        .I3(n_0_tx_fsm_reset_done_int_i_2),
        .I4(tx_state_reg),
        .I5(pma_reset),
        .O(n_0_TXUSERRDY_i_1));
FDRE #(
    .INIT(1'b0)) 
     TXUSERRDY_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_TXUSERRDY_i_1),
        .Q(gt0_txuserrdy_t),
        .R(\<const0> ));
VCC VCC
       (.P(\<const1> ));
LUT6 #(
    .INIT(64'h00000000BAAAAA8A)) 
     gttxreset_i_i_1
       (.I0(gt0_gttxreset_t),
        .I1(tx_state_reg),
        .I2(\n_0_wait_time_cnt[0]_i_5 ),
        .I3(\n_0_wait_time_cnt[0]_i_4 ),
        .I4(n_0_tx_fsm_reset_done_int_i_2),
        .I5(pma_reset),
        .O(n_0_gttxreset_i_i_1));
FDRE #(
    .INIT(1'b0)) 
     gttxreset_i_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_gttxreset_i_i_1),
        .Q(gt0_gttxreset_t),
        .R(\<const0> ));
LUT4 #(
    .INIT(16'hFFEA)) 
     gtxe2_i_i_2
       (.I0(gt0_gttxreset_t),
        .I1(mgt_tx_reset),
        .I2(O1),
        .I3(gt0_gttxreset_in),
        .O(gt0_gttxreset_i));
(* RETAIN_INVERTER *) 
   (* SOFT_HLUTNM = "soft_lutpair35" *) 
   LUT1 #(
    .INIT(2'h1)) 
     \init_wait_count[0]_i_1 
       (.I0(init_wait_count_reg__0[0]),
        .O(p_0_in[0]));
(* SOFT_HLUTNM = "soft_lutpair35" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \init_wait_count[1]_i_1 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(p_0_in[1]));
(* SOFT_HLUTNM = "soft_lutpair32" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \init_wait_count[2]_i_1 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .O(p_0_in[2]));
(* SOFT_HLUTNM = "soft_lutpair26" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \init_wait_count[3]_i_1 
       (.I0(init_wait_count_reg__0[3]),
        .I1(init_wait_count_reg__0[0]),
        .I2(init_wait_count_reg__0[1]),
        .I3(init_wait_count_reg__0[2]),
        .O(p_0_in[3]));
(* SOFT_HLUTNM = "soft_lutpair26" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \init_wait_count[4]_i_1 
       (.I0(init_wait_count_reg__0[4]),
        .I1(init_wait_count_reg__0[2]),
        .I2(init_wait_count_reg__0[3]),
        .I3(init_wait_count_reg__0[0]),
        .I4(init_wait_count_reg__0[1]),
        .O(p_0_in[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \init_wait_count[5]_i_1 
       (.I0(init_wait_count_reg__0[5]),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[3]),
        .I4(init_wait_count_reg__0[2]),
        .I5(init_wait_count_reg__0[4]),
        .O(p_0_in[5]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \init_wait_count[6]_i_1 
       (.I0(init_wait_count_reg__0[6]),
        .I1(init_wait_count_reg__0[4]),
        .I2(init_wait_count_reg__0[2]),
        .I3(init_wait_count_reg__0[3]),
        .I4(\n_0_init_wait_count[6]_i_2 ),
        .I5(init_wait_count_reg__0[5]),
        .O(p_0_in[6]));
(* SOFT_HLUTNM = "soft_lutpair32" *) 
   LUT2 #(
    .INIT(4'h8)) 
     \init_wait_count[6]_i_2 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .O(\n_0_init_wait_count[6]_i_2 ));
LUT3 #(
    .INIT(8'h7F)) 
     \init_wait_count[7]_i_1 
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[3]),
        .I2(\n_0_init_wait_count[7]_i_3 ),
        .O(\n_0_init_wait_count[7]_i_1 ));
LUT3 #(
    .INIT(8'h6A)) 
     \init_wait_count[7]_i_2 
       (.I0(init_wait_count_reg__0[7]),
        .I1(\n_0_init_wait_count[7]_i_4 ),
        .I2(init_wait_count_reg__0[6]),
        .O(p_0_in[7]));
LUT6 #(
    .INIT(64'h0000000000400000)) 
     \init_wait_count[7]_i_3 
       (.I0(init_wait_count_reg__0[0]),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[5]),
        .I3(init_wait_count_reg__0[4]),
        .I4(init_wait_count_reg__0[6]),
        .I5(init_wait_count_reg__0[7]),
        .O(\n_0_init_wait_count[7]_i_3 ));
LUT6 #(
    .INIT(64'h8000000000000000)) 
     \init_wait_count[7]_i_4 
       (.I0(init_wait_count_reg__0[5]),
        .I1(init_wait_count_reg__0[1]),
        .I2(init_wait_count_reg__0[0]),
        .I3(init_wait_count_reg__0[3]),
        .I4(init_wait_count_reg__0[2]),
        .I5(init_wait_count_reg__0[4]),
        .O(\n_0_init_wait_count[7]_i_4 ));
(* counter = "38" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1 ),
        .CLR(pma_reset),
        .D(p_0_in[0]),
        .Q(init_wait_count_reg__0[0]));
(* counter = "38" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1 ),
        .CLR(pma_reset),
        .D(p_0_in[1]),
        .Q(init_wait_count_reg__0[1]));
(* counter = "38" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1 ),
        .CLR(pma_reset),
        .D(p_0_in[2]),
        .Q(init_wait_count_reg__0[2]));
(* counter = "38" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1 ),
        .CLR(pma_reset),
        .D(p_0_in[3]),
        .Q(init_wait_count_reg__0[3]));
(* counter = "38" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1 ),
        .CLR(pma_reset),
        .D(p_0_in[4]),
        .Q(init_wait_count_reg__0[4]));
(* counter = "38" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1 ),
        .CLR(pma_reset),
        .D(p_0_in[5]),
        .Q(init_wait_count_reg__0[5]));
(* counter = "38" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1 ),
        .CLR(pma_reset),
        .D(p_0_in[6]),
        .Q(init_wait_count_reg__0[6]));
(* counter = "38" *) 
   FDCE #(
    .INIT(1'b0)) 
     \init_wait_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_init_wait_count[7]_i_1 ),
        .CLR(pma_reset),
        .D(p_0_in[7]),
        .Q(init_wait_count_reg__0[7]));
LUT4 #(
    .INIT(16'hFF80)) 
     init_wait_done_i_1
       (.I0(init_wait_count_reg__0[2]),
        .I1(init_wait_count_reg__0[3]),
        .I2(\n_0_init_wait_count[7]_i_3 ),
        .I3(init_wait_done),
        .O(n_0_init_wait_done_i_1));
FDCE #(
    .INIT(1'b0)) 
     init_wait_done_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .CLR(pma_reset),
        .D(n_0_init_wait_done_i_1),
        .Q(init_wait_done));
LUT1 #(
    .INIT(2'h1)) 
     \mmcm_lock_count[0]_i_1 
       (.I0(mmcm_lock_count_reg__0[0]),
        .O(p_0_in__1[0]));
(* SOFT_HLUTNM = "soft_lutpair31" *) 
   LUT2 #(
    .INIT(4'h6)) 
     \mmcm_lock_count[1]_i_1 
       (.I0(mmcm_lock_count_reg__0[0]),
        .I1(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__1[1]));
(* SOFT_HLUTNM = "soft_lutpair31" *) 
   LUT3 #(
    .INIT(8'h6A)) 
     \mmcm_lock_count[2]_i_1 
       (.I0(mmcm_lock_count_reg__0[2]),
        .I1(mmcm_lock_count_reg__0[0]),
        .I2(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__1[2]));
(* SOFT_HLUTNM = "soft_lutpair24" *) 
   LUT4 #(
    .INIT(16'h6AAA)) 
     \mmcm_lock_count[3]_i_1 
       (.I0(mmcm_lock_count_reg__0[3]),
        .I1(mmcm_lock_count_reg__0[1]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[2]),
        .O(p_0_in__1[3]));
(* SOFT_HLUTNM = "soft_lutpair24" *) 
   LUT5 #(
    .INIT(32'h6AAAAAAA)) 
     \mmcm_lock_count[4]_i_1 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[3]),
        .I2(mmcm_lock_count_reg__0[2]),
        .I3(mmcm_lock_count_reg__0[0]),
        .I4(mmcm_lock_count_reg__0[1]),
        .O(p_0_in__1[4]));
LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
     \mmcm_lock_count[5]_i_1 
       (.I0(mmcm_lock_count_reg__0[5]),
        .I1(mmcm_lock_count_reg__0[1]),
        .I2(mmcm_lock_count_reg__0[0]),
        .I3(mmcm_lock_count_reg__0[2]),
        .I4(mmcm_lock_count_reg__0[3]),
        .I5(mmcm_lock_count_reg__0[4]),
        .O(p_0_in__1[5]));
LUT2 #(
    .INIT(4'h9)) 
     \mmcm_lock_count[6]_i_1 
       (.I0(\n_0_mmcm_lock_count[9]_i_4 ),
        .I1(mmcm_lock_count_reg__0[6]),
        .O(p_0_in__1[6]));
(* SOFT_HLUTNM = "soft_lutpair30" *) 
   LUT3 #(
    .INIT(8'h9A)) 
     \mmcm_lock_count[7]_i_1 
       (.I0(mmcm_lock_count_reg__0[7]),
        .I1(\n_0_mmcm_lock_count[9]_i_4 ),
        .I2(mmcm_lock_count_reg__0[6]),
        .O(p_0_in__1[7]));
(* SOFT_HLUTNM = "soft_lutpair30" *) 
   LUT4 #(
    .INIT(16'hA6AA)) 
     \mmcm_lock_count[8]_i_1 
       (.I0(mmcm_lock_count_reg__0[8]),
        .I1(mmcm_lock_count_reg__0[6]),
        .I2(\n_0_mmcm_lock_count[9]_i_4 ),
        .I3(mmcm_lock_count_reg__0[7]),
        .O(p_0_in__1[8]));
LUT1 #(
    .INIT(2'h1)) 
     \mmcm_lock_count[9]_i_1 
       (.I0(mmcm_lock_i),
        .O(\n_0_mmcm_lock_count[9]_i_1 ));
LUT5 #(
    .INIT(32'hF7FFFFFF)) 
     \mmcm_lock_count[9]_i_2 
       (.I0(mmcm_lock_count_reg__0[8]),
        .I1(mmcm_lock_count_reg__0[6]),
        .I2(\n_0_mmcm_lock_count[9]_i_4 ),
        .I3(mmcm_lock_count_reg__0[7]),
        .I4(mmcm_lock_count_reg__0[9]),
        .O(\n_0_mmcm_lock_count[9]_i_2 ));
(* SOFT_HLUTNM = "soft_lutpair23" *) 
   LUT5 #(
    .INIT(32'hA6AAAAAA)) 
     \mmcm_lock_count[9]_i_3 
       (.I0(mmcm_lock_count_reg__0[9]),
        .I1(mmcm_lock_count_reg__0[7]),
        .I2(\n_0_mmcm_lock_count[9]_i_4 ),
        .I3(mmcm_lock_count_reg__0[6]),
        .I4(mmcm_lock_count_reg__0[8]),
        .O(p_0_in__1[9]));
LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
     \mmcm_lock_count[9]_i_4 
       (.I0(mmcm_lock_count_reg__0[4]),
        .I1(mmcm_lock_count_reg__0[3]),
        .I2(mmcm_lock_count_reg__0[2]),
        .I3(mmcm_lock_count_reg__0[0]),
        .I4(mmcm_lock_count_reg__0[1]),
        .I5(mmcm_lock_count_reg__0[5]),
        .O(\n_0_mmcm_lock_count[9]_i_4 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[0]),
        .Q(mmcm_lock_count_reg__0[0]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[1]),
        .Q(mmcm_lock_count_reg__0[1]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[2]),
        .Q(mmcm_lock_count_reg__0[2]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[3]),
        .Q(mmcm_lock_count_reg__0[3]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[4]),
        .Q(mmcm_lock_count_reg__0[4]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[5]),
        .Q(mmcm_lock_count_reg__0[5]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[6]),
        .Q(mmcm_lock_count_reg__0[6]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[7]),
        .Q(mmcm_lock_count_reg__0[7]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[8]),
        .Q(mmcm_lock_count_reg__0[8]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
(* counter = "46" *) 
   FDRE #(
    .INIT(1'b0)) 
     \mmcm_lock_count_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\n_0_mmcm_lock_count[9]_i_2 ),
        .D(p_0_in__1[9]),
        .Q(mmcm_lock_count_reg__0[9]),
        .R(\n_0_mmcm_lock_count[9]_i_1 ));
LUT3 #(
    .INIT(8'hA8)) 
     mmcm_lock_reclocked_i_1
       (.I0(mmcm_lock_i),
        .I1(mmcm_lock_reclocked),
        .I2(n_0_mmcm_lock_reclocked_i_2),
        .O(n_0_mmcm_lock_reclocked_i_1));
(* SOFT_HLUTNM = "soft_lutpair23" *) 
   LUT5 #(
    .INIT(32'h08000000)) 
     mmcm_lock_reclocked_i_2
       (.I0(mmcm_lock_count_reg__0[9]),
        .I1(mmcm_lock_count_reg__0[7]),
        .I2(\n_0_mmcm_lock_count[9]_i_4 ),
        .I3(mmcm_lock_count_reg__0[6]),
        .I4(mmcm_lock_count_reg__0[8]),
        .O(n_0_mmcm_lock_reclocked_i_2));
FDRE #(
    .INIT(1'b0)) 
     mmcm_lock_reclocked_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_mmcm_lock_reclocked_i_1),
        .Q(mmcm_lock_reclocked),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000BAAA8AAA)) 
     pll_reset_asserted_i_1
       (.I0(pll_reset_asserted),
        .I1(n_0_pll_reset_asserted_i_2),
        .I2(\n_0_wait_time_cnt[0]_i_4 ),
        .I3(n_0_tx_fsm_reset_done_int_i_2),
        .I4(\n_0_wait_time_cnt[0]_i_5 ),
        .I5(pma_reset),
        .O(n_0_pll_reset_asserted_i_1));
(* SOFT_HLUTNM = "soft_lutpair20" *) 
   LUT5 #(
    .INIT(32'hEEEFEEEE)) 
     pll_reset_asserted_i_2
       (.I0(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[8] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[2] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[3] ),
        .I4(pll_reset_asserted),
        .O(n_0_pll_reset_asserted_i_2));
FDRE #(
    .INIT(1'b0)) 
     pll_reset_asserted_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_pll_reset_asserted_i_1),
        .Q(pll_reset_asserted),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000CFAE00A2)) 
     reset_time_out_i_1
       (.I0(reset_time_out),
        .I1(n_0_tx_fsm_reset_done_int_i_2),
        .I2(tx_state_reg),
        .I3(n_0_tx_fsm_reset_done_int_i_3),
        .I4(n_0_reset_time_out_i_2),
        .I5(pma_reset),
        .O(n_0_reset_time_out_i_1));
LUT5 #(
    .INIT(32'hFFB8CCB8)) 
     reset_time_out_i_2
       (.I0(cplllock_sync),
        .I1(\n_0_wait_time_cnt[0]_i_4 ),
        .I2(txresetdone_s3),
        .I3(\n_0_wait_time_cnt[0]_i_5 ),
        .I4(mmcm_lock_reclocked),
        .O(n_0_reset_time_out_i_2));
FDRE #(
    .INIT(1'b0)) 
     reset_time_out_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_reset_time_out_i_1),
        .Q(reset_time_out),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000BBB2AAAA)) 
     run_phase_alignment_int_i_1
       (.I0(n_0_run_phase_alignment_int_reg),
        .I1(n_0_tx_fsm_reset_done_int_i_2),
        .I2(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[8] ),
        .I4(n_0_tx_fsm_reset_done_int_i_3),
        .I5(pma_reset),
        .O(n_0_run_phase_alignment_int_i_1));
FDRE #(
    .INIT(1'b0)) 
     run_phase_alignment_int_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_run_phase_alignment_int_i_1),
        .Q(n_0_run_phase_alignment_int_reg),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     run_phase_alignment_int_s3_reg
       (.C(userclk),
        .CE(\<const1> ),
        .D(run_phase_alignment_int_s2),
        .Q(run_phase_alignment_int_s3),
        .R(\<const0> ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__26 sync_TXRESETDONE
       (.clk(independent_clock_bufg),
        .data_in(I1),
        .data_out(txresetdone_s2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__28 sync_cplllock
       (.clk(independent_clock_bufg),
        .data_in(I2),
        .data_out(cplllock_sync));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__29 sync_cpllrefclklost
       (.clk(independent_clock_bufg),
        .data_in(gt0_cpllrefclklost_i),
        .data_out(NLW_sync_cpllrefclklost_data_out_UNCONNECTED));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__27 sync_mmcm_lock_reclocked
       (.clk(independent_clock_bufg),
        .data_in(\<const1> ),
        .data_out(mmcm_lock_i));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__23 sync_run_phase_alignment_int
       (.clk(userclk),
        .data_in(n_0_run_phase_alignment_int_reg),
        .data_out(run_phase_alignment_int_s2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__25 sync_time_out_wait_bypass
       (.clk(independent_clock_bufg),
        .data_in(n_0_time_out_wait_bypass_reg),
        .data_out(time_out_wait_bypass_s2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__24 sync_tx_fsm_reset_done_int
       (.clk(userclk),
        .data_in(O1),
        .data_out(tx_fsm_reset_done_int_s2));
(* SOFT_HLUTNM = "soft_lutpair34" *) 
   LUT3 #(
    .INIT(8'h0E)) 
     time_out_2ms_i_1
       (.I0(time_out_2ms),
        .I1(n_0_time_out_2ms_i_2__0),
        .I2(reset_time_out),
        .O(n_0_time_out_2ms_i_1));
(* SOFT_HLUTNM = "soft_lutpair19" *) 
   LUT5 #(
    .INIT(32'h00000002)) 
     time_out_2ms_i_2__0
       (.I0(n_0_time_out_2ms_i_3__0),
        .I1(time_out_counter_reg[1]),
        .I2(time_out_counter_reg[2]),
        .I3(time_out_counter_reg[15]),
        .I4(time_out_counter_reg[16]),
        .O(n_0_time_out_2ms_i_2__0));
LUT6 #(
    .INIT(64'h0001000000000000)) 
     time_out_2ms_i_3__0
       (.I0(time_out_counter_reg[3]),
        .I1(time_out_counter_reg[6]),
        .I2(time_out_counter_reg[14]),
        .I3(time_out_counter_reg[13]),
        .I4(n_0_time_out_2ms_i_4__0),
        .I5(n_0_time_out_2ms_i_5__0),
        .O(n_0_time_out_2ms_i_3__0));
LUT6 #(
    .INIT(64'h0000000000000008)) 
     time_out_2ms_i_4__0
       (.I0(time_out_counter_reg[11]),
        .I1(time_out_counter_reg[12]),
        .I2(time_out_counter_reg[0]),
        .I3(time_out_counter_reg[4]),
        .I4(time_out_counter_reg[8]),
        .I5(time_out_counter_reg[5]),
        .O(n_0_time_out_2ms_i_4__0));
LUT5 #(
    .INIT(32'h00008000)) 
     time_out_2ms_i_5__0
       (.I0(time_out_counter_reg[18]),
        .I1(time_out_counter_reg[17]),
        .I2(time_out_counter_reg[7]),
        .I3(time_out_counter_reg[9]),
        .I4(time_out_counter_reg[10]),
        .O(n_0_time_out_2ms_i_5__0));
FDRE #(
    .INIT(1'b0)) 
     time_out_2ms_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_time_out_2ms_i_1),
        .Q(time_out_2ms),
        .R(\<const0> ));
LUT3 #(
    .INIT(8'h0E)) 
     time_out_500us_i_1
       (.I0(time_out_500us),
        .I1(n_0_time_out_500us_i_2),
        .I2(reset_time_out),
        .O(n_0_time_out_500us_i_1));
LUT6 #(
    .INIT(64'h0000000000080000)) 
     time_out_500us_i_2
       (.I0(n_0_time_out_500us_i_3),
        .I1(n_0_time_out_500us_i_4),
        .I2(time_out_counter_reg[14]),
        .I3(time_out_counter_reg[13]),
        .I4(time_out_counter_reg[5]),
        .I5(n_0_time_out_500us_i_5),
        .O(n_0_time_out_500us_i_2));
LUT5 #(
    .INIT(32'h00000008)) 
     time_out_500us_i_3
       (.I0(time_out_counter_reg[10]),
        .I1(time_out_counter_reg[9]),
        .I2(time_out_counter_reg[17]),
        .I3(time_out_counter_reg[18]),
        .I4(n_0_time_out_500us_i_6),
        .O(n_0_time_out_500us_i_3));
LUT6 #(
    .INIT(64'h0000000000080000)) 
     time_out_500us_i_4
       (.I0(time_out_counter_reg[16]),
        .I1(time_out_counter_reg[7]),
        .I2(time_out_counter_reg[11]),
        .I3(time_out_counter_reg[12]),
        .I4(time_out_counter_reg[15]),
        .I5(time_out_counter_reg[8]),
        .O(n_0_time_out_500us_i_4));
LUT2 #(
    .INIT(4'hE)) 
     time_out_500us_i_5
       (.I0(time_out_counter_reg[0]),
        .I1(time_out_counter_reg[4]),
        .O(n_0_time_out_500us_i_5));
LUT4 #(
    .INIT(16'hFFFE)) 
     time_out_500us_i_6
       (.I0(time_out_counter_reg[2]),
        .I1(time_out_counter_reg[1]),
        .I2(time_out_counter_reg[6]),
        .I3(time_out_counter_reg[3]),
        .O(n_0_time_out_500us_i_6));
FDRE #(
    .INIT(1'b0)) 
     time_out_500us_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_time_out_500us_i_1),
        .Q(time_out_500us),
        .R(\<const0> ));
LUT1 #(
    .INIT(2'h1)) 
     \time_out_counter[0]_i_1 
       (.I0(n_0_time_out_2ms_i_2__0),
        .O(\n_0_time_out_counter[0]_i_1 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[0]_i_3__0 
       (.I0(time_out_counter_reg[3]),
        .O(\n_0_time_out_counter[0]_i_3__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[0]_i_4__0 
       (.I0(time_out_counter_reg[2]),
        .O(\n_0_time_out_counter[0]_i_4__0 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[0]_i_5 
       (.I0(time_out_counter_reg[1]),
        .O(\n_0_time_out_counter[0]_i_5 ));
LUT1 #(
    .INIT(2'h1)) 
     \time_out_counter[0]_i_6 
       (.I0(time_out_counter_reg[0]),
        .O(\n_0_time_out_counter[0]_i_6 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[12]_i_2 
       (.I0(time_out_counter_reg[15]),
        .O(\n_0_time_out_counter[12]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[12]_i_3 
       (.I0(time_out_counter_reg[14]),
        .O(\n_0_time_out_counter[12]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[12]_i_4 
       (.I0(time_out_counter_reg[13]),
        .O(\n_0_time_out_counter[12]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[12]_i_5 
       (.I0(time_out_counter_reg[12]),
        .O(\n_0_time_out_counter[12]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[16]_i_2 
       (.I0(time_out_counter_reg[18]),
        .O(\n_0_time_out_counter[16]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[16]_i_3 
       (.I0(time_out_counter_reg[17]),
        .O(\n_0_time_out_counter[16]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[16]_i_4 
       (.I0(time_out_counter_reg[16]),
        .O(\n_0_time_out_counter[16]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[4]_i_2 
       (.I0(time_out_counter_reg[7]),
        .O(\n_0_time_out_counter[4]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[4]_i_3 
       (.I0(time_out_counter_reg[6]),
        .O(\n_0_time_out_counter[4]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[4]_i_4 
       (.I0(time_out_counter_reg[5]),
        .O(\n_0_time_out_counter[4]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[4]_i_5 
       (.I0(time_out_counter_reg[4]),
        .O(\n_0_time_out_counter[4]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[8]_i_2 
       (.I0(time_out_counter_reg[11]),
        .O(\n_0_time_out_counter[8]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[8]_i_3 
       (.I0(time_out_counter_reg[10]),
        .O(\n_0_time_out_counter[8]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[8]_i_4 
       (.I0(time_out_counter_reg[9]),
        .O(\n_0_time_out_counter[8]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \time_out_counter[8]_i_5 
       (.I0(time_out_counter_reg[8]),
        .O(\n_0_time_out_counter[8]_i_5 ));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_7_time_out_counter_reg[0]_i_2 ),
        .Q(time_out_counter_reg[0]),
        .R(reset_time_out));
CARRY4 \time_out_counter_reg[0]_i_2 
       (.CI(\<const0> ),
        .CO({\n_0_time_out_counter_reg[0]_i_2 ,\n_1_time_out_counter_reg[0]_i_2 ,\n_2_time_out_counter_reg[0]_i_2 ,\n_3_time_out_counter_reg[0]_i_2 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .O({\n_4_time_out_counter_reg[0]_i_2 ,\n_5_time_out_counter_reg[0]_i_2 ,\n_6_time_out_counter_reg[0]_i_2 ,\n_7_time_out_counter_reg[0]_i_2 }),
        .S({\n_0_time_out_counter[0]_i_3__0 ,\n_0_time_out_counter[0]_i_4__0 ,\n_0_time_out_counter[0]_i_5 ,\n_0_time_out_counter[0]_i_6 }));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[10] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_5_time_out_counter_reg[8]_i_1 ),
        .Q(time_out_counter_reg[10]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[11] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_4_time_out_counter_reg[8]_i_1 ),
        .Q(time_out_counter_reg[11]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[12] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_7_time_out_counter_reg[12]_i_1 ),
        .Q(time_out_counter_reg[12]),
        .R(reset_time_out));
CARRY4 \time_out_counter_reg[12]_i_1 
       (.CI(\n_0_time_out_counter_reg[8]_i_1 ),
        .CO({\n_0_time_out_counter_reg[12]_i_1 ,\n_1_time_out_counter_reg[12]_i_1 ,\n_2_time_out_counter_reg[12]_i_1 ,\n_3_time_out_counter_reg[12]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_time_out_counter_reg[12]_i_1 ,\n_5_time_out_counter_reg[12]_i_1 ,\n_6_time_out_counter_reg[12]_i_1 ,\n_7_time_out_counter_reg[12]_i_1 }),
        .S({\n_0_time_out_counter[12]_i_2 ,\n_0_time_out_counter[12]_i_3 ,\n_0_time_out_counter[12]_i_4 ,\n_0_time_out_counter[12]_i_5 }));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[13] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_6_time_out_counter_reg[12]_i_1 ),
        .Q(time_out_counter_reg[13]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[14] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_5_time_out_counter_reg[12]_i_1 ),
        .Q(time_out_counter_reg[14]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[15] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_4_time_out_counter_reg[12]_i_1 ),
        .Q(time_out_counter_reg[15]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[16] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_7_time_out_counter_reg[16]_i_1 ),
        .Q(time_out_counter_reg[16]),
        .R(reset_time_out));
CARRY4 \time_out_counter_reg[16]_i_1 
       (.CI(\n_0_time_out_counter_reg[12]_i_1 ),
        .CO({\NLW_time_out_counter_reg[16]_i_1_CO_UNCONNECTED [3:2],\n_2_time_out_counter_reg[16]_i_1 ,\n_3_time_out_counter_reg[16]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\NLW_time_out_counter_reg[16]_i_1_O_UNCONNECTED [3],\n_5_time_out_counter_reg[16]_i_1 ,\n_6_time_out_counter_reg[16]_i_1 ,\n_7_time_out_counter_reg[16]_i_1 }),
        .S({\<const0> ,\n_0_time_out_counter[16]_i_2 ,\n_0_time_out_counter[16]_i_3 ,\n_0_time_out_counter[16]_i_4 }));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[17] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_6_time_out_counter_reg[16]_i_1 ),
        .Q(time_out_counter_reg[17]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[18] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_5_time_out_counter_reg[16]_i_1 ),
        .Q(time_out_counter_reg[18]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_6_time_out_counter_reg[0]_i_2 ),
        .Q(time_out_counter_reg[1]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_5_time_out_counter_reg[0]_i_2 ),
        .Q(time_out_counter_reg[2]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_4_time_out_counter_reg[0]_i_2 ),
        .Q(time_out_counter_reg[3]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_7_time_out_counter_reg[4]_i_1 ),
        .Q(time_out_counter_reg[4]),
        .R(reset_time_out));
CARRY4 \time_out_counter_reg[4]_i_1 
       (.CI(\n_0_time_out_counter_reg[0]_i_2 ),
        .CO({\n_0_time_out_counter_reg[4]_i_1 ,\n_1_time_out_counter_reg[4]_i_1 ,\n_2_time_out_counter_reg[4]_i_1 ,\n_3_time_out_counter_reg[4]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_time_out_counter_reg[4]_i_1 ,\n_5_time_out_counter_reg[4]_i_1 ,\n_6_time_out_counter_reg[4]_i_1 ,\n_7_time_out_counter_reg[4]_i_1 }),
        .S({\n_0_time_out_counter[4]_i_2 ,\n_0_time_out_counter[4]_i_3 ,\n_0_time_out_counter[4]_i_4 ,\n_0_time_out_counter[4]_i_5 }));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_6_time_out_counter_reg[4]_i_1 ),
        .Q(time_out_counter_reg[5]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_5_time_out_counter_reg[4]_i_1 ),
        .Q(time_out_counter_reg[6]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_4_time_out_counter_reg[4]_i_1 ),
        .Q(time_out_counter_reg[7]),
        .R(reset_time_out));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_7_time_out_counter_reg[8]_i_1 ),
        .Q(time_out_counter_reg[8]),
        .R(reset_time_out));
CARRY4 \time_out_counter_reg[8]_i_1 
       (.CI(\n_0_time_out_counter_reg[4]_i_1 ),
        .CO({\n_0_time_out_counter_reg[8]_i_1 ,\n_1_time_out_counter_reg[8]_i_1 ,\n_2_time_out_counter_reg[8]_i_1 ,\n_3_time_out_counter_reg[8]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_time_out_counter_reg[8]_i_1 ,\n_5_time_out_counter_reg[8]_i_1 ,\n_6_time_out_counter_reg[8]_i_1 ,\n_7_time_out_counter_reg[8]_i_1 }),
        .S({\n_0_time_out_counter[8]_i_2 ,\n_0_time_out_counter[8]_i_3 ,\n_0_time_out_counter[8]_i_4 ,\n_0_time_out_counter[8]_i_5 }));
(* counter = "36" *) 
   FDRE #(
    .INIT(1'b0)) 
     \time_out_counter_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\n_0_time_out_counter[0]_i_1 ),
        .D(\n_6_time_out_counter_reg[8]_i_1 ),
        .Q(time_out_counter_reg[9]),
        .R(reset_time_out));
LUT6 #(
    .INIT(64'hFFFF000000010000)) 
     time_out_wait_bypass_i_1
       (.I0(n_0_time_out_wait_bypass_i_2),
        .I1(n_0_time_out_wait_bypass_i_3),
        .I2(n_0_time_out_wait_bypass_i_4),
        .I3(tx_fsm_reset_done_int_s3),
        .I4(run_phase_alignment_int_s3),
        .I5(n_0_time_out_wait_bypass_reg),
        .O(n_0_time_out_wait_bypass_i_1));
LUT5 #(
    .INIT(32'hBFFFFFFF)) 
     time_out_wait_bypass_i_2
       (.I0(wait_bypass_count_reg[16]),
        .I1(wait_bypass_count_reg[1]),
        .I2(wait_bypass_count_reg[2]),
        .I3(wait_bypass_count_reg[15]),
        .I4(wait_bypass_count_reg[0]),
        .O(n_0_time_out_wait_bypass_i_2));
LUT6 #(
    .INIT(64'hFFFFFDFFFFFFFFFF)) 
     time_out_wait_bypass_i_3
       (.I0(wait_bypass_count_reg[9]),
        .I1(wait_bypass_count_reg[10]),
        .I2(wait_bypass_count_reg[14]),
        .I3(wait_bypass_count_reg[13]),
        .I4(wait_bypass_count_reg[11]),
        .I5(wait_bypass_count_reg[12]),
        .O(n_0_time_out_wait_bypass_i_3));
LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
     time_out_wait_bypass_i_4
       (.I0(wait_bypass_count_reg[4]),
        .I1(wait_bypass_count_reg[3]),
        .I2(wait_bypass_count_reg[8]),
        .I3(wait_bypass_count_reg[7]),
        .I4(wait_bypass_count_reg[5]),
        .I5(wait_bypass_count_reg[6]),
        .O(n_0_time_out_wait_bypass_i_4));
FDRE #(
    .INIT(1'b0)) 
     time_out_wait_bypass_reg
       (.C(userclk),
        .CE(\<const1> ),
        .D(n_0_time_out_wait_bypass_i_1),
        .Q(n_0_time_out_wait_bypass_reg),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     time_out_wait_bypass_s3_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(time_out_wait_bypass_s2),
        .Q(time_out_wait_bypass_s3),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair33" *) 
   LUT3 #(
    .INIT(8'h0E)) 
     time_tlock_max_i_1
       (.I0(time_tlock_max),
        .I1(n_0_time_tlock_max_i_2__0),
        .I2(reset_time_out),
        .O(n_0_time_tlock_max_i_1));
LUT6 #(
    .INIT(64'h0000000000000008)) 
     time_tlock_max_i_2__0
       (.I0(n_0_time_out_500us_i_3),
        .I1(n_0_time_tlock_max_i_3__0),
        .I2(time_out_counter_reg[7]),
        .I3(time_out_counter_reg[0]),
        .I4(time_out_counter_reg[4]),
        .I5(n_0_time_tlock_max_i_4),
        .O(n_0_time_tlock_max_i_2__0));
LUT6 #(
    .INIT(64'h0000000000080000)) 
     time_tlock_max_i_3__0
       (.I0(time_out_counter_reg[11]),
        .I1(time_out_counter_reg[5]),
        .I2(time_out_counter_reg[13]),
        .I3(time_out_counter_reg[12]),
        .I4(time_out_counter_reg[14]),
        .I5(time_out_counter_reg[8]),
        .O(n_0_time_tlock_max_i_3__0));
(* SOFT_HLUTNM = "soft_lutpair19" *) 
   LUT2 #(
    .INIT(4'hE)) 
     time_tlock_max_i_4
       (.I0(time_out_counter_reg[15]),
        .I1(time_out_counter_reg[16]),
        .O(n_0_time_tlock_max_i_4));
FDRE #(
    .INIT(1'b0)) 
     time_tlock_max_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_time_tlock_max_i_1),
        .Q(time_tlock_max),
        .R(\<const0> ));
LUT6 #(
    .INIT(64'h00000000EAEAEAAA)) 
     tx_fsm_reset_done_int_i_1
       (.I0(O1),
        .I1(n_0_tx_fsm_reset_done_int_i_2),
        .I2(n_0_tx_fsm_reset_done_int_i_3),
        .I3(\n_0_FSM_onehot_tx_state_reg[8] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I5(pma_reset),
        .O(n_0_tx_fsm_reset_done_int_i_1));
(* SOFT_HLUTNM = "soft_lutpair22" *) 
   LUT5 #(
    .INIT(32'hFFFFFFFE)) 
     tx_fsm_reset_done_int_i_2
       (.I0(\n_0_FSM_onehot_tx_state_reg[1] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[3] ),
        .O(n_0_tx_fsm_reset_done_int_i_2));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     tx_fsm_reset_done_int_i_3
       (.I0(\n_0_FSM_onehot_tx_state_reg[2] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[3] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[6] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I4(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I5(\n_0_FSM_onehot_tx_state_reg[4] ),
        .O(n_0_tx_fsm_reset_done_int_i_3));
FDRE #(
    .INIT(1'b0)) 
     tx_fsm_reset_done_int_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_tx_fsm_reset_done_int_i_1),
        .Q(O1),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     tx_fsm_reset_done_int_s3_reg
       (.C(userclk),
        .CE(\<const1> ),
        .D(tx_fsm_reset_done_int_s2),
        .Q(tx_fsm_reset_done_int_s3),
        .R(\<const0> ));
FDRE #(
    .INIT(1'b0)) 
     txresetdone_s3_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(txresetdone_s2),
        .Q(txresetdone_s3),
        .R(\<const0> ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_bypass_count[0]_i_1 
       (.I0(run_phase_alignment_int_s3),
        .O(\n_0_wait_bypass_count[0]_i_1 ));
LUT4 #(
    .INIT(16'h00FE)) 
     \wait_bypass_count[0]_i_2 
       (.I0(n_0_time_out_wait_bypass_i_2),
        .I1(n_0_time_out_wait_bypass_i_3),
        .I2(n_0_time_out_wait_bypass_i_4),
        .I3(tx_fsm_reset_done_int_s3),
        .O(\n_0_wait_bypass_count[0]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[0]_i_4 
       (.I0(wait_bypass_count_reg[3]),
        .O(\n_0_wait_bypass_count[0]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[0]_i_5 
       (.I0(wait_bypass_count_reg[2]),
        .O(\n_0_wait_bypass_count[0]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[0]_i_6 
       (.I0(wait_bypass_count_reg[1]),
        .O(\n_0_wait_bypass_count[0]_i_6 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_bypass_count[0]_i_7 
       (.I0(wait_bypass_count_reg[0]),
        .O(\n_0_wait_bypass_count[0]_i_7 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[12]_i_2 
       (.I0(wait_bypass_count_reg[15]),
        .O(\n_0_wait_bypass_count[12]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[12]_i_3 
       (.I0(wait_bypass_count_reg[14]),
        .O(\n_0_wait_bypass_count[12]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[12]_i_4 
       (.I0(wait_bypass_count_reg[13]),
        .O(\n_0_wait_bypass_count[12]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[12]_i_5 
       (.I0(wait_bypass_count_reg[12]),
        .O(\n_0_wait_bypass_count[12]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[16]_i_2 
       (.I0(wait_bypass_count_reg[16]),
        .O(\n_0_wait_bypass_count[16]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[4]_i_2 
       (.I0(wait_bypass_count_reg[7]),
        .O(\n_0_wait_bypass_count[4]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[4]_i_3 
       (.I0(wait_bypass_count_reg[6]),
        .O(\n_0_wait_bypass_count[4]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[4]_i_4 
       (.I0(wait_bypass_count_reg[5]),
        .O(\n_0_wait_bypass_count[4]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[4]_i_5 
       (.I0(wait_bypass_count_reg[4]),
        .O(\n_0_wait_bypass_count[4]_i_5 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[8]_i_2 
       (.I0(wait_bypass_count_reg[11]),
        .O(\n_0_wait_bypass_count[8]_i_2 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[8]_i_3 
       (.I0(wait_bypass_count_reg[10]),
        .O(\n_0_wait_bypass_count[8]_i_3 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[8]_i_4 
       (.I0(wait_bypass_count_reg[9]),
        .O(\n_0_wait_bypass_count[8]_i_4 ));
LUT1 #(
    .INIT(2'h2)) 
     \wait_bypass_count[8]_i_5 
       (.I0(wait_bypass_count_reg[8]),
        .O(\n_0_wait_bypass_count[8]_i_5 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[0] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_7_wait_bypass_count_reg[0]_i_3 ),
        .Q(wait_bypass_count_reg[0]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
CARRY4 \wait_bypass_count_reg[0]_i_3 
       (.CI(\<const0> ),
        .CO({\n_0_wait_bypass_count_reg[0]_i_3 ,\n_1_wait_bypass_count_reg[0]_i_3 ,\n_2_wait_bypass_count_reg[0]_i_3 ,\n_3_wait_bypass_count_reg[0]_i_3 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const1> }),
        .O({\n_4_wait_bypass_count_reg[0]_i_3 ,\n_5_wait_bypass_count_reg[0]_i_3 ,\n_6_wait_bypass_count_reg[0]_i_3 ,\n_7_wait_bypass_count_reg[0]_i_3 }),
        .S({\n_0_wait_bypass_count[0]_i_4 ,\n_0_wait_bypass_count[0]_i_5 ,\n_0_wait_bypass_count[0]_i_6 ,\n_0_wait_bypass_count[0]_i_7 }));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[10] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_5_wait_bypass_count_reg[8]_i_1 ),
        .Q(wait_bypass_count_reg[10]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[11] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_4_wait_bypass_count_reg[8]_i_1 ),
        .Q(wait_bypass_count_reg[11]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[12] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_7_wait_bypass_count_reg[12]_i_1 ),
        .Q(wait_bypass_count_reg[12]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
CARRY4 \wait_bypass_count_reg[12]_i_1 
       (.CI(\n_0_wait_bypass_count_reg[8]_i_1 ),
        .CO({\n_0_wait_bypass_count_reg[12]_i_1 ,\n_1_wait_bypass_count_reg[12]_i_1 ,\n_2_wait_bypass_count_reg[12]_i_1 ,\n_3_wait_bypass_count_reg[12]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_wait_bypass_count_reg[12]_i_1 ,\n_5_wait_bypass_count_reg[12]_i_1 ,\n_6_wait_bypass_count_reg[12]_i_1 ,\n_7_wait_bypass_count_reg[12]_i_1 }),
        .S({\n_0_wait_bypass_count[12]_i_2 ,\n_0_wait_bypass_count[12]_i_3 ,\n_0_wait_bypass_count[12]_i_4 ,\n_0_wait_bypass_count[12]_i_5 }));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[13] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_6_wait_bypass_count_reg[12]_i_1 ),
        .Q(wait_bypass_count_reg[13]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[14] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_5_wait_bypass_count_reg[12]_i_1 ),
        .Q(wait_bypass_count_reg[14]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[15] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_4_wait_bypass_count_reg[12]_i_1 ),
        .Q(wait_bypass_count_reg[15]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[16] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_7_wait_bypass_count_reg[16]_i_1 ),
        .Q(wait_bypass_count_reg[16]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
CARRY4 \wait_bypass_count_reg[16]_i_1 
       (.CI(\n_0_wait_bypass_count_reg[12]_i_1 ),
        .CO(\NLW_wait_bypass_count_reg[16]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\NLW_wait_bypass_count_reg[16]_i_1_O_UNCONNECTED [3:1],\n_7_wait_bypass_count_reg[16]_i_1 }),
        .S({\<const0> ,\<const0> ,\<const0> ,\n_0_wait_bypass_count[16]_i_2 }));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[1] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_6_wait_bypass_count_reg[0]_i_3 ),
        .Q(wait_bypass_count_reg[1]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[2] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_5_wait_bypass_count_reg[0]_i_3 ),
        .Q(wait_bypass_count_reg[2]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[3] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_4_wait_bypass_count_reg[0]_i_3 ),
        .Q(wait_bypass_count_reg[3]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[4] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_7_wait_bypass_count_reg[4]_i_1 ),
        .Q(wait_bypass_count_reg[4]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
CARRY4 \wait_bypass_count_reg[4]_i_1 
       (.CI(\n_0_wait_bypass_count_reg[0]_i_3 ),
        .CO({\n_0_wait_bypass_count_reg[4]_i_1 ,\n_1_wait_bypass_count_reg[4]_i_1 ,\n_2_wait_bypass_count_reg[4]_i_1 ,\n_3_wait_bypass_count_reg[4]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_wait_bypass_count_reg[4]_i_1 ,\n_5_wait_bypass_count_reg[4]_i_1 ,\n_6_wait_bypass_count_reg[4]_i_1 ,\n_7_wait_bypass_count_reg[4]_i_1 }),
        .S({\n_0_wait_bypass_count[4]_i_2 ,\n_0_wait_bypass_count[4]_i_3 ,\n_0_wait_bypass_count[4]_i_4 ,\n_0_wait_bypass_count[4]_i_5 }));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[5] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_6_wait_bypass_count_reg[4]_i_1 ),
        .Q(wait_bypass_count_reg[5]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[6] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_5_wait_bypass_count_reg[4]_i_1 ),
        .Q(wait_bypass_count_reg[6]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[7] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_4_wait_bypass_count_reg[4]_i_1 ),
        .Q(wait_bypass_count_reg[7]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[8] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_7_wait_bypass_count_reg[8]_i_1 ),
        .Q(wait_bypass_count_reg[8]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
CARRY4 \wait_bypass_count_reg[8]_i_1 
       (.CI(\n_0_wait_bypass_count_reg[4]_i_1 ),
        .CO({\n_0_wait_bypass_count_reg[8]_i_1 ,\n_1_wait_bypass_count_reg[8]_i_1 ,\n_2_wait_bypass_count_reg[8]_i_1 ,\n_3_wait_bypass_count_reg[8]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_wait_bypass_count_reg[8]_i_1 ,\n_5_wait_bypass_count_reg[8]_i_1 ,\n_6_wait_bypass_count_reg[8]_i_1 ,\n_7_wait_bypass_count_reg[8]_i_1 }),
        .S({\n_0_wait_bypass_count[8]_i_2 ,\n_0_wait_bypass_count[8]_i_3 ,\n_0_wait_bypass_count[8]_i_4 ,\n_0_wait_bypass_count[8]_i_5 }));
(* counter = "39" *) 
   FDRE #(
    .INIT(1'b0)) 
     \wait_bypass_count_reg[9] 
       (.C(userclk),
        .CE(\n_0_wait_bypass_count[0]_i_2 ),
        .D(\n_6_wait_bypass_count_reg[8]_i_1 ),
        .Q(wait_bypass_count_reg[9]),
        .R(\n_0_wait_bypass_count[0]_i_1 ));
LUT5 #(
    .INIT(32'h10101000)) 
     \wait_time_cnt[0]_i_1 
       (.I0(\n_0_FSM_onehot_tx_state_reg[8] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[9] ),
        .I2(n_0_tx_fsm_reset_done_int_i_2),
        .I3(\n_0_wait_time_cnt[0]_i_4 ),
        .I4(\n_0_wait_time_cnt[0]_i_5 ),
        .O(clear));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[0]_i_10 
       (.I0(wait_time_cnt_reg[1]),
        .O(\n_0_wait_time_cnt[0]_i_10 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[0]_i_11 
       (.I0(wait_time_cnt_reg[0]),
        .O(\n_0_wait_time_cnt[0]_i_11 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \wait_time_cnt[0]_i_2 
       (.I0(wait_time_cnt_reg[2]),
        .I1(wait_time_cnt_reg[6]),
        .I2(wait_time_cnt_reg[10]),
        .I3(wait_time_cnt_reg[3]),
        .I4(\n_0_wait_time_cnt[0]_i_6 ),
        .I5(\n_0_wait_time_cnt[0]_i_7__0 ),
        .O(sel));
(* SOFT_HLUTNM = "soft_lutpair28" *) 
   LUT4 #(
    .INIT(16'h0001)) 
     \wait_time_cnt[0]_i_4 
       (.I0(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[6] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[5] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[4] ),
        .O(\n_0_wait_time_cnt[0]_i_4 ));
LUT4 #(
    .INIT(16'h0001)) 
     \wait_time_cnt[0]_i_5 
       (.I0(\n_0_FSM_onehot_tx_state_reg[7] ),
        .I1(\n_0_FSM_onehot_tx_state_reg[6] ),
        .I2(\n_0_FSM_onehot_tx_state_reg[3] ),
        .I3(\n_0_FSM_onehot_tx_state_reg[2] ),
        .O(\n_0_wait_time_cnt[0]_i_5 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \wait_time_cnt[0]_i_6 
       (.I0(wait_time_cnt_reg[14]),
        .I1(wait_time_cnt_reg[11]),
        .I2(wait_time_cnt_reg[9]),
        .I3(wait_time_cnt_reg[13]),
        .I4(wait_time_cnt_reg[8]),
        .I5(wait_time_cnt_reg[12]),
        .O(\n_0_wait_time_cnt[0]_i_6 ));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     \wait_time_cnt[0]_i_7__0 
       (.I0(wait_time_cnt_reg[5]),
        .I1(wait_time_cnt_reg[1]),
        .I2(wait_time_cnt_reg[0]),
        .I3(wait_time_cnt_reg[4]),
        .I4(wait_time_cnt_reg[15]),
        .I5(wait_time_cnt_reg[7]),
        .O(\n_0_wait_time_cnt[0]_i_7__0 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[0]_i_8 
       (.I0(wait_time_cnt_reg[3]),
        .O(\n_0_wait_time_cnt[0]_i_8 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[0]_i_9 
       (.I0(wait_time_cnt_reg[2]),
        .O(\n_0_wait_time_cnt[0]_i_9 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[12]_i_2 
       (.I0(wait_time_cnt_reg[15]),
        .O(\n_0_wait_time_cnt[12]_i_2 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[12]_i_3 
       (.I0(wait_time_cnt_reg[14]),
        .O(\n_0_wait_time_cnt[12]_i_3 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[12]_i_4 
       (.I0(wait_time_cnt_reg[13]),
        .O(\n_0_wait_time_cnt[12]_i_4 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[12]_i_5 
       (.I0(wait_time_cnt_reg[12]),
        .O(\n_0_wait_time_cnt[12]_i_5 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[4]_i_2 
       (.I0(wait_time_cnt_reg[7]),
        .O(\n_0_wait_time_cnt[4]_i_2 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[4]_i_3 
       (.I0(wait_time_cnt_reg[6]),
        .O(\n_0_wait_time_cnt[4]_i_3 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[4]_i_4 
       (.I0(wait_time_cnt_reg[5]),
        .O(\n_0_wait_time_cnt[4]_i_4 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[4]_i_5 
       (.I0(wait_time_cnt_reg[4]),
        .O(\n_0_wait_time_cnt[4]_i_5 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[8]_i_2 
       (.I0(wait_time_cnt_reg[11]),
        .O(\n_0_wait_time_cnt[8]_i_2 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[8]_i_3 
       (.I0(wait_time_cnt_reg[10]),
        .O(\n_0_wait_time_cnt[8]_i_3 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[8]_i_4 
       (.I0(wait_time_cnt_reg[9]),
        .O(\n_0_wait_time_cnt[8]_i_4 ));
LUT1 #(
    .INIT(2'h1)) 
     \wait_time_cnt[8]_i_5 
       (.I0(wait_time_cnt_reg[8]),
        .O(\n_0_wait_time_cnt[8]_i_5 ));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[0] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_7_wait_time_cnt_reg[0]_i_3 ),
        .Q(wait_time_cnt_reg[0]),
        .R(clear));
CARRY4 \wait_time_cnt_reg[0]_i_3 
       (.CI(\<const0> ),
        .CO({\n_0_wait_time_cnt_reg[0]_i_3 ,\n_1_wait_time_cnt_reg[0]_i_3 ,\n_2_wait_time_cnt_reg[0]_i_3 ,\n_3_wait_time_cnt_reg[0]_i_3 }),
        .CYINIT(\<const0> ),
        .DI({\<const1> ,\<const1> ,\<const1> ,\<const1> }),
        .O({\n_4_wait_time_cnt_reg[0]_i_3 ,\n_5_wait_time_cnt_reg[0]_i_3 ,\n_6_wait_time_cnt_reg[0]_i_3 ,\n_7_wait_time_cnt_reg[0]_i_3 }),
        .S({\n_0_wait_time_cnt[0]_i_8 ,\n_0_wait_time_cnt[0]_i_9 ,\n_0_wait_time_cnt[0]_i_10 ,\n_0_wait_time_cnt[0]_i_11 }));
(* counter = "37" *) 
   FDSE \wait_time_cnt_reg[10] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_5_wait_time_cnt_reg[8]_i_1 ),
        .Q(wait_time_cnt_reg[10]),
        .S(clear));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[11] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_4_wait_time_cnt_reg[8]_i_1 ),
        .Q(wait_time_cnt_reg[11]),
        .R(clear));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[12] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_7_wait_time_cnt_reg[12]_i_1 ),
        .Q(wait_time_cnt_reg[12]),
        .R(clear));
CARRY4 \wait_time_cnt_reg[12]_i_1 
       (.CI(\n_0_wait_time_cnt_reg[8]_i_1 ),
        .CO({\NLW_wait_time_cnt_reg[12]_i_1_CO_UNCONNECTED [3],\n_1_wait_time_cnt_reg[12]_i_1 ,\n_2_wait_time_cnt_reg[12]_i_1 ,\n_3_wait_time_cnt_reg[12]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const1> ,\<const1> ,\<const1> }),
        .O({\n_4_wait_time_cnt_reg[12]_i_1 ,\n_5_wait_time_cnt_reg[12]_i_1 ,\n_6_wait_time_cnt_reg[12]_i_1 ,\n_7_wait_time_cnt_reg[12]_i_1 }),
        .S({\n_0_wait_time_cnt[12]_i_2 ,\n_0_wait_time_cnt[12]_i_3 ,\n_0_wait_time_cnt[12]_i_4 ,\n_0_wait_time_cnt[12]_i_5 }));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[13] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_6_wait_time_cnt_reg[12]_i_1 ),
        .Q(wait_time_cnt_reg[13]),
        .R(clear));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[14] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_5_wait_time_cnt_reg[12]_i_1 ),
        .Q(wait_time_cnt_reg[14]),
        .R(clear));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[15] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_4_wait_time_cnt_reg[12]_i_1 ),
        .Q(wait_time_cnt_reg[15]),
        .R(clear));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[1] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_6_wait_time_cnt_reg[0]_i_3 ),
        .Q(wait_time_cnt_reg[1]),
        .R(clear));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[2] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_5_wait_time_cnt_reg[0]_i_3 ),
        .Q(wait_time_cnt_reg[2]),
        .R(clear));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[3] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_4_wait_time_cnt_reg[0]_i_3 ),
        .Q(wait_time_cnt_reg[3]),
        .R(clear));
(* counter = "37" *) 
   FDSE \wait_time_cnt_reg[4] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_7_wait_time_cnt_reg[4]_i_1 ),
        .Q(wait_time_cnt_reg[4]),
        .S(clear));
CARRY4 \wait_time_cnt_reg[4]_i_1 
       (.CI(\n_0_wait_time_cnt_reg[0]_i_3 ),
        .CO({\n_0_wait_time_cnt_reg[4]_i_1 ,\n_1_wait_time_cnt_reg[4]_i_1 ,\n_2_wait_time_cnt_reg[4]_i_1 ,\n_3_wait_time_cnt_reg[4]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const1> ,\<const1> ,\<const1> ,\<const1> }),
        .O({\n_4_wait_time_cnt_reg[4]_i_1 ,\n_5_wait_time_cnt_reg[4]_i_1 ,\n_6_wait_time_cnt_reg[4]_i_1 ,\n_7_wait_time_cnt_reg[4]_i_1 }),
        .S({\n_0_wait_time_cnt[4]_i_2 ,\n_0_wait_time_cnt[4]_i_3 ,\n_0_wait_time_cnt[4]_i_4 ,\n_0_wait_time_cnt[4]_i_5 }));
(* counter = "37" *) 
   FDRE \wait_time_cnt_reg[5] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_6_wait_time_cnt_reg[4]_i_1 ),
        .Q(wait_time_cnt_reg[5]),
        .R(clear));
(* counter = "37" *) 
   FDSE \wait_time_cnt_reg[6] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_5_wait_time_cnt_reg[4]_i_1 ),
        .Q(wait_time_cnt_reg[6]),
        .S(clear));
(* counter = "37" *) 
   FDSE \wait_time_cnt_reg[7] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_4_wait_time_cnt_reg[4]_i_1 ),
        .Q(wait_time_cnt_reg[7]),
        .S(clear));
(* counter = "37" *) 
   FDSE \wait_time_cnt_reg[8] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_7_wait_time_cnt_reg[8]_i_1 ),
        .Q(wait_time_cnt_reg[8]),
        .S(clear));
CARRY4 \wait_time_cnt_reg[8]_i_1 
       (.CI(\n_0_wait_time_cnt_reg[4]_i_1 ),
        .CO({\n_0_wait_time_cnt_reg[8]_i_1 ,\n_1_wait_time_cnt_reg[8]_i_1 ,\n_2_wait_time_cnt_reg[8]_i_1 ,\n_3_wait_time_cnt_reg[8]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const1> ,\<const1> ,\<const1> ,\<const1> }),
        .O({\n_4_wait_time_cnt_reg[8]_i_1 ,\n_5_wait_time_cnt_reg[8]_i_1 ,\n_6_wait_time_cnt_reg[8]_i_1 ,\n_7_wait_time_cnt_reg[8]_i_1 }),
        .S({\n_0_wait_time_cnt[8]_i_2 ,\n_0_wait_time_cnt[8]_i_3 ,\n_0_wait_time_cnt[8]_i_4 ,\n_0_wait_time_cnt[8]_i_5 }));
(* counter = "37" *) 
   FDSE \wait_time_cnt_reg[9] 
       (.C(independent_clock_bufg),
        .CE(sel),
        .D(\n_6_wait_time_cnt_reg[8]_i_1 ),
        .Q(wait_time_cnt_reg[9]),
        .S(clear));
endmodule

module quadsgmiiquadsgmii_GTWIZARD_init
   (O1,
    gt0_drprdy_out,
    gt0_eyescandataerror_out,
    txn,
    txp,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    rxoutclk,
    gt0_rxprbserr_out,
    gt0_rxratedone_out,
    txoutclk,
    gt0_drpdo_out,
    gt0_txbufstatus_out,
    gt0_rxbufstatus_out,
    rxdata,
    gt0_rxmonitorout_out,
    gt0_dmonitorout_out,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    O2,
    O3,
    p_3_out,
    p_3_out_0,
    p_3_out_1,
    p_3_out_2,
    independent_clock_bufg,
    gt0_drpclk_in,
    gt0_drpen_in,
    gt0_drpwe_in,
    gt0_eyescanreset_in,
    gt0_eyescantrigger_in,
    gtrefclk,
    rxn,
    rxp,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    gt0_rxbufreset_in,
    gt0_rxcdrhold_in,
    gt0_rxdfeagcovrden_in,
    gt0_rxdfelpmreset_in,
    gt0_rxlpmen_in,
    encommaalign_rec,
    gt0_rxpcsreset_in,
    gt0_rxpmareset_in,
    gt0_rxpolarity_in,
    gt0_rxprbscntreset_in,
    rxuserclk,
    rxuserclk2,
    TXPD,
    gt0_txpcsreset_in,
    gt0_txpmareset_in,
    gt0_txpolarity_in,
    gt0_txprbsforceerr_in,
    userclk,
    gt0_drpdi_in,
    gt0_rxmonitorsel_in,
    gt0_loopback_in,
    gt0_rxprbssel_in,
    gt0_rxrate_in,
    gt0_txprbssel_in,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    txdata,
    Q,
    gt0_drpaddr_in,
    data_valid_reg2,
    pma_reset,
    SOFT_RESET,
    reset,
    SOFT_RESET_3,
    SOFT_RESET_4,
    SOFT_RESET_5,
    mgt_rx_reset,
    gt0_gtrxreset_in,
    mgt_tx_reset,
    gt0_gttxreset_in);
  output O1;
  output gt0_drprdy_out;
  output gt0_eyescandataerror_out;
  output txn;
  output txp;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  output rxoutclk;
  output gt0_rxprbserr_out;
  output gt0_rxratedone_out;
  output txoutclk;
  output [15:0]gt0_drpdo_out;
  output [1:0]gt0_txbufstatus_out;
  output [2:0]gt0_rxbufstatus_out;
  output [31:0]rxdata;
  output [6:0]gt0_rxmonitorout_out;
  output [7:0]gt0_dmonitorout_out;
  output [3:0]gt0_rxchariscomma_out;
  output [3:0]gt0_rxcharisk_out;
  output [3:0]gt0_rxdisperr_out;
  output [3:0]gt0_rxnotintable_out;
  output O2;
  output O3;
  output p_3_out;
  output p_3_out_0;
  output p_3_out_1;
  output p_3_out_2;
  input independent_clock_bufg;
  input gt0_drpclk_in;
  input gt0_drpen_in;
  input gt0_drpwe_in;
  input gt0_eyescanreset_in;
  input gt0_eyescantrigger_in;
  input gtrefclk;
  input rxn;
  input rxp;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input gt0_rxbufreset_in;
  input gt0_rxcdrhold_in;
  input gt0_rxdfeagcovrden_in;
  input gt0_rxdfelpmreset_in;
  input gt0_rxlpmen_in;
  input encommaalign_rec;
  input gt0_rxpcsreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxpolarity_in;
  input gt0_rxprbscntreset_in;
  input rxuserclk;
  input rxuserclk2;
  input [1:0]TXPD;
  input gt0_txpcsreset_in;
  input gt0_txpmareset_in;
  input gt0_txpolarity_in;
  input gt0_txprbsforceerr_in;
  input userclk;
  input [15:0]gt0_drpdi_in;
  input [1:0]gt0_rxmonitorsel_in;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_rxrate_in;
  input [2:0]gt0_txprbssel_in;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [31:0]txdata;
  input [3:0]Q;
  input [8:0]gt0_drpaddr_in;
  input data_valid_reg2;
  input pma_reset;
  input SOFT_RESET;
  input reset;
  input SOFT_RESET_3;
  input SOFT_RESET_4;
  input SOFT_RESET_5;
  input mgt_rx_reset;
  input gt0_gtrxreset_in;
  input mgt_tx_reset;
  input gt0_gttxreset_in;

  wire \<const0> ;
  wire \<const1> ;
  wire O1;
  wire O2;
  wire O3;
  wire [3:0]Q;
  wire SOFT_RESET;
  wire SOFT_RESET_3;
  wire SOFT_RESET_4;
  wire SOFT_RESET_5;
  wire [1:0]TXPD;
  wire data_valid_reg2;
  wire encommaalign_rec;
  wire gt0_cpllrefclklost_i;
  wire gt0_cpllreset_t;
  wire [7:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gtrxreset_i;
  wire gt0_gtrxreset_i_sync;
  wire gt0_gtrxreset_in;
  wire gt0_gttxreset_i;
  wire gt0_gttxreset_in;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire gt0_rxcommadet_out;
  wire gt0_rxdfeagcovrden_in;
  wire gt0_rxdfelfhold_i;
  wire gt0_rxdfelpmreset_in;
  wire [3:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [3:0]gt0_rxnotintable_out;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire gt0_rxuserrdy_t;
  wire [1:0]gt0_txbufstatus_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txpcsreset_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txuserrdy_t;
  wire gtrefclk;
  wire independent_clock_bufg;
  wire mgt_rx_reset;
  wire mgt_tx_reset;
  wire \n_0_rx_cdrlock_counter[0]_i_2 ;
  wire \n_0_rx_cdrlock_counter[0]_i_3 ;
  wire \n_0_rx_cdrlock_counter[0]_i_4 ;
  wire \n_0_rx_cdrlock_counter[0]_i_5 ;
  wire \n_0_rx_cdrlock_counter[0]_i_6 ;
  wire \n_0_rx_cdrlock_counter[12]_i_2 ;
  wire \n_0_rx_cdrlock_counter[12]_i_3 ;
  wire \n_0_rx_cdrlock_counter[12]_i_4 ;
  wire \n_0_rx_cdrlock_counter[12]_i_5 ;
  wire \n_0_rx_cdrlock_counter[16]_i_2 ;
  wire \n_0_rx_cdrlock_counter[16]_i_3 ;
  wire \n_0_rx_cdrlock_counter[16]_i_4 ;
  wire \n_0_rx_cdrlock_counter[16]_i_5 ;
  wire \n_0_rx_cdrlock_counter[20]_i_2 ;
  wire \n_0_rx_cdrlock_counter[20]_i_3 ;
  wire \n_0_rx_cdrlock_counter[20]_i_4 ;
  wire \n_0_rx_cdrlock_counter[20]_i_5 ;
  wire \n_0_rx_cdrlock_counter[24]_i_2 ;
  wire \n_0_rx_cdrlock_counter[24]_i_3 ;
  wire \n_0_rx_cdrlock_counter[24]_i_4 ;
  wire \n_0_rx_cdrlock_counter[24]_i_5 ;
  wire \n_0_rx_cdrlock_counter[28]_i_2 ;
  wire \n_0_rx_cdrlock_counter[28]_i_3 ;
  wire \n_0_rx_cdrlock_counter[28]_i_4 ;
  wire \n_0_rx_cdrlock_counter[28]_i_5 ;
  wire \n_0_rx_cdrlock_counter[4]_i_2 ;
  wire \n_0_rx_cdrlock_counter[4]_i_3 ;
  wire \n_0_rx_cdrlock_counter[4]_i_4 ;
  wire \n_0_rx_cdrlock_counter[4]_i_5 ;
  wire \n_0_rx_cdrlock_counter[8]_i_2 ;
  wire \n_0_rx_cdrlock_counter[8]_i_3 ;
  wire \n_0_rx_cdrlock_counter[8]_i_4 ;
  wire \n_0_rx_cdrlock_counter[8]_i_5 ;
  wire \n_0_rx_cdrlock_counter_reg[0]_i_1 ;
  wire \n_0_rx_cdrlock_counter_reg[12]_i_1 ;
  wire \n_0_rx_cdrlock_counter_reg[16]_i_1 ;
  wire \n_0_rx_cdrlock_counter_reg[20]_i_1 ;
  wire \n_0_rx_cdrlock_counter_reg[24]_i_1 ;
  wire \n_0_rx_cdrlock_counter_reg[4]_i_1 ;
  wire \n_0_rx_cdrlock_counter_reg[8]_i_1 ;
  wire n_0_rx_cdrlocked_i_1;
  wire n_0_rx_cdrlocked_i_2;
  wire n_0_rx_cdrlocked_i_3;
  wire n_0_rx_cdrlocked_i_4;
  wire n_0_rx_cdrlocked_i_5;
  wire n_0_rx_cdrlocked_i_6;
  wire n_0_rx_cdrlocked_i_7;
  wire n_12_GTWIZARD_i;
  wire n_14_GTWIZARD_i;
  wire \n_1_rx_cdrlock_counter_reg[0]_i_1 ;
  wire \n_1_rx_cdrlock_counter_reg[12]_i_1 ;
  wire \n_1_rx_cdrlock_counter_reg[16]_i_1 ;
  wire \n_1_rx_cdrlock_counter_reg[20]_i_1 ;
  wire \n_1_rx_cdrlock_counter_reg[24]_i_1 ;
  wire \n_1_rx_cdrlock_counter_reg[28]_i_1 ;
  wire \n_1_rx_cdrlock_counter_reg[4]_i_1 ;
  wire \n_1_rx_cdrlock_counter_reg[8]_i_1 ;
  wire \n_2_rx_cdrlock_counter_reg[0]_i_1 ;
  wire \n_2_rx_cdrlock_counter_reg[12]_i_1 ;
  wire \n_2_rx_cdrlock_counter_reg[16]_i_1 ;
  wire \n_2_rx_cdrlock_counter_reg[20]_i_1 ;
  wire \n_2_rx_cdrlock_counter_reg[24]_i_1 ;
  wire \n_2_rx_cdrlock_counter_reg[28]_i_1 ;
  wire \n_2_rx_cdrlock_counter_reg[4]_i_1 ;
  wire \n_2_rx_cdrlock_counter_reg[8]_i_1 ;
  wire \n_3_rx_cdrlock_counter_reg[0]_i_1 ;
  wire \n_3_rx_cdrlock_counter_reg[12]_i_1 ;
  wire \n_3_rx_cdrlock_counter_reg[16]_i_1 ;
  wire \n_3_rx_cdrlock_counter_reg[20]_i_1 ;
  wire \n_3_rx_cdrlock_counter_reg[24]_i_1 ;
  wire \n_3_rx_cdrlock_counter_reg[28]_i_1 ;
  wire \n_3_rx_cdrlock_counter_reg[4]_i_1 ;
  wire \n_3_rx_cdrlock_counter_reg[8]_i_1 ;
  wire \n_4_rx_cdrlock_counter_reg[0]_i_1 ;
  wire \n_4_rx_cdrlock_counter_reg[12]_i_1 ;
  wire \n_4_rx_cdrlock_counter_reg[16]_i_1 ;
  wire \n_4_rx_cdrlock_counter_reg[20]_i_1 ;
  wire \n_4_rx_cdrlock_counter_reg[24]_i_1 ;
  wire \n_4_rx_cdrlock_counter_reg[28]_i_1 ;
  wire \n_4_rx_cdrlock_counter_reg[4]_i_1 ;
  wire \n_4_rx_cdrlock_counter_reg[8]_i_1 ;
  wire \n_5_rx_cdrlock_counter_reg[0]_i_1 ;
  wire \n_5_rx_cdrlock_counter_reg[12]_i_1 ;
  wire \n_5_rx_cdrlock_counter_reg[16]_i_1 ;
  wire \n_5_rx_cdrlock_counter_reg[20]_i_1 ;
  wire \n_5_rx_cdrlock_counter_reg[24]_i_1 ;
  wire \n_5_rx_cdrlock_counter_reg[28]_i_1 ;
  wire \n_5_rx_cdrlock_counter_reg[4]_i_1 ;
  wire \n_5_rx_cdrlock_counter_reg[8]_i_1 ;
  wire \n_6_rx_cdrlock_counter_reg[0]_i_1 ;
  wire \n_6_rx_cdrlock_counter_reg[12]_i_1 ;
  wire \n_6_rx_cdrlock_counter_reg[16]_i_1 ;
  wire \n_6_rx_cdrlock_counter_reg[20]_i_1 ;
  wire \n_6_rx_cdrlock_counter_reg[24]_i_1 ;
  wire \n_6_rx_cdrlock_counter_reg[28]_i_1 ;
  wire \n_6_rx_cdrlock_counter_reg[4]_i_1 ;
  wire \n_6_rx_cdrlock_counter_reg[8]_i_1 ;
  wire \n_7_rx_cdrlock_counter_reg[0]_i_1 ;
  wire \n_7_rx_cdrlock_counter_reg[12]_i_1 ;
  wire \n_7_rx_cdrlock_counter_reg[16]_i_1 ;
  wire \n_7_rx_cdrlock_counter_reg[20]_i_1 ;
  wire \n_7_rx_cdrlock_counter_reg[24]_i_1 ;
  wire \n_7_rx_cdrlock_counter_reg[28]_i_1 ;
  wire \n_7_rx_cdrlock_counter_reg[4]_i_1 ;
  wire \n_7_rx_cdrlock_counter_reg[8]_i_1 ;
  wire p_3_out;
  wire p_3_out_0;
  wire p_3_out_1;
  wire p_3_out_2;
  wire pma_reset;
  wire reset;
  wire [31:0]rx_cdrlock_counter;
  wire rx_cdrlocked;
  wire [31:0]rxdata;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk;
  wire rxuserclk2;
  wire [31:0]txdata;
  wire txn;
  wire txoutclk;
  wire txp;
  wire userclk;
  wire [3:3]\NLW_rx_cdrlock_counter_reg[28]_i_1_CO_UNCONNECTED ;

GND GND
       (.G(\<const0> ));
(* CORE_GENERATION_INFO = "quadsgmii_GTWIZARD_multi_gt,gtwizard_v3_1,{protocol_file=QSGMII}" *) 
   quadsgmiiquadsgmii_GTWIZARD_multi_gt GTWIZARD_i
       (.O1(O1),
        .O2(n_12_GTWIZARD_i),
        .O3(n_14_GTWIZARD_i),
        .Q(Q),
        .SOFT_RESET(SOFT_RESET),
        .SOFT_RESET_3(SOFT_RESET_3),
        .SOFT_RESET_4(SOFT_RESET_4),
        .SOFT_RESET_5(SOFT_RESET_5),
        .TXPD(TXPD),
        .encommaalign_rec(encommaalign_rec),
        .gt0_cpllrefclklost_i(gt0_cpllrefclklost_i),
        .gt0_cpllreset_t(gt0_cpllreset_t),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drpaddr_in(gt0_drpaddr_in),
        .gt0_drpclk_in(gt0_drpclk_in),
        .gt0_drpdi_in(gt0_drpdi_in),
        .gt0_drpdo_out(gt0_drpdo_out),
        .gt0_drpen_in(gt0_drpen_in),
        .gt0_drprdy_out(gt0_drprdy_out),
        .gt0_drpwe_in(gt0_drpwe_in),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_gtrxreset_i(gt0_gtrxreset_i),
        .gt0_gttxreset_i(gt0_gttxreset_i),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt0_rxbufreset_in(gt0_rxbufreset_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxbyteisaligned_out(gt0_rxbyteisaligned_out),
        .gt0_rxbyterealign_out(gt0_rxbyterealign_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdfeagcovrden_in(gt0_rxdfeagcovrden_in),
        .gt0_rxdfelfhold_i(gt0_rxdfelfhold_i),
        .gt0_rxdfelpmreset_in(gt0_rxdfelpmreset_in),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmen_in(gt0_rxlpmen_in),
        .gt0_rxmonitorout_out(gt0_rxmonitorout_out),
        .gt0_rxmonitorsel_in(gt0_rxmonitorsel_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxratedone_out(gt0_rxratedone_out),
        .gt0_rxuserrdy_t(gt0_rxuserrdy_t),
        .gt0_txbufstatus_out(gt0_txbufstatus_out),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gt0_txuserrdy_t(gt0_txuserrdy_t),
        .gtrefclk(gtrefclk),
        .independent_clock_bufg(independent_clock_bufg),
        .p_3_out(p_3_out),
        .p_3_out_0(p_3_out_0),
        .p_3_out_1(p_3_out_1),
        .p_3_out_2(p_3_out_2),
        .reset(reset),
        .rxdata(rxdata),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk(rxuserclk),
        .rxuserclk2(rxuserclk2),
        .txdata(txdata),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .userclk(userclk));
VCC VCC
       (.P(\<const1> ));
quadsgmiiquadsgmii_GTWIZARD_RX_STARTUP_FSM gt0_rxresetfsm_i
       (.I1(n_12_GTWIZARD_i),
        .I2(O1),
        .O1(O3),
        .data_valid_reg2(data_valid_reg2),
        .gt0_cpllrefclklost_i(gt0_cpllrefclklost_i),
        .gt0_gtrxreset_i(gt0_gtrxreset_i),
        .gt0_gtrxreset_in(gt0_gtrxreset_in),
        .gt0_rxdfelfhold_i(gt0_rxdfelfhold_i),
        .gt0_rxuserrdy_t(gt0_rxuserrdy_t),
        .independent_clock_bufg(independent_clock_bufg),
        .mgt_rx_reset(mgt_rx_reset),
        .pma_reset(pma_reset),
        .rx_cdrlocked(rx_cdrlocked),
        .rxuserclk(rxuserclk));
quadsgmiiquadsgmii_GTWIZARD_TX_STARTUP_FSM gt0_txresetfsm_i
       (.I1(n_14_GTWIZARD_i),
        .I2(O1),
        .O1(O2),
        .gt0_cpllrefclklost_i(gt0_cpllrefclklost_i),
        .gt0_cpllreset_t(gt0_cpllreset_t),
        .gt0_gttxreset_i(gt0_gttxreset_i),
        .gt0_gttxreset_in(gt0_gttxreset_in),
        .gt0_txuserrdy_t(gt0_txuserrdy_t),
        .independent_clock_bufg(independent_clock_bufg),
        .mgt_tx_reset(mgt_tx_reset),
        .pma_reset(pma_reset),
        .userclk(userclk));
LUT2 #(
    .INIT(4'hD)) 
     \rx_cdrlock_counter[0]_i_2 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .O(\n_0_rx_cdrlock_counter[0]_i_2 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[0]_i_3 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[3]),
        .O(\n_0_rx_cdrlock_counter[0]_i_3 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[0]_i_4 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[2]),
        .O(\n_0_rx_cdrlock_counter[0]_i_4 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[0]_i_5 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[1]),
        .O(\n_0_rx_cdrlock_counter[0]_i_5 ));
LUT3 #(
    .INIT(8'h0D)) 
     \rx_cdrlock_counter[0]_i_6 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[0]),
        .O(\n_0_rx_cdrlock_counter[0]_i_6 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[12]_i_2 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[15]),
        .O(\n_0_rx_cdrlock_counter[12]_i_2 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[12]_i_3 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[14]),
        .O(\n_0_rx_cdrlock_counter[12]_i_3 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[12]_i_4 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[13]),
        .O(\n_0_rx_cdrlock_counter[12]_i_4 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[12]_i_5 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[12]),
        .O(\n_0_rx_cdrlock_counter[12]_i_5 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[16]_i_2 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[19]),
        .O(\n_0_rx_cdrlock_counter[16]_i_2 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[16]_i_3 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[18]),
        .O(\n_0_rx_cdrlock_counter[16]_i_3 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[16]_i_4 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[17]),
        .O(\n_0_rx_cdrlock_counter[16]_i_4 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[16]_i_5 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[16]),
        .O(\n_0_rx_cdrlock_counter[16]_i_5 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[20]_i_2 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[23]),
        .O(\n_0_rx_cdrlock_counter[20]_i_2 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[20]_i_3 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[22]),
        .O(\n_0_rx_cdrlock_counter[20]_i_3 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[20]_i_4 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[21]),
        .O(\n_0_rx_cdrlock_counter[20]_i_4 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[20]_i_5 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[20]),
        .O(\n_0_rx_cdrlock_counter[20]_i_5 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[24]_i_2 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[27]),
        .O(\n_0_rx_cdrlock_counter[24]_i_2 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[24]_i_3 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[26]),
        .O(\n_0_rx_cdrlock_counter[24]_i_3 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[24]_i_4 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[25]),
        .O(\n_0_rx_cdrlock_counter[24]_i_4 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[24]_i_5 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[24]),
        .O(\n_0_rx_cdrlock_counter[24]_i_5 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[28]_i_2 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[31]),
        .O(\n_0_rx_cdrlock_counter[28]_i_2 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[28]_i_3 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[30]),
        .O(\n_0_rx_cdrlock_counter[28]_i_3 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[28]_i_4 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[29]),
        .O(\n_0_rx_cdrlock_counter[28]_i_4 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[28]_i_5 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[28]),
        .O(\n_0_rx_cdrlock_counter[28]_i_5 ));
LUT3 #(
    .INIT(8'hF2)) 
     \rx_cdrlock_counter[4]_i_2 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[7]),
        .O(\n_0_rx_cdrlock_counter[4]_i_2 ));
LUT3 #(
    .INIT(8'hF2)) 
     \rx_cdrlock_counter[4]_i_3 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[6]),
        .O(\n_0_rx_cdrlock_counter[4]_i_3 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[4]_i_4 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[5]),
        .O(\n_0_rx_cdrlock_counter[4]_i_4 ));
LUT3 #(
    .INIT(8'hF2)) 
     \rx_cdrlock_counter[4]_i_5 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[4]),
        .O(\n_0_rx_cdrlock_counter[4]_i_5 ));
LUT3 #(
    .INIT(8'hD0)) 
     \rx_cdrlock_counter[8]_i_2 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[11]),
        .O(\n_0_rx_cdrlock_counter[8]_i_2 ));
LUT3 #(
    .INIT(8'hF2)) 
     \rx_cdrlock_counter[8]_i_3 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[10]),
        .O(\n_0_rx_cdrlock_counter[8]_i_3 ));
LUT3 #(
    .INIT(8'hF2)) 
     \rx_cdrlock_counter[8]_i_4 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[9]),
        .O(\n_0_rx_cdrlock_counter[8]_i_4 ));
LUT3 #(
    .INIT(8'hF2)) 
     \rx_cdrlock_counter[8]_i_5 
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlock_counter[8]),
        .O(\n_0_rx_cdrlock_counter[8]_i_5 ));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[0] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_7_rx_cdrlock_counter_reg[0]_i_1 ),
        .Q(rx_cdrlock_counter[0]),
        .R(gt0_gtrxreset_i_sync));
CARRY4 \rx_cdrlock_counter_reg[0]_i_1 
       (.CI(\<const0> ),
        .CO({\n_0_rx_cdrlock_counter_reg[0]_i_1 ,\n_1_rx_cdrlock_counter_reg[0]_i_1 ,\n_2_rx_cdrlock_counter_reg[0]_i_1 ,\n_3_rx_cdrlock_counter_reg[0]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\n_0_rx_cdrlock_counter[0]_i_2 }),
        .O({\n_4_rx_cdrlock_counter_reg[0]_i_1 ,\n_5_rx_cdrlock_counter_reg[0]_i_1 ,\n_6_rx_cdrlock_counter_reg[0]_i_1 ,\n_7_rx_cdrlock_counter_reg[0]_i_1 }),
        .S({\n_0_rx_cdrlock_counter[0]_i_3 ,\n_0_rx_cdrlock_counter[0]_i_4 ,\n_0_rx_cdrlock_counter[0]_i_5 ,\n_0_rx_cdrlock_counter[0]_i_6 }));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[10] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_5_rx_cdrlock_counter_reg[8]_i_1 ),
        .Q(rx_cdrlock_counter[10]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[11] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_4_rx_cdrlock_counter_reg[8]_i_1 ),
        .Q(rx_cdrlock_counter[11]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[12] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_7_rx_cdrlock_counter_reg[12]_i_1 ),
        .Q(rx_cdrlock_counter[12]),
        .R(gt0_gtrxreset_i_sync));
CARRY4 \rx_cdrlock_counter_reg[12]_i_1 
       (.CI(\n_0_rx_cdrlock_counter_reg[8]_i_1 ),
        .CO({\n_0_rx_cdrlock_counter_reg[12]_i_1 ,\n_1_rx_cdrlock_counter_reg[12]_i_1 ,\n_2_rx_cdrlock_counter_reg[12]_i_1 ,\n_3_rx_cdrlock_counter_reg[12]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_rx_cdrlock_counter_reg[12]_i_1 ,\n_5_rx_cdrlock_counter_reg[12]_i_1 ,\n_6_rx_cdrlock_counter_reg[12]_i_1 ,\n_7_rx_cdrlock_counter_reg[12]_i_1 }),
        .S({\n_0_rx_cdrlock_counter[12]_i_2 ,\n_0_rx_cdrlock_counter[12]_i_3 ,\n_0_rx_cdrlock_counter[12]_i_4 ,\n_0_rx_cdrlock_counter[12]_i_5 }));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[13] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_6_rx_cdrlock_counter_reg[12]_i_1 ),
        .Q(rx_cdrlock_counter[13]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[14] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_5_rx_cdrlock_counter_reg[12]_i_1 ),
        .Q(rx_cdrlock_counter[14]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[15] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_4_rx_cdrlock_counter_reg[12]_i_1 ),
        .Q(rx_cdrlock_counter[15]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[16] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_7_rx_cdrlock_counter_reg[16]_i_1 ),
        .Q(rx_cdrlock_counter[16]),
        .R(gt0_gtrxreset_i_sync));
CARRY4 \rx_cdrlock_counter_reg[16]_i_1 
       (.CI(\n_0_rx_cdrlock_counter_reg[12]_i_1 ),
        .CO({\n_0_rx_cdrlock_counter_reg[16]_i_1 ,\n_1_rx_cdrlock_counter_reg[16]_i_1 ,\n_2_rx_cdrlock_counter_reg[16]_i_1 ,\n_3_rx_cdrlock_counter_reg[16]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_rx_cdrlock_counter_reg[16]_i_1 ,\n_5_rx_cdrlock_counter_reg[16]_i_1 ,\n_6_rx_cdrlock_counter_reg[16]_i_1 ,\n_7_rx_cdrlock_counter_reg[16]_i_1 }),
        .S({\n_0_rx_cdrlock_counter[16]_i_2 ,\n_0_rx_cdrlock_counter[16]_i_3 ,\n_0_rx_cdrlock_counter[16]_i_4 ,\n_0_rx_cdrlock_counter[16]_i_5 }));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[17] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_6_rx_cdrlock_counter_reg[16]_i_1 ),
        .Q(rx_cdrlock_counter[17]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[18] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_5_rx_cdrlock_counter_reg[16]_i_1 ),
        .Q(rx_cdrlock_counter[18]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[19] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_4_rx_cdrlock_counter_reg[16]_i_1 ),
        .Q(rx_cdrlock_counter[19]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[1] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_6_rx_cdrlock_counter_reg[0]_i_1 ),
        .Q(rx_cdrlock_counter[1]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[20] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_7_rx_cdrlock_counter_reg[20]_i_1 ),
        .Q(rx_cdrlock_counter[20]),
        .R(gt0_gtrxreset_i_sync));
CARRY4 \rx_cdrlock_counter_reg[20]_i_1 
       (.CI(\n_0_rx_cdrlock_counter_reg[16]_i_1 ),
        .CO({\n_0_rx_cdrlock_counter_reg[20]_i_1 ,\n_1_rx_cdrlock_counter_reg[20]_i_1 ,\n_2_rx_cdrlock_counter_reg[20]_i_1 ,\n_3_rx_cdrlock_counter_reg[20]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_rx_cdrlock_counter_reg[20]_i_1 ,\n_5_rx_cdrlock_counter_reg[20]_i_1 ,\n_6_rx_cdrlock_counter_reg[20]_i_1 ,\n_7_rx_cdrlock_counter_reg[20]_i_1 }),
        .S({\n_0_rx_cdrlock_counter[20]_i_2 ,\n_0_rx_cdrlock_counter[20]_i_3 ,\n_0_rx_cdrlock_counter[20]_i_4 ,\n_0_rx_cdrlock_counter[20]_i_5 }));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[21] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_6_rx_cdrlock_counter_reg[20]_i_1 ),
        .Q(rx_cdrlock_counter[21]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[22] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_5_rx_cdrlock_counter_reg[20]_i_1 ),
        .Q(rx_cdrlock_counter[22]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[23] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_4_rx_cdrlock_counter_reg[20]_i_1 ),
        .Q(rx_cdrlock_counter[23]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[24] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_7_rx_cdrlock_counter_reg[24]_i_1 ),
        .Q(rx_cdrlock_counter[24]),
        .R(gt0_gtrxreset_i_sync));
CARRY4 \rx_cdrlock_counter_reg[24]_i_1 
       (.CI(\n_0_rx_cdrlock_counter_reg[20]_i_1 ),
        .CO({\n_0_rx_cdrlock_counter_reg[24]_i_1 ,\n_1_rx_cdrlock_counter_reg[24]_i_1 ,\n_2_rx_cdrlock_counter_reg[24]_i_1 ,\n_3_rx_cdrlock_counter_reg[24]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_rx_cdrlock_counter_reg[24]_i_1 ,\n_5_rx_cdrlock_counter_reg[24]_i_1 ,\n_6_rx_cdrlock_counter_reg[24]_i_1 ,\n_7_rx_cdrlock_counter_reg[24]_i_1 }),
        .S({\n_0_rx_cdrlock_counter[24]_i_2 ,\n_0_rx_cdrlock_counter[24]_i_3 ,\n_0_rx_cdrlock_counter[24]_i_4 ,\n_0_rx_cdrlock_counter[24]_i_5 }));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[25] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_6_rx_cdrlock_counter_reg[24]_i_1 ),
        .Q(rx_cdrlock_counter[25]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[26] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_5_rx_cdrlock_counter_reg[24]_i_1 ),
        .Q(rx_cdrlock_counter[26]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[27] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_4_rx_cdrlock_counter_reg[24]_i_1 ),
        .Q(rx_cdrlock_counter[27]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[28] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_7_rx_cdrlock_counter_reg[28]_i_1 ),
        .Q(rx_cdrlock_counter[28]),
        .R(gt0_gtrxreset_i_sync));
CARRY4 \rx_cdrlock_counter_reg[28]_i_1 
       (.CI(\n_0_rx_cdrlock_counter_reg[24]_i_1 ),
        .CO({\NLW_rx_cdrlock_counter_reg[28]_i_1_CO_UNCONNECTED [3],\n_1_rx_cdrlock_counter_reg[28]_i_1 ,\n_2_rx_cdrlock_counter_reg[28]_i_1 ,\n_3_rx_cdrlock_counter_reg[28]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_rx_cdrlock_counter_reg[28]_i_1 ,\n_5_rx_cdrlock_counter_reg[28]_i_1 ,\n_6_rx_cdrlock_counter_reg[28]_i_1 ,\n_7_rx_cdrlock_counter_reg[28]_i_1 }),
        .S({\n_0_rx_cdrlock_counter[28]_i_2 ,\n_0_rx_cdrlock_counter[28]_i_3 ,\n_0_rx_cdrlock_counter[28]_i_4 ,\n_0_rx_cdrlock_counter[28]_i_5 }));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[29] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_6_rx_cdrlock_counter_reg[28]_i_1 ),
        .Q(rx_cdrlock_counter[29]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[2] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_5_rx_cdrlock_counter_reg[0]_i_1 ),
        .Q(rx_cdrlock_counter[2]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[30] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_5_rx_cdrlock_counter_reg[28]_i_1 ),
        .Q(rx_cdrlock_counter[30]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[31] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_4_rx_cdrlock_counter_reg[28]_i_1 ),
        .Q(rx_cdrlock_counter[31]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[3] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_4_rx_cdrlock_counter_reg[0]_i_1 ),
        .Q(rx_cdrlock_counter[3]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[4] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_7_rx_cdrlock_counter_reg[4]_i_1 ),
        .Q(rx_cdrlock_counter[4]),
        .R(gt0_gtrxreset_i_sync));
CARRY4 \rx_cdrlock_counter_reg[4]_i_1 
       (.CI(\n_0_rx_cdrlock_counter_reg[0]_i_1 ),
        .CO({\n_0_rx_cdrlock_counter_reg[4]_i_1 ,\n_1_rx_cdrlock_counter_reg[4]_i_1 ,\n_2_rx_cdrlock_counter_reg[4]_i_1 ,\n_3_rx_cdrlock_counter_reg[4]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_rx_cdrlock_counter_reg[4]_i_1 ,\n_5_rx_cdrlock_counter_reg[4]_i_1 ,\n_6_rx_cdrlock_counter_reg[4]_i_1 ,\n_7_rx_cdrlock_counter_reg[4]_i_1 }),
        .S({\n_0_rx_cdrlock_counter[4]_i_2 ,\n_0_rx_cdrlock_counter[4]_i_3 ,\n_0_rx_cdrlock_counter[4]_i_4 ,\n_0_rx_cdrlock_counter[4]_i_5 }));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[5] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_6_rx_cdrlock_counter_reg[4]_i_1 ),
        .Q(rx_cdrlock_counter[5]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[6] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_5_rx_cdrlock_counter_reg[4]_i_1 ),
        .Q(rx_cdrlock_counter[6]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[7] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_4_rx_cdrlock_counter_reg[4]_i_1 ),
        .Q(rx_cdrlock_counter[7]),
        .R(gt0_gtrxreset_i_sync));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[8] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_7_rx_cdrlock_counter_reg[8]_i_1 ),
        .Q(rx_cdrlock_counter[8]),
        .R(gt0_gtrxreset_i_sync));
CARRY4 \rx_cdrlock_counter_reg[8]_i_1 
       (.CI(\n_0_rx_cdrlock_counter_reg[4]_i_1 ),
        .CO({\n_0_rx_cdrlock_counter_reg[8]_i_1 ,\n_1_rx_cdrlock_counter_reg[8]_i_1 ,\n_2_rx_cdrlock_counter_reg[8]_i_1 ,\n_3_rx_cdrlock_counter_reg[8]_i_1 }),
        .CYINIT(\<const0> ),
        .DI({\<const0> ,\<const0> ,\<const0> ,\<const0> }),
        .O({\n_4_rx_cdrlock_counter_reg[8]_i_1 ,\n_5_rx_cdrlock_counter_reg[8]_i_1 ,\n_6_rx_cdrlock_counter_reg[8]_i_1 ,\n_7_rx_cdrlock_counter_reg[8]_i_1 }),
        .S({\n_0_rx_cdrlock_counter[8]_i_2 ,\n_0_rx_cdrlock_counter[8]_i_3 ,\n_0_rx_cdrlock_counter[8]_i_4 ,\n_0_rx_cdrlock_counter[8]_i_5 }));
(* counter = "45" *) 
   FDRE #(
    .INIT(1'b0)) 
     \rx_cdrlock_counter_reg[9] 
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(\n_6_rx_cdrlock_counter_reg[8]_i_1 ),
        .Q(rx_cdrlock_counter[9]),
        .R(gt0_gtrxreset_i_sync));
LUT4 #(
    .INIT(16'h00F2)) 
     rx_cdrlocked_i_1
       (.I0(n_0_rx_cdrlocked_i_2),
        .I1(n_0_rx_cdrlocked_i_3),
        .I2(rx_cdrlocked),
        .I3(gt0_gtrxreset_i_sync),
        .O(n_0_rx_cdrlocked_i_1));
LUT6 #(
    .INIT(64'h0002000000000000)) 
     rx_cdrlocked_i_2
       (.I0(rx_cdrlock_counter[8]),
        .I1(rx_cdrlock_counter[1]),
        .I2(rx_cdrlock_counter[11]),
        .I3(rx_cdrlock_counter[14]),
        .I4(n_0_rx_cdrlocked_i_4),
        .I5(n_0_rx_cdrlocked_i_5),
        .O(n_0_rx_cdrlocked_i_2));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
     rx_cdrlocked_i_3
       (.I0(rx_cdrlock_counter[26]),
        .I1(rx_cdrlock_counter[28]),
        .I2(rx_cdrlock_counter[18]),
        .I3(rx_cdrlock_counter[20]),
        .I4(n_0_rx_cdrlocked_i_6),
        .I5(n_0_rx_cdrlocked_i_7),
        .O(n_0_rx_cdrlocked_i_3));
LUT6 #(
    .INIT(64'h0000000000000001)) 
     rx_cdrlocked_i_4
       (.I0(rx_cdrlock_counter[27]),
        .I1(rx_cdrlock_counter[12]),
        .I2(rx_cdrlock_counter[16]),
        .I3(rx_cdrlock_counter[22]),
        .I4(rx_cdrlock_counter[15]),
        .I5(rx_cdrlock_counter[24]),
        .O(n_0_rx_cdrlocked_i_4));
LUT6 #(
    .INIT(64'h0000000000100000)) 
     rx_cdrlocked_i_5
       (.I0(rx_cdrlock_counter[30]),
        .I1(rx_cdrlock_counter[31]),
        .I2(rx_cdrlock_counter[9]),
        .I3(rx_cdrlock_counter[29]),
        .I4(rx_cdrlock_counter[10]),
        .I5(rx_cdrlock_counter[25]),
        .O(n_0_rx_cdrlocked_i_5));
LUT6 #(
    .INIT(64'hFFFFFEFFFFFFFFFF)) 
     rx_cdrlocked_i_6
       (.I0(rx_cdrlock_counter[21]),
        .I1(rx_cdrlock_counter[19]),
        .I2(rx_cdrlock_counter[2]),
        .I3(rx_cdrlock_counter[6]),
        .I4(rx_cdrlock_counter[13]),
        .I5(rx_cdrlock_counter[4]),
        .O(n_0_rx_cdrlocked_i_6));
LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
     rx_cdrlocked_i_7
       (.I0(rx_cdrlock_counter[23]),
        .I1(rx_cdrlock_counter[17]),
        .I2(rx_cdrlock_counter[3]),
        .I3(rx_cdrlock_counter[7]),
        .I4(rx_cdrlock_counter[0]),
        .I5(rx_cdrlock_counter[5]),
        .O(n_0_rx_cdrlocked_i_7));
FDRE rx_cdrlocked_reg
       (.C(independent_clock_bufg),
        .CE(\<const1> ),
        .D(n_0_rx_cdrlocked_i_1),
        .Q(rx_cdrlocked),
        .R(\<const0> ));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b11" *) 
   quadsgmiiquadsgmii_reset_sync sync_block_gtrxreset
       (.clk(independent_clock_bufg),
        .reset_in(gt0_gtrxreset_i),
        .reset_out(gt0_gtrxreset_i_sync));
endmodule

module quadsgmiiquadsgmii_GTWIZARD_multi_gt
   (O1,
    gt0_cpllrefclklost_i,
    gt0_drprdy_out,
    gt0_eyescandataerror_out,
    txn,
    txp,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    rxoutclk,
    gt0_rxprbserr_out,
    gt0_rxratedone_out,
    O2,
    txoutclk,
    O3,
    gt0_drpdo_out,
    gt0_txbufstatus_out,
    gt0_rxbufstatus_out,
    rxdata,
    gt0_rxmonitorout_out,
    gt0_dmonitorout_out,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    p_3_out,
    p_3_out_0,
    p_3_out_1,
    p_3_out_2,
    independent_clock_bufg,
    gt0_cpllreset_t,
    gt0_drpclk_in,
    gt0_drpen_in,
    gt0_drpwe_in,
    gt0_eyescanreset_in,
    gt0_eyescantrigger_in,
    gtrefclk,
    gt0_gtrxreset_i,
    gt0_gttxreset_i,
    rxn,
    rxp,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    gt0_rxbufreset_in,
    gt0_rxcdrhold_in,
    gt0_rxdfelfhold_i,
    gt0_rxdfeagcovrden_in,
    gt0_rxdfelpmreset_in,
    gt0_rxlpmen_in,
    encommaalign_rec,
    gt0_rxpcsreset_in,
    gt0_rxpmareset_in,
    gt0_rxpolarity_in,
    gt0_rxprbscntreset_in,
    gt0_rxuserrdy_t,
    rxuserclk,
    rxuserclk2,
    TXPD,
    gt0_txpcsreset_in,
    gt0_txpmareset_in,
    gt0_txpolarity_in,
    gt0_txprbsforceerr_in,
    gt0_txuserrdy_t,
    userclk,
    gt0_drpdi_in,
    gt0_rxmonitorsel_in,
    gt0_loopback_in,
    gt0_rxprbssel_in,
    gt0_rxrate_in,
    gt0_txprbssel_in,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    txdata,
    Q,
    gt0_drpaddr_in,
    SOFT_RESET,
    reset,
    SOFT_RESET_3,
    SOFT_RESET_4,
    SOFT_RESET_5);
  output O1;
  output gt0_cpllrefclklost_i;
  output gt0_drprdy_out;
  output gt0_eyescandataerror_out;
  output txn;
  output txp;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  output rxoutclk;
  output gt0_rxprbserr_out;
  output gt0_rxratedone_out;
  output O2;
  output txoutclk;
  output O3;
  output [15:0]gt0_drpdo_out;
  output [1:0]gt0_txbufstatus_out;
  output [2:0]gt0_rxbufstatus_out;
  output [31:0]rxdata;
  output [6:0]gt0_rxmonitorout_out;
  output [7:0]gt0_dmonitorout_out;
  output [3:0]gt0_rxchariscomma_out;
  output [3:0]gt0_rxcharisk_out;
  output [3:0]gt0_rxdisperr_out;
  output [3:0]gt0_rxnotintable_out;
  output p_3_out;
  output p_3_out_0;
  output p_3_out_1;
  output p_3_out_2;
  input independent_clock_bufg;
  input gt0_cpllreset_t;
  input gt0_drpclk_in;
  input gt0_drpen_in;
  input gt0_drpwe_in;
  input gt0_eyescanreset_in;
  input gt0_eyescantrigger_in;
  input gtrefclk;
  input gt0_gtrxreset_i;
  input gt0_gttxreset_i;
  input rxn;
  input rxp;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input gt0_rxbufreset_in;
  input gt0_rxcdrhold_in;
  input gt0_rxdfelfhold_i;
  input gt0_rxdfeagcovrden_in;
  input gt0_rxdfelpmreset_in;
  input gt0_rxlpmen_in;
  input encommaalign_rec;
  input gt0_rxpcsreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxpolarity_in;
  input gt0_rxprbscntreset_in;
  input gt0_rxuserrdy_t;
  input rxuserclk;
  input rxuserclk2;
  input [1:0]TXPD;
  input gt0_txpcsreset_in;
  input gt0_txpmareset_in;
  input gt0_txpolarity_in;
  input gt0_txprbsforceerr_in;
  input gt0_txuserrdy_t;
  input userclk;
  input [15:0]gt0_drpdi_in;
  input [1:0]gt0_rxmonitorsel_in;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_rxrate_in;
  input [2:0]gt0_txprbssel_in;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [31:0]txdata;
  input [3:0]Q;
  input [8:0]gt0_drpaddr_in;
  input SOFT_RESET;
  input reset;
  input SOFT_RESET_3;
  input SOFT_RESET_4;
  input SOFT_RESET_5;

  wire O1;
  wire O2;
  wire O3;
  wire [3:0]Q;
  wire SOFT_RESET;
  wire SOFT_RESET_3;
  wire SOFT_RESET_4;
  wire SOFT_RESET_5;
  wire [1:0]TXPD;
  wire encommaalign_rec;
  wire gt0_cpllrefclklost_i;
  wire gt0_cpllreset_t;
  wire [7:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gtrxreset_i;
  wire gt0_gttxreset_i;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire gt0_rxcommadet_out;
  wire gt0_rxdfeagcovrden_in;
  wire gt0_rxdfelfhold_i;
  wire gt0_rxdfelpmreset_in;
  wire [3:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [3:0]gt0_rxnotintable_out;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire gt0_rxuserrdy_t;
  wire [1:0]gt0_txbufstatus_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txpcsreset_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txuserrdy_t;
  wire gtrefclk;
  wire independent_clock_bufg;
  wire p_3_out;
  wire p_3_out_0;
  wire p_3_out_1;
  wire p_3_out_2;
  wire reset;
  wire [31:0]rxdata;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk;
  wire rxuserclk2;
  wire [31:0]txdata;
  wire txn;
  wire txoutclk;
  wire txp;
  wire userclk;

quadsgmiiquadsgmii_GTWIZARD_GT gt0_GTWIZARD_i
       (.O1(O1),
        .O2(O2),
        .O3(O3),
        .Q(Q),
        .SOFT_RESET(SOFT_RESET),
        .SOFT_RESET_3(SOFT_RESET_3),
        .SOFT_RESET_4(SOFT_RESET_4),
        .SOFT_RESET_5(SOFT_RESET_5),
        .TXPD(TXPD),
        .encommaalign_rec(encommaalign_rec),
        .gt0_cpllrefclklost_i(gt0_cpllrefclklost_i),
        .gt0_cpllreset_t(gt0_cpllreset_t),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drpaddr_in(gt0_drpaddr_in),
        .gt0_drpclk_in(gt0_drpclk_in),
        .gt0_drpdi_in(gt0_drpdi_in),
        .gt0_drpdo_out(gt0_drpdo_out),
        .gt0_drpen_in(gt0_drpen_in),
        .gt0_drprdy_out(gt0_drprdy_out),
        .gt0_drpwe_in(gt0_drpwe_in),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_gtrxreset_i(gt0_gtrxreset_i),
        .gt0_gttxreset_i(gt0_gttxreset_i),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt0_rxbufreset_in(gt0_rxbufreset_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxbyteisaligned_out(gt0_rxbyteisaligned_out),
        .gt0_rxbyterealign_out(gt0_rxbyterealign_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdfeagcovrden_in(gt0_rxdfeagcovrden_in),
        .gt0_rxdfelfhold_i(gt0_rxdfelfhold_i),
        .gt0_rxdfelpmreset_in(gt0_rxdfelpmreset_in),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmen_in(gt0_rxlpmen_in),
        .gt0_rxmonitorout_out(gt0_rxmonitorout_out),
        .gt0_rxmonitorsel_in(gt0_rxmonitorsel_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxratedone_out(gt0_rxratedone_out),
        .gt0_rxuserrdy_t(gt0_rxuserrdy_t),
        .gt0_txbufstatus_out(gt0_txbufstatus_out),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gt0_txuserrdy_t(gt0_txuserrdy_t),
        .gtrefclk(gtrefclk),
        .independent_clock_bufg(independent_clock_bufg),
        .p_3_out(p_3_out),
        .p_3_out_0(p_3_out_0),
        .p_3_out_1(p_3_out_1),
        .p_3_out_2(p_3_out_2),
        .reset(reset),
        .rxdata(rxdata),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk(rxuserclk),
        .rxuserclk2(rxuserclk2),
        .txdata(txdata),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .userclk(userclk));
endmodule

module quadsgmiiquadsgmii_block
   (reset,
    gtrefclk,
    txp,
    txn,
    rxp,
    rxn,
    txoutclk,
    rxoutclk,
    resetdone,
    userclk,
    userclk2,
    rxuserclk,
    rxuserclk2,
    independent_clock_bufg,
    pma_reset,
    mmcm_locked,
    sgmii_clk_en_ch0,
    gmii_txd_ch0,
    gmii_tx_en_ch0,
    gmii_tx_er_ch0,
    gmii_rxd_ch0,
    gmii_rx_dv_ch0,
    gmii_rx_er_ch0,
    mdc_ch0,
    mdio_i_ch0,
    mdio_o_ch0,
    mdio_t_ch0,
    phyad_ch0,
    an_interrupt_ch0,
    link_timer_value_ch0,
    speed_is_10_100_ch0,
    speed_is_100_ch0,
    status_vector_ch0,
    sgmii_clk_en_ch1,
    gmii_txd_ch1,
    gmii_tx_en_ch1,
    gmii_tx_er_ch1,
    gmii_rxd_ch1,
    gmii_rx_dv_ch1,
    gmii_rx_er_ch1,
    mdc_ch1,
    mdio_i_ch1,
    mdio_o_ch1,
    mdio_t_ch1,
    phyad_ch1,
    an_interrupt_ch1,
    link_timer_value_ch1,
    speed_is_10_100_ch1,
    speed_is_100_ch1,
    status_vector_ch1,
    sgmii_clk_en_ch2,
    gmii_txd_ch2,
    gmii_tx_en_ch2,
    gmii_tx_er_ch2,
    gmii_rxd_ch2,
    gmii_rx_dv_ch2,
    gmii_rx_er_ch2,
    mdc_ch2,
    mdio_i_ch2,
    mdio_o_ch2,
    mdio_t_ch2,
    phyad_ch2,
    an_interrupt_ch2,
    link_timer_value_ch2,
    speed_is_10_100_ch2,
    speed_is_100_ch2,
    status_vector_ch2,
    sgmii_clk_en_ch3,
    gmii_txd_ch3,
    gmii_tx_en_ch3,
    gmii_tx_er_ch3,
    gmii_rxd_ch3,
    gmii_rx_dv_ch3,
    gmii_rx_er_ch3,
    mdc_ch3,
    mdio_i_ch3,
    mdio_o_ch3,
    mdio_t_ch3,
    phyad_ch3,
    an_interrupt_ch3,
    link_timer_value_ch3,
    speed_is_10_100_ch3,
    speed_is_100_ch3,
    status_vector_ch3,
    gt0_gttxreset_in,
    gt0_gtrxreset_in,
    gt0_txpmareset_in,
    gt0_txpcsreset_in,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    gt0_txpolarity_in,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    gt0_rxpolarity_in,
    gt0_rxdfelpmreset_in,
    gt0_rxdfeagcovrden_in,
    gt0_rxlpmen_in,
    gt0_txprbssel_in,
    gt0_txprbsforceerr_in,
    gt0_rxprbscntreset_in,
    gt0_rxprbserr_out,
    gt0_rxprbssel_in,
    gt0_loopback_in,
    gt0_txresetdone_out,
    gt0_rxresetdone_out,
    gt0_rxpmareset_in,
    gt0_rxpcsreset_in,
    gt0_txbufstatus_out,
    gt0_rxbufstatus_out,
    gt0_rxbufreset_in,
    gt0_cplllock_out,
    gt0_rxpmaresetdone_out,
    gt0_drpaddr_in,
    gt0_drpclk_in,
    gt0_drpdi_in,
    gt0_drpdo_out,
    gt0_drpen_in,
    gt0_drprdy_out,
    gt0_drpwe_in,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    gt0_eyescanreset_in,
    gt0_eyescandataerror_out,
    gt0_eyescantrigger_in,
    gt0_rxrate_in,
    gt0_rxcdrhold_in,
    gt0_rxratedone_out,
    gt0_dmonitorout_out,
    gt0_rxmonitorout_out,
    gt0_rxmonitorsel_in,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    signal_detect);
  input reset;
  input gtrefclk;
  output txp;
  output txn;
  input rxp;
  input rxn;
  output txoutclk;
  output rxoutclk;
  output resetdone;
  input userclk;
  input userclk2;
  input rxuserclk;
  input rxuserclk2;
  input independent_clock_bufg;
  input pma_reset;
  input mmcm_locked;
  output sgmii_clk_en_ch0;
  input [7:0]gmii_txd_ch0;
  input gmii_tx_en_ch0;
  input gmii_tx_er_ch0;
  output [7:0]gmii_rxd_ch0;
  output gmii_rx_dv_ch0;
  output gmii_rx_er_ch0;
  input mdc_ch0;
  input mdio_i_ch0;
  output mdio_o_ch0;
  output mdio_t_ch0;
  input [4:0]phyad_ch0;
  output an_interrupt_ch0;
  input [8:0]link_timer_value_ch0;
  input speed_is_10_100_ch0;
  input speed_is_100_ch0;
  output [15:0]status_vector_ch0;
  output sgmii_clk_en_ch1;
  input [7:0]gmii_txd_ch1;
  input gmii_tx_en_ch1;
  input gmii_tx_er_ch1;
  output [7:0]gmii_rxd_ch1;
  output gmii_rx_dv_ch1;
  output gmii_rx_er_ch1;
  input mdc_ch1;
  input mdio_i_ch1;
  output mdio_o_ch1;
  output mdio_t_ch1;
  input [4:0]phyad_ch1;
  output an_interrupt_ch1;
  input [8:0]link_timer_value_ch1;
  input speed_is_10_100_ch1;
  input speed_is_100_ch1;
  output [15:0]status_vector_ch1;
  output sgmii_clk_en_ch2;
  input [7:0]gmii_txd_ch2;
  input gmii_tx_en_ch2;
  input gmii_tx_er_ch2;
  output [7:0]gmii_rxd_ch2;
  output gmii_rx_dv_ch2;
  output gmii_rx_er_ch2;
  input mdc_ch2;
  input mdio_i_ch2;
  output mdio_o_ch2;
  output mdio_t_ch2;
  input [4:0]phyad_ch2;
  output an_interrupt_ch2;
  input [8:0]link_timer_value_ch2;
  input speed_is_10_100_ch2;
  input speed_is_100_ch2;
  output [15:0]status_vector_ch2;
  output sgmii_clk_en_ch3;
  input [7:0]gmii_txd_ch3;
  input gmii_tx_en_ch3;
  input gmii_tx_er_ch3;
  output [7:0]gmii_rxd_ch3;
  output gmii_rx_dv_ch3;
  output gmii_rx_er_ch3;
  input mdc_ch3;
  input mdio_i_ch3;
  output mdio_o_ch3;
  output mdio_t_ch3;
  input [4:0]phyad_ch3;
  output an_interrupt_ch3;
  input [8:0]link_timer_value_ch3;
  input speed_is_10_100_ch3;
  input speed_is_100_ch3;
  output [15:0]status_vector_ch3;
  input gt0_gttxreset_in;
  input gt0_gtrxreset_in;
  input gt0_txpmareset_in;
  input gt0_txpcsreset_in;
  output [3:0]gt0_rxchariscomma_out;
  output [3:0]gt0_rxcharisk_out;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  input gt0_txpolarity_in;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input gt0_rxpolarity_in;
  input gt0_rxdfelpmreset_in;
  input gt0_rxdfeagcovrden_in;
  input gt0_rxlpmen_in;
  input [2:0]gt0_txprbssel_in;
  input gt0_txprbsforceerr_in;
  input gt0_rxprbscntreset_in;
  output gt0_rxprbserr_out;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_loopback_in;
  output gt0_txresetdone_out;
  output gt0_rxresetdone_out;
  input gt0_rxpmareset_in;
  input gt0_rxpcsreset_in;
  output [1:0]gt0_txbufstatus_out;
  output [2:0]gt0_rxbufstatus_out;
  input gt0_rxbufreset_in;
  output gt0_cplllock_out;
  output gt0_rxpmaresetdone_out;
  input [8:0]gt0_drpaddr_in;
  input gt0_drpclk_in;
  input [15:0]gt0_drpdi_in;
  output [15:0]gt0_drpdo_out;
  input gt0_drpen_in;
  output gt0_drprdy_out;
  input gt0_drpwe_in;
  output [3:0]gt0_rxdisperr_out;
  output [3:0]gt0_rxnotintable_out;
  input gt0_eyescanreset_in;
  output gt0_eyescandataerror_out;
  input gt0_eyescantrigger_in;
  input [2:0]gt0_rxrate_in;
  input gt0_rxcdrhold_in;
  output gt0_rxratedone_out;
  output [16:0]gt0_dmonitorout_out;
  output [6:0]gt0_rxmonitorout_out;
  input [1:0]gt0_rxmonitorsel_in;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input signal_detect;

  wire \<const0> ;
  wire \<const1> ;
  wire an_interrupt_ch0;
  wire an_interrupt_ch1;
  wire an_interrupt_ch2;
  wire an_interrupt_ch3;
  wire data_valid;
  wire enablealign;
  wire gmii_rx_dv_ch0;
  wire gmii_rx_dv_ch0_int;
  wire gmii_rx_dv_ch1;
  wire gmii_rx_dv_ch1_int;
  wire gmii_rx_dv_ch2;
  wire gmii_rx_dv_ch2_int;
  wire gmii_rx_dv_ch3;
  wire gmii_rx_dv_ch3_int;
  wire gmii_rx_er_ch0;
  wire gmii_rx_er_ch0_int;
  wire gmii_rx_er_ch1;
  wire gmii_rx_er_ch1_int;
  wire gmii_rx_er_ch2;
  wire gmii_rx_er_ch2_int;
  wire gmii_rx_er_ch3;
  wire gmii_rx_er_ch3_int;
  wire [7:0]gmii_rxd_ch0;
  wire [7:0]gmii_rxd_ch0_int;
  wire [7:0]gmii_rxd_ch1;
  wire [7:0]gmii_rxd_ch1_int;
  wire [7:0]gmii_rxd_ch2;
  wire [7:0]gmii_rxd_ch2_int;
  wire [7:0]gmii_rxd_ch3;
  wire [7:0]gmii_rxd_ch3_int;
  wire gmii_tx_en_ch0;
  wire gmii_tx_en_ch0_int;
  wire gmii_tx_en_ch0_int1;
  wire gmii_tx_en_ch1;
  wire gmii_tx_en_ch1_int;
  wire gmii_tx_en_ch1_int1;
  wire gmii_tx_en_ch2;
  wire gmii_tx_en_ch2_int;
  wire gmii_tx_en_ch2_int1;
  wire gmii_tx_en_ch3;
  wire gmii_tx_en_ch3_int;
  wire gmii_tx_en_ch3_int1;
  wire gmii_tx_er_ch0;
  wire gmii_tx_er_ch0_int;
  wire gmii_tx_er_ch0_int1;
  wire gmii_tx_er_ch1;
  wire gmii_tx_er_ch1_int;
  wire gmii_tx_er_ch1_int1;
  wire gmii_tx_er_ch2;
  wire gmii_tx_er_ch2_int;
  wire gmii_tx_er_ch2_int1;
  wire gmii_tx_er_ch3;
  wire gmii_tx_er_ch3_int;
  wire gmii_tx_er_ch3_int1;
  wire [7:0]gmii_txd_ch0;
  wire [7:0]gmii_txd_ch0_int;
  wire [7:0]gmii_txd_ch0_int1;
  wire [7:0]gmii_txd_ch1;
  wire [7:0]gmii_txd_ch1_int;
  wire [7:0]gmii_txd_ch1_int1;
  wire [7:0]gmii_txd_ch2;
  wire [7:0]gmii_txd_ch2_int;
  wire [7:0]gmii_txd_ch2_int1;
  wire [7:0]gmii_txd_ch3;
  wire [7:0]gmii_txd_ch3_int;
  wire [7:0]gmii_txd_ch3_int1;
  wire [7:0]\^gt0_dmonitorout_out ;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gtrxreset_in;
  wire gt0_gttxreset_in;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire gt0_rxcommadet_out;
  wire gt0_rxdfeagcovrden_in;
  wire gt0_rxdfelpmreset_in;
  wire [3:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [3:0]gt0_rxnotintable_out;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire gt0_rxresetdone_out;
  wire [1:0]gt0_txbufstatus_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txpcsreset_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txresetdone_out;
  wire gtrefclk;
  wire independent_clock_bufg;
  wire [8:0]link_timer_value_ch0;
  wire [8:0]link_timer_value_ch1;
  wire [8:0]link_timer_value_ch2;
  wire [8:0]link_timer_value_ch3;
  wire mdc_ch0;
  wire mdc_ch1;
  wire mdc_ch2;
  wire mdc_ch3;
  wire mdio_i_ch0;
  wire mdio_i_ch1;
  wire mdio_i_ch2;
  wire mdio_i_ch3;
  wire mdio_o_ch0;
  wire mdio_o_ch1;
  wire mdio_o_ch2;
  wire mdio_o_ch3;
  wire mdio_t_ch0;
  wire mdio_t_ch1;
  wire mdio_t_ch2;
  wire mdio_t_ch3;
  wire mgt_rx_reset;
  wire mgt_tx_reset;
  wire n_0_qsgmii_logic;
  wire n_116_quadsgmii_core;
  wire n_11_qsgmii_logic;
  wire n_18_quadsgmii_core;
  wire n_22_qsgmii_logic;
  wire n_33_qsgmii_logic;
  wire n_38_quadsgmii_core;
  wire n_58_quadsgmii_core;
  wire n_78_quadsgmii_core;
  wire [4:0]phyad_ch0;
  wire [4:0]phyad_ch1;
  wire [4:0]phyad_ch2;
  wire [4:0]phyad_ch3;
  wire pma_reset;
  wire powerdown;
  wire \qsgmii_inst/GPCS_PMA_GEN_i0/SOFT_RESET ;
  wire \qsgmii_inst/GPCS_PMA_GEN_i0/p_3_out ;
  wire \qsgmii_inst/GPCS_PMA_GEN_i1/SOFT_RESET ;
  wire \qsgmii_inst/GPCS_PMA_GEN_i1/p_3_out ;
  wire \qsgmii_inst/GPCS_PMA_GEN_i2/SOFT_RESET ;
  wire \qsgmii_inst/GPCS_PMA_GEN_i2/p_3_out ;
  wire \qsgmii_inst/GPCS_PMA_GEN_i3/SOFT_RESET ;
  wire \qsgmii_inst/GPCS_PMA_GEN_i3/p_3_out ;
  wire reset;
  wire resetdone;
  wire [31:0]rxdata;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk;
  wire rxuserclk2;
  wire sgmii_clk_en_ch0;
  wire sgmii_clk_en_ch0_int;
  wire sgmii_clk_en_ch1;
  wire sgmii_clk_en_ch1_int;
  wire sgmii_clk_en_ch2;
  wire sgmii_clk_en_ch2_int;
  wire sgmii_clk_en_ch3;
  wire sgmii_clk_en_ch3_int;
  wire signal_detect;
  wire speed_is_100_ch0;
  wire speed_is_100_ch1;
  wire speed_is_100_ch2;
  wire speed_is_100_ch3;
  wire speed_is_10_100_ch0;
  wire speed_is_10_100_ch1;
  wire speed_is_10_100_ch2;
  wire speed_is_10_100_ch3;
  wire [13:0]\^status_vector_ch0 ;
  wire [13:0]\^status_vector_ch1 ;
  wire [13:0]\^status_vector_ch2 ;
  wire [13:0]\^status_vector_ch3 ;
  wire txbuferr;
  wire [3:0]txcharisk;
  wire [31:0]txdata;
  wire txn;
  wire txoutclk;
  wire txp;
  wire userclk;
  wire userclk2;

  assign gt0_cplllock_out = resetdone;
  assign gt0_dmonitorout_out[16] = \<const0> ;
  assign gt0_dmonitorout_out[15] = \<const0> ;
  assign gt0_dmonitorout_out[14] = \<const0> ;
  assign gt0_dmonitorout_out[13] = \<const0> ;
  assign gt0_dmonitorout_out[12] = \<const0> ;
  assign gt0_dmonitorout_out[11] = \<const0> ;
  assign gt0_dmonitorout_out[10] = \<const0> ;
  assign gt0_dmonitorout_out[9] = \<const0> ;
  assign gt0_dmonitorout_out[8] = \<const0> ;
  assign gt0_dmonitorout_out[7:0] = \^gt0_dmonitorout_out [7:0];
  assign gt0_rxpmaresetdone_out = \<const1> ;
  assign status_vector_ch0[15] = \<const0> ;
  assign status_vector_ch0[14] = \<const0> ;
  assign status_vector_ch0[13:9] = \^status_vector_ch0 [13:9];
  assign status_vector_ch0[8] = \<const0> ;
  assign status_vector_ch0[7:0] = \^status_vector_ch0 [7:0];
  assign status_vector_ch1[15] = \<const0> ;
  assign status_vector_ch1[14] = \<const0> ;
  assign status_vector_ch1[13:9] = \^status_vector_ch1 [13:9];
  assign status_vector_ch1[8] = \<const0> ;
  assign status_vector_ch1[7:0] = \^status_vector_ch1 [7:0];
  assign status_vector_ch2[15] = \<const0> ;
  assign status_vector_ch2[14] = \<const0> ;
  assign status_vector_ch2[13:9] = \^status_vector_ch2 [13:9];
  assign status_vector_ch2[8] = \<const0> ;
  assign status_vector_ch2[7:0] = \^status_vector_ch2 [7:0];
  assign status_vector_ch3[15] = \<const0> ;
  assign status_vector_ch3[14] = \<const0> ;
  assign status_vector_ch3[13:9] = \^status_vector_ch3 [13:9];
  assign status_vector_ch3[8] = \<const0> ;
  assign status_vector_ch3[7:0] = \^status_vector_ch3 [7:0];
GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
FDRE gmii_rx_dv_ch0_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rx_dv_ch0_int),
        .Q(gmii_rx_dv_ch0),
        .R(\<const0> ));
FDRE gmii_rx_dv_ch1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rx_dv_ch1_int),
        .Q(gmii_rx_dv_ch1),
        .R(\<const0> ));
FDRE gmii_rx_dv_ch2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rx_dv_ch2_int),
        .Q(gmii_rx_dv_ch2),
        .R(\<const0> ));
FDRE gmii_rx_dv_ch3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rx_dv_ch3_int),
        .Q(gmii_rx_dv_ch3),
        .R(\<const0> ));
FDRE gmii_rx_er_ch0_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rx_er_ch0_int),
        .Q(gmii_rx_er_ch0),
        .R(\<const0> ));
FDRE gmii_rx_er_ch1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rx_er_ch1_int),
        .Q(gmii_rx_er_ch1),
        .R(\<const0> ));
FDRE gmii_rx_er_ch2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rx_er_ch2_int),
        .Q(gmii_rx_er_ch2),
        .R(\<const0> ));
FDRE gmii_rx_er_ch3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rx_er_ch3_int),
        .Q(gmii_rx_er_ch3),
        .R(\<const0> ));
FDRE \gmii_rxd_ch0_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch0_int[0]),
        .Q(gmii_rxd_ch0[0]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch0_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch0_int[1]),
        .Q(gmii_rxd_ch0[1]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch0_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch0_int[2]),
        .Q(gmii_rxd_ch0[2]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch0_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch0_int[3]),
        .Q(gmii_rxd_ch0[3]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch0_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch0_int[4]),
        .Q(gmii_rxd_ch0[4]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch0_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch0_int[5]),
        .Q(gmii_rxd_ch0[5]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch0_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch0_int[6]),
        .Q(gmii_rxd_ch0[6]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch0_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch0_int[7]),
        .Q(gmii_rxd_ch0[7]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch1_int[0]),
        .Q(gmii_rxd_ch1[0]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch1_int[1]),
        .Q(gmii_rxd_ch1[1]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch1_int[2]),
        .Q(gmii_rxd_ch1[2]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch1_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch1_int[3]),
        .Q(gmii_rxd_ch1[3]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch1_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch1_int[4]),
        .Q(gmii_rxd_ch1[4]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch1_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch1_int[5]),
        .Q(gmii_rxd_ch1[5]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch1_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch1_int[6]),
        .Q(gmii_rxd_ch1[6]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch1_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch1_int[7]),
        .Q(gmii_rxd_ch1[7]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch2_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch2_int[0]),
        .Q(gmii_rxd_ch2[0]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch2_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch2_int[1]),
        .Q(gmii_rxd_ch2[1]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch2_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch2_int[2]),
        .Q(gmii_rxd_ch2[2]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch2_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch2_int[3]),
        .Q(gmii_rxd_ch2[3]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch2_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch2_int[4]),
        .Q(gmii_rxd_ch2[4]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch2_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch2_int[5]),
        .Q(gmii_rxd_ch2[5]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch2_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch2_int[6]),
        .Q(gmii_rxd_ch2[6]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch2_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch2_int[7]),
        .Q(gmii_rxd_ch2[7]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch3_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch3_int[0]),
        .Q(gmii_rxd_ch3[0]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch3_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch3_int[1]),
        .Q(gmii_rxd_ch3[1]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch3_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch3_int[2]),
        .Q(gmii_rxd_ch3[2]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch3_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch3_int[3]),
        .Q(gmii_rxd_ch3[3]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch3_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch3_int[4]),
        .Q(gmii_rxd_ch3[4]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch3_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch3_int[5]),
        .Q(gmii_rxd_ch3[5]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch3_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch3_int[6]),
        .Q(gmii_rxd_ch3[6]),
        .R(\<const0> ));
FDRE \gmii_rxd_ch3_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_rxd_ch3_int[7]),
        .Q(gmii_rxd_ch3[7]),
        .R(\<const0> ));
FDRE gmii_tx_en_ch0_int1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_en_ch0),
        .Q(gmii_tx_en_ch0_int1),
        .R(\<const0> ));
FDRE gmii_tx_en_ch1_int1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_en_ch1),
        .Q(gmii_tx_en_ch1_int1),
        .R(\<const0> ));
FDRE gmii_tx_en_ch2_int1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_en_ch2),
        .Q(gmii_tx_en_ch2_int1),
        .R(\<const0> ));
FDRE gmii_tx_en_ch3_int1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_en_ch3),
        .Q(gmii_tx_en_ch3_int1),
        .R(\<const0> ));
FDRE gmii_tx_er_ch0_int1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_er_ch0),
        .Q(gmii_tx_er_ch0_int1),
        .R(\<const0> ));
FDRE gmii_tx_er_ch1_int1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_er_ch1),
        .Q(gmii_tx_er_ch1_int1),
        .R(\<const0> ));
FDRE gmii_tx_er_ch2_int1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_er_ch2),
        .Q(gmii_tx_er_ch2_int1),
        .R(\<const0> ));
FDRE gmii_tx_er_ch3_int1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_tx_er_ch3),
        .Q(gmii_tx_er_ch3_int1),
        .R(\<const0> ));
FDRE \gmii_txd_ch0_int1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch0[0]),
        .Q(gmii_txd_ch0_int1[0]),
        .R(\<const0> ));
FDRE \gmii_txd_ch0_int1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch0[1]),
        .Q(gmii_txd_ch0_int1[1]),
        .R(\<const0> ));
FDRE \gmii_txd_ch0_int1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch0[2]),
        .Q(gmii_txd_ch0_int1[2]),
        .R(\<const0> ));
FDRE \gmii_txd_ch0_int1_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch0[3]),
        .Q(gmii_txd_ch0_int1[3]),
        .R(\<const0> ));
FDRE \gmii_txd_ch0_int1_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch0[4]),
        .Q(gmii_txd_ch0_int1[4]),
        .R(\<const0> ));
FDRE \gmii_txd_ch0_int1_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch0[5]),
        .Q(gmii_txd_ch0_int1[5]),
        .R(\<const0> ));
FDRE \gmii_txd_ch0_int1_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch0[6]),
        .Q(gmii_txd_ch0_int1[6]),
        .R(\<const0> ));
FDRE \gmii_txd_ch0_int1_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch0[7]),
        .Q(gmii_txd_ch0_int1[7]),
        .R(\<const0> ));
FDRE \gmii_txd_ch1_int1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch1[0]),
        .Q(gmii_txd_ch1_int1[0]),
        .R(\<const0> ));
FDRE \gmii_txd_ch1_int1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch1[1]),
        .Q(gmii_txd_ch1_int1[1]),
        .R(\<const0> ));
FDRE \gmii_txd_ch1_int1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch1[2]),
        .Q(gmii_txd_ch1_int1[2]),
        .R(\<const0> ));
FDRE \gmii_txd_ch1_int1_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch1[3]),
        .Q(gmii_txd_ch1_int1[3]),
        .R(\<const0> ));
FDRE \gmii_txd_ch1_int1_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch1[4]),
        .Q(gmii_txd_ch1_int1[4]),
        .R(\<const0> ));
FDRE \gmii_txd_ch1_int1_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch1[5]),
        .Q(gmii_txd_ch1_int1[5]),
        .R(\<const0> ));
FDRE \gmii_txd_ch1_int1_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch1[6]),
        .Q(gmii_txd_ch1_int1[6]),
        .R(\<const0> ));
FDRE \gmii_txd_ch1_int1_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch1[7]),
        .Q(gmii_txd_ch1_int1[7]),
        .R(\<const0> ));
FDRE \gmii_txd_ch2_int1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch2[0]),
        .Q(gmii_txd_ch2_int1[0]),
        .R(\<const0> ));
FDRE \gmii_txd_ch2_int1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch2[1]),
        .Q(gmii_txd_ch2_int1[1]),
        .R(\<const0> ));
FDRE \gmii_txd_ch2_int1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch2[2]),
        .Q(gmii_txd_ch2_int1[2]),
        .R(\<const0> ));
FDRE \gmii_txd_ch2_int1_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch2[3]),
        .Q(gmii_txd_ch2_int1[3]),
        .R(\<const0> ));
FDRE \gmii_txd_ch2_int1_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch2[4]),
        .Q(gmii_txd_ch2_int1[4]),
        .R(\<const0> ));
FDRE \gmii_txd_ch2_int1_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch2[5]),
        .Q(gmii_txd_ch2_int1[5]),
        .R(\<const0> ));
FDRE \gmii_txd_ch2_int1_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch2[6]),
        .Q(gmii_txd_ch2_int1[6]),
        .R(\<const0> ));
FDRE \gmii_txd_ch2_int1_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch2[7]),
        .Q(gmii_txd_ch2_int1[7]),
        .R(\<const0> ));
FDRE \gmii_txd_ch3_int1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch3[0]),
        .Q(gmii_txd_ch3_int1[0]),
        .R(\<const0> ));
FDRE \gmii_txd_ch3_int1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch3[1]),
        .Q(gmii_txd_ch3_int1[1]),
        .R(\<const0> ));
FDRE \gmii_txd_ch3_int1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch3[2]),
        .Q(gmii_txd_ch3_int1[2]),
        .R(\<const0> ));
FDRE \gmii_txd_ch3_int1_reg[3] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch3[3]),
        .Q(gmii_txd_ch3_int1[3]),
        .R(\<const0> ));
FDRE \gmii_txd_ch3_int1_reg[4] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch3[4]),
        .Q(gmii_txd_ch3_int1[4]),
        .R(\<const0> ));
FDRE \gmii_txd_ch3_int1_reg[5] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch3[5]),
        .Q(gmii_txd_ch3_int1[5]),
        .R(\<const0> ));
FDRE \gmii_txd_ch3_int1_reg[6] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch3[6]),
        .Q(gmii_txd_ch3_int1[6]),
        .R(\<const0> ));
FDRE \gmii_txd_ch3_int1_reg[7] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(gmii_txd_ch3[7]),
        .Q(gmii_txd_ch3_int1[7]),
        .R(\<const0> ));
quadsgmiiquadsgmii_qsgmii_adapt qsgmii_logic
       (.I1(n_18_quadsgmii_core),
        .I2(n_38_quadsgmii_core),
        .I3(n_58_quadsgmii_core),
        .I4(n_78_quadsgmii_core),
        .I5(gmii_txd_ch1_int1),
        .I6(gmii_txd_ch2_int1),
        .I7(gmii_txd_ch3_int1),
        .O1(n_0_qsgmii_logic),
        .O2(n_11_qsgmii_logic),
        .O3(n_22_qsgmii_logic),
        .O4(n_33_qsgmii_logic),
        .Q(gmii_txd_ch0_int1),
        .gmii_tx_en_ch0_int1(gmii_tx_en_ch0_int1),
        .gmii_tx_en_ch1_int1(gmii_tx_en_ch1_int1),
        .gmii_tx_en_ch2_int1(gmii_tx_en_ch2_int1),
        .gmii_tx_en_ch3_int1(gmii_tx_en_ch3_int1),
        .gmii_tx_en_out_ch0(gmii_tx_en_ch0_int),
        .gmii_tx_en_out_ch1(gmii_tx_en_ch1_int),
        .gmii_tx_en_out_ch2(gmii_tx_en_ch2_int),
        .gmii_tx_en_out_ch3(gmii_tx_en_ch3_int),
        .gmii_tx_er_ch0_int1(gmii_tx_er_ch0_int1),
        .gmii_tx_er_ch1_int1(gmii_tx_er_ch1_int1),
        .gmii_tx_er_ch2_int1(gmii_tx_er_ch2_int1),
        .gmii_tx_er_ch3_int1(gmii_tx_er_ch3_int1),
        .gmii_tx_er_out_ch0(gmii_tx_er_ch0_int),
        .gmii_tx_er_out_ch1(gmii_tx_er_ch1_int),
        .gmii_tx_er_out_ch2(gmii_tx_er_ch2_int),
        .gmii_tx_er_out_ch3(gmii_tx_er_ch3_int),
        .gmii_txd_out_ch0(gmii_txd_ch0_int),
        .gmii_txd_out_ch1(gmii_txd_ch1_int),
        .gmii_txd_out_ch2(gmii_txd_ch2_int),
        .gmii_txd_out_ch3(gmii_txd_ch3_int),
        .reset(reset),
        .sgmii_clk_en_ch0(sgmii_clk_en_ch0_int),
        .sgmii_clk_en_ch1(sgmii_clk_en_ch1_int),
        .sgmii_clk_en_ch2(sgmii_clk_en_ch2_int),
        .sgmii_clk_en_ch3(sgmii_clk_en_ch3_int),
        .speed_is_100_ch0(speed_is_100_ch0),
        .speed_is_100_ch1(speed_is_100_ch1),
        .speed_is_100_ch2(speed_is_100_ch2),
        .speed_is_100_ch3(speed_is_100_ch3),
        .speed_is_10_100_ch0(speed_is_10_100_ch0),
        .speed_is_10_100_ch1(speed_is_10_100_ch1),
        .speed_is_10_100_ch2(speed_is_10_100_ch2),
        .speed_is_10_100_ch3(speed_is_10_100_ch3),
        .userclk2(userclk2));
quadsgmiiquadsgmii_v3_1 quadsgmii_core
       (.ENABLEALIGN(enablealign),
        .I1(n_0_qsgmii_logic),
        .I2(n_11_qsgmii_logic),
        .I3(n_22_qsgmii_logic),
        .I4(n_33_qsgmii_logic),
        .I5(gmii_txd_ch0_int),
        .I6(gmii_txd_ch1_int),
        .I7(gmii_txd_ch2_int),
        .I8(gmii_txd_ch3_int),
        .O1(n_18_quadsgmii_core),
        .O2(n_38_quadsgmii_core),
        .O3(n_58_quadsgmii_core),
        .O4(n_78_quadsgmii_core),
        .O5(gmii_rxd_ch1_int),
        .O6(gmii_rxd_ch2_int),
        .O7(gmii_rxd_ch3_int),
        .Q(gmii_rxd_ch0_int),
        .SOFT_RESET(\qsgmii_inst/GPCS_PMA_GEN_i0/SOFT_RESET ),
        .SOFT_RESET_0(\qsgmii_inst/GPCS_PMA_GEN_i1/SOFT_RESET ),
        .SOFT_RESET_1(\qsgmii_inst/GPCS_PMA_GEN_i2/SOFT_RESET ),
        .SOFT_RESET_2(\qsgmii_inst/GPCS_PMA_GEN_i3/SOFT_RESET ),
        .TXCHARISK(txcharisk),
        .TXPD({powerdown,n_116_quadsgmii_core}),
        .an_interrupt_ch0(an_interrupt_ch0),
        .an_interrupt_ch1(an_interrupt_ch1),
        .an_interrupt_ch2(an_interrupt_ch2),
        .an_interrupt_ch3(an_interrupt_ch3),
        .data_valid(data_valid),
        .gmii_rx_dv_ch0_int(gmii_rx_dv_ch0_int),
        .gmii_rx_dv_ch1_int(gmii_rx_dv_ch1_int),
        .gmii_rx_dv_ch2_int(gmii_rx_dv_ch2_int),
        .gmii_rx_dv_ch3_int(gmii_rx_dv_ch3_int),
        .gmii_rx_er_ch0_int(gmii_rx_er_ch0_int),
        .gmii_rx_er_ch1_int(gmii_rx_er_ch1_int),
        .gmii_rx_er_ch2_int(gmii_rx_er_ch2_int),
        .gmii_rx_er_ch3_int(gmii_rx_er_ch3_int),
        .gmii_tx_en_out_ch0(gmii_tx_en_ch0_int),
        .gmii_tx_en_out_ch1(gmii_tx_en_ch1_int),
        .gmii_tx_en_out_ch2(gmii_tx_en_ch2_int),
        .gmii_tx_en_out_ch3(gmii_tx_en_ch3_int),
        .gmii_tx_er_out_ch0(gmii_tx_er_ch0_int),
        .gmii_tx_er_out_ch1(gmii_tx_er_ch1_int),
        .gmii_tx_er_out_ch2(gmii_tx_er_ch2_int),
        .gmii_tx_er_out_ch3(gmii_tx_er_ch3_int),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .link_timer_value_ch0(link_timer_value_ch0),
        .link_timer_value_ch1(link_timer_value_ch1),
        .link_timer_value_ch2(link_timer_value_ch2),
        .link_timer_value_ch3(link_timer_value_ch3),
        .mdc_ch0(mdc_ch0),
        .mdc_ch1(mdc_ch1),
        .mdc_ch2(mdc_ch2),
        .mdc_ch3(mdc_ch3),
        .mdio_i_ch0(mdio_i_ch0),
        .mdio_i_ch1(mdio_i_ch1),
        .mdio_i_ch2(mdio_i_ch2),
        .mdio_i_ch3(mdio_i_ch3),
        .mdio_o_ch0(mdio_o_ch0),
        .mdio_o_ch1(mdio_o_ch1),
        .mdio_o_ch2(mdio_o_ch2),
        .mdio_o_ch3(mdio_o_ch3),
        .mdio_t_ch0(mdio_t_ch0),
        .mdio_t_ch1(mdio_t_ch1),
        .mdio_t_ch2(mdio_t_ch2),
        .mdio_t_ch3(mdio_t_ch3),
        .mgt_rx_reset(mgt_rx_reset),
        .mgt_tx_reset(mgt_tx_reset),
        .p_3_out(\qsgmii_inst/GPCS_PMA_GEN_i0/p_3_out ),
        .p_3_out_3(\qsgmii_inst/GPCS_PMA_GEN_i1/p_3_out ),
        .p_3_out_4(\qsgmii_inst/GPCS_PMA_GEN_i2/p_3_out ),
        .p_3_out_5(\qsgmii_inst/GPCS_PMA_GEN_i3/p_3_out ),
        .phyad_ch0(phyad_ch0),
        .phyad_ch1(phyad_ch1),
        .phyad_ch2(phyad_ch2),
        .phyad_ch3(phyad_ch3),
        .rxdata(rxdata),
        .rxuserclk2(rxuserclk2),
        .signal_detect(signal_detect),
        .status_vector_ch0({\^status_vector_ch0 [13:9],\^status_vector_ch0 [7:0]}),
        .status_vector_ch1({\^status_vector_ch1 [13:9],\^status_vector_ch1 [7:0]}),
        .status_vector_ch2({\^status_vector_ch2 [13:9],\^status_vector_ch2 [7:0]}),
        .status_vector_ch3({\^status_vector_ch3 [13:9],\^status_vector_ch3 [7:0]}),
        .txbuferr(txbuferr),
        .txdata(txdata),
        .userclk2(userclk2));
FDRE sgmii_clk_en_ch0_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(sgmii_clk_en_ch0_int),
        .Q(sgmii_clk_en_ch0),
        .R(\<const0> ));
FDRE sgmii_clk_en_ch1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(sgmii_clk_en_ch1_int),
        .Q(sgmii_clk_en_ch1),
        .R(\<const0> ));
FDRE sgmii_clk_en_ch2_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(sgmii_clk_en_ch2_int),
        .Q(sgmii_clk_en_ch2),
        .R(\<const0> ));
FDRE sgmii_clk_en_ch3_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(sgmii_clk_en_ch3_int),
        .Q(sgmii_clk_en_ch3),
        .R(\<const0> ));
quadsgmiiquadsgmii_transceiver transceiver_inst
       (.ENABLEALIGN(enablealign),
        .O1(gt0_txresetdone_out),
        .O2(gt0_rxresetdone_out),
        .Q(txcharisk),
        .SOFT_RESET(\qsgmii_inst/GPCS_PMA_GEN_i0/SOFT_RESET ),
        .SOFT_RESET_3(\qsgmii_inst/GPCS_PMA_GEN_i1/SOFT_RESET ),
        .SOFT_RESET_4(\qsgmii_inst/GPCS_PMA_GEN_i2/SOFT_RESET ),
        .SOFT_RESET_5(\qsgmii_inst/GPCS_PMA_GEN_i3/SOFT_RESET ),
        .TXPD({powerdown,n_116_quadsgmii_core}),
        .data_valid(data_valid),
        .gt0_cplllock_out(resetdone),
        .gt0_dmonitorout_out(\^gt0_dmonitorout_out ),
        .gt0_drpaddr_in(gt0_drpaddr_in),
        .gt0_drpclk_in(gt0_drpclk_in),
        .gt0_drpdi_in(gt0_drpdi_in),
        .gt0_drpdo_out(gt0_drpdo_out),
        .gt0_drpen_in(gt0_drpen_in),
        .gt0_drprdy_out(gt0_drprdy_out),
        .gt0_drpwe_in(gt0_drpwe_in),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_gtrxreset_in(gt0_gtrxreset_in),
        .gt0_gttxreset_in(gt0_gttxreset_in),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt0_rxbufreset_in(gt0_rxbufreset_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxbyteisaligned_out(gt0_rxbyteisaligned_out),
        .gt0_rxbyterealign_out(gt0_rxbyterealign_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdfeagcovrden_in(gt0_rxdfeagcovrden_in),
        .gt0_rxdfelpmreset_in(gt0_rxdfelpmreset_in),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmen_in(gt0_rxlpmen_in),
        .gt0_rxmonitorout_out(gt0_rxmonitorout_out),
        .gt0_rxmonitorsel_in(gt0_rxmonitorsel_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxratedone_out(gt0_rxratedone_out),
        .gt0_txbufstatus_out(gt0_txbufstatus_out),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gtrefclk(gtrefclk),
        .independent_clock_bufg(independent_clock_bufg),
        .mgt_rx_reset(mgt_rx_reset),
        .mgt_tx_reset(mgt_tx_reset),
        .p_3_out(\qsgmii_inst/GPCS_PMA_GEN_i0/p_3_out ),
        .p_3_out_0(\qsgmii_inst/GPCS_PMA_GEN_i1/p_3_out ),
        .p_3_out_1(\qsgmii_inst/GPCS_PMA_GEN_i2/p_3_out ),
        .p_3_out_2(\qsgmii_inst/GPCS_PMA_GEN_i3/p_3_out ),
        .pma_reset(pma_reset),
        .reset(reset),
        .rxdata(rxdata),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk(rxuserclk),
        .rxuserclk2(rxuserclk2),
        .txbuferr(txbuferr),
        .txdata(txdata),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .userclk(userclk),
        .userclk2(userclk2));
endmodule

module quadsgmiiquadsgmii_clk_gen
   (E,
    sync_reset,
    userclk2,
    speed_is_100_resync,
    speed_is_10_100_resync);
  output [0:0]E;
  input sync_reset;
  input userclk2;
  input speed_is_100_resync;
  input speed_is_10_100_resync;

  wire \<const1> ;
  wire [0:0]E;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_div10_plse_rise;
  wire clk_en_1_25_fall;
  wire n_1_clk_div1_25;
  wire n_1_clock_div_stg1;
  wire speed_is_100_resync;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

VCC VCC
       (.P(\<const1> ));
FDRE clk1_25_reg_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk1_25),
        .Q(clk1_25_reg),
        .R(sync_reset));
quadsgmiiquadsgmii_johnson_cntr clk_div1_25
       (.O1(n_1_clk_div1_25),
        .clk1_25(clk1_25),
        .clk1_25_reg(clk1_25_reg),
        .clk_div10_plse_rise(clk_div10_plse_rise),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
FDRE clk_en_1_25_fall_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_1_clk_div1_25),
        .Q(clk_en_1_25_fall),
        .R(sync_reset));
quadsgmiiquadsgmii_clock_div clock_div_stg1
       (.O1(n_1_clock_div_stg1),
        .clk_div10_plse_rise(clk_div10_plse_rise),
        .clk_en_1_25_fall(clk_en_1_25_fall),
        .speed_is_100_resync(speed_is_100_resync),
        .speed_is_10_100_resync(speed_is_10_100_resync),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
FDRE sgmii_clk_en_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_1_clock_div_stg1),
        .Q(E),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "quadsgmii_clk_gen" *) 
module quadsgmiiquadsgmii_clk_gen_12
   (E,
    sync_reset,
    userclk2,
    speed_is_100_resync,
    speed_is_10_100_resync);
  output [0:0]E;
  input sync_reset;
  input userclk2;
  input speed_is_100_resync;
  input speed_is_10_100_resync;

  wire \<const1> ;
  wire [0:0]E;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_div10_plse_rise;
  wire clk_en_1_25_fall;
  wire n_1_clk_div1_25;
  wire n_1_clock_div_stg1;
  wire speed_is_100_resync;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

VCC VCC
       (.P(\<const1> ));
FDRE clk1_25_reg_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk1_25),
        .Q(clk1_25_reg),
        .R(sync_reset));
quadsgmiiquadsgmii_johnson_cntr_13 clk_div1_25
       (.O1(n_1_clk_div1_25),
        .clk1_25(clk1_25),
        .clk1_25_reg(clk1_25_reg),
        .clk_div10_plse_rise(clk_div10_plse_rise),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
FDRE clk_en_1_25_fall_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_1_clk_div1_25),
        .Q(clk_en_1_25_fall),
        .R(sync_reset));
quadsgmiiquadsgmii_clock_div_14 clock_div_stg1
       (.O1(n_1_clock_div_stg1),
        .clk_div10_plse_rise(clk_div10_plse_rise),
        .clk_en_1_25_fall(clk_en_1_25_fall),
        .speed_is_100_resync(speed_is_100_resync),
        .speed_is_10_100_resync(speed_is_10_100_resync),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
FDRE sgmii_clk_en_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_1_clock_div_stg1),
        .Q(E),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "quadsgmii_clk_gen" *) 
module quadsgmiiquadsgmii_clk_gen_4
   (E,
    sync_reset,
    userclk2,
    speed_is_100_resync,
    speed_is_10_100_resync);
  output [0:0]E;
  input sync_reset;
  input userclk2;
  input speed_is_100_resync;
  input speed_is_10_100_resync;

  wire \<const1> ;
  wire [0:0]E;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_div10_plse_rise;
  wire clk_en_1_25_fall;
  wire n_1_clk_div1_25;
  wire n_1_clock_div_stg1;
  wire speed_is_100_resync;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

VCC VCC
       (.P(\<const1> ));
FDRE clk1_25_reg_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk1_25),
        .Q(clk1_25_reg),
        .R(sync_reset));
quadsgmiiquadsgmii_johnson_cntr_5 clk_div1_25
       (.O1(n_1_clk_div1_25),
        .clk1_25(clk1_25),
        .clk1_25_reg(clk1_25_reg),
        .clk_div10_plse_rise(clk_div10_plse_rise),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
FDRE clk_en_1_25_fall_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_1_clk_div1_25),
        .Q(clk_en_1_25_fall),
        .R(sync_reset));
quadsgmiiquadsgmii_clock_div_6 clock_div_stg1
       (.O1(n_1_clock_div_stg1),
        .clk_div10_plse_rise(clk_div10_plse_rise),
        .clk_en_1_25_fall(clk_en_1_25_fall),
        .speed_is_100_resync(speed_is_100_resync),
        .speed_is_10_100_resync(speed_is_10_100_resync),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
FDRE sgmii_clk_en_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_1_clock_div_stg1),
        .Q(E),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "quadsgmii_clk_gen" *) 
module quadsgmiiquadsgmii_clk_gen_8
   (E,
    sync_reset,
    userclk2,
    speed_is_100_resync,
    speed_is_10_100_resync);
  output [0:0]E;
  input sync_reset;
  input userclk2;
  input speed_is_100_resync;
  input speed_is_10_100_resync;

  wire \<const1> ;
  wire [0:0]E;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_div10_plse_rise;
  wire clk_en_1_25_fall;
  wire n_1_clk_div1_25;
  wire n_1_clock_div_stg1;
  wire speed_is_100_resync;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

VCC VCC
       (.P(\<const1> ));
FDRE clk1_25_reg_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk1_25),
        .Q(clk1_25_reg),
        .R(sync_reset));
quadsgmiiquadsgmii_johnson_cntr_9 clk_div1_25
       (.O1(n_1_clk_div1_25),
        .clk1_25(clk1_25),
        .clk1_25_reg(clk1_25_reg),
        .clk_div10_plse_rise(clk_div10_plse_rise),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
FDRE clk_en_1_25_fall_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_1_clk_div1_25),
        .Q(clk_en_1_25_fall),
        .R(sync_reset));
quadsgmiiquadsgmii_clock_div_10 clock_div_stg1
       (.O1(n_1_clock_div_stg1),
        .clk_div10_plse_rise(clk_div10_plse_rise),
        .clk_en_1_25_fall(clk_en_1_25_fall),
        .speed_is_100_resync(speed_is_100_resync),
        .speed_is_10_100_resync(speed_is_10_100_resync),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
FDRE sgmii_clk_en_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_1_clock_div_stg1),
        .Q(E),
        .R(sync_reset));
endmodule

module quadsgmiiquadsgmii_clock_div
   (clk_div10_plse_rise,
    O1,
    sync_reset,
    userclk2,
    clk_en_1_25_fall,
    speed_is_100_resync,
    speed_is_10_100_resync);
  output clk_div10_plse_rise;
  output O1;
  input sync_reset;
  input userclk2;
  input clk_en_1_25_fall;
  input speed_is_100_resync;
  input speed_is_10_100_resync;

  wire \<const0> ;
  wire \<const1> ;
  wire O1;
  wire [2:0]clk_counter_neg_stg1;
  wire [2:0]clk_counter_pos_stg1;
  wire clk_div10_plse_fall;
  wire clk_div10_plse_rise;
  wire clk_div10_reg1;
  wire clk_div5_reg1;
  wire clk_en_1_25_fall;
  wire \n_0_clk_counter_pos_stg1[0]_i_1__1 ;
  wire \n_0_clk_counter_pos_stg1[1]_i_1 ;
  wire \n_0_clk_counter_pos_stg1[2]_i_1 ;
  wire n_0_clk_div10_i_1__1;
  wire n_0_clk_div10_plse_fall_i_1__1;
  wire n_0_clk_div10_plse_rise_i_1__1;
  wire n_0_clk_div10_reg;
  wire n_0_clk_div5_pos_i_1__1;
  wire n_0_clk_div5_pos_reg;
  wire speed_is_100_resync;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[0]),
        .Q(clk_counter_neg_stg1[0]),
        .R(\<const0> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[1]),
        .Q(clk_counter_neg_stg1[1]),
        .R(\<const0> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[2]),
        .Q(clk_counter_neg_stg1[2]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair676" *) 
   LUT3 #(
    .INIT(8'h0B)) 
     \clk_counter_pos_stg1[0]_i_1__1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[2]),
        .I2(clk_counter_pos_stg1[0]),
        .O(\n_0_clk_counter_pos_stg1[0]_i_1__1 ));
LUT2 #(
    .INIT(4'h6)) 
     \clk_counter_pos_stg1[1]_i_1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[0]),
        .O(\n_0_clk_counter_pos_stg1[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair676" *) 
   LUT3 #(
    .INIT(8'h68)) 
     \clk_counter_pos_stg1[2]_i_1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[0]),
        .I2(clk_counter_pos_stg1[2]),
        .O(\n_0_clk_counter_pos_stg1[2]_i_1 ));
FDRE \clk_counter_pos_stg1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[0]_i_1__1 ),
        .Q(clk_counter_pos_stg1[0]),
        .R(sync_reset));
FDRE \clk_counter_pos_stg1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[1]_i_1 ),
        .Q(clk_counter_pos_stg1[1]),
        .R(sync_reset));
FDRE \clk_counter_pos_stg1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[2]_i_1 ),
        .Q(clk_counter_pos_stg1[2]),
        .R(sync_reset));
LUT4 #(
    .INIT(16'h009A)) 
     clk_div10_i_1__1
       (.I0(n_0_clk_div10_reg),
        .I1(clk_div5_reg1),
        .I2(n_0_clk_div5_pos_reg),
        .I3(sync_reset),
        .O(n_0_clk_div10_i_1__1));
(* SOFT_HLUTNM = "soft_lutpair677" *) 
   LUT2 #(
    .INIT(4'h2)) 
     clk_div10_plse_fall_i_1__1
       (.I0(clk_div10_reg1),
        .I1(n_0_clk_div10_reg),
        .O(n_0_clk_div10_plse_fall_i_1__1));
FDRE clk_div10_plse_fall_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_plse_fall_i_1__1),
        .Q(clk_div10_plse_fall),
        .R(sync_reset));
(* SOFT_HLUTNM = "soft_lutpair677" *) 
   LUT2 #(
    .INIT(4'h2)) 
     clk_div10_plse_rise_i_1__1
       (.I0(n_0_clk_div10_reg),
        .I1(clk_div10_reg1),
        .O(n_0_clk_div10_plse_rise_i_1__1));
FDRE clk_div10_plse_rise_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_plse_rise_i_1__1),
        .Q(clk_div10_plse_rise),
        .R(sync_reset));
FDRE clk_div10_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_i_1__1),
        .Q(n_0_clk_div10_reg),
        .R(\<const0> ));
FDRE clk_div10_reg1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_reg),
        .Q(clk_div10_reg1),
        .R(sync_reset));
LUT5 #(
    .INIT(32'h54550010)) 
     clk_div5_pos_i_1__1
       (.I0(sync_reset),
        .I1(clk_counter_neg_stg1[1]),
        .I2(clk_counter_neg_stg1[0]),
        .I3(clk_counter_neg_stg1[2]),
        .I4(n_0_clk_div5_pos_reg),
        .O(n_0_clk_div5_pos_i_1__1));
FDRE clk_div5_pos_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div5_pos_i_1__1),
        .Q(n_0_clk_div5_pos_reg),
        .R(\<const0> ));
FDRE clk_div5_reg1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div5_pos_reg),
        .Q(clk_div5_reg1),
        .R(sync_reset));
LUT4 #(
    .INIT(16'hE2FF)) 
     sgmii_clk_en_i_1__1
       (.I0(clk_en_1_25_fall),
        .I1(speed_is_100_resync),
        .I2(clk_div10_plse_fall),
        .I3(speed_is_10_100_resync),
        .O(O1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_clock_div" *) 
module quadsgmiiquadsgmii_clock_div_10
   (clk_div10_plse_rise,
    O1,
    sync_reset,
    userclk2,
    clk_en_1_25_fall,
    speed_is_100_resync,
    speed_is_10_100_resync);
  output clk_div10_plse_rise;
  output O1;
  input sync_reset;
  input userclk2;
  input clk_en_1_25_fall;
  input speed_is_100_resync;
  input speed_is_10_100_resync;

  wire \<const0> ;
  wire \<const1> ;
  wire O1;
  wire [2:0]clk_counter_neg_stg1;
  wire [2:0]clk_counter_pos_stg1;
  wire clk_div10_plse_fall;
  wire clk_div10_plse_rise;
  wire clk_div10_reg1;
  wire clk_div5_reg1;
  wire clk_en_1_25_fall;
  wire \n_0_clk_counter_pos_stg1[0]_i_1 ;
  wire \n_0_clk_counter_pos_stg1[1]_i_1 ;
  wire \n_0_clk_counter_pos_stg1[2]_i_1 ;
  wire n_0_clk_div10_i_1;
  wire n_0_clk_div10_plse_fall_i_1;
  wire n_0_clk_div10_plse_rise_i_1;
  wire n_0_clk_div10_reg;
  wire n_0_clk_div5_pos_i_1;
  wire n_0_clk_div5_pos_reg;
  wire speed_is_100_resync;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[0]),
        .Q(clk_counter_neg_stg1[0]),
        .R(\<const0> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[1]),
        .Q(clk_counter_neg_stg1[1]),
        .R(\<const0> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[2]),
        .Q(clk_counter_neg_stg1[2]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair672" *) 
   LUT3 #(
    .INIT(8'h0B)) 
     \clk_counter_pos_stg1[0]_i_1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[2]),
        .I2(clk_counter_pos_stg1[0]),
        .O(\n_0_clk_counter_pos_stg1[0]_i_1 ));
LUT2 #(
    .INIT(4'h6)) 
     \clk_counter_pos_stg1[1]_i_1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[0]),
        .O(\n_0_clk_counter_pos_stg1[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair672" *) 
   LUT3 #(
    .INIT(8'h68)) 
     \clk_counter_pos_stg1[2]_i_1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[0]),
        .I2(clk_counter_pos_stg1[2]),
        .O(\n_0_clk_counter_pos_stg1[2]_i_1 ));
FDRE \clk_counter_pos_stg1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[0]_i_1 ),
        .Q(clk_counter_pos_stg1[0]),
        .R(sync_reset));
FDRE \clk_counter_pos_stg1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[1]_i_1 ),
        .Q(clk_counter_pos_stg1[1]),
        .R(sync_reset));
FDRE \clk_counter_pos_stg1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[2]_i_1 ),
        .Q(clk_counter_pos_stg1[2]),
        .R(sync_reset));
LUT4 #(
    .INIT(16'h009A)) 
     clk_div10_i_1
       (.I0(n_0_clk_div10_reg),
        .I1(clk_div5_reg1),
        .I2(n_0_clk_div5_pos_reg),
        .I3(sync_reset),
        .O(n_0_clk_div10_i_1));
(* SOFT_HLUTNM = "soft_lutpair673" *) 
   LUT2 #(
    .INIT(4'h2)) 
     clk_div10_plse_fall_i_1
       (.I0(clk_div10_reg1),
        .I1(n_0_clk_div10_reg),
        .O(n_0_clk_div10_plse_fall_i_1));
FDRE clk_div10_plse_fall_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_plse_fall_i_1),
        .Q(clk_div10_plse_fall),
        .R(sync_reset));
(* SOFT_HLUTNM = "soft_lutpair673" *) 
   LUT2 #(
    .INIT(4'h2)) 
     clk_div10_plse_rise_i_1
       (.I0(n_0_clk_div10_reg),
        .I1(clk_div10_reg1),
        .O(n_0_clk_div10_plse_rise_i_1));
FDRE clk_div10_plse_rise_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_plse_rise_i_1),
        .Q(clk_div10_plse_rise),
        .R(sync_reset));
FDRE clk_div10_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_i_1),
        .Q(n_0_clk_div10_reg),
        .R(\<const0> ));
FDRE clk_div10_reg1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_reg),
        .Q(clk_div10_reg1),
        .R(sync_reset));
LUT5 #(
    .INIT(32'h54550010)) 
     clk_div5_pos_i_1
       (.I0(sync_reset),
        .I1(clk_counter_neg_stg1[1]),
        .I2(clk_counter_neg_stg1[0]),
        .I3(clk_counter_neg_stg1[2]),
        .I4(n_0_clk_div5_pos_reg),
        .O(n_0_clk_div5_pos_i_1));
FDRE clk_div5_pos_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div5_pos_i_1),
        .Q(n_0_clk_div5_pos_reg),
        .R(\<const0> ));
FDRE clk_div5_reg1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div5_pos_reg),
        .Q(clk_div5_reg1),
        .R(sync_reset));
LUT4 #(
    .INIT(16'hE2FF)) 
     sgmii_clk_en_i_1
       (.I0(clk_en_1_25_fall),
        .I1(speed_is_100_resync),
        .I2(clk_div10_plse_fall),
        .I3(speed_is_10_100_resync),
        .O(O1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_clock_div" *) 
module quadsgmiiquadsgmii_clock_div_14
   (clk_div10_plse_rise,
    O1,
    sync_reset,
    userclk2,
    clk_en_1_25_fall,
    speed_is_100_resync,
    speed_is_10_100_resync);
  output clk_div10_plse_rise;
  output O1;
  input sync_reset;
  input userclk2;
  input clk_en_1_25_fall;
  input speed_is_100_resync;
  input speed_is_10_100_resync;

  wire \<const0> ;
  wire \<const1> ;
  wire O1;
  wire [2:0]clk_counter_neg_stg1;
  wire [2:0]clk_counter_pos_stg1;
  wire clk_div10_plse_fall;
  wire clk_div10_plse_rise;
  wire clk_div10_reg1;
  wire clk_div5_reg1;
  wire clk_en_1_25_fall;
  wire \n_0_clk_counter_pos_stg1[0]_i_1__2 ;
  wire \n_0_clk_counter_pos_stg1[1]_i_1 ;
  wire \n_0_clk_counter_pos_stg1[2]_i_1 ;
  wire n_0_clk_div10_i_1__2;
  wire n_0_clk_div10_plse_fall_i_1__2;
  wire n_0_clk_div10_plse_rise_i_1__2;
  wire n_0_clk_div10_reg;
  wire n_0_clk_div5_pos_i_1__2;
  wire n_0_clk_div5_pos_reg;
  wire speed_is_100_resync;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[0]),
        .Q(clk_counter_neg_stg1[0]),
        .R(\<const0> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[1]),
        .Q(clk_counter_neg_stg1[1]),
        .R(\<const0> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[2]),
        .Q(clk_counter_neg_stg1[2]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair670" *) 
   LUT3 #(
    .INIT(8'h0B)) 
     \clk_counter_pos_stg1[0]_i_1__2 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[2]),
        .I2(clk_counter_pos_stg1[0]),
        .O(\n_0_clk_counter_pos_stg1[0]_i_1__2 ));
LUT2 #(
    .INIT(4'h6)) 
     \clk_counter_pos_stg1[1]_i_1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[0]),
        .O(\n_0_clk_counter_pos_stg1[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair670" *) 
   LUT3 #(
    .INIT(8'h68)) 
     \clk_counter_pos_stg1[2]_i_1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[0]),
        .I2(clk_counter_pos_stg1[2]),
        .O(\n_0_clk_counter_pos_stg1[2]_i_1 ));
FDRE \clk_counter_pos_stg1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[0]_i_1__2 ),
        .Q(clk_counter_pos_stg1[0]),
        .R(sync_reset));
FDRE \clk_counter_pos_stg1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[1]_i_1 ),
        .Q(clk_counter_pos_stg1[1]),
        .R(sync_reset));
FDRE \clk_counter_pos_stg1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[2]_i_1 ),
        .Q(clk_counter_pos_stg1[2]),
        .R(sync_reset));
LUT4 #(
    .INIT(16'h009A)) 
     clk_div10_i_1__2
       (.I0(n_0_clk_div10_reg),
        .I1(clk_div5_reg1),
        .I2(n_0_clk_div5_pos_reg),
        .I3(sync_reset),
        .O(n_0_clk_div10_i_1__2));
(* SOFT_HLUTNM = "soft_lutpair671" *) 
   LUT2 #(
    .INIT(4'h2)) 
     clk_div10_plse_fall_i_1__2
       (.I0(clk_div10_reg1),
        .I1(n_0_clk_div10_reg),
        .O(n_0_clk_div10_plse_fall_i_1__2));
FDRE clk_div10_plse_fall_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_plse_fall_i_1__2),
        .Q(clk_div10_plse_fall),
        .R(sync_reset));
(* SOFT_HLUTNM = "soft_lutpair671" *) 
   LUT2 #(
    .INIT(4'h2)) 
     clk_div10_plse_rise_i_1__2
       (.I0(n_0_clk_div10_reg),
        .I1(clk_div10_reg1),
        .O(n_0_clk_div10_plse_rise_i_1__2));
FDRE clk_div10_plse_rise_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_plse_rise_i_1__2),
        .Q(clk_div10_plse_rise),
        .R(sync_reset));
FDRE clk_div10_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_i_1__2),
        .Q(n_0_clk_div10_reg),
        .R(\<const0> ));
FDRE clk_div10_reg1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_reg),
        .Q(clk_div10_reg1),
        .R(sync_reset));
LUT5 #(
    .INIT(32'h54550010)) 
     clk_div5_pos_i_1__2
       (.I0(sync_reset),
        .I1(clk_counter_neg_stg1[1]),
        .I2(clk_counter_neg_stg1[0]),
        .I3(clk_counter_neg_stg1[2]),
        .I4(n_0_clk_div5_pos_reg),
        .O(n_0_clk_div5_pos_i_1__2));
FDRE clk_div5_pos_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div5_pos_i_1__2),
        .Q(n_0_clk_div5_pos_reg),
        .R(\<const0> ));
FDRE clk_div5_reg1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div5_pos_reg),
        .Q(clk_div5_reg1),
        .R(sync_reset));
LUT4 #(
    .INIT(16'hE2FF)) 
     sgmii_clk_en_i_1__2
       (.I0(clk_en_1_25_fall),
        .I1(speed_is_100_resync),
        .I2(clk_div10_plse_fall),
        .I3(speed_is_10_100_resync),
        .O(O1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_clock_div" *) 
module quadsgmiiquadsgmii_clock_div_6
   (clk_div10_plse_rise,
    O1,
    sync_reset,
    userclk2,
    clk_en_1_25_fall,
    speed_is_100_resync,
    speed_is_10_100_resync);
  output clk_div10_plse_rise;
  output O1;
  input sync_reset;
  input userclk2;
  input clk_en_1_25_fall;
  input speed_is_100_resync;
  input speed_is_10_100_resync;

  wire \<const0> ;
  wire \<const1> ;
  wire O1;
  wire [2:0]clk_counter_neg_stg1;
  wire [2:0]clk_counter_pos_stg1;
  wire clk_div10_plse_fall;
  wire clk_div10_plse_rise;
  wire clk_div10_reg1;
  wire clk_div5_reg1;
  wire clk_en_1_25_fall;
  wire \n_0_clk_counter_pos_stg1[0]_i_1__0 ;
  wire \n_0_clk_counter_pos_stg1[1]_i_1 ;
  wire \n_0_clk_counter_pos_stg1[2]_i_1 ;
  wire n_0_clk_div10_i_1__0;
  wire n_0_clk_div10_plse_fall_i_1__0;
  wire n_0_clk_div10_plse_rise_i_1__0;
  wire n_0_clk_div10_reg;
  wire n_0_clk_div5_pos_i_1__0;
  wire n_0_clk_div5_pos_reg;
  wire speed_is_100_resync;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[0]),
        .Q(clk_counter_neg_stg1[0]),
        .R(\<const0> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[1]),
        .Q(clk_counter_neg_stg1[1]),
        .R(\<const0> ));
FDRE #(
    .IS_C_INVERTED(1'b1)) 
     \clk_counter_neg_stg1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(clk_counter_pos_stg1[2]),
        .Q(clk_counter_neg_stg1[2]),
        .R(\<const0> ));
(* SOFT_HLUTNM = "soft_lutpair674" *) 
   LUT3 #(
    .INIT(8'h0B)) 
     \clk_counter_pos_stg1[0]_i_1__0 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[2]),
        .I2(clk_counter_pos_stg1[0]),
        .O(\n_0_clk_counter_pos_stg1[0]_i_1__0 ));
LUT2 #(
    .INIT(4'h6)) 
     \clk_counter_pos_stg1[1]_i_1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[0]),
        .O(\n_0_clk_counter_pos_stg1[1]_i_1 ));
(* SOFT_HLUTNM = "soft_lutpair674" *) 
   LUT3 #(
    .INIT(8'h68)) 
     \clk_counter_pos_stg1[2]_i_1 
       (.I0(clk_counter_pos_stg1[1]),
        .I1(clk_counter_pos_stg1[0]),
        .I2(clk_counter_pos_stg1[2]),
        .O(\n_0_clk_counter_pos_stg1[2]_i_1 ));
FDRE \clk_counter_pos_stg1_reg[0] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[0]_i_1__0 ),
        .Q(clk_counter_pos_stg1[0]),
        .R(sync_reset));
FDRE \clk_counter_pos_stg1_reg[1] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[1]_i_1 ),
        .Q(clk_counter_pos_stg1[1]),
        .R(sync_reset));
FDRE \clk_counter_pos_stg1_reg[2] 
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_clk_counter_pos_stg1[2]_i_1 ),
        .Q(clk_counter_pos_stg1[2]),
        .R(sync_reset));
LUT4 #(
    .INIT(16'h009A)) 
     clk_div10_i_1__0
       (.I0(n_0_clk_div10_reg),
        .I1(clk_div5_reg1),
        .I2(n_0_clk_div5_pos_reg),
        .I3(sync_reset),
        .O(n_0_clk_div10_i_1__0));
(* SOFT_HLUTNM = "soft_lutpair675" *) 
   LUT2 #(
    .INIT(4'h2)) 
     clk_div10_plse_fall_i_1__0
       (.I0(clk_div10_reg1),
        .I1(n_0_clk_div10_reg),
        .O(n_0_clk_div10_plse_fall_i_1__0));
FDRE clk_div10_plse_fall_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_plse_fall_i_1__0),
        .Q(clk_div10_plse_fall),
        .R(sync_reset));
(* SOFT_HLUTNM = "soft_lutpair675" *) 
   LUT2 #(
    .INIT(4'h2)) 
     clk_div10_plse_rise_i_1__0
       (.I0(n_0_clk_div10_reg),
        .I1(clk_div10_reg1),
        .O(n_0_clk_div10_plse_rise_i_1__0));
FDRE clk_div10_plse_rise_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_plse_rise_i_1__0),
        .Q(clk_div10_plse_rise),
        .R(sync_reset));
FDRE clk_div10_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_i_1__0),
        .Q(n_0_clk_div10_reg),
        .R(\<const0> ));
FDRE clk_div10_reg1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div10_reg),
        .Q(clk_div10_reg1),
        .R(sync_reset));
LUT5 #(
    .INIT(32'h54550010)) 
     clk_div5_pos_i_1__0
       (.I0(sync_reset),
        .I1(clk_counter_neg_stg1[1]),
        .I2(clk_counter_neg_stg1[0]),
        .I3(clk_counter_neg_stg1[2]),
        .I4(n_0_clk_div5_pos_reg),
        .O(n_0_clk_div5_pos_i_1__0));
FDRE clk_div5_pos_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div5_pos_i_1__0),
        .Q(n_0_clk_div5_pos_reg),
        .R(\<const0> ));
FDRE clk_div5_reg1_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(n_0_clk_div5_pos_reg),
        .Q(clk_div5_reg1),
        .R(sync_reset));
LUT4 #(
    .INIT(16'hE2FF)) 
     sgmii_clk_en_i_1__0
       (.I0(clk_en_1_25_fall),
        .I1(speed_is_100_resync),
        .I2(clk_div10_plse_fall),
        .I3(speed_is_10_100_resync),
        .O(O1));
endmodule

module quadsgmiiquadsgmii_johnson_cntr
   (clk1_25,
    O1,
    clk_div10_plse_rise,
    userclk2,
    clk1_25_reg,
    sync_reset);
  output clk1_25;
  output O1;
  input clk_div10_plse_rise;
  input userclk2;
  input clk1_25_reg;
  input sync_reset;

  wire O1;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_div10_plse_rise;
  wire n_0_reg1_i_1__1;
  wire n_0_reg1_reg;
  wire n_0_reg2_reg;
  wire n_0_reg5_reg;
  wire reg4;
  wire reg5;
  wire sync_reset;
  wire userclk2;

LUT2 #(
    .INIT(4'h2)) 
     clk_en_1_25_fall_i_1__1
       (.I0(clk1_25_reg),
        .I1(clk1_25),
        .O(O1));
LUT1 #(
    .INIT(2'h1)) 
     reg1_i_1__1
       (.I0(n_0_reg5_reg),
        .O(n_0_reg1_i_1__1));
FDRE reg1_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(n_0_reg1_i_1__1),
        .Q(n_0_reg1_reg),
        .R(reg5));
FDRE reg2_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(n_0_reg1_reg),
        .Q(n_0_reg2_reg),
        .R(reg5));
FDRE reg3_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(n_0_reg2_reg),
        .Q(clk1_25),
        .R(reg5));
LUT4 #(
    .INIT(16'hAAEA)) 
     reg4_i_1__1
       (.I0(sync_reset),
        .I1(n_0_reg5_reg),
        .I2(clk_div10_plse_rise),
        .I3(reg4),
        .O(reg5));
FDRE reg4_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(clk1_25),
        .Q(reg4),
        .R(reg5));
FDRE reg5_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(reg4),
        .Q(n_0_reg5_reg),
        .R(reg5));
endmodule

(* ORIG_REF_NAME = "quadsgmii_johnson_cntr" *) 
module quadsgmiiquadsgmii_johnson_cntr_13
   (clk1_25,
    O1,
    clk_div10_plse_rise,
    userclk2,
    clk1_25_reg,
    sync_reset);
  output clk1_25;
  output O1;
  input clk_div10_plse_rise;
  input userclk2;
  input clk1_25_reg;
  input sync_reset;

  wire O1;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_div10_plse_rise;
  wire n_0_reg1_i_1__2;
  wire n_0_reg1_reg;
  wire n_0_reg2_reg;
  wire n_0_reg5_reg;
  wire reg4;
  wire reg5;
  wire sync_reset;
  wire userclk2;

LUT2 #(
    .INIT(4'h2)) 
     clk_en_1_25_fall_i_1__2
       (.I0(clk1_25_reg),
        .I1(clk1_25),
        .O(O1));
LUT1 #(
    .INIT(2'h1)) 
     reg1_i_1__2
       (.I0(n_0_reg5_reg),
        .O(n_0_reg1_i_1__2));
FDRE reg1_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(n_0_reg1_i_1__2),
        .Q(n_0_reg1_reg),
        .R(reg5));
FDRE reg2_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(n_0_reg1_reg),
        .Q(n_0_reg2_reg),
        .R(reg5));
FDRE reg3_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(n_0_reg2_reg),
        .Q(clk1_25),
        .R(reg5));
LUT4 #(
    .INIT(16'hAAEA)) 
     reg4_i_1__2
       (.I0(sync_reset),
        .I1(n_0_reg5_reg),
        .I2(clk_div10_plse_rise),
        .I3(reg4),
        .O(reg5));
FDRE reg4_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(clk1_25),
        .Q(reg4),
        .R(reg5));
FDRE reg5_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(reg4),
        .Q(n_0_reg5_reg),
        .R(reg5));
endmodule

(* ORIG_REF_NAME = "quadsgmii_johnson_cntr" *) 
module quadsgmiiquadsgmii_johnson_cntr_5
   (clk1_25,
    O1,
    clk_div10_plse_rise,
    userclk2,
    clk1_25_reg,
    sync_reset);
  output clk1_25;
  output O1;
  input clk_div10_plse_rise;
  input userclk2;
  input clk1_25_reg;
  input sync_reset;

  wire O1;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_div10_plse_rise;
  wire n_0_reg1_i_1__0;
  wire n_0_reg1_reg;
  wire n_0_reg2_reg;
  wire n_0_reg5_reg;
  wire reg4;
  wire reg5;
  wire sync_reset;
  wire userclk2;

LUT2 #(
    .INIT(4'h2)) 
     clk_en_1_25_fall_i_1__0
       (.I0(clk1_25_reg),
        .I1(clk1_25),
        .O(O1));
LUT1 #(
    .INIT(2'h1)) 
     reg1_i_1__0
       (.I0(n_0_reg5_reg),
        .O(n_0_reg1_i_1__0));
FDRE reg1_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(n_0_reg1_i_1__0),
        .Q(n_0_reg1_reg),
        .R(reg5));
FDRE reg2_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(n_0_reg1_reg),
        .Q(n_0_reg2_reg),
        .R(reg5));
FDRE reg3_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(n_0_reg2_reg),
        .Q(clk1_25),
        .R(reg5));
LUT4 #(
    .INIT(16'hAAEA)) 
     reg4_i_1__0
       (.I0(sync_reset),
        .I1(n_0_reg5_reg),
        .I2(clk_div10_plse_rise),
        .I3(reg4),
        .O(reg5));
FDRE reg4_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(clk1_25),
        .Q(reg4),
        .R(reg5));
FDRE reg5_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(reg4),
        .Q(n_0_reg5_reg),
        .R(reg5));
endmodule

(* ORIG_REF_NAME = "quadsgmii_johnson_cntr" *) 
module quadsgmiiquadsgmii_johnson_cntr_9
   (clk1_25,
    O1,
    clk_div10_plse_rise,
    userclk2,
    clk1_25_reg,
    sync_reset);
  output clk1_25;
  output O1;
  input clk_div10_plse_rise;
  input userclk2;
  input clk1_25_reg;
  input sync_reset;

  wire O1;
  wire clk1_25;
  wire clk1_25_reg;
  wire clk_div10_plse_rise;
  wire n_0_reg5_reg;
  wire p_0_in;
  wire reg1;
  wire reg2;
  wire reg4;
  wire reg5;
  wire sync_reset;
  wire userclk2;

LUT2 #(
    .INIT(4'h2)) 
     clk_en_1_25_fall_i_1
       (.I0(clk1_25_reg),
        .I1(clk1_25),
        .O(O1));
LUT1 #(
    .INIT(2'h1)) 
     reg1_i_1
       (.I0(n_0_reg5_reg),
        .O(p_0_in));
FDRE reg1_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(p_0_in),
        .Q(reg1),
        .R(reg5));
FDRE reg2_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(reg1),
        .Q(reg2),
        .R(reg5));
FDRE reg3_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(reg2),
        .Q(clk1_25),
        .R(reg5));
LUT4 #(
    .INIT(16'hAAEA)) 
     reg4_i_1
       (.I0(sync_reset),
        .I1(n_0_reg5_reg),
        .I2(clk_div10_plse_rise),
        .I3(reg4),
        .O(reg5));
FDRE reg4_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(clk1_25),
        .Q(reg4),
        .R(reg5));
FDRE reg5_reg
       (.C(userclk2),
        .CE(clk_div10_plse_rise),
        .D(reg4),
        .Q(n_0_reg5_reg),
        .R(reg5));
endmodule

module quadsgmiiquadsgmii_qsgmii_adapt
   (O1,
    gmii_tx_er_out_ch0,
    gmii_txd_out_ch0,
    gmii_tx_en_out_ch0,
    O2,
    gmii_tx_er_out_ch1,
    gmii_txd_out_ch1,
    gmii_tx_en_out_ch1,
    O3,
    gmii_tx_er_out_ch2,
    gmii_txd_out_ch2,
    gmii_tx_en_out_ch2,
    O4,
    gmii_tx_er_out_ch3,
    gmii_txd_out_ch3,
    gmii_tx_en_out_ch3,
    sgmii_clk_en_ch0,
    sgmii_clk_en_ch1,
    sgmii_clk_en_ch2,
    sgmii_clk_en_ch3,
    I1,
    I2,
    I3,
    I4,
    reset,
    userclk2,
    speed_is_10_100_ch0,
    speed_is_100_ch0,
    speed_is_10_100_ch1,
    speed_is_100_ch1,
    speed_is_10_100_ch2,
    speed_is_100_ch2,
    speed_is_10_100_ch3,
    speed_is_100_ch3,
    Q,
    gmii_tx_en_ch0_int1,
    gmii_tx_er_ch0_int1,
    I5,
    gmii_tx_en_ch1_int1,
    gmii_tx_er_ch1_int1,
    I6,
    gmii_tx_en_ch2_int1,
    gmii_tx_er_ch2_int1,
    I7,
    gmii_tx_en_ch3_int1,
    gmii_tx_er_ch3_int1);
  output O1;
  output gmii_tx_er_out_ch0;
  output [7:0]gmii_txd_out_ch0;
  output gmii_tx_en_out_ch0;
  output O2;
  output gmii_tx_er_out_ch1;
  output [7:0]gmii_txd_out_ch1;
  output gmii_tx_en_out_ch1;
  output O3;
  output gmii_tx_er_out_ch2;
  output [7:0]gmii_txd_out_ch2;
  output gmii_tx_en_out_ch2;
  output O4;
  output gmii_tx_er_out_ch3;
  output [7:0]gmii_txd_out_ch3;
  output gmii_tx_en_out_ch3;
  output sgmii_clk_en_ch0;
  output sgmii_clk_en_ch1;
  output sgmii_clk_en_ch2;
  output sgmii_clk_en_ch3;
  input I1;
  input I2;
  input I3;
  input I4;
  input reset;
  input userclk2;
  input speed_is_10_100_ch0;
  input speed_is_100_ch0;
  input speed_is_10_100_ch1;
  input speed_is_100_ch1;
  input speed_is_10_100_ch2;
  input speed_is_100_ch2;
  input speed_is_10_100_ch3;
  input speed_is_100_ch3;
  input [7:0]Q;
  input gmii_tx_en_ch0_int1;
  input gmii_tx_er_ch0_int1;
  input [7:0]I5;
  input gmii_tx_en_ch1_int1;
  input gmii_tx_er_ch1_int1;
  input [7:0]I6;
  input gmii_tx_en_ch2_int1;
  input gmii_tx_er_ch2_int1;
  input [7:0]I7;
  input gmii_tx_en_ch3_int1;
  input gmii_tx_er_ch3_int1;

  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire [7:0]I5;
  wire [7:0]I6;
  wire [7:0]I7;
  wire O1;
  wire O2;
  wire O3;
  wire O4;
  wire [7:0]Q;
  wire gmii_tx_en_ch0_int1;
  wire gmii_tx_en_ch1_int1;
  wire gmii_tx_en_ch2_int1;
  wire gmii_tx_en_ch3_int1;
  wire gmii_tx_en_out_ch0;
  wire gmii_tx_en_out_ch1;
  wire gmii_tx_en_out_ch2;
  wire gmii_tx_en_out_ch3;
  wire gmii_tx_er_ch0_int1;
  wire gmii_tx_er_ch1_int1;
  wire gmii_tx_er_ch2_int1;
  wire gmii_tx_er_ch3_int1;
  wire gmii_tx_er_out_ch0;
  wire gmii_tx_er_out_ch1;
  wire gmii_tx_er_out_ch2;
  wire gmii_tx_er_out_ch3;
  wire [7:0]gmii_txd_out_ch0;
  wire [7:0]gmii_txd_out_ch1;
  wire [7:0]gmii_txd_out_ch2;
  wire [7:0]gmii_txd_out_ch3;
  wire reset;
  wire sgmii_clk_en_ch0;
  wire sgmii_clk_en_ch1;
  wire sgmii_clk_en_ch2;
  wire sgmii_clk_en_ch3;
  wire speed_is_100_ch0;
  wire speed_is_100_ch1;
  wire speed_is_100_ch2;
  wire speed_is_100_ch3;
  wire speed_is_10_100_ch0;
  wire speed_is_10_100_ch1;
  wire speed_is_10_100_ch2;
  wire speed_is_10_100_ch3;
  wire sync_reset;
  wire userclk2;

(* DONT_TOUCH *) 
   (* INITIALISE = "2'b11" *) 
   quadsgmiiquadsgmii_reset_sync__3 gen_sync_reset
       (.clk(userclk2),
        .reset_in(reset),
        .reset_out(sync_reset));
quadsgmiiquadsgmii_sgmii_adapt_0 sgmii_adapt_ch0
       (.E(sgmii_clk_en_ch0),
        .I1(I1),
        .O1(O1),
        .Q(Q),
        .gmii_tx_en_ch0_int1(gmii_tx_en_ch0_int1),
        .gmii_tx_en_out_ch0(gmii_tx_en_out_ch0),
        .gmii_tx_er_ch0_int1(gmii_tx_er_ch0_int1),
        .gmii_tx_er_out_ch0(gmii_tx_er_out_ch0),
        .gmii_txd_out_ch0(gmii_txd_out_ch0),
        .speed_is_100_ch0(speed_is_100_ch0),
        .speed_is_10_100_ch0(speed_is_10_100_ch0),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
quadsgmiiquadsgmii_sgmii_adapt_1 sgmii_adapt_ch1
       (.E(sgmii_clk_en_ch1),
        .I2(I2),
        .I5(I5),
        .O2(O2),
        .gmii_tx_en_ch1_int1(gmii_tx_en_ch1_int1),
        .gmii_tx_en_out_ch1(gmii_tx_en_out_ch1),
        .gmii_tx_er_ch1_int1(gmii_tx_er_ch1_int1),
        .gmii_tx_er_out_ch1(gmii_tx_er_out_ch1),
        .gmii_txd_out_ch1(gmii_txd_out_ch1),
        .speed_is_100_ch1(speed_is_100_ch1),
        .speed_is_10_100_ch1(speed_is_10_100_ch1),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
quadsgmiiquadsgmii_sgmii_adapt_2 sgmii_adapt_ch2
       (.E(sgmii_clk_en_ch2),
        .I3(I3),
        .I6(I6),
        .O3(O3),
        .gmii_tx_en_ch2_int1(gmii_tx_en_ch2_int1),
        .gmii_tx_en_out_ch2(gmii_tx_en_out_ch2),
        .gmii_tx_er_ch2_int1(gmii_tx_er_ch2_int1),
        .gmii_tx_er_out_ch2(gmii_tx_er_out_ch2),
        .gmii_txd_out_ch2(gmii_txd_out_ch2),
        .speed_is_100_ch2(speed_is_100_ch2),
        .speed_is_10_100_ch2(speed_is_10_100_ch2),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
quadsgmiiquadsgmii_sgmii_adapt sgmii_adapt_ch3
       (.E(sgmii_clk_en_ch3),
        .I4(I4),
        .I7(I7),
        .O4(O4),
        .gmii_tx_en_ch3_int1(gmii_tx_en_ch3_int1),
        .gmii_tx_en_out_ch3(gmii_tx_en_out_ch3),
        .gmii_tx_er_ch3_int1(gmii_tx_er_ch3_int1),
        .gmii_tx_er_out_ch3(gmii_tx_er_out_ch3),
        .gmii_txd_out_ch3(gmii_txd_out_ch3),
        .speed_is_100_ch3(speed_is_100_ch3),
        .speed_is_10_100_ch3(speed_is_10_100_ch3),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
endmodule

(* dont_touch = "yes" *) (* INITIALISE = "2'b11" *) 
module quadsgmiiquadsgmii_reset_sync
   (reset_in,
    clk,
    reset_out);
  input reset_in;
  input clk;
  output reset_out;

  wire \<const0> ;
  wire GND_2;
  wire VCC_1;
  wire clk;
  wire reset_in;
  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;
  wire reset_stage6;

GND GND
       (.G(\<const0> ));
GND GND_1
       (.G(GND_2));
VCC VCC
       (.P(VCC_1));
LUT1 #(
    .INIT(2'h2)) 
     i_0
       (.I0(reset_stage6),
        .O(reset_out));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync1
       (.C(clk),
        .CE(VCC_1),
        .D(\<const0> ),
        .PRE(reset_in),
        .Q(reset_stage1));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync2
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage1),
        .PRE(reset_in),
        .Q(reset_stage2));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync3
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage2),
        .PRE(reset_in),
        .Q(reset_stage3));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync4
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage3),
        .PRE(reset_in),
        .Q(reset_stage4));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync5
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage4),
        .PRE(reset_in),
        .Q(reset_stage5));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b1)) 
     reset_sync6
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage5),
        .Q(reset_stage6),
        .R(GND_2));
endmodule

(* ORIG_REF_NAME = "quadsgmii_reset_sync" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b11" *) 
module quadsgmiiquadsgmii_reset_sync__3
   (reset_in,
    clk,
    reset_out);
  input reset_in;
  input clk;
  output reset_out;

  wire \<const0> ;
  wire GND_2;
  wire VCC_1;
  wire clk;
  wire reset_in;
  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;
  wire reset_stage6;

GND GND
       (.G(\<const0> ));
GND GND_1
       (.G(GND_2));
VCC VCC
       (.P(VCC_1));
LUT1 #(
    .INIT(2'h2)) 
     i_0
       (.I0(reset_stage6),
        .O(reset_out));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync1
       (.C(clk),
        .CE(VCC_1),
        .D(\<const0> ),
        .PRE(reset_in),
        .Q(reset_stage1));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync2
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage1),
        .PRE(reset_in),
        .Q(reset_stage2));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync3
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage2),
        .PRE(reset_in),
        .Q(reset_stage3));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync4
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage3),
        .PRE(reset_in),
        .Q(reset_stage4));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync5
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage4),
        .PRE(reset_in),
        .Q(reset_stage5));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b1)) 
     reset_sync6
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage5),
        .Q(reset_stage6),
        .R(GND_2));
endmodule

(* ORIG_REF_NAME = "quadsgmii_reset_sync" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b11" *) 
module quadsgmiiquadsgmii_reset_sync__4
   (reset_in,
    clk,
    reset_out);
  input reset_in;
  input clk;
  output reset_out;

  wire \<const0> ;
  wire GND_2;
  wire VCC_1;
  wire clk;
  wire reset_in;
  wire reset_out;
  wire reset_stage1;
  wire reset_stage2;
  wire reset_stage3;
  wire reset_stage4;
  wire reset_stage5;
  wire reset_stage6;

GND GND
       (.G(\<const0> ));
GND GND_1
       (.G(GND_2));
VCC VCC
       (.P(VCC_1));
LUT1 #(
    .INIT(2'h2)) 
     i_0
       (.I0(reset_stage6),
        .O(reset_out));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync1
       (.C(clk),
        .CE(VCC_1),
        .D(\<const0> ),
        .PRE(reset_in),
        .Q(reset_stage1));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync2
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage1),
        .PRE(reset_in),
        .Q(reset_stage2));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync3
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage2),
        .PRE(reset_in),
        .Q(reset_stage3));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync4
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage3),
        .PRE(reset_in),
        .Q(reset_stage4));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FDP" *) 
   FDPE #(
    .INIT(1'b1)) 
     reset_sync5
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage4),
        .PRE(reset_in),
        .Q(reset_stage5));
(* BOX_TYPE = "PRIMITIVE" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b1)) 
     reset_sync6
       (.C(clk),
        .CE(VCC_1),
        .D(reset_stage5),
        .Q(reset_stage6),
        .R(GND_2));
endmodule

module quadsgmiiquadsgmii_sgmii_adapt
   (E,
    gmii_tx_en_out_ch3,
    gmii_tx_er_out_ch3,
    O4,
    gmii_txd_out_ch3,
    userclk2,
    speed_is_10_100_ch3,
    speed_is_100_ch3,
    sync_reset,
    gmii_tx_en_ch3_int1,
    gmii_tx_er_ch3_int1,
    I4,
    I7);
  output [0:0]E;
  output gmii_tx_en_out_ch3;
  output gmii_tx_er_out_ch3;
  output O4;
  output [7:0]gmii_txd_out_ch3;
  input userclk2;
  input speed_is_10_100_ch3;
  input speed_is_100_ch3;
  input sync_reset;
  input gmii_tx_en_ch3_int1;
  input gmii_tx_er_ch3_int1;
  input I4;
  input [7:0]I7;

  wire [0:0]E;
  wire I4;
  wire [7:0]I7;
  wire O4;
  wire gmii_tx_en_ch3_int1;
  wire gmii_tx_en_out_ch3;
  wire gmii_tx_er_ch3_int1;
  wire gmii_tx_er_out_ch3;
  wire [7:0]gmii_txd_out_ch3;
  wire speed_is_100_ch3;
  wire speed_is_100_resync;
  wire speed_is_10_100_ch3;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

quadsgmiiquadsgmii_clk_gen_12 clock_generation
       (.E(E),
        .speed_is_100_resync(speed_is_100_resync),
        .speed_is_10_100_resync(speed_is_10_100_resync),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__21 resync_speed_100
       (.clk(userclk2),
        .data_in(speed_is_100_ch3),
        .data_out(speed_is_100_resync));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__20 resync_speed_10_100
       (.clk(userclk2),
        .data_in(speed_is_10_100_ch3),
        .data_out(speed_is_10_100_resync));
quadsgmiiquadsgmii_tx_rate_adapt_11 transmitter
       (.E(E),
        .I4(I4),
        .I7(I7),
        .O4(O4),
        .gmii_tx_en_ch3_int1(gmii_tx_en_ch3_int1),
        .gmii_tx_en_out_ch3(gmii_tx_en_out_ch3),
        .gmii_tx_er_ch3_int1(gmii_tx_er_ch3_int1),
        .gmii_tx_er_out_ch3(gmii_tx_er_out_ch3),
        .gmii_txd_out_ch3(gmii_txd_out_ch3),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sgmii_adapt" *) 
module quadsgmiiquadsgmii_sgmii_adapt_0
   (E,
    gmii_tx_en_out_ch0,
    gmii_tx_er_out_ch0,
    O1,
    gmii_txd_out_ch0,
    userclk2,
    speed_is_10_100_ch0,
    speed_is_100_ch0,
    sync_reset,
    gmii_tx_en_ch0_int1,
    gmii_tx_er_ch0_int1,
    I1,
    Q);
  output [0:0]E;
  output gmii_tx_en_out_ch0;
  output gmii_tx_er_out_ch0;
  output O1;
  output [7:0]gmii_txd_out_ch0;
  input userclk2;
  input speed_is_10_100_ch0;
  input speed_is_100_ch0;
  input sync_reset;
  input gmii_tx_en_ch0_int1;
  input gmii_tx_er_ch0_int1;
  input I1;
  input [7:0]Q;

  wire [0:0]E;
  wire I1;
  wire O1;
  wire [7:0]Q;
  wire gmii_tx_en_ch0_int1;
  wire gmii_tx_en_out_ch0;
  wire gmii_tx_er_ch0_int1;
  wire gmii_tx_er_out_ch0;
  wire [7:0]gmii_txd_out_ch0;
  wire speed_is_100_ch0;
  wire speed_is_100_resync;
  wire speed_is_10_100_ch0;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

quadsgmiiquadsgmii_clk_gen_8 clock_generation
       (.E(E),
        .speed_is_100_resync(speed_is_100_resync),
        .speed_is_10_100_resync(speed_is_10_100_resync),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__17 resync_speed_100
       (.clk(userclk2),
        .data_in(speed_is_100_ch0),
        .data_out(speed_is_100_resync));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__39 resync_speed_10_100
       (.clk(userclk2),
        .data_in(speed_is_10_100_ch0),
        .data_out(speed_is_10_100_resync));
quadsgmiiquadsgmii_tx_rate_adapt_7 transmitter
       (.E(E),
        .I1(I1),
        .O1(O1),
        .Q(Q),
        .gmii_tx_en_ch0_int1(gmii_tx_en_ch0_int1),
        .gmii_tx_en_out_ch0(gmii_tx_en_out_ch0),
        .gmii_tx_er_ch0_int1(gmii_tx_er_ch0_int1),
        .gmii_tx_er_out_ch0(gmii_tx_er_out_ch0),
        .gmii_txd_out_ch0(gmii_txd_out_ch0),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sgmii_adapt" *) 
module quadsgmiiquadsgmii_sgmii_adapt_1
   (E,
    gmii_tx_en_out_ch1,
    gmii_tx_er_out_ch1,
    O2,
    gmii_txd_out_ch1,
    userclk2,
    speed_is_10_100_ch1,
    speed_is_100_ch1,
    sync_reset,
    gmii_tx_en_ch1_int1,
    gmii_tx_er_ch1_int1,
    I2,
    I5);
  output [0:0]E;
  output gmii_tx_en_out_ch1;
  output gmii_tx_er_out_ch1;
  output O2;
  output [7:0]gmii_txd_out_ch1;
  input userclk2;
  input speed_is_10_100_ch1;
  input speed_is_100_ch1;
  input sync_reset;
  input gmii_tx_en_ch1_int1;
  input gmii_tx_er_ch1_int1;
  input I2;
  input [7:0]I5;

  wire [0:0]E;
  wire I2;
  wire [7:0]I5;
  wire O2;
  wire gmii_tx_en_ch1_int1;
  wire gmii_tx_en_out_ch1;
  wire gmii_tx_er_ch1_int1;
  wire gmii_tx_er_out_ch1;
  wire [7:0]gmii_txd_out_ch1;
  wire speed_is_100_ch1;
  wire speed_is_100_resync;
  wire speed_is_10_100_ch1;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

quadsgmiiquadsgmii_clk_gen_4 clock_generation
       (.E(E),
        .speed_is_100_resync(speed_is_100_resync),
        .speed_is_10_100_resync(speed_is_10_100_resync),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__18 resync_speed_100
       (.clk(userclk2),
        .data_in(speed_is_100_ch1),
        .data_out(speed_is_100_resync));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__38 resync_speed_10_100
       (.clk(userclk2),
        .data_in(speed_is_10_100_ch1),
        .data_out(speed_is_10_100_resync));
quadsgmiiquadsgmii_tx_rate_adapt_3 transmitter
       (.E(E),
        .I2(I2),
        .I5(I5),
        .O2(O2),
        .gmii_tx_en_ch1_int1(gmii_tx_en_ch1_int1),
        .gmii_tx_en_out_ch1(gmii_tx_en_out_ch1),
        .gmii_tx_er_ch1_int1(gmii_tx_er_ch1_int1),
        .gmii_tx_er_out_ch1(gmii_tx_er_out_ch1),
        .gmii_txd_out_ch1(gmii_txd_out_ch1),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sgmii_adapt" *) 
module quadsgmiiquadsgmii_sgmii_adapt_2
   (E,
    gmii_tx_en_out_ch2,
    gmii_tx_er_out_ch2,
    O3,
    gmii_txd_out_ch2,
    userclk2,
    speed_is_10_100_ch2,
    speed_is_100_ch2,
    sync_reset,
    gmii_tx_en_ch2_int1,
    gmii_tx_er_ch2_int1,
    I3,
    I6);
  output [0:0]E;
  output gmii_tx_en_out_ch2;
  output gmii_tx_er_out_ch2;
  output O3;
  output [7:0]gmii_txd_out_ch2;
  input userclk2;
  input speed_is_10_100_ch2;
  input speed_is_100_ch2;
  input sync_reset;
  input gmii_tx_en_ch2_int1;
  input gmii_tx_er_ch2_int1;
  input I3;
  input [7:0]I6;

  wire [0:0]E;
  wire I3;
  wire [7:0]I6;
  wire O3;
  wire gmii_tx_en_ch2_int1;
  wire gmii_tx_en_out_ch2;
  wire gmii_tx_er_ch2_int1;
  wire gmii_tx_er_out_ch2;
  wire [7:0]gmii_txd_out_ch2;
  wire speed_is_100_ch2;
  wire speed_is_100_resync;
  wire speed_is_10_100_ch2;
  wire speed_is_10_100_resync;
  wire sync_reset;
  wire userclk2;

quadsgmiiquadsgmii_clk_gen clock_generation
       (.E(E),
        .speed_is_100_resync(speed_is_100_resync),
        .speed_is_10_100_resync(speed_is_10_100_resync),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__19 resync_speed_100
       (.clk(userclk2),
        .data_in(speed_is_100_ch2),
        .data_out(speed_is_100_resync));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__37 resync_speed_10_100
       (.clk(userclk2),
        .data_in(speed_is_10_100_ch2),
        .data_out(speed_is_10_100_resync));
quadsgmiiquadsgmii_tx_rate_adapt transmitter
       (.E(E),
        .I3(I3),
        .I6(I6),
        .O3(O3),
        .gmii_tx_en_ch2_int1(gmii_tx_en_ch2_int1),
        .gmii_tx_en_out_ch2(gmii_tx_en_out_ch2),
        .gmii_tx_er_ch2_int1(gmii_tx_er_ch2_int1),
        .gmii_tx_er_out_ch2(gmii_tx_er_out_ch2),
        .gmii_txd_out_ch2(gmii_txd_out_ch2),
        .sync_reset(sync_reset),
        .userclk2(userclk2));
endmodule

(* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__17
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__18
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__19
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__20
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__21
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__22
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__23
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__24
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__25
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__26
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__27
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__28
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__29
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__30
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__31
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__32
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__33
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__34
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__35
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__36
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__37
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__38
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "quadsgmii_sync_block" *) (* dont_touch = "yes" *) (* INITIALISE = "2'b00" *) 
module quadsgmiiquadsgmii_sync_block__39
   (clk,
    data_in,
    data_out);
  input clk;
  input data_in;
  output data_out;

  wire GND_1;
  wire VCC_1;
  wire clk;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(clk),
        .CE(VCC_1),
        .D(data_in),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(clk),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

module quadsgmiiquadsgmii_transceiver
   (p_3_out,
    gt0_cplllock_out,
    p_3_out_0,
    p_3_out_1,
    p_3_out_2,
    gt0_drprdy_out,
    gt0_eyescandataerror_out,
    txn,
    txp,
    gt0_rxbyteisaligned_out,
    gt0_rxbyterealign_out,
    gt0_rxcommadet_out,
    rxoutclk,
    gt0_rxprbserr_out,
    gt0_rxratedone_out,
    txoutclk,
    gt0_drpdo_out,
    gt0_txbufstatus_out,
    gt0_rxbufstatus_out,
    rxdata,
    gt0_rxmonitorout_out,
    gt0_dmonitorout_out,
    gt0_rxchariscomma_out,
    gt0_rxcharisk_out,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    O1,
    O2,
    txbuferr,
    SOFT_RESET,
    reset,
    SOFT_RESET_3,
    SOFT_RESET_4,
    SOFT_RESET_5,
    ENABLEALIGN,
    rxuserclk2,
    independent_clock_bufg,
    gt0_drpclk_in,
    gt0_drpen_in,
    gt0_drpwe_in,
    gt0_eyescanreset_in,
    gt0_eyescantrigger_in,
    gtrefclk,
    rxn,
    rxp,
    gt0_qplloutclk_in,
    gt0_qplloutrefclk_in,
    gt0_rxbufreset_in,
    gt0_rxcdrhold_in,
    gt0_rxdfeagcovrden_in,
    gt0_rxdfelpmreset_in,
    gt0_rxlpmen_in,
    gt0_rxpcsreset_in,
    gt0_rxpmareset_in,
    gt0_rxpolarity_in,
    gt0_rxprbscntreset_in,
    rxuserclk,
    TXPD,
    gt0_txpcsreset_in,
    gt0_txpmareset_in,
    gt0_txpolarity_in,
    gt0_txprbsforceerr_in,
    userclk,
    gt0_drpdi_in,
    gt0_rxmonitorsel_in,
    gt0_loopback_in,
    gt0_rxprbssel_in,
    gt0_rxrate_in,
    gt0_txprbssel_in,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    txdata,
    Q,
    gt0_drpaddr_in,
    pma_reset,
    userclk2,
    data_valid,
    mgt_rx_reset,
    gt0_gtrxreset_in,
    mgt_tx_reset,
    gt0_gttxreset_in);
  output p_3_out;
  output gt0_cplllock_out;
  output p_3_out_0;
  output p_3_out_1;
  output p_3_out_2;
  output gt0_drprdy_out;
  output gt0_eyescandataerror_out;
  output txn;
  output txp;
  output gt0_rxbyteisaligned_out;
  output gt0_rxbyterealign_out;
  output gt0_rxcommadet_out;
  output rxoutclk;
  output gt0_rxprbserr_out;
  output gt0_rxratedone_out;
  output txoutclk;
  output [15:0]gt0_drpdo_out;
  output [1:0]gt0_txbufstatus_out;
  output [2:0]gt0_rxbufstatus_out;
  output [31:0]rxdata;
  output [6:0]gt0_rxmonitorout_out;
  output [7:0]gt0_dmonitorout_out;
  output [3:0]gt0_rxchariscomma_out;
  output [3:0]gt0_rxcharisk_out;
  output [3:0]gt0_rxdisperr_out;
  output [3:0]gt0_rxnotintable_out;
  output O1;
  output O2;
  output txbuferr;
  input SOFT_RESET;
  input reset;
  input SOFT_RESET_3;
  input SOFT_RESET_4;
  input SOFT_RESET_5;
  input ENABLEALIGN;
  input rxuserclk2;
  input independent_clock_bufg;
  input gt0_drpclk_in;
  input gt0_drpen_in;
  input gt0_drpwe_in;
  input gt0_eyescanreset_in;
  input gt0_eyescantrigger_in;
  input gtrefclk;
  input rxn;
  input rxp;
  input gt0_qplloutclk_in;
  input gt0_qplloutrefclk_in;
  input gt0_rxbufreset_in;
  input gt0_rxcdrhold_in;
  input gt0_rxdfeagcovrden_in;
  input gt0_rxdfelpmreset_in;
  input gt0_rxlpmen_in;
  input gt0_rxpcsreset_in;
  input gt0_rxpmareset_in;
  input gt0_rxpolarity_in;
  input gt0_rxprbscntreset_in;
  input rxuserclk;
  input [1:0]TXPD;
  input gt0_txpcsreset_in;
  input gt0_txpmareset_in;
  input gt0_txpolarity_in;
  input gt0_txprbsforceerr_in;
  input userclk;
  input [15:0]gt0_drpdi_in;
  input [1:0]gt0_rxmonitorsel_in;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_rxrate_in;
  input [2:0]gt0_txprbssel_in;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [31:0]txdata;
  input [3:0]Q;
  input [8:0]gt0_drpaddr_in;
  input pma_reset;
  input userclk2;
  input data_valid;
  input mgt_rx_reset;
  input gt0_gtrxreset_in;
  input mgt_tx_reset;
  input gt0_gttxreset_in;

  wire \<const0> ;
  wire \<const1> ;
  wire ENABLEALIGN;
  wire O1;
  wire O2;
  wire [3:0]Q;
  wire SOFT_RESET;
  wire SOFT_RESET_3;
  wire SOFT_RESET_4;
  wire SOFT_RESET_5;
  wire [1:0]TXPD;
  wire data_valid;
  wire data_valid_reg;
  wire data_valid_reg2;
  wire encommaalign_rec;
  wire gt0_cplllock_out;
  wire [7:0]gt0_dmonitorout_out;
  wire [8:0]gt0_drpaddr_in;
  wire gt0_drpclk_in;
  wire [15:0]gt0_drpdi_in;
  wire [15:0]gt0_drpdo_out;
  wire gt0_drpen_in;
  wire gt0_drprdy_out;
  wire gt0_drpwe_in;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire gt0_gtrxreset_in;
  wire gt0_gttxreset_in;
  wire [2:0]gt0_loopback_in;
  wire gt0_qplloutclk_in;
  wire gt0_qplloutrefclk_in;
  wire gt0_rxbufreset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxbyteisaligned_out;
  wire gt0_rxbyterealign_out;
  wire gt0_rxcdrhold_in;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire gt0_rxcommadet_out;
  wire gt0_rxdfeagcovrden_in;
  wire gt0_rxdfelpmreset_in;
  wire [3:0]gt0_rxdisperr_out;
  wire gt0_rxlpmen_in;
  wire [6:0]gt0_rxmonitorout_out;
  wire [1:0]gt0_rxmonitorsel_in;
  wire [3:0]gt0_rxnotintable_out;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxratedone_out;
  wire [1:0]gt0_txbufstatus_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txpcsreset_in;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gtrefclk;
  wire independent_clock_bufg;
  wire mgt_rx_reset;
  wire mgt_tx_reset;
  wire \n_0_txbufstatus_reg_reg[1] ;
  wire p_3_out;
  wire p_3_out_0;
  wire p_3_out_1;
  wire p_3_out_2;
  wire pma_reset;
  wire reset;
  wire [31:0]rxdata;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxuserclk;
  wire rxuserclk2;
  wire txbuferr;
  wire [31:0]txdata;
  wire txn;
  wire txoutclk;
  wire txp;
  wire userclk;
  wire userclk2;

GND GND
       (.G(\<const0> ));
VCC VCC
       (.P(\<const1> ));
FDRE data_valid_reg_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(data_valid),
        .Q(data_valid_reg),
        .R(\<const0> ));
quadsgmiiquadsgmii_GTWIZARD gtwizard_inst
       (.O1(gt0_cplllock_out),
        .O2(O1),
        .O3(O2),
        .Q(Q),
        .SOFT_RESET(SOFT_RESET),
        .SOFT_RESET_3(SOFT_RESET_3),
        .SOFT_RESET_4(SOFT_RESET_4),
        .SOFT_RESET_5(SOFT_RESET_5),
        .TXPD(TXPD),
        .data_valid_reg2(data_valid_reg2),
        .encommaalign_rec(encommaalign_rec),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drpaddr_in(gt0_drpaddr_in),
        .gt0_drpclk_in(gt0_drpclk_in),
        .gt0_drpdi_in(gt0_drpdi_in),
        .gt0_drpdo_out(gt0_drpdo_out),
        .gt0_drpen_in(gt0_drpen_in),
        .gt0_drprdy_out(gt0_drprdy_out),
        .gt0_drpwe_in(gt0_drpwe_in),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_gtrxreset_in(gt0_gtrxreset_in),
        .gt0_gttxreset_in(gt0_gttxreset_in),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_qplloutclk_in(gt0_qplloutclk_in),
        .gt0_qplloutrefclk_in(gt0_qplloutrefclk_in),
        .gt0_rxbufreset_in(gt0_rxbufreset_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxbyteisaligned_out(gt0_rxbyteisaligned_out),
        .gt0_rxbyterealign_out(gt0_rxbyterealign_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdfeagcovrden_in(gt0_rxdfeagcovrden_in),
        .gt0_rxdfelpmreset_in(gt0_rxdfelpmreset_in),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmen_in(gt0_rxlpmen_in),
        .gt0_rxmonitorout_out(gt0_rxmonitorout_out),
        .gt0_rxmonitorsel_in(gt0_rxmonitorsel_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxratedone_out(gt0_rxratedone_out),
        .gt0_txbufstatus_out(gt0_txbufstatus_out),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gtrefclk(gtrefclk),
        .independent_clock_bufg(independent_clock_bufg),
        .mgt_rx_reset(mgt_rx_reset),
        .mgt_tx_reset(mgt_tx_reset),
        .p_3_out(p_3_out),
        .p_3_out_0(p_3_out_0),
        .p_3_out_1(p_3_out_1),
        .p_3_out_2(p_3_out_2),
        .pma_reset(pma_reset),
        .reset(reset),
        .rxdata(rxdata),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .rxuserclk(rxuserclk),
        .rxuserclk2(rxuserclk2),
        .txdata(txdata),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .userclk(userclk));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b11" *) 
   quadsgmiiquadsgmii_reset_sync__4 rxrecclk_encommaalign
       (.clk(rxuserclk2),
        .reset_in(ENABLEALIGN),
        .reset_out(encommaalign_rec));
(* DONT_TOUCH *) 
   (* INITIALISE = "2'b00" *) 
   quadsgmiiquadsgmii_sync_block__22 sync_block_data_valid
       (.clk(independent_clock_bufg),
        .data_in(data_valid_reg),
        .data_out(data_valid_reg2));
FDRE txbuferr_reg
       (.C(userclk2),
        .CE(\<const1> ),
        .D(\n_0_txbufstatus_reg_reg[1] ),
        .Q(txbuferr),
        .R(\<const0> ));
FDRE \txbufstatus_reg_reg[1] 
       (.C(userclk),
        .CE(\<const1> ),
        .D(gt0_txbufstatus_out[1]),
        .Q(\n_0_txbufstatus_reg_reg[1] ),
        .R(\<const0> ));
endmodule

module quadsgmiiquadsgmii_tx_rate_adapt
   (gmii_tx_en_out_ch2,
    gmii_tx_er_out_ch2,
    O3,
    gmii_txd_out_ch2,
    sync_reset,
    E,
    gmii_tx_en_ch2_int1,
    userclk2,
    gmii_tx_er_ch2_int1,
    I3,
    I6);
  output gmii_tx_en_out_ch2;
  output gmii_tx_er_out_ch2;
  output O3;
  output [7:0]gmii_txd_out_ch2;
  input sync_reset;
  input [0:0]E;
  input gmii_tx_en_ch2_int1;
  input userclk2;
  input gmii_tx_er_ch2_int1;
  input I3;
  input [7:0]I6;

  wire [0:0]E;
  wire I3;
  wire [7:0]I6;
  wire O3;
  wire gmii_tx_en_ch2_int1;
  wire gmii_tx_en_out_ch2;
  wire gmii_tx_er_ch2_int1;
  wire gmii_tx_er_out_ch2;
  wire [7:0]gmii_txd_out_ch2;
  wire n_0_V_i_4__1;
  wire sync_reset;
  wire userclk2;

LUT6 #(
    .INIT(64'hAAAA2AAA00002AAA)) 
     V_i_3__1
       (.I0(gmii_tx_er_out_ch2),
        .I1(n_0_V_i_4__1),
        .I2(gmii_txd_out_ch2[0]),
        .I3(gmii_txd_out_ch2[1]),
        .I4(gmii_tx_en_out_ch2),
        .I5(I3),
        .O(O3));
LUT6 #(
    .INIT(64'h0000000000000008)) 
     V_i_4__1
       (.I0(gmii_txd_out_ch2[3]),
        .I1(gmii_txd_out_ch2[2]),
        .I2(gmii_txd_out_ch2[6]),
        .I3(gmii_txd_out_ch2[7]),
        .I4(gmii_txd_out_ch2[5]),
        .I5(gmii_txd_out_ch2[4]),
        .O(n_0_V_i_4__1));
FDRE gmii_tx_en_out_reg
       (.C(userclk2),
        .CE(E),
        .D(gmii_tx_en_ch2_int1),
        .Q(gmii_tx_en_out_ch2),
        .R(sync_reset));
FDRE gmii_tx_er_out_reg
       (.C(userclk2),
        .CE(E),
        .D(gmii_tx_er_ch2_int1),
        .Q(gmii_tx_er_out_ch2),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[0] 
       (.C(userclk2),
        .CE(E),
        .D(I6[0]),
        .Q(gmii_txd_out_ch2[0]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[1] 
       (.C(userclk2),
        .CE(E),
        .D(I6[1]),
        .Q(gmii_txd_out_ch2[1]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[2] 
       (.C(userclk2),
        .CE(E),
        .D(I6[2]),
        .Q(gmii_txd_out_ch2[2]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[3] 
       (.C(userclk2),
        .CE(E),
        .D(I6[3]),
        .Q(gmii_txd_out_ch2[3]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[4] 
       (.C(userclk2),
        .CE(E),
        .D(I6[4]),
        .Q(gmii_txd_out_ch2[4]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[5] 
       (.C(userclk2),
        .CE(E),
        .D(I6[5]),
        .Q(gmii_txd_out_ch2[5]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[6] 
       (.C(userclk2),
        .CE(E),
        .D(I6[6]),
        .Q(gmii_txd_out_ch2[6]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[7] 
       (.C(userclk2),
        .CE(E),
        .D(I6[7]),
        .Q(gmii_txd_out_ch2[7]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "quadsgmii_tx_rate_adapt" *) 
module quadsgmiiquadsgmii_tx_rate_adapt_11
   (gmii_tx_en_out_ch3,
    gmii_tx_er_out_ch3,
    O4,
    gmii_txd_out_ch3,
    sync_reset,
    E,
    gmii_tx_en_ch3_int1,
    userclk2,
    gmii_tx_er_ch3_int1,
    I4,
    I7);
  output gmii_tx_en_out_ch3;
  output gmii_tx_er_out_ch3;
  output O4;
  output [7:0]gmii_txd_out_ch3;
  input sync_reset;
  input [0:0]E;
  input gmii_tx_en_ch3_int1;
  input userclk2;
  input gmii_tx_er_ch3_int1;
  input I4;
  input [7:0]I7;

  wire [0:0]E;
  wire I4;
  wire [7:0]I7;
  wire O4;
  wire gmii_tx_en_ch3_int1;
  wire gmii_tx_en_out_ch3;
  wire gmii_tx_er_ch3_int1;
  wire gmii_tx_er_out_ch3;
  wire [7:0]gmii_txd_out_ch3;
  wire n_0_V_i_4__2;
  wire sync_reset;
  wire userclk2;

LUT6 #(
    .INIT(64'hAAAA2AAA00002AAA)) 
     V_i_3__2
       (.I0(gmii_tx_er_out_ch3),
        .I1(n_0_V_i_4__2),
        .I2(gmii_txd_out_ch3[0]),
        .I3(gmii_txd_out_ch3[1]),
        .I4(gmii_tx_en_out_ch3),
        .I5(I4),
        .O(O4));
LUT6 #(
    .INIT(64'h0000000000000008)) 
     V_i_4__2
       (.I0(gmii_txd_out_ch3[3]),
        .I1(gmii_txd_out_ch3[2]),
        .I2(gmii_txd_out_ch3[6]),
        .I3(gmii_txd_out_ch3[7]),
        .I4(gmii_txd_out_ch3[5]),
        .I5(gmii_txd_out_ch3[4]),
        .O(n_0_V_i_4__2));
FDRE gmii_tx_en_out_reg
       (.C(userclk2),
        .CE(E),
        .D(gmii_tx_en_ch3_int1),
        .Q(gmii_tx_en_out_ch3),
        .R(sync_reset));
FDRE gmii_tx_er_out_reg
       (.C(userclk2),
        .CE(E),
        .D(gmii_tx_er_ch3_int1),
        .Q(gmii_tx_er_out_ch3),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[0] 
       (.C(userclk2),
        .CE(E),
        .D(I7[0]),
        .Q(gmii_txd_out_ch3[0]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[1] 
       (.C(userclk2),
        .CE(E),
        .D(I7[1]),
        .Q(gmii_txd_out_ch3[1]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[2] 
       (.C(userclk2),
        .CE(E),
        .D(I7[2]),
        .Q(gmii_txd_out_ch3[2]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[3] 
       (.C(userclk2),
        .CE(E),
        .D(I7[3]),
        .Q(gmii_txd_out_ch3[3]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[4] 
       (.C(userclk2),
        .CE(E),
        .D(I7[4]),
        .Q(gmii_txd_out_ch3[4]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[5] 
       (.C(userclk2),
        .CE(E),
        .D(I7[5]),
        .Q(gmii_txd_out_ch3[5]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[6] 
       (.C(userclk2),
        .CE(E),
        .D(I7[6]),
        .Q(gmii_txd_out_ch3[6]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[7] 
       (.C(userclk2),
        .CE(E),
        .D(I7[7]),
        .Q(gmii_txd_out_ch3[7]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "quadsgmii_tx_rate_adapt" *) 
module quadsgmiiquadsgmii_tx_rate_adapt_3
   (gmii_tx_en_out_ch1,
    gmii_tx_er_out_ch1,
    O2,
    gmii_txd_out_ch1,
    sync_reset,
    E,
    gmii_tx_en_ch1_int1,
    userclk2,
    gmii_tx_er_ch1_int1,
    I2,
    I5);
  output gmii_tx_en_out_ch1;
  output gmii_tx_er_out_ch1;
  output O2;
  output [7:0]gmii_txd_out_ch1;
  input sync_reset;
  input [0:0]E;
  input gmii_tx_en_ch1_int1;
  input userclk2;
  input gmii_tx_er_ch1_int1;
  input I2;
  input [7:0]I5;

  wire [0:0]E;
  wire I2;
  wire [7:0]I5;
  wire O2;
  wire gmii_tx_en_ch1_int1;
  wire gmii_tx_en_out_ch1;
  wire gmii_tx_er_ch1_int1;
  wire gmii_tx_er_out_ch1;
  wire [7:0]gmii_txd_out_ch1;
  wire n_0_V_i_4__0;
  wire sync_reset;
  wire userclk2;

LUT6 #(
    .INIT(64'hAAAA2AAA00002AAA)) 
     V_i_3__0
       (.I0(gmii_tx_er_out_ch1),
        .I1(n_0_V_i_4__0),
        .I2(gmii_txd_out_ch1[0]),
        .I3(gmii_txd_out_ch1[1]),
        .I4(gmii_tx_en_out_ch1),
        .I5(I2),
        .O(O2));
LUT6 #(
    .INIT(64'h0000000000000008)) 
     V_i_4__0
       (.I0(gmii_txd_out_ch1[3]),
        .I1(gmii_txd_out_ch1[2]),
        .I2(gmii_txd_out_ch1[6]),
        .I3(gmii_txd_out_ch1[7]),
        .I4(gmii_txd_out_ch1[5]),
        .I5(gmii_txd_out_ch1[4]),
        .O(n_0_V_i_4__0));
FDRE gmii_tx_en_out_reg
       (.C(userclk2),
        .CE(E),
        .D(gmii_tx_en_ch1_int1),
        .Q(gmii_tx_en_out_ch1),
        .R(sync_reset));
FDRE gmii_tx_er_out_reg
       (.C(userclk2),
        .CE(E),
        .D(gmii_tx_er_ch1_int1),
        .Q(gmii_tx_er_out_ch1),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[0] 
       (.C(userclk2),
        .CE(E),
        .D(I5[0]),
        .Q(gmii_txd_out_ch1[0]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[1] 
       (.C(userclk2),
        .CE(E),
        .D(I5[1]),
        .Q(gmii_txd_out_ch1[1]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[2] 
       (.C(userclk2),
        .CE(E),
        .D(I5[2]),
        .Q(gmii_txd_out_ch1[2]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[3] 
       (.C(userclk2),
        .CE(E),
        .D(I5[3]),
        .Q(gmii_txd_out_ch1[3]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[4] 
       (.C(userclk2),
        .CE(E),
        .D(I5[4]),
        .Q(gmii_txd_out_ch1[4]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[5] 
       (.C(userclk2),
        .CE(E),
        .D(I5[5]),
        .Q(gmii_txd_out_ch1[5]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[6] 
       (.C(userclk2),
        .CE(E),
        .D(I5[6]),
        .Q(gmii_txd_out_ch1[6]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[7] 
       (.C(userclk2),
        .CE(E),
        .D(I5[7]),
        .Q(gmii_txd_out_ch1[7]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "quadsgmii_tx_rate_adapt" *) 
module quadsgmiiquadsgmii_tx_rate_adapt_7
   (gmii_tx_en_out_ch0,
    gmii_tx_er_out_ch0,
    O1,
    gmii_txd_out_ch0,
    sync_reset,
    E,
    gmii_tx_en_ch0_int1,
    userclk2,
    gmii_tx_er_ch0_int1,
    I1,
    Q);
  output gmii_tx_en_out_ch0;
  output gmii_tx_er_out_ch0;
  output O1;
  output [7:0]gmii_txd_out_ch0;
  input sync_reset;
  input [0:0]E;
  input gmii_tx_en_ch0_int1;
  input userclk2;
  input gmii_tx_er_ch0_int1;
  input I1;
  input [7:0]Q;

  wire [0:0]E;
  wire I1;
  wire O1;
  wire [7:0]Q;
  wire gmii_tx_en_ch0_int1;
  wire gmii_tx_en_out_ch0;
  wire gmii_tx_er_ch0_int1;
  wire gmii_tx_er_out_ch0;
  wire [7:0]gmii_txd_out_ch0;
  wire n_0_V_i_4;
  wire sync_reset;
  wire userclk2;

LUT6 #(
    .INIT(64'hAAAA2AAA00002AAA)) 
     V_i_3
       (.I0(gmii_tx_er_out_ch0),
        .I1(n_0_V_i_4),
        .I2(gmii_txd_out_ch0[0]),
        .I3(gmii_txd_out_ch0[1]),
        .I4(gmii_tx_en_out_ch0),
        .I5(I1),
        .O(O1));
LUT6 #(
    .INIT(64'h0000000000000008)) 
     V_i_4
       (.I0(gmii_txd_out_ch0[3]),
        .I1(gmii_txd_out_ch0[2]),
        .I2(gmii_txd_out_ch0[6]),
        .I3(gmii_txd_out_ch0[7]),
        .I4(gmii_txd_out_ch0[5]),
        .I5(gmii_txd_out_ch0[4]),
        .O(n_0_V_i_4));
FDRE gmii_tx_en_out_reg
       (.C(userclk2),
        .CE(E),
        .D(gmii_tx_en_ch0_int1),
        .Q(gmii_tx_en_out_ch0),
        .R(sync_reset));
FDRE gmii_tx_er_out_reg
       (.C(userclk2),
        .CE(E),
        .D(gmii_tx_er_ch0_int1),
        .Q(gmii_tx_er_out_ch0),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[0] 
       (.C(userclk2),
        .CE(E),
        .D(Q[0]),
        .Q(gmii_txd_out_ch0[0]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[1] 
       (.C(userclk2),
        .CE(E),
        .D(Q[1]),
        .Q(gmii_txd_out_ch0[1]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[2] 
       (.C(userclk2),
        .CE(E),
        .D(Q[2]),
        .Q(gmii_txd_out_ch0[2]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[3] 
       (.C(userclk2),
        .CE(E),
        .D(Q[3]),
        .Q(gmii_txd_out_ch0[3]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[4] 
       (.C(userclk2),
        .CE(E),
        .D(Q[4]),
        .Q(gmii_txd_out_ch0[4]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[5] 
       (.C(userclk2),
        .CE(E),
        .D(Q[5]),
        .Q(gmii_txd_out_ch0[5]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[6] 
       (.C(userclk2),
        .CE(E),
        .D(Q[6]),
        .Q(gmii_txd_out_ch0[6]),
        .R(sync_reset));
FDRE \gmii_txd_out_reg[7] 
       (.C(userclk2),
        .CE(E),
        .D(Q[7]),
        .Q(gmii_txd_out_ch0[7]),
        .R(sync_reset));
endmodule

module quadsgmiiquadsgmii_v3_1
   (mgt_rx_reset,
    mgt_tx_reset,
    gmii_rx_er_ch0_int,
    status_vector_ch0,
    mdio_o_ch0,
    mdio_t_ch0,
    O1,
    gmii_rx_dv_ch0_int,
    SOFT_RESET,
    an_interrupt_ch0,
    gmii_rx_er_ch1_int,
    status_vector_ch1,
    mdio_o_ch1,
    mdio_t_ch1,
    O2,
    gmii_rx_dv_ch1_int,
    SOFT_RESET_0,
    an_interrupt_ch1,
    gmii_rx_er_ch2_int,
    status_vector_ch2,
    mdio_o_ch2,
    mdio_t_ch2,
    O3,
    gmii_rx_dv_ch2_int,
    SOFT_RESET_1,
    an_interrupt_ch2,
    gmii_rx_er_ch3_int,
    status_vector_ch3,
    mdio_o_ch3,
    mdio_t_ch3,
    O4,
    gmii_rx_dv_ch3_int,
    SOFT_RESET_2,
    an_interrupt_ch3,
    data_valid,
    Q,
    O5,
    O6,
    O7,
    TXPD,
    TXCHARISK,
    txdata,
    ENABLEALIGN,
    rxuserclk2,
    userclk2,
    gmii_tx_er_out_ch0,
    gmii_tx_en_out_ch0,
    p_3_out,
    txbuferr,
    gmii_tx_er_out_ch1,
    gmii_tx_en_out_ch1,
    p_3_out_3,
    gmii_tx_er_out_ch2,
    gmii_tx_en_out_ch2,
    p_3_out_4,
    gmii_tx_er_out_ch3,
    gmii_tx_en_out_ch3,
    p_3_out_5,
    I1,
    link_timer_value_ch0,
    phyad_ch0,
    I2,
    link_timer_value_ch1,
    phyad_ch1,
    I3,
    link_timer_value_ch2,
    phyad_ch2,
    I4,
    link_timer_value_ch3,
    phyad_ch3,
    gt0_rxcharisk_out,
    gt0_rxnotintable_out,
    gt0_rxdisperr_out,
    gt0_rxchariscomma_out,
    signal_detect,
    mdc_ch0,
    mdio_i_ch0,
    I5,
    mdc_ch1,
    mdio_i_ch1,
    I6,
    mdc_ch2,
    mdio_i_ch2,
    I7,
    mdc_ch3,
    mdio_i_ch3,
    I8,
    rxdata);
  output mgt_rx_reset;
  output mgt_tx_reset;
  output gmii_rx_er_ch0_int;
  output [12:0]status_vector_ch0;
  output mdio_o_ch0;
  output mdio_t_ch0;
  output O1;
  output gmii_rx_dv_ch0_int;
  output SOFT_RESET;
  output an_interrupt_ch0;
  output gmii_rx_er_ch1_int;
  output [12:0]status_vector_ch1;
  output mdio_o_ch1;
  output mdio_t_ch1;
  output O2;
  output gmii_rx_dv_ch1_int;
  output SOFT_RESET_0;
  output an_interrupt_ch1;
  output gmii_rx_er_ch2_int;
  output [12:0]status_vector_ch2;
  output mdio_o_ch2;
  output mdio_t_ch2;
  output O3;
  output gmii_rx_dv_ch2_int;
  output SOFT_RESET_1;
  output an_interrupt_ch2;
  output gmii_rx_er_ch3_int;
  output [12:0]status_vector_ch3;
  output mdio_o_ch3;
  output mdio_t_ch3;
  output O4;
  output gmii_rx_dv_ch3_int;
  output SOFT_RESET_2;
  output an_interrupt_ch3;
  output data_valid;
  output [7:0]Q;
  output [7:0]O5;
  output [7:0]O6;
  output [7:0]O7;
  output [1:0]TXPD;
  output [3:0]TXCHARISK;
  output [31:0]txdata;
  output ENABLEALIGN;
  input rxuserclk2;
  input userclk2;
  input gmii_tx_er_out_ch0;
  input gmii_tx_en_out_ch0;
  input p_3_out;
  input txbuferr;
  input gmii_tx_er_out_ch1;
  input gmii_tx_en_out_ch1;
  input p_3_out_3;
  input gmii_tx_er_out_ch2;
  input gmii_tx_en_out_ch2;
  input p_3_out_4;
  input gmii_tx_er_out_ch3;
  input gmii_tx_en_out_ch3;
  input p_3_out_5;
  input I1;
  input [8:0]link_timer_value_ch0;
  input [4:0]phyad_ch0;
  input I2;
  input [8:0]link_timer_value_ch1;
  input [4:0]phyad_ch1;
  input I3;
  input [8:0]link_timer_value_ch2;
  input [4:0]phyad_ch2;
  input I4;
  input [8:0]link_timer_value_ch3;
  input [4:0]phyad_ch3;
  input [3:0]gt0_rxcharisk_out;
  input [3:0]gt0_rxnotintable_out;
  input [3:0]gt0_rxdisperr_out;
  input [3:0]gt0_rxchariscomma_out;
  input signal_detect;
  input mdc_ch0;
  input mdio_i_ch0;
  input [7:0]I5;
  input mdc_ch1;
  input mdio_i_ch1;
  input [7:0]I6;
  input mdc_ch2;
  input mdio_i_ch2;
  input [7:0]I7;
  input mdc_ch3;
  input mdio_i_ch3;
  input [7:0]I8;
  input [31:0]rxdata;

  wire ENABLEALIGN;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire [7:0]I5;
  wire [7:0]I6;
  wire [7:0]I7;
  wire [7:0]I8;
  wire O1;
  wire O2;
  wire O3;
  wire O4;
  wire [7:0]O5;
  wire [7:0]O6;
  wire [7:0]O7;
  wire [7:0]Q;
  wire SOFT_RESET;
  wire SOFT_RESET_0;
  wire SOFT_RESET_1;
  wire SOFT_RESET_2;
  wire [3:0]TXCHARISK;
  wire [1:0]TXPD;
  wire an_interrupt_ch0;
  wire an_interrupt_ch1;
  wire an_interrupt_ch2;
  wire an_interrupt_ch3;
  wire data_valid;
  wire gmii_rx_dv_ch0_int;
  wire gmii_rx_dv_ch1_int;
  wire gmii_rx_dv_ch2_int;
  wire gmii_rx_dv_ch3_int;
  wire gmii_rx_er_ch0_int;
  wire gmii_rx_er_ch1_int;
  wire gmii_rx_er_ch2_int;
  wire gmii_rx_er_ch3_int;
  wire gmii_tx_en_out_ch0;
  wire gmii_tx_en_out_ch1;
  wire gmii_tx_en_out_ch2;
  wire gmii_tx_en_out_ch3;
  wire gmii_tx_er_out_ch0;
  wire gmii_tx_er_out_ch1;
  wire gmii_tx_er_out_ch2;
  wire gmii_tx_er_out_ch3;
  wire [3:0]gt0_rxchariscomma_out;
  wire [3:0]gt0_rxcharisk_out;
  wire [3:0]gt0_rxdisperr_out;
  wire [3:0]gt0_rxnotintable_out;
  wire [8:0]link_timer_value_ch0;
  wire [8:0]link_timer_value_ch1;
  wire [8:0]link_timer_value_ch2;
  wire [8:0]link_timer_value_ch3;
  wire mdc_ch0;
  wire mdc_ch1;
  wire mdc_ch2;
  wire mdc_ch3;
  wire mdio_i_ch0;
  wire mdio_i_ch1;
  wire mdio_i_ch2;
  wire mdio_i_ch3;
  wire mdio_o_ch0;
  wire mdio_o_ch1;
  wire mdio_o_ch2;
  wire mdio_o_ch3;
  wire mdio_t_ch0;
  wire mdio_t_ch1;
  wire mdio_t_ch2;
  wire mdio_t_ch3;
  wire mgt_rx_reset;
  wire mgt_tx_reset;
  wire p_3_out;
  wire p_3_out_3;
  wire p_3_out_4;
  wire p_3_out_5;
  wire [4:0]phyad_ch0;
  wire [4:0]phyad_ch1;
  wire [4:0]phyad_ch2;
  wire [4:0]phyad_ch3;
  wire [31:0]rxdata;
  wire rxuserclk2;
  wire signal_detect;
  wire [12:0]status_vector_ch0;
  wire [12:0]status_vector_ch1;
  wire [12:0]status_vector_ch2;
  wire [12:0]status_vector_ch3;
  wire txbuferr;
  wire [31:0]txdata;
  wire userclk2;

quadsgmiiQSGMII_GEN qsgmii_inst
       (.ENABLEALIGN(ENABLEALIGN),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .I6(I6),
        .I7(I7),
        .I8(I8),
        .O1(mgt_tx_reset),
        .O2(O1),
        .O3(O2),
        .O4(O3),
        .O5(O4),
        .O6(O5),
        .O7(O6),
        .O8(O7),
        .Q(Q),
        .SOFT_RESET(SOFT_RESET),
        .SOFT_RESET_0(SOFT_RESET_0),
        .SOFT_RESET_1(SOFT_RESET_1),
        .SOFT_RESET_2(SOFT_RESET_2),
        .SR(mgt_rx_reset),
        .TXCHARISK(TXCHARISK),
        .TXPD(TXPD),
        .an_interrupt_ch0(an_interrupt_ch0),
        .an_interrupt_ch1(an_interrupt_ch1),
        .an_interrupt_ch2(an_interrupt_ch2),
        .an_interrupt_ch3(an_interrupt_ch3),
        .data_valid(data_valid),
        .gmii_rx_dv_ch0_int(gmii_rx_dv_ch0_int),
        .gmii_rx_dv_ch1_int(gmii_rx_dv_ch1_int),
        .gmii_rx_dv_ch2_int(gmii_rx_dv_ch2_int),
        .gmii_rx_dv_ch3_int(gmii_rx_dv_ch3_int),
        .gmii_rx_er_ch0_int(gmii_rx_er_ch0_int),
        .gmii_rx_er_ch1_int(gmii_rx_er_ch1_int),
        .gmii_rx_er_ch2_int(gmii_rx_er_ch2_int),
        .gmii_rx_er_ch3_int(gmii_rx_er_ch3_int),
        .gmii_tx_en_out_ch0(gmii_tx_en_out_ch0),
        .gmii_tx_en_out_ch1(gmii_tx_en_out_ch1),
        .gmii_tx_en_out_ch2(gmii_tx_en_out_ch2),
        .gmii_tx_en_out_ch3(gmii_tx_en_out_ch3),
        .gmii_tx_er_out_ch0(gmii_tx_er_out_ch0),
        .gmii_tx_er_out_ch1(gmii_tx_er_out_ch1),
        .gmii_tx_er_out_ch2(gmii_tx_er_out_ch2),
        .gmii_tx_er_out_ch3(gmii_tx_er_out_ch3),
        .gt0_rxchariscomma_out(gt0_rxchariscomma_out),
        .gt0_rxcharisk_out(gt0_rxcharisk_out),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .link_timer_value_ch0(link_timer_value_ch0),
        .link_timer_value_ch1(link_timer_value_ch1),
        .link_timer_value_ch2(link_timer_value_ch2),
        .link_timer_value_ch3(link_timer_value_ch3),
        .mdc_ch0(mdc_ch0),
        .mdc_ch1(mdc_ch1),
        .mdc_ch2(mdc_ch2),
        .mdc_ch3(mdc_ch3),
        .mdio_i_ch0(mdio_i_ch0),
        .mdio_i_ch1(mdio_i_ch1),
        .mdio_i_ch2(mdio_i_ch2),
        .mdio_i_ch3(mdio_i_ch3),
        .mdio_o_ch0(mdio_o_ch0),
        .mdio_o_ch1(mdio_o_ch1),
        .mdio_o_ch2(mdio_o_ch2),
        .mdio_o_ch3(mdio_o_ch3),
        .mdio_t_ch0(mdio_t_ch0),
        .mdio_t_ch1(mdio_t_ch1),
        .mdio_t_ch2(mdio_t_ch2),
        .mdio_t_ch3(mdio_t_ch3),
        .p_3_out(p_3_out),
        .p_3_out_3(p_3_out_3),
        .p_3_out_4(p_3_out_4),
        .p_3_out_5(p_3_out_5),
        .phyad_ch0(phyad_ch0),
        .phyad_ch1(phyad_ch1),
        .phyad_ch2(phyad_ch2),
        .phyad_ch3(phyad_ch3),
        .rxdata(rxdata),
        .rxuserclk2(rxuserclk2),
        .signal_detect(signal_detect),
        .status_vector_ch0(status_vector_ch0),
        .status_vector_ch1(status_vector_ch1),
        .status_vector_ch2(status_vector_ch2),
        .status_vector_ch3(status_vector_ch3),
        .txbuferr(txbuferr),
        .txdata(txdata),
        .userclk2(userclk2));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0
   (SIGNAL_DETECT_MOD,
    data_out,
    I1,
    signal_detect,
    userclk2);
  output SIGNAL_DETECT_MOD;
  output data_out;
  input I1;
  input signal_detect;
  input userclk2;

  wire GND_1;
  wire I1;
  wire SIGNAL_DETECT_MOD;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire signal_detect;
  wire userclk2;

GND GND
       (.G(GND_1));
LUT2 #(
    .INIT(4'h2)) 
     SIGNAL_DETECT_REG_i_1__2
       (.I0(data_out),
        .I1(I1),
        .O(SIGNAL_DETECT_MOD));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(signal_detect),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_21
   (data_out,
    mdio_i_ch3,
    userclk2);
  output data_out;
  input mdio_i_ch3;
  input userclk2;

  wire GND_1;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire mdio_i_ch3;
  wire userclk2;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(mdio_i_ch3),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_22
   (O1,
    data_out,
    MDC_REG3,
    mdc_ch3,
    userclk2);
  output O1;
  output data_out;
  input MDC_REG3;
  input mdc_ch3;
  input userclk2;

  wire GND_1;
  wire MDC_REG3;
  wire O1;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire mdc_ch3;
  wire userclk2;

GND GND
       (.G(GND_1));
LUT2 #(
    .INIT(4'h2)) 
     MDC_RISING_REG1_i_1__2
       (.I0(data_out),
        .I1(MDC_REG3),
        .O(O1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(mdc_ch3),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_23
   (SIGNAL_DETECT_MOD,
    data_out,
    I1,
    signal_detect,
    userclk2);
  output SIGNAL_DETECT_MOD;
  output data_out;
  input I1;
  input signal_detect;
  input userclk2;

  wire GND_1;
  wire I1;
  wire SIGNAL_DETECT_MOD;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire signal_detect;
  wire userclk2;

GND GND
       (.G(GND_1));
LUT2 #(
    .INIT(4'h2)) 
     SIGNAL_DETECT_REG_i_1__1
       (.I0(data_out),
        .I1(I1),
        .O(SIGNAL_DETECT_MOD));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(signal_detect),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_30
   (data_out,
    mdio_i_ch2,
    userclk2);
  output data_out;
  input mdio_i_ch2;
  input userclk2;

  wire GND_1;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire mdio_i_ch2;
  wire userclk2;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(mdio_i_ch2),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_31
   (O1,
    data_out,
    MDC_REG3,
    mdc_ch2,
    userclk2);
  output O1;
  output data_out;
  input MDC_REG3;
  input mdc_ch2;
  input userclk2;

  wire GND_1;
  wire MDC_REG3;
  wire O1;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire mdc_ch2;
  wire userclk2;

GND GND
       (.G(GND_1));
LUT2 #(
    .INIT(4'h2)) 
     MDC_RISING_REG1_i_1__1
       (.I0(data_out),
        .I1(MDC_REG3),
        .O(O1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(mdc_ch2),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_32
   (SIGNAL_DETECT_MOD,
    data_out,
    I1,
    signal_detect,
    userclk2);
  output SIGNAL_DETECT_MOD;
  output data_out;
  input I1;
  input signal_detect;
  input userclk2;

  wire GND_1;
  wire I1;
  wire SIGNAL_DETECT_MOD;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire signal_detect;
  wire userclk2;

GND GND
       (.G(GND_1));
LUT2 #(
    .INIT(4'h2)) 
     SIGNAL_DETECT_REG_i_1__0
       (.I0(data_out),
        .I1(I1),
        .O(SIGNAL_DETECT_MOD));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(signal_detect),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_39
   (data_out,
    mdio_i_ch1,
    userclk2);
  output data_out;
  input mdio_i_ch1;
  input userclk2;

  wire GND_1;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire mdio_i_ch1;
  wire userclk2;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(mdio_i_ch1),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_40
   (O1,
    data_out,
    MDC_REG3,
    mdc_ch1,
    userclk2);
  output O1;
  output data_out;
  input MDC_REG3;
  input mdc_ch1;
  input userclk2;

  wire GND_1;
  wire MDC_REG3;
  wire O1;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire mdc_ch1;
  wire userclk2;

GND GND
       (.G(GND_1));
LUT2 #(
    .INIT(4'h2)) 
     MDC_RISING_REG1_i_1__0
       (.I0(data_out),
        .I1(MDC_REG3),
        .O(O1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(mdc_ch1),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_41
   (SIGNAL_DETECT_MOD,
    data_out,
    I1,
    signal_detect,
    userclk2);
  output SIGNAL_DETECT_MOD;
  output data_out;
  input I1;
  input signal_detect;
  input userclk2;

  wire GND_1;
  wire I1;
  wire SIGNAL_DETECT_MOD;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire signal_detect;
  wire userclk2;

GND GND
       (.G(GND_1));
LUT2 #(
    .INIT(4'h2)) 
     SIGNAL_DETECT_REG_i_1
       (.I0(data_out),
        .I1(I1),
        .O(SIGNAL_DETECT_MOD));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(signal_detect),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_48
   (data_out,
    mdio_i_ch0,
    userclk2);
  output data_out;
  input mdio_i_ch0;
  input userclk2;

  wire GND_1;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire mdio_i_ch0;
  wire userclk2;

GND GND
       (.G(GND_1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(mdio_i_ch0),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule

(* ORIG_REF_NAME = "sync_block" *) 
module quadsgmiisync_block__parameterized0_49
   (O1,
    data_out,
    MDC_REG3,
    mdc_ch0,
    userclk2);
  output O1;
  output data_out;
  input MDC_REG3;
  input mdc_ch0;
  input userclk2;

  wire GND_1;
  wire MDC_REG3;
  wire O1;
  wire VCC_1;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire mdc_ch0;
  wire userclk2;

GND GND
       (.G(GND_1));
LUT2 #(
    .INIT(4'h2)) 
     MDC_RISING_REG1_i_1
       (.I0(data_out),
        .I1(MDC_REG3),
        .O(O1));
VCC VCC
       (.P(VCC_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg1
       (.C(userclk2),
        .CE(VCC_1),
        .D(mdc_ch0),
        .Q(data_sync1),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg2
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg3
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg4
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg5
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(GND_1));
(* ASYNC_REG *) 
   (* BOX_TYPE = "PRIMITIVE" *) 
   (* SHREG_EXTRACT = "no" *) 
   (* XILINX_LEGACY_PRIM = "FD" *) 
   FDRE #(
    .INIT(1'b0)) 
     data_sync_reg6
       (.C(userclk2),
        .CE(VCC_1),
        .D(data_sync5),
        .Q(data_out),
        .R(GND_1));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;

    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
